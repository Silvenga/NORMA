<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="XSDtoHTML.xslt"?>
<xs:schema
	id="AttachRulesGenerator"
	targetNamespace="http://schemas.neumont.edu/ORM/SDK/AttachRulesGenerator"
	elementFormDefault="qualified"
	attributeFormDefault="unqualified"
	xmlns="http://schemas.neumont.edu/ORM/SDK/AttachRulesGenerator"
	xmlns:xs="http://www.w3.org/2001/XMLSchema">
	<xs:annotation>
		<xs:appinfo source="Common Public License Copyright Notice">
			Neumont Object-Role Modeling Architect for Visual Studio

			Copyright © Neumont University. All rights reserved.

			The use and distribution terms for this software are covered by the
			Common Public License 1.0 (http://opensource.org/licenses/cpl) which
			can be found in the file CPL.txt at the root of this distribution.
			By using this software in any fashion, you are agreeing to be bound by
			the terms of this license.

			You must not remove this notice, or any other, from this software.
		</xs:appinfo>
	</xs:annotation>

	<xs:element name="Rules" type="RulesType"/>
	<xs:complexType name="RulesType">
		<xs:annotation>
			<xs:documentation>The root node. Contains Model nodes.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Copyright" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Copyright notice which applies to both the source document and anything generated from it.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="CopyrightLine" type="xs:string" maxOccurs="unbounded"/>
					</xs:sequence>
					<xs:attribute name="name" type="xs:string" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="Model" type="ModelType" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ModelType">
		<xs:annotation>
			<xs:documentation>The meta model to generate rules for.</xs:documentation>
		</xs:annotation>
		<xs:sequence maxOccurs="unbounded">
			<xs:element ref="ReflectedType"/>
		</xs:sequence>
		<xs:attribute name="class" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation>The simple name of the DomainModel-derived class that contains the list of generated rules. This should be a simple name (no namespace)</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="namespace" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>(optional) The namespace of the meta model. The default namespace is based on the location of the xml file in the project and can be modified with the 'Custom Tool Namespace' value in the property grid.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="ReflectedType" type="ReflectedTypeType"/>
	<xs:element name="Rule" type="RuleType" substitutionGroup="ReflectedType"/>
	<xs:complexType name="ReflectedTypeType">
		<xs:attribute name="class" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation>The simple name of the class without a namespace to treat as a rule class. If the class name contains delimiters (. or +), then the delimited names are treated as nested classes.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="namespace" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>(optional) The namespace of the rule class. The default namespace is based on the location of the xml file in the project and can be modified with the 'Custom Tool Namespace' value in the property grid.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="RuleType">
		<xs:complexContent>
			<xs:extension base="ReflectedTypeType">
				<xs:attribute name="alwaysOn" type="xs:boolean" default="false">
					<xs:annotation>
						<xs:documentation>If alwaysOn is set to true, then this rule will be on during load. Otherwise, the rule is turned on after document load is completed.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
</xs:schema>

