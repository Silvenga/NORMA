<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Command.DeleteConstraint.Text">
    <value xml:space="preserve">&amp;Delete Constraint</value>
    <comment xml:space="preserve">This text appears in the edit menu when constraint types are selected in the diagram.</comment>
  </data>
  <data name="Command.DeleteFactType.Text">
    <value xml:space="preserve">&amp;Delete Fact Type</value>
    <comment xml:space="preserve">This text appears in the edit menu when fact types are selected in the diagram.</comment>
  </data>
  <data name="Command.DeleteObjectType.Text">
    <value xml:space="preserve">&amp;Delete Object Type</value>
    <comment xml:space="preserve">This text appears in the edit menu when object types are selected in the diagram.</comment>
  </data>
  <data name="Command.DeleteRole.Text">
    <value xml:space="preserve">&amp;Delete Role</value>
    <comment xml:space="preserve">This text appears in the edit menu when roles are selected in the diagram.</comment>
  </data>
  <data name="DeleteRoleSequence.TransactionName">
    <value xml:space="preserve">Delete Role Sequence</value>
    <comment xml:space="preserve">The transaction name used for deleting a role sequence from a multi column external uniqueness constraint. The text appears in the undo dropdown in the VS IDE.</comment>
  </data>
  <data name="ExternalConstraintConnectAction.Instructions">
    <value xml:space="preserve">To select role sequences to populate the constraint:
-Click a role to add it to an argument set
-Control-Click a role to remove it from the active set
-Double-Click a role to commit and move to the next set
-Click the diagram background or press Escape when you're finish connecting roles</value>
    <comment xml:space="preserve">The text shown to explain how to hook up an external constraint to its associated roles.</comment>
  </data>
  <data name="ExternalConstraintConnectAction.TransactionName">
    <value xml:space="preserve">Add Constraint Role Sequence</value>
    <comment xml:space="preserve">The transaction name used by the external constraint connect action. The text appears in the undo dropdown in the VS IDE.</comment>
  </data>
  <data name="FactEditor.Intellisense.ImageList" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFpTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMzYw
        MC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZT
        eXN0ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMA
        AACcCAAAAk1TRnQBSQFMAgEBAwEAAQQBAAEEAQABEAEAARABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQC
        AAEoAwABQAMAARADAAEBAQABCAYAAQQYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB
        3AHAAQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IB
        AAM5AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8B
        MwMAAWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYC
        AAFmAZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMC
        AAHMAWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQAB
        ZgEAATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8B
        AAEzAWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQAB
        MwGZAWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQAB
        MwLMAQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQAB
        MwEAAWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMB
        mQEAAWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQAB
        ZgGZAWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYB
        zAH/AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMB
        mQEAAZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgAB
        mQFmATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwB
        AAKZAf8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB
        /wEzAQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQAB
        mQEAAcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYC
        AAHMAWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYB
        AAHMApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8C
        AAHMAf8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQAB
        mQEAAcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMB
        AAHMAmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB
        /wGZAcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC
        /wEzAQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC
        /wFmAQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gB
        AAHwAfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/0YABgQLAAEEAQAB
        BAEAAQQoAAIEBv8CBAcAAQQG/wEAAQQlAAEECv8BBAQAAQQK/wYACf8VAAEEDP8BBAMADP8BBAMAC/8T
        AAEEDv8CBA7/AwAL/xMAAQQO/wEEAQAO/wEEAQAC/wkAAv8SAAEEDv8CBA7/AgAC/wEAA/8BAAP/AQAC
        /xIAAQQO/wEEAQAO/wEEAQAC/wEAA/8BAAP/AQAC/xIAAQQO/wIEDv8CAAL/AQAD/wEAA/8BAAL/EwAB
        BAz/AQQDAAz/AQQCAAL/CQAC/xQAAQQK/wEEBAABBAr/BQAL/xYAAgQG/wIEBwABBAb/AQABBAUAAv8H
        /QL/GAAGBAsAAQQBAAEEAQABBAgACf+UAAFCAU0BPgcAAT4DAAEoAwABQAMAARADAAEBAQABAQUAAYAX
        AAP/AQAG/wIAAfgBHwH9AV8C/wIAAeABBwHwARcB4AEPAgABwAEDAcABBwHAAQcCAAGAAQEBwAEBAYAB
        AwUAAQEBgAEDBAABgAIAAQEFAAEBAQABAQQAAYACAAEBBQABAQEAAQECAAGAAQEBwAEBAQABAQIAAcAB
        AwHAAQcBgAEDAgAB4AEHAfABFwGAAQMCAAH4AR8B/QFfAcABBwIABP8B4AEPAgAG/wIACw==
</value>
  </data>
  <data name="FactEditorColors.Delimiter">
    <value xml:space="preserve">ORM Fact Delimiter</value>
    <comment xml:space="preserve">Display Name of the Delimiter color</comment>
  </data>
  <data name="FactEditorColors.ObjectName">
    <value xml:space="preserve">ORM Fact Object</value>
    <comment xml:space="preserve">Display Name of the Object Name color</comment>
  </data>
  <data name="FactEditorColors.PredicateText">
    <value xml:space="preserve">ORM Fact Predicate</value>
    <comment xml:space="preserve">Display Name of the Predicate Text color</comment>
  </data>
  <data name="FactEditorColors.ReferenceModeName">
    <value xml:space="preserve">ORM Fact Reference Mode</value>
    <comment xml:space="preserve">Display Name of the Reference Mode Name color</comment>
  </data>
  <data name="FactEditorToolWindow.Caption">
    <value xml:space="preserve">ORM Fact Editor</value>
    <comment xml:space="preserve">This is the caption that appears in the title bar of the Fact Editor tool window.</comment>
  </data>
  <data name="FontsAndColors.ActiveConstraintColor">
    <value xml:space="preserve">Constraint (Activated)</value>
    <comment xml:space="preserve">Display name for the color used to draw an active ORM constraint and associated roles</comment>
  </data>
  <data name="FontsAndColors.CategoryName">
    <value xml:space="preserve">ORM Designer</value>
    <comment xml:space="preserve">Display name for the ORM Designer fonts and colors category</comment>
  </data>
  <data name="FontsAndColors.ConstraintColor">
    <value xml:space="preserve">Constraint</value>
    <comment xml:space="preserve">Display name for the color used to draw an ORM constraint</comment>
  </data>
  <data name="FontsAndColors.ConstraintErrorColor">
    <value xml:space="preserve">Constraint (Error)</value>
    <comment xml:space="preserve">Display name for the color used to draw an ORM error constraint</comment>
  </data>
  <data name="FontsAndColors.RolePickerColor">
    <value xml:space="preserve">Role Picker</value>
    <comment xml:space="preserve">Display name for the color used to draw the constraint box for role sequence editing</comment>
  </data>
  <data name="InsertRole.TransactionName">
    <value xml:space="preserve">Insert Role</value>
    <comment xml:space="preserve">The transaction name used by the InsertRoleBefore/InsertRoleAfter commands. The text appears in the undo dropdown in the VS IDE.</comment>
  </data>
  <data name="InternalUniquenessConstraintConnectAction.Instructions">
    <value xml:space="preserve">Select the roles this constraint should span.</value>
    <comment xml:space="preserve">The text shown to explain how to hook up an internal uniqueness constraint to its associated roles.</comment>
  </data>
  <data name="InternalUniquenessConstraintConnectAction.TransactionName">
    <value xml:space="preserve">Add Constraint Role Sequence</value>
    <comment xml:space="preserve">The transaction name used by the internal uniqueness constraint connect action. The text appears in the undo dropdown in the VS IDE.</comment>
  </data>
  <data name="MoveRoleSequenceDown.TransactionName">
    <value xml:space="preserve">Move Role Sequence Down</value>
    <comment xml:space="preserve">The transaction name used for moving a role sequence down in a multi column external uniqueness constraint. The text appears in the undo dropdown in the VS IDE.</comment>
  </data>
  <data name="MoveRoleSequenceUp.TransactionName">
    <value xml:space="preserve">Move Role Sequence Up</value>
    <comment xml:space="preserve">The transaction name used for moving a role sequence up in a multi column external uniqueness constraint. The text appears in the undo dropdown in the VS IDE.</comment>
  </data>
  <data name="OptionsPage.Category.Appearance">
    <value xml:space="preserve">Appearance</value>
    <comment xml:space="preserve">This is the title of the category on the options page.</comment>
  </data>
  <data name="OptionsPage.Property.MandatoryDot.Description">
    <value xml:space="preserve">Specify which end of the role connector you wish to place mandatory dots.</value>
    <comment xml:space="preserve">The description for the mandatory dot property.</comment>
  </data>
  <data name="OptionsPage.Property.MandatoryDot.DisplayName">
    <value xml:space="preserve">Mandatory Dot Placement</value>
    <comment xml:space="preserve">The display name for the mandatory dot property.</comment>
  </data>
  <data name="OptionsPage.Property.ObjectifiedShape.Description">
    <value xml:space="preserve">The shape for objectified fact types. This will be the default shape for objectified fact types when creating new ORM models.</value>
    <comment xml:space="preserve">The description for the objectified fact shape property</comment>
  </data>
  <data name="OptionsPage.Property.ObjectifiedShape.DisplayName">
    <value xml:space="preserve">Objectified Fact Shape</value>
    <comment xml:space="preserve">The display name for the objectified fact shape property</comment>
  </data>
  <data name="OptionsPage.Property.ObjectTypeShape.Description">
    <value xml:space="preserve">The shape for object types. This will be the default shape when creating new ORM models.</value>
    <comment xml:space="preserve">The object type shape description</comment>
  </data>
  <data name="OptionsPage.Property.ObjectTypeShape.DisplayName">
    <value xml:space="preserve">Object Type Shape</value>
    <comment xml:space="preserve">The human readable name for the object shape property</comment>
  </data>
  <data name="OptionsPage.Property.RoleNameDisplay.Description">
    <value xml:space="preserve">Object Types can have Role Names associated with them. This options turns the display of role names On or Off.</value>
    <comment xml:space="preserve">The description for the Display Role Names option.</comment>
  </data>
  <data name="OptionsPage.Property.RoleNameDisplay.DisplayName">
    <value xml:space="preserve">Display Role Names</value>
    <comment xml:space="preserve">The display name for the Display Role Names option.</comment>
  </data>
  <data name="OptionsPageChange.TransactionName">
    <value xml:space="preserve">Update Diagram Layout</value>
    <comment xml:space="preserve">The transaction name used when an options page change modifies diagram layout and connections. The text appears in the undo dropdown in the VS IDE.</comment>
  </data>
  <data name="ORMModelBrowser.WindowTitle">
    <value xml:space="preserve">ORM Model Browser</value>
    <comment xml:space="preserve">The window title for the ORM model browser window</comment>
  </data>
  <data name="Package.OfficialName">
    <value xml:space="preserve">ORM Designer</value>
    <comment xml:space="preserve">The official name of the package</comment>
  </data>
  <data name="Package.ProductDetails">
    <value xml:space="preserve">Designer for Object Role Modeling (ORM) diagrams</value>
    <comment xml:space="preserve">The extra information that appears in the about box of Visual Studio</comment>
  </data>
  <data name="RoleConnectAction.TransactionName">
    <value xml:space="preserve">Set Role Player</value>
    <comment xml:space="preserve">The transaction name used by the role connect action. The text appears in the undo dropdown in the VS IDE.</comment>
  </data>
</root>