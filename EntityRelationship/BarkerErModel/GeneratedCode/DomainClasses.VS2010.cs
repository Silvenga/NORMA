#region Common Public License Copyright Notice
/**************************************************************************\
* Natural Object-Role Modeling Architect for Visual Studio                 *
*                                                                          *
* Copyright © Neumont University. All rights reserved.                     *
* Copyright © ORM Solutions, LLC. All rights reserved.                     *
*                                                                          *
* The use and distribution terms for this software are covered by the      *
* Common Public License 1.0 (http://opensource.org/licenses/cpl) which     *
* can be found in the file CPL.txt at the root of this distribution.       *
* By using this software in any fashion, you are agreeing to be bound by   *
* the terms of this license.                                               *
*                                                                          *
* You must not remove this notice, or any other, from this software.       *
\**************************************************************************/
#endregion
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
namespace ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker
{
	/// <summary>
	/// DomainClass BarkerModelElement
	/// Base class for ConceptualData <see cref='DslModeling::ModelElement'/>s.
	/// </summary>
	[global::System.ComponentModel.TypeDescriptionProvider(typeof(global::ORMSolutions.ORMArchitect.Framework.Design.ElementTypeDescriptionProvider<BarkerModelElement, Design.BarkerModelElementTypeDescriptor<BarkerModelElement>>))]
	[DslDesign::DisplayNameResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerModelElement.DisplayName", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerModelElement.Description", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("f8f5677e-5632-4a48-bf24-18f4d32db589")]
	public abstract partial class BarkerModelElement : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// BarkerModelElement domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xf8f5677e, 0x5632, 0x4a48, 0xbf, 0x24, 0x18, 0xf4, 0xd3, 0x2d, 0xb5, 0x89);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected BarkerModelElement(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker
{
	/// <summary>
	/// DomainClass EntityType
	/// Description for
	/// ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.EntityType
	/// </summary>
	[DslDesign::DisplayNameResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.EntityType.DisplayName", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.EntityType.Description", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (Name = {namePropertyStorage})")]
	[DslModeling::DomainObjectId("4aa67e55-0269-49b9-a580-62ae22eddded")]
	public partial class EntityType : BarkerModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// EntityType domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x4aa67e55, 0x0269, 0x49b9, 0xa5, 0x80, 0x62, 0xae, 0x22, 0xed, 0xdd, 0xed);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public EntityType(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public EntityType(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Name domain property code
		
		/// <summary>
		/// Name domain property Id.
		/// </summary>
		public static readonly global::System.Guid NameDomainPropertyId = new global::System.Guid(0xbae233d4, 0x8ea9, 0x4b39, 0xa4, 0x02, 0xb4, 0xae, 0xf4, 0x80, 0xe6, 0x8e);
		
		/// <summary>
		/// Storage for Name
		/// </summary>
		private global::System.String namePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Name domain property.
		/// The name of the entity type.
		/// </summary>
		[global::System.Xml.Serialization.XmlAttribute("name")]
		[DslDesign::DisplayNameResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.EntityType/Name.DisplayName", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.EntityType/Name.Description", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
		[DslModeling::ElementName]
		[DslModeling::DomainObjectId("bae233d4-8ea9-4b39-a402-b4aef480e68e")]
		public global::System.String Name
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return namePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the EntityType.Name domain property.
		/// </summary>
		internal sealed partial class NamePropertyHandler : DslModeling::DomainPropertyValueHandler<EntityType, global::System.String>
		{
			private NamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the EntityType.Name domain property value handler.
			/// </summary>
			public static readonly NamePropertyHandler Instance = new NamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the EntityType.Name domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(EntityType element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.namePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(EntityType element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.namePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region AttributeCollection opposite domain role accessor
		
		/// <summary>
		/// Gets a list of AttributeCollection.
		/// Description for
		/// ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.EntityTypeHasAttribute.EntityType
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Attribute> AttributeCollection
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Attribute>, Attribute>(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.EntityTypeHasAttribute.EntityTypeDomainRoleId);
			}
		}
		#endregion
		#region Supertype opposite domain role accessor
		/// <summary>
		/// Gets or sets Supertype.
		/// Description for
		/// ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.EntityTypeIsSubtypeOfEntityType.Subtype
		/// </summary>
		public virtual EntityType Supertype
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.EntityTypeIsSubtypeOfEntityType.SubtypeDomainRoleId) as EntityType;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.EntityTypeIsSubtypeOfEntityType.SubtypeDomainRoleId, value);
			}
		}
		#endregion
		#region SubtypesCollection opposite domain role accessor
		
		/// <summary>
		/// Gets a list of SubtypesCollection.
		/// Description for
		/// ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.EntityTypeIsSubtypeOfEntityType.Supertype
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<EntityType> SubtypesCollection
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<EntityType>, EntityType>(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.EntityTypeIsSubtypeOfEntityType.SupertypeDomainRoleId);
			}
		}
		#endregion
		#region RoleCollection opposite domain role accessor
		
		/// <summary>
		/// Gets a list of RoleCollection.
		/// Description for
		/// ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.EntityTypePlaysRole.EntityType
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Role> RoleCollection
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Role>, Role>(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.EntityTypePlaysRole.EntityTypeDomainRoleId);
			}
		}
		#endregion
		#region BarkerErModel opposite domain role accessor
		/// <summary>
		/// Gets or sets BarkerErModel.
		/// Description for
		/// ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerErModelContainsEntityType.EntityType
		/// </summary>
		public virtual BarkerErModel BarkerErModel
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerErModelContainsEntityType.EntityTypeDomainRoleId) as BarkerErModel;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerErModelContainsEntityType.EntityTypeDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker
{
	/// <summary>
	/// DomainClass Attribute
	/// Description for
	/// ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.Attribute
	/// </summary>
	[DslDesign::DisplayNameResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.Attribute.DisplayName", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.Attribute.Description", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (Name = {namePropertyStorage})")]
	[DslModeling::DomainObjectId("2a1c3209-1e17-4e6f-8b2d-2bd051610a29")]
	public partial class Attribute : BarkerModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Attribute domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x2a1c3209, 0x1e17, 0x4e6f, 0x8b, 0x2d, 0x2b, 0xd0, 0x51, 0x61, 0x0a, 0x29);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Attribute(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Attribute(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Name domain property code
		
		/// <summary>
		/// Name domain property Id.
		/// </summary>
		public static readonly global::System.Guid NameDomainPropertyId = new global::System.Guid(0x6b20e133, 0xfd6e, 0x4034, 0xac, 0x73, 0x14, 0x50, 0xab, 0xd1, 0x15, 0xfc);
		
		/// <summary>
		/// Storage for Name
		/// </summary>
		private global::System.String namePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Name domain property.
		/// The name of the attribute.
		/// </summary>
		[global::System.Xml.Serialization.XmlAttribute("name")]
		[DslDesign::DisplayNameResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.Attribute/Name.DisplayName", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.Attribute/Name.Description", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
		[DslModeling::ElementName]
		[DslModeling::DomainObjectId("6b20e133-fd6e-4034-ac73-1450abd115fc")]
		public global::System.String Name
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return namePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Attribute.Name domain property.
		/// </summary>
		internal sealed partial class NamePropertyHandler : DslModeling::DomainPropertyValueHandler<Attribute, global::System.String>
		{
			private NamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Attribute.Name domain property value handler.
			/// </summary>
			public static readonly NamePropertyHandler Instance = new NamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Attribute.Name domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Attribute element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.namePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Attribute element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.namePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsMandatory domain property code
		
		/// <summary>
		/// IsMandatory domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsMandatoryDomainPropertyId = new global::System.Guid(0x73bf0465, 0x613a, 0x4b97, 0x82, 0x93, 0x82, 0x74, 0x48, 0xe0, 0xdb, 0xc6);
		
		/// <summary>
		/// Storage for IsMandatory
		/// </summary>
		private global::System.Boolean isMandatoryPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of IsMandatory domain property.
		/// Is this attribute required for its entity type?
		/// </summary>
		[global::System.Xml.Serialization.XmlAttribute("isMandatory")]
		[DslDesign::DisplayNameResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.Attribute/IsMandatory.DisplayName", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.Attribute/IsMandatory.Description", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("73bf0465-613a-4b97-8293-827448e0dbc6")]
		public global::System.Boolean IsMandatory
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isMandatoryPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsMandatoryPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Attribute.IsMandatory domain property.
		/// </summary>
		internal sealed partial class IsMandatoryPropertyHandler : DslModeling::DomainPropertyValueHandler<Attribute, global::System.Boolean>
		{
			private IsMandatoryPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Attribute.IsMandatory domain property value handler.
			/// </summary>
			public static readonly IsMandatoryPropertyHandler Instance = new IsMandatoryPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Attribute.IsMandatory domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsMandatoryDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(Attribute element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isMandatoryPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Attribute element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isMandatoryPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsPrimaryIdComponent domain property code
		
		/// <summary>
		/// IsPrimaryIdComponent domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsPrimaryIdComponentDomainPropertyId = new global::System.Guid(0x7f5e4c3e, 0x7020, 0x4664, 0xb4, 0xb6, 0xfd, 0x2e, 0xbb, 0xdc, 0xcd, 0xc5);
		
		/// <summary>
		/// Storage for IsPrimaryIdComponent
		/// </summary>
		private global::System.Boolean isPrimaryIdComponentPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of IsPrimaryIdComponent domain property.
		/// Is this attribute part of primary identifier for its entity type?
		/// </summary>
		[global::System.Xml.Serialization.XmlAttribute("isPrimaryIdComponent")]
		[DslDesign::DisplayNameResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.Attribute/IsPrimaryIdComponent.DisplayName", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.Attribute/IsPrimaryIdComponent.Description", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("7f5e4c3e-7020-4664-b4b6-fd2ebbdccdc5")]
		public global::System.Boolean IsPrimaryIdComponent
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isPrimaryIdComponentPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsPrimaryIdComponentPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Attribute.IsPrimaryIdComponent domain property.
		/// </summary>
		internal sealed partial class IsPrimaryIdComponentPropertyHandler : DslModeling::DomainPropertyValueHandler<Attribute, global::System.Boolean>
		{
			private IsPrimaryIdComponentPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Attribute.IsPrimaryIdComponent domain property value handler.
			/// </summary>
			public static readonly IsPrimaryIdComponentPropertyHandler Instance = new IsPrimaryIdComponentPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Attribute.IsPrimaryIdComponent domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsPrimaryIdComponentDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(Attribute element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isPrimaryIdComponentPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Attribute element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isPrimaryIdComponentPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region EntityType opposite domain role accessor
		/// <summary>
		/// Gets or sets EntityType.
		/// Description for
		/// ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.EntityTypeHasAttribute.Attribute
		/// </summary>
		public virtual EntityType EntityType
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.EntityTypeHasAttribute.AttributeDomainRoleId) as EntityType;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.EntityTypeHasAttribute.AttributeDomainRoleId, value);
			}
		}
		#endregion
		#region PossibleValuesCollection opposite domain role accessor
		
		/// <summary>
		/// Gets a list of PossibleValuesCollection.
		/// Description for
		/// ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.AttributeHasPossibleValue.Attribute
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Value> PossibleValuesCollection
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Value>, Value>(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.AttributeHasPossibleValue.AttributeDomainRoleId);
			}
		}
		#endregion
	}
}
namespace ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker
{
	/// <summary>
	/// DomainClass Value
	/// Description for ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.Value
	/// </summary>
	[DslDesign::DisplayNameResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.Value.DisplayName", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.Value.Description", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("b34cdd9e-f23c-4190-9194-4260f4dd9a59")]
	public partial class Value : BarkerModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Value domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xb34cdd9e, 0xf23c, 0x4190, 0x91, 0x94, 0x42, 0x60, 0xf4, 0xdd, 0x9a, 0x59);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Value(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Value(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Val domain property code
		
		/// <summary>
		/// Val domain property Id.
		/// </summary>
		public static readonly global::System.Guid ValDomainPropertyId = new global::System.Guid(0x7bbd6637, 0xc6c2, 0x489a, 0xb1, 0x8e, 0xe7, 0x7c, 0x92, 0xfa, 0xa9, 0xbc);
		
		/// <summary>
		/// Storage for Val
		/// </summary>
		private global::System.String valPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Val domain property.
		/// represents the actual value.
		/// </summary>
		[global::System.Xml.Serialization.XmlAttribute("val")]
		[DslDesign::DisplayNameResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.Value/Val.DisplayName", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.Value/Val.Description", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("7bbd6637-c6c2-489a-b18e-e77c92faa9bc")]
		public global::System.String Val
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return valPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ValPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Value.Val domain property.
		/// </summary>
		internal sealed partial class ValPropertyHandler : DslModeling::DomainPropertyValueHandler<Value, global::System.String>
		{
			private ValPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Value.Val domain property value handler.
			/// </summary>
			public static readonly ValPropertyHandler Instance = new ValPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Value.Val domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ValDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Value element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.valPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Value element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.valPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Attribute opposite domain role accessor
		/// <summary>
		/// Gets or sets Attribute.
		/// Description for
		/// ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.AttributeHasPossibleValue.Value
		/// </summary>
		public virtual Attribute Attribute
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.AttributeHasPossibleValue.ValueDomainRoleId) as Attribute;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.AttributeHasPossibleValue.ValueDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker
{
	/// <summary>
	/// DomainClass Role
	/// Description for ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.Role
	/// </summary>
	[DslDesign::DisplayNameResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.Role.DisplayName", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.Role.Description", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("6e5b3828-8a31-4210-b288-6ff1d858686e")]
	public partial class Role : BarkerModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Role domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x6e5b3828, 0x8a31, 0x4210, 0xb2, 0x88, 0x6f, 0xf1, 0xd8, 0x58, 0x68, 0x6e);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Role(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Role(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Number domain property code
		
		/// <summary>
		/// Number domain property Id.
		/// </summary>
		public static readonly global::System.Guid NumberDomainPropertyId = new global::System.Guid(0x0fa61af6, 0x3123, 0x4ff8, 0x92, 0x32, 0x2f, 0x1c, 0xe0, 0xf9, 0x40, 0x60);
		
		/// <summary>
		/// Storage for Number
		/// </summary>
		private global::System.Int32 numberPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of Number domain property.
		/// The number of the role.
		/// </summary>
		[global::System.Xml.Serialization.XmlAttribute("number")]
		[DslDesign::DisplayNameResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.Role/Number.DisplayName", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.Role/Number.Description", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("0fa61af6-3123-4ff8-9232-2f1ce0f94060")]
		public global::System.Int32 Number
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return numberPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NumberPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Role.Number domain property.
		/// </summary>
		internal sealed partial class NumberPropertyHandler : DslModeling::DomainPropertyValueHandler<Role, global::System.Int32>
		{
			private NumberPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Role.Number domain property value handler.
			/// </summary>
			public static readonly NumberPropertyHandler Instance = new NumberPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Role.Number domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NumberDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Int32 GetValue(Role element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.numberPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Role element, global::System.Int32 newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Int32 oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.numberPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region PredicateText domain property code
		
		/// <summary>
		/// PredicateText domain property Id.
		/// </summary>
		public static readonly global::System.Guid PredicateTextDomainPropertyId = new global::System.Guid(0x736301c6, 0xf806, 0x4aec, 0x91, 0xb7, 0xfe, 0xce, 0x4d, 0x7d, 0xa1, 0x0b);
		
		/// <summary>
		/// Storage for PredicateText
		/// </summary>
		private global::System.String predicateTextPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of PredicateText domain property.
		/// The predicate text of the role.
		/// </summary>
		[global::System.Xml.Serialization.XmlAttribute("predicateText")]
		[DslDesign::DisplayNameResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.Role/PredicateText.DisplayName", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.Role/PredicateText.Description", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("736301c6-f806-4aec-91b7-fece4d7da10b")]
		public global::System.String PredicateText
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return predicateTextPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				PredicateTextPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Role.PredicateText domain property.
		/// </summary>
		internal sealed partial class PredicateTextPropertyHandler : DslModeling::DomainPropertyValueHandler<Role, global::System.String>
		{
			private PredicateTextPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Role.PredicateText domain property value handler.
			/// </summary>
			public static readonly PredicateTextPropertyHandler Instance = new PredicateTextPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Role.PredicateText domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return PredicateTextDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Role element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.predicateTextPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Role element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.predicateTextPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsNonTransferable domain property code
		
		/// <summary>
		/// IsNonTransferable domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsNonTransferableDomainPropertyId = new global::System.Guid(0xd4f77973, 0xeb66, 0x4940, 0x8d, 0x70, 0x5f, 0x58, 0xed, 0xad, 0x45, 0xe6);
		
		/// <summary>
		/// Storage for IsNonTransferable
		/// </summary>
		private global::System.Boolean isNonTransferablePropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of IsNonTransferable domain property.
		/// Is this role non-transferable?
		/// </summary>
		[global::System.Xml.Serialization.XmlAttribute("isNonTransferable")]
		[DslDesign::DisplayNameResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.Role/IsNonTransferable.DisplayName", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.Role/IsNonTransferable.Description", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("d4f77973-eb66-4940-8d70-5f58edad45e6")]
		public global::System.Boolean IsNonTransferable
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isNonTransferablePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsNonTransferablePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Role.IsNonTransferable domain property.
		/// </summary>
		internal sealed partial class IsNonTransferablePropertyHandler : DslModeling::DomainPropertyValueHandler<Role, global::System.Boolean>
		{
			private IsNonTransferablePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Role.IsNonTransferable domain property value handler.
			/// </summary>
			public static readonly IsNonTransferablePropertyHandler Instance = new IsNonTransferablePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Role.IsNonTransferable domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsNonTransferableDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(Role element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isNonTransferablePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Role element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isNonTransferablePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsMandatory domain property code
		
		/// <summary>
		/// IsMandatory domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsMandatoryDomainPropertyId = new global::System.Guid(0xbb635854, 0x08aa, 0x4555, 0x99, 0x17, 0x1b, 0xba, 0x75, 0x59, 0x9b, 0x14);
		
		/// <summary>
		/// Storage for IsMandatory
		/// </summary>
		private global::System.Boolean isMandatoryPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of IsMandatory domain property.
		/// Is this a required role?
		/// </summary>
		[global::System.Xml.Serialization.XmlAttribute("isMandatory")]
		[DslDesign::DisplayNameResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.Role/IsMandatory.DisplayName", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.Role/IsMandatory.Description", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("bb635854-08aa-4555-9917-1bba75599b14")]
		public global::System.Boolean IsMandatory
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isMandatoryPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsMandatoryPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Role.IsMandatory domain property.
		/// </summary>
		internal sealed partial class IsMandatoryPropertyHandler : DslModeling::DomainPropertyValueHandler<Role, global::System.Boolean>
		{
			private IsMandatoryPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Role.IsMandatory domain property value handler.
			/// </summary>
			public static readonly IsMandatoryPropertyHandler Instance = new IsMandatoryPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Role.IsMandatory domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsMandatoryDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(Role element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isMandatoryPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Role element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isMandatoryPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsPrimaryIdComponent domain property code
		
		/// <summary>
		/// IsPrimaryIdComponent domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsPrimaryIdComponentDomainPropertyId = new global::System.Guid(0xa5843d76, 0x17f3, 0x4a8d, 0x9a, 0x8c, 0x33, 0x1a, 0xce, 0xed, 0xcc, 0x60);
		
		/// <summary>
		/// Storage for IsPrimaryIdComponent
		/// </summary>
		private global::System.Boolean isPrimaryIdComponentPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of IsPrimaryIdComponent domain property.
		/// Is this role a part of primary identifier for an entity type?
		/// </summary>
		[global::System.Xml.Serialization.XmlAttribute("isPrimaryIdComponent")]
		[DslDesign::DisplayNameResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.Role/IsPrimaryIdComponent.DisplayName", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.Role/IsPrimaryIdComponent.Description", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("a5843d76-17f3-4a8d-9a8c-331aceedcc60")]
		public global::System.Boolean IsPrimaryIdComponent
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isPrimaryIdComponentPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsPrimaryIdComponentPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Role.IsPrimaryIdComponent domain property.
		/// </summary>
		internal sealed partial class IsPrimaryIdComponentPropertyHandler : DslModeling::DomainPropertyValueHandler<Role, global::System.Boolean>
		{
			private IsPrimaryIdComponentPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Role.IsPrimaryIdComponent domain property value handler.
			/// </summary>
			public static readonly IsPrimaryIdComponentPropertyHandler Instance = new IsPrimaryIdComponentPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Role.IsPrimaryIdComponent domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsPrimaryIdComponentDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(Role element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isPrimaryIdComponentPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Role element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isPrimaryIdComponentPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsMultiValued domain property code
		
		/// <summary>
		/// IsMultiValued domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsMultiValuedDomainPropertyId = new global::System.Guid(0xd7959bf6, 0x7f67, 0x4f37, 0x99, 0x14, 0x52, 0xd7, 0x6d, 0x13, 0x88, 0xd6);
		
		/// <summary>
		/// Storage for IsMultiValued
		/// </summary>
		private global::System.Boolean isMultiValuedPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of IsMultiValued domain property.
		/// Does this role have cardinality specified?
		/// </summary>
		[global::System.Xml.Serialization.XmlAttribute("isMultiValued")]
		[DslDesign::DisplayNameResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.Role/IsMultiValued.DisplayName", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.Role/IsMultiValued.Description", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("d7959bf6-7f67-4f37-9914-52d76d1388d6")]
		public global::System.Boolean IsMultiValued
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isMultiValuedPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsMultiValuedPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Role.IsMultiValued domain property.
		/// </summary>
		internal sealed partial class IsMultiValuedPropertyHandler : DslModeling::DomainPropertyValueHandler<Role, global::System.Boolean>
		{
			private IsMultiValuedPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Role.IsMultiValued domain property value handler.
			/// </summary>
			public static readonly IsMultiValuedPropertyHandler Instance = new IsMultiValuedPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Role.IsMultiValued domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsMultiValuedDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(Role element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isMultiValuedPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Role element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isMultiValuedPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region EntityType opposite domain role accessor
		/// <summary>
		/// Gets or sets EntityType.
		/// Description for
		/// ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.EntityTypePlaysRole.Role
		/// </summary>
		public virtual EntityType EntityType
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.EntityTypePlaysRole.RoleDomainRoleId) as EntityType;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.EntityTypePlaysRole.RoleDomainRoleId, value);
			}
		}
		#endregion
		#region CardinalityQualifier opposite domain role accessor
		/// <summary>
		/// Gets or sets CardinalityQualifier.
		/// Description for
		/// ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.RoleHasCardinalityQualifier.Role
		/// </summary>
		public virtual CardinalityQualifier CardinalityQualifier
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.RoleHasCardinalityQualifier.RoleDomainRoleId) as CardinalityQualifier;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::ModelElement existingSource;
				if (null != value &&
					null != (existingSource = DslModeling::DomainRoleInfo.GetLinkedElement(value, global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.RoleHasCardinalityQualifier.CardinalityQualifierDomainRoleId)))
				{
					if (existingSource != value)
					{
						DslModeling::DomainRoleInfo.SetLinkedElement(value, global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.RoleHasCardinalityQualifier.CardinalityQualifierDomainRoleId, this);
					}
				}
				else
				{
					DslModeling::DomainRoleInfo.SetLinkedElement(this, global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.RoleHasCardinalityQualifier.RoleDomainRoleId, value);
				}
			}
		}
		#endregion
		#region ExclusiveArc opposite domain role accessor
		/// <summary>
		/// Gets or sets ExclusiveArc.
		/// Description for
		/// ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.ExclusiveArcSpansOptionalRole.ConstrainedRole
		/// </summary>
		public virtual ExclusiveArc ExclusiveArc
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.ExclusiveArcSpansOptionalRole.ConstrainedRoleDomainRoleId) as ExclusiveArc;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.ExclusiveArcSpansOptionalRole.ConstrainedRoleDomainRoleId, value);
			}
		}
		#endregion
		#region BinaryAssociation opposite domain role accessor
		/// <summary>
		/// Gets or sets BinaryAssociation.
		/// Description for
		/// ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BinaryAssociationContainsRole.Role
		/// </summary>
		public virtual BinaryAssociation BinaryAssociation
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BinaryAssociationContainsRole.RoleDomainRoleId) as BinaryAssociation;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BinaryAssociationContainsRole.RoleDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker
{
	/// <summary>
	/// DomainClass CardinalityQualifier
	/// Description for
	/// ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.CardinalityQualifier
	/// </summary>
	[DslDesign::DisplayNameResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.CardinalityQualifier.DisplayName", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.CardinalityQualifier.Description", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("80ef7f9f-b60a-4929-8d99-6bd734f91056")]
	public partial class CardinalityQualifier : BarkerModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// CardinalityQualifier domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x80ef7f9f, 0xb60a, 0x4929, 0x8d, 0x99, 0x6b, 0xd7, 0x34, 0xf9, 0x10, 0x56);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public CardinalityQualifier(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public CardinalityQualifier(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Number domain property code
		
		/// <summary>
		/// Number domain property Id.
		/// </summary>
		public static readonly global::System.Guid NumberDomainPropertyId = new global::System.Guid(0x0b246974, 0x931a, 0x47e1, 0xb7, 0xcd, 0x81, 0x0d, 0x6e, 0xc1, 0x35, 0x3d);
		
		/// <summary>
		/// Storage for Number
		/// </summary>
		private global::System.Int32 numberPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of Number domain property.
		/// The number of times something can occur.
		/// </summary>
		[global::System.Xml.Serialization.XmlAttribute("number")]
		[DslDesign::DisplayNameResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.CardinalityQualifier/Number.DisplayName", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.CardinalityQualifier/Number.Description", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("0b246974-931a-47e1-b7cd-810d6ec1353d")]
		public global::System.Int32 Number
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return numberPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NumberPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the CardinalityQualifier.Number domain property.
		/// </summary>
		internal sealed partial class NumberPropertyHandler : DslModeling::DomainPropertyValueHandler<CardinalityQualifier, global::System.Int32>
		{
			private NumberPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the CardinalityQualifier.Number domain property value handler.
			/// </summary>
			public static readonly NumberPropertyHandler Instance = new NumberPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the CardinalityQualifier.Number domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NumberDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Int32 GetValue(CardinalityQualifier element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.numberPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(CardinalityQualifier element, global::System.Int32 newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Int32 oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.numberPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Operator domain property code
		
		/// <summary>
		/// Operator domain property Id.
		/// </summary>
		public static readonly global::System.Guid OperatorDomainPropertyId = new global::System.Guid(0x2bf2033d, 0xe5ba, 0x4f6e, 0xa0, 0x2e, 0x54, 0xe6, 0xe4, 0xe3, 0x2a, 0x89);
		
		/// <summary>
		/// Storage for Operator
		/// </summary>
		private OperatorSymbol operatorPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of Operator domain property.
		/// The comparison operator that goes with the cardinality number.
		/// </summary>
		[global::System.Xml.Serialization.XmlAttribute("operator")]
		[DslDesign::DisplayNameResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.CardinalityQualifier/Operator.DisplayName", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.CardinalityQualifier/Operator.Description", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("2bf2033d-e5ba-4f6e-a02e-54e6e4e32a89")]
		public OperatorSymbol Operator
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return operatorPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				OperatorPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the CardinalityQualifier.Operator domain property.
		/// </summary>
		internal sealed partial class OperatorPropertyHandler : DslModeling::DomainPropertyValueHandler<CardinalityQualifier, OperatorSymbol>
		{
			private OperatorPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the CardinalityQualifier.Operator domain property value handler.
			/// </summary>
			public static readonly OperatorPropertyHandler Instance = new OperatorPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the CardinalityQualifier.Operator domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return OperatorDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed OperatorSymbol GetValue(CardinalityQualifier element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.operatorPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(CardinalityQualifier element, OperatorSymbol newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				OperatorSymbol oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.operatorPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Role opposite domain role accessor
		/// <summary>
		/// Gets or sets Role.
		/// Description for
		/// ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.RoleHasCardinalityQualifier.CardinalityQualifier
		/// </summary>
		public virtual Role Role
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.RoleHasCardinalityQualifier.CardinalityQualifierDomainRoleId) as Role;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::ModelElement existingSource;
				if (null != value &&
					null != (existingSource = DslModeling::DomainRoleInfo.GetLinkedElement(value, global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.RoleHasCardinalityQualifier.RoleDomainRoleId)))
				{
					if (existingSource != value)
					{
						DslModeling::DomainRoleInfo.SetLinkedElement(value, global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.RoleHasCardinalityQualifier.RoleDomainRoleId, this);
					}
				}
				else
				{
					DslModeling::DomainRoleInfo.SetLinkedElement(this, global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.RoleHasCardinalityQualifier.CardinalityQualifierDomainRoleId, value);
				}
			}
		}
		#endregion
	}
}
namespace ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker
{
	/// <summary>
	/// DomainClass OptionalRole
	/// Description for
	/// ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.OptionalRole
	/// </summary>
	[DslDesign::DisplayNameResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.OptionalRole.DisplayName", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.OptionalRole.Description", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("958edc63-93f3-40b2-818d-dc2c764e4dfb")]
	public partial class OptionalRole : Role
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// OptionalRole domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x958edc63, 0x93f3, 0x40b2, 0x81, 0x8d, 0xdc, 0x2c, 0x76, 0x4e, 0x4d, 0xfb);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public OptionalRole(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public OptionalRole(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker
{
	/// <summary>
	/// DomainClass ExclusiveArc
	/// Description for
	/// ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.ExclusiveArc
	/// </summary>
	[DslDesign::DisplayNameResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.ExclusiveArc.DisplayName", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.ExclusiveArc.Description", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("63311551-b395-492e-b59f-caa6f521494c")]
	public partial class ExclusiveArc : BarkerModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ExclusiveArc domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x63311551, 0xb395, 0x492e, 0xb5, 0x9f, 0xca, 0xa6, 0xf5, 0x21, 0x49, 0x4c);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ExclusiveArc(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ExclusiveArc(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Number domain property code
		
		/// <summary>
		/// Number domain property Id.
		/// </summary>
		public static readonly global::System.Guid NumberDomainPropertyId = new global::System.Guid(0x377d74d9, 0xe695, 0x4dbd, 0x91, 0x9e, 0xb9, 0x70, 0xf7, 0x5d, 0x63, 0x39);
		
		/// <summary>
		/// Storage for Number
		/// </summary>
		private global::System.Int32 numberPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of Number domain property.
		/// The number of the exclusive arc.
		/// </summary>
		[global::System.Xml.Serialization.XmlAttribute("number")]
		[DslDesign::DisplayNameResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.ExclusiveArc/Number.DisplayName", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.ExclusiveArc/Number.Description", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("377d74d9-e695-4dbd-919e-b970f75d6339")]
		public global::System.Int32 Number
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return numberPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NumberPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ExclusiveArc.Number domain property.
		/// </summary>
		internal sealed partial class NumberPropertyHandler : DslModeling::DomainPropertyValueHandler<ExclusiveArc, global::System.Int32>
		{
			private NumberPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ExclusiveArc.Number domain property value handler.
			/// </summary>
			public static readonly NumberPropertyHandler Instance = new NumberPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ExclusiveArc.Number domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NumberDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Int32 GetValue(ExclusiveArc element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.numberPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ExclusiveArc element, global::System.Int32 newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Int32 oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.numberPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsMandatory domain property code
		
		/// <summary>
		/// IsMandatory domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsMandatoryDomainPropertyId = new global::System.Guid(0x8c44fb8c, 0x0953, 0x44ff, 0x99, 0x7d, 0x41, 0x88, 0x2b, 0xa6, 0xb1, 0x8f);
		
		/// <summary>
		/// Storage for IsMandatory
		/// </summary>
		private global::System.Boolean isMandatoryPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of IsMandatory domain property.
		/// Is one of the roles under exclusive arc required?
		/// </summary>
		[global::System.Xml.Serialization.XmlAttribute("isMandatory")]
		[DslDesign::DisplayNameResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.ExclusiveArc/IsMandatory.DisplayName", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.ExclusiveArc/IsMandatory.Description", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("8c44fb8c-0953-44ff-997d-41882ba6b18f")]
		public global::System.Boolean IsMandatory
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isMandatoryPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsMandatoryPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ExclusiveArc.IsMandatory domain property.
		/// </summary>
		internal sealed partial class IsMandatoryPropertyHandler : DslModeling::DomainPropertyValueHandler<ExclusiveArc, global::System.Boolean>
		{
			private IsMandatoryPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ExclusiveArc.IsMandatory domain property value handler.
			/// </summary>
			public static readonly IsMandatoryPropertyHandler Instance = new IsMandatoryPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ExclusiveArc.IsMandatory domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsMandatoryDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(ExclusiveArc element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isMandatoryPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ExclusiveArc element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isMandatoryPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IsPrimaryIdComponent domain property code
		
		/// <summary>
		/// IsPrimaryIdComponent domain property Id.
		/// </summary>
		public static readonly global::System.Guid IsPrimaryIdComponentDomainPropertyId = new global::System.Guid(0xed4de2fc, 0x330e, 0x44da, 0x8e, 0x57, 0x63, 0xcf, 0x86, 0x14, 0xa8, 0xb6);
		
		/// <summary>
		/// Storage for IsPrimaryIdComponent
		/// </summary>
		private global::System.Boolean isPrimaryIdComponentPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of IsPrimaryIdComponent domain property.
		/// Is one of the roles under exclusive arc a part of primary identifier for an
		/// entity type?
		/// </summary>
		[global::System.Xml.Serialization.XmlAttribute("isPrimaryIdComponent")]
		[DslDesign::DisplayNameResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.ExclusiveArc/IsPrimaryIdComponent.DisplayName", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.ExclusiveArc/IsPrimaryIdComponent.Description", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("ed4de2fc-330e-44da-8e57-63cf8614a8b6")]
		public global::System.Boolean IsPrimaryIdComponent
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return isPrimaryIdComponentPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				IsPrimaryIdComponentPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ExclusiveArc.IsPrimaryIdComponent domain property.
		/// </summary>
		internal sealed partial class IsPrimaryIdComponentPropertyHandler : DslModeling::DomainPropertyValueHandler<ExclusiveArc, global::System.Boolean>
		{
			private IsPrimaryIdComponentPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ExclusiveArc.IsPrimaryIdComponent domain property value handler.
			/// </summary>
			public static readonly IsPrimaryIdComponentPropertyHandler Instance = new IsPrimaryIdComponentPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ExclusiveArc.IsPrimaryIdComponent domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return IsPrimaryIdComponentDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(ExclusiveArc element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.isPrimaryIdComponentPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ExclusiveArc element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.isPrimaryIdComponentPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region RoleCollection opposite domain role accessor
		
		/// <summary>
		/// Gets a list of RoleCollection.
		/// Description for
		/// ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.ExclusiveArcSpansOptionalRole.ExclusiveArc
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Role> RoleCollection
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Role>, Role>(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.ExclusiveArcSpansOptionalRole.ExclusiveArcDomainRoleId);
			}
		}
		#endregion
		#region BarkerErModel opposite domain role accessor
		/// <summary>
		/// Gets or sets BarkerErModel.
		/// Description for
		/// ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerErModelContainsExclusiveArc.ExclusiveArc
		/// </summary>
		public virtual BarkerErModel BarkerErModel
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerErModelContainsExclusiveArc.ExclusiveArcDomainRoleId) as BarkerErModel;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerErModelContainsExclusiveArc.ExclusiveArcDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker
{
	/// <summary>
	/// DomainClass BinaryAssociation
	/// Description for
	/// ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BinaryAssociation
	/// </summary>
	[DslDesign::DisplayNameResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BinaryAssociation.DisplayName", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BinaryAssociation.Description", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("ab570194-bcc8-4448-a022-bb07021d5ee5")]
	public partial class BinaryAssociation : BarkerModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// BinaryAssociation domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xab570194, 0xbcc8, 0x4448, 0xa0, 0x22, 0xbb, 0x07, 0x02, 0x1d, 0x5e, 0xe5);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public BinaryAssociation(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public BinaryAssociation(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Number domain property code
		
		/// <summary>
		/// Number domain property Id.
		/// </summary>
		public static readonly global::System.Guid NumberDomainPropertyId = new global::System.Guid(0xd0058027, 0xf844, 0x4a3a, 0x85, 0x0f, 0x3e, 0x15, 0xd1, 0x0f, 0x14, 0x7a);
		
		/// <summary>
		/// Storage for Number
		/// </summary>
		private global::System.Int32 numberPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of Number domain property.
		/// The number of the binary association.
		/// </summary>
		[global::System.Xml.Serialization.XmlAttribute("number")]
		[DslDesign::DisplayNameResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BinaryAssociation/Number.DisplayName", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BinaryAssociation/Number.Description", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("d0058027-f844-4a3a-850f-3e15d10f147a")]
		public global::System.Int32 Number
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return numberPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NumberPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the BinaryAssociation.Number domain property.
		/// </summary>
		internal sealed partial class NumberPropertyHandler : DslModeling::DomainPropertyValueHandler<BinaryAssociation, global::System.Int32>
		{
			private NumberPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the BinaryAssociation.Number domain property value handler.
			/// </summary>
			public static readonly NumberPropertyHandler Instance = new NumberPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the BinaryAssociation.Number domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NumberDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Int32 GetValue(BinaryAssociation element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.numberPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(BinaryAssociation element, global::System.Int32 newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Int32 oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.numberPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region RoleCollection opposite domain role accessor
		
		/// <summary>
		/// Gets a list of RoleCollection.
		/// Description for
		/// ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BinaryAssociationContainsRole.BinaryAssociation
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Role> RoleCollection
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Role>, Role>(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BinaryAssociationContainsRole.BinaryAssociationDomainRoleId);
			}
		}
		#endregion
		#region BarkerErModel opposite domain role accessor
		/// <summary>
		/// Gets or sets BarkerErModel.
		/// Description for
		/// ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerErModelContainsBinaryAssociation.BinaryAssociation
		/// </summary>
		public virtual BarkerErModel BarkerErModel
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerErModelContainsBinaryAssociation.BinaryAssociationDomainRoleId) as BarkerErModel;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerErModelContainsBinaryAssociation.BinaryAssociationDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker
{
	/// <summary>
	/// DomainClass BarkerErModel
	/// Description for
	/// ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerErModel
	/// </summary>
	[DslDesign::DisplayNameResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerErModel.DisplayName", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerErModel.Description", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (Name = {namePropertyStorage})")]
	[DslModeling::DomainObjectId("a96fccea-0fcc-4207-ac77-f69c0bf2c0cb")]
	public partial class BarkerErModel : BarkerModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// BarkerErModel domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xa96fccea, 0x0fcc, 0x4207, 0xac, 0x77, 0xf6, 0x9c, 0x0b, 0xf2, 0xc0, 0xcb);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public BarkerErModel(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public BarkerErModel(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Name domain property code
		
		/// <summary>
		/// Name domain property Id.
		/// </summary>
		public static readonly global::System.Guid NameDomainPropertyId = new global::System.Guid(0x5fe133bf, 0x1cb7, 0x48d7, 0x9b, 0xf2, 0x9c, 0x4a, 0xa9, 0x22, 0x3f, 0xd3);
		
		/// <summary>
		/// Storage for Name
		/// </summary>
		private global::System.String namePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Name domain property.
		/// The name of the model.
		/// </summary>
		[global::System.Xml.Serialization.XmlAttribute("name")]
		[DslDesign::DisplayNameResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerErModel/Name.DisplayName", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerErModel/Name.Description", typeof(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerDomainModel), "ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.GeneratedCode.DomainModelResx")]
		[DslModeling::ElementName]
		[DslModeling::DomainObjectId("5fe133bf-1cb7-48d7-9bf2-9c4aa9223fd3")]
		public global::System.String Name
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return namePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the BarkerErModel.Name domain property.
		/// </summary>
		internal sealed partial class NamePropertyHandler : DslModeling::DomainPropertyValueHandler<BarkerErModel, global::System.String>
		{
			private NamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the BarkerErModel.Name domain property value handler.
			/// </summary>
			public static readonly NamePropertyHandler Instance = new NamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the BarkerErModel.Name domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(BarkerErModel element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.namePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(BarkerErModel element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.namePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region EntityTypeCollection opposite domain role accessor
		
		/// <summary>
		/// Gets a list of EntityTypeCollection.
		/// Description for
		/// ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerErModelContainsEntityType.BarkerErModel
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<EntityType> EntityTypeCollection
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<EntityType>, EntityType>(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerErModelContainsEntityType.BarkerErModelDomainRoleId);
			}
		}
		#endregion
		#region BinaryAssociationCollection opposite domain role accessor
		
		/// <summary>
		/// Gets a list of BinaryAssociationCollection.
		/// Description for
		/// ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerErModelContainsBinaryAssociation.BarkerErModel
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<BinaryAssociation> BinaryAssociationCollection
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<BinaryAssociation>, BinaryAssociation>(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerErModelContainsBinaryAssociation.BarkerErModelDomainRoleId);
			}
		}
		#endregion
		#region ExclusiveArcCollection opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ExclusiveArcCollection.
		/// Description for
		/// ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerErModelContainsExclusiveArc.BarkerErModel
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<ExclusiveArc> ExclusiveArcCollection
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<ExclusiveArc>, ExclusiveArc>(global::ORMSolutions.ORMArchitect.EntityRelationshipModels.Barker.BarkerErModelContainsExclusiveArc.BarkerErModelDomainRoleId);
			}
		}
		#endregion
	}
}
