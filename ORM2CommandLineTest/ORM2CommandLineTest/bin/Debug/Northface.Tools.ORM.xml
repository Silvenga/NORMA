<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Northface.Tools.ORM</name>
    </assembly>
    <members>
        <member name="T:Northface.Tools.ORM.Shell.ObjectTypeShape">
            <summary>
            Valid shapes for object types
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ObjectTypeShape.SoftRectangle">
            <summary>
            Draw object shapes with soft rectangles
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ObjectTypeShape.HardRectangle">
            <summary>
            Draw object shapes with hard rectangles
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ObjectTypeShape.Ellipse">
            <summary>
            Draw object shapes with ellipses
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.Shell.ObjectifiedFactShape">
            <summary>
            Valid shapes for objectified facts
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ObjectifiedFactShape.SoftRectangle">
            <summary>
            Draw objectified facts with soft rectangles
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ObjectifiedFactShape.HardRectangle">
            <summary>
            Draw objectified facts with hard rectangles
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.Shell.MandatoryDotPlacement">
            <summary>
            Valid placements for mandatory dots
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.MandatoryDotPlacement.ObjectShapeEnd">
            <summary>
            Place the mandatory dot at the object shape end of the connector
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.MandatoryDotPlacement.RoleBoxEnd">
            <summary>
            Place the mandatory dot at the role box end of the connector
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.Shell.RoleNameDisplay">
            <summary>
            Provide options for showing and hiding role names on object types
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.RoleNameDisplay.On">
            <summary>
            Show role names
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.RoleNameDisplay.Off">
            <summary>
            Hide role names
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.Shell.NotifyDocument">
            <summary>
            Used as a callback delegate for the OptionsPage.NotifySettingsChange
            method. Allow other global notification methods to walk all open
            documents.
            </summary>
            <param name="docData">A running ORMDesignerDocData to modify</param>
        </member>
        <member name="T:Northface.Tools.ORM.Shell.OptionsPage">
            <summary>
            Options dialog for ORM designers
            see https://svn.northface.edu/projects/orm2/wiki/HowToAddOptionPageOptions for adding options
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.OptionsPage.LoadSettingsFromStorage">
            <summary>
            Set the current values of the static properties
            to match the cached settings
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.OptionsPage.OnActivate(System.ComponentModel.CancelEventArgs)">
            <summary>
            Set local values for the current settings to determine later if the
            settings have changed in the OnApply method.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.OptionsPage.OnApply(Microsoft.VisualStudio.Shell.DialogPage.PageApplyEventArgs)">
            <summary>
            Invalidate each loaded ORM diagram to force a redraw of the shapes
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.OptionsPage.FixupDocument(Northface.Tools.ORM.Shell.ORMDesignerDocData)">
            <summary>
            Modify the specified document layout when options are changed
            </summary>
            <param name="docData"></param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.OptionsPage.NotifySettingsChange(System.IServiceProvider,Northface.Tools.ORM.Shell.NotifyDocument)">
            <summary>
            Walk all running ORMDesigner documents and callback to the
            notification delegate. Used to notify settings changes from
            the options page or other change sources (like the FontAndColors
            settings).
            </summary>
            <param name="serviceProvider">IServiceProvider</param>
            <param name="changeCallback">Delegate callback</param>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.OptionsPage.ObjectTypeShape">
            <summary>
            Object Type Shape option
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.OptionsPage.CurrentObjectTypeShape">
            <summary>
            Current VS session-wide setting for ObjectTypeShape
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.OptionsPage.ObjectifiedFactShape">
            <summary>
            Objectified Shape option
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.OptionsPage.CurrentObjectifiedFactShape">
            <summary>
            Current VS session-wide setting for ObjectifiedFactShape
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.OptionsPage.MandatoryDotPlacement">
            <summary>
            Objectified Shape option
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.OptionsPage.CurrentMandatoryDotPlacement">
            <summary>
            Current VS session-wide setting for MandatoryDotPlacement
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.OptionsPage.RoleNameDisplay">
            <summary>
            Display of role names
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.OptionsPage.CurrentRoleNameDisplay">
            <summary>
            Current VS session-wide setting for RoleNameDisplay
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.OptionsPage.DefaultDataType">
            <summary>
            Default data type for value types
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.OptionsPage.CurrentDefaultDataType">
            <summary>
            Current VS session-wide setting default data type
            when a new value type is added
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ExternalConstraintShape">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ORMBaseShape">
            <summary>
            An extension to NodeShape to enable Enter/Leave/Hover events
            on individual ShapeSubField areas. This should be in the base
            framework and would be more consistent there because virtual methods
            for these events could appear directly on ShapeSubField.
            </summary>
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ORMBaseShape.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMBaseShape.ConfiguringAsChildOf(Microsoft.VisualStudio.Modeling.Diagrams.NodeShape)">
            <summary>
            Called during the OnChildConfiguring from the parent shape.
            The default implementation does nothing.
            </summary>
            <param name="parent">The parent shape. May be a diagram.</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMBaseShape.AutoResize">
            <summary>
            Sizes to object to the size of the contents.
            The default implementation uses the ContentSize
            if it is set and does not do any margin adjustments.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMBaseShape.OnBoundsFixup(Microsoft.VisualStudio.Modeling.Diagrams.BoundsFixupState,System.Int32)">
            <summary>
            Size the object appropriately
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMBaseShape.OnCreated">
            <summary>
            Make sure the shape fields are available very early. This is
            needed during deserialization as well as initial creation, so
            it is placed in OnCreated instead of OnInitialized.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMBaseShape.OnInitialized">
            <summary>
            Do early initialization so sizing mechanisms work correctly
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMBaseShape.OnChildConfiguring(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
            <summary>
            Defer to ConfiguringAsChildOf for ORMBaseShape children
            </summary>
            <param name="child">The child being configured</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMBaseShape.GetComponentName">
            <summary>
            Display the name of the underlying element as the
            component name in the property grid.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMBaseShape.GetClassName">
            <summary>
            Display the class of the underlying element as the
            component name in the property grid.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMBaseShape.ModifyLuminosity(System.Int32,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
            <summary>
            Redirect all luminosity modification to the ORMDiagram.ModifyLuminosity
            algorithm
            </summary>
            <param name="currentLuminosity">The luminosity to modify</param>
            <param name="view">The view containing this item</param>
            <returns>Modified luminosity value</returns>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ORMBaseShape.ActiveShapeSubField">
            <summary>
            A shape field used to support Enter/Leave/Hover events on shape fields.
            Set to null after a MouseLeave, PendingShapeSubField.Token between an enter or
            move with no SubField set and a leave, and set to the last subfield otherwise.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ORMBaseShape.ActiveShapeField">
            <summary>
            Used with ActiveShapeSubField to give an accurate leave event.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMBaseShape.OnSubFieldMouseEnter(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField,Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs)">
            <summary>
            Fired when the mouse enters a subfield. This is called directly
            by OnMouseEnter.
            
            If HasSubFieldHighlighting is set, the default implementation automatically
            sets the HighlightedShapes of the active view to the DiagramItem representing
            this subfield. The subfield item will be invalidated and repainted. It is
            up to shapefield to check the HighlightedShapes collection and draw the subfield
            highlighting explicitly.
            
            Note that introducing a new ShapeSubField-derived base class would allow this
            to be called as the default implementation of an OnMouseEnter event on that class.
            However, this would need to be done at the framework level because ShapeSubField
            is already inherited from. Another alternative is to introduce an interface for
            the Enter/Leave/Hover events along with a stock implementation to help implement it.
            </summary>
            <param name="field">The parent ShapeField</param>
            <param name="subfield">The subfield being entered</param>
            <param name="e">Forwarded from the OnMouseEnter event</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMBaseShape.OnSubFieldMouseLeave(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField,Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs)">
             <summary>
             Fired when the mouse leaves a subfield. This is called directly
             by OnMouseLeave.
             
             If HasSubFieldHighlighting is set, the default implementation automatically
             removes the DiagramItem representing this subfield from the HighlightedShapes
              of the active view. The subfield item will be invalidated and repainted. It is
             up to shapefield to check the HighlightedShapes collection and draw the subfield
             highlighting explicitly.
            
             Note that introducing a new ShapeSubField-derived base class would allow this
             to be called as the default implementation of an OnMouseLeave event on that class.
             However, this would need to be done at the framework level because ShapeSubField
             is already inherited from. Another alternative is to introduce an interface for
             the Enter/Leave/Hover events along with a stock implementation to help implement it.
             </summary>
             <param name="field">The parent ShapeField</param>
             <param name="subfield">The subfield being left</param>
             <param name="e">Forwarded from the OnMouseLeave event</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMBaseShape.OnSubFieldMouseHover(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField,Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs)">
            <summary>
            Fired when the mouse hovers over a subfield. This is called directly
            by OnMouseHover.
            
            The default implementation is empty.
            
            Note that introducing a new ShapeSubField-derived base class would allow this
            to be called as the default implementation of an OnMouseHover event on that class.
            However, this would need to be done at the framework level because ShapeSubField
            is already inherited from. Another alternative is to introduce an interface for
            the Enter/Leave/Hover events along with a stock implementation to help implement it.
            </summary>
            <param name="field">The parent ShapeField</param>
            <param name="subfield">The subfield being hovered over</param>
            <param name="e">Forwarded from the OnMouseHover event</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMBaseShape.OnSubFieldMouseMove(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField,Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
            <summary>
            Translate OnSubFieldMouseMove events into OnSubFieldMouseEnter and OnSubFieldMouseMove
            events
            </summary>
            <param name="field"></param>
            <param name="subfield"></param>
            <param name="e"></param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMBaseShape.OnMouseMove(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
            <summary>
            Translate mouse events into OnSubFieldMouseEnter/OnSubFieldMouseLeave events
            </summary>
            <param name="e">DiagramMouseEventArgs</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMBaseShape.OnMouseEnter(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs)">
            <summary>
            Translate mouse events into OnSubFieldMouseEnter/OnSubFieldMouseLeave events
            </summary>
            <param name="e">DiagramPointEventArgs</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMBaseShape.OnMouseLeave(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs)">
            <summary>
            Translate mouse events into OnSubFieldMouseEnter/OnSubFieldMouseLeave events
            </summary>
            <param name="e">DiagramPointEventArgs</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMBaseShape.OnMouseHover(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs)">
            <summary>
            Translate mouse event into OnSubFieldMouseHover events
            </summary>
            <param name="e">DiagramPointEventArgs</param>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ORMBaseShape.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ORMBaseShape.classStyleSet">
            <summary>
            Style Set
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ORMBaseShape.shapeFields">
            <summary>
            Shape Fields
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMBaseShape.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ORMBaseShape.ContentSize">
            <summary>
            Override to modify the content size of an item.
            By default, the AutoResize function will use this
            size (if it is set) with no margins.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ORMBaseShape.HasShadow">
            <summary>
            Turn off the shadow by default
            </summary>
            <value>false</value>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ORMBaseShape.HasHighlighting">
            <summary>
            Turn off highlighting by default if sub field highlighting is on
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ORMBaseShape.HasSubFieldHighlighting">
            <summary>
            Turn on to get highlighting of subfields instead of the whole shape
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ORMBaseShape.HasSubFieldMouseEnterLeaveHover">
            <summary>
            Turn on to get Enter/Leave/Hover events on shape fields. Turning
            on sub shape field highlighting also means that MouseLeave and MouseEnter
            events are fired when the mouse moves between a ShapeSubField region
            and the normal ShapeNode region. This means that a MouseEnter can fire
            multiple times without leaving the object.
            
            The default implementation turns this on if HasSubFieldHighlighting
            is turned on.
            </summary>
            <value></value>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ORMBaseShape.ClassStyleSet">
            <summary>
            Style Set
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ORMBaseShape.ShapeFields">
            <summary>
            Shape Fields
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ORMBaseShape.PendingShapeSubField">
            <summary>
            A helper class to enable distinguishing between a null
            and a pending shape field.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.IStickyObject">
            <summary>
            Interface for implementing "Sticky" selections.  Presentation elements that are sticky
            will maintain their selected status when compatible objects are clicked.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.IStickyObject.StickyInitialize">
            <summary>
            Call this on an object when you're setting it as a StickyObject.  This method
            will go through the object's associated elements to perform any actions needed
            such as calling Invalidate().
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.IStickyObject.StickySelectable(Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Returns whether the Presentation Element that was passed in is selectable in the
            context of this StickyObject.  For example, when an external constraint is the
            active StickyObject, roles are selectable and objects are not.
            </summary>
            <returns>Whether the PresentationElement passed in is selectable in this StickyObject's context</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.IStickyObject.StickyRedraw">
            <summary>
            Needed to allow outside entities to tell the StickyObject to redraw itself and its children.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.IModelErrorActivation">
            <summary>
            Interface to implement on a shape element
            to support custom actions when an element is
            double-clicked in the error list.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.IModelErrorActivation.ActivateModelError(Northface.Tools.ORM.ObjectModel.ModelError)">
            <summary>
            Method called after a shape has been selected
            in the diagram
            </summary>
            <param name="error">The error being activated</param>
        </member>
        <member name="T:Northface.Tools.ORM.Shell.IORMCustomSerializedElement">
            <summary>
            The interface for getting element custom serialization information.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.IORMCustomSerializedElement.GetCustomSerializedChildElementInfo">
            <summary>
            Returns custom serialization information for child elements.
            </summary>
            <returns>Custom serialization information for child elements.</returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.IORMCustomSerializedElement.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
            <summary>
            Returns custom serialization information for attributes.
            </summary>
            <param name="attributeInfo">The attribute info.</param>
            <param name="rolePlayedInfo">If this is implemented on a ElementLink-derived class, then the
            played role is the role player containing the reference to the opposite role. Always null for a
            class element.</param>
            <returns>Custom serialization information for attributes.</returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.IORMCustomSerializedElement.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
            <summary>
            Returns custom serialization information for links.
            </summary>
            <param name="rolePlayedInfo">The role played.</param>
            <returns>Custom serialization information for links.</returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.IORMCustomSerializedElement.MapChildElement(System.String,System.String,System.String,System.String)">
            <summary>
            Attempt to map an element name to a custom serialized child element.
            </summary>
            <param name="elementNamespace">The full xml namespace of the element to match. Note
            that using prefixes is not robust, so the full namespace needs to be specified.</param>
            <param name="elementName">The local name of the element</param>
            <param name="containerNamespace">The full xml namespace of the container to match. A
            container element is an element with no id or ref parameter.</param>
            <param name="containerName">The local name of the container</param>
            <returns>ORMCustomSerializedElementMatch. Use the MatchStyle property to determine levels of success.</returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.IORMCustomSerializedElement.MapAttribute(System.String,System.String)">
            <summary>
            Attempt to map an attribute name to a custom serialized attribute
            for this element.
            </summary>
            <param name="xmlNamespace">The full xml namespace of the element to match. Note
            that using prefixes is not robust, so the full namespace needs to be specified.</param>
            <param name="attributeName">The local name of the attribute</param>
            <returns>A MetaAttributeGuid, or Guid.Empty. Use Guid.IsEmpty to test.</returns>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.IORMCustomSerializedElement.SupportedCustomSerializedOperations">
            <summary>
            Returns the supported operations.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.IORMCustomSerializedElement.CustomSerializedElementInfo">
            <summary>
            Returns custom serialization information for elements.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.IORMCustomSerializedElement.CustomSerializedChildRoleComparer">
            <summary>
            Get a comparer to sort custom role elements. Affects the element order
            for nested child (aggregated) and link (referenced) elements
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ExternalConstraintShape.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ExternalConstraintShape.ExternalConstraintBrush">
            <summary>
            A brush used to draw portions of mandatory constraints
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintShape.InitializeResources(Microsoft.VisualStudio.Modeling.Diagrams.StyleSet)">
            <summary>
            Initialize a pen and a brush for drawing the constraint
            outlines and contents.
            </summary>
            <param name="classStyleSet">StyleSet</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintShape.OnPaintShape(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs)">
            <summary>
            Draw the various constraint types
            </summary>
            <param name="e">DiagramPaintEventArgs</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintShape.InvalidateElementPresentation(Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Helper function for rules
            </summary>
            <param name="element">The model element to redraw</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintShape.ActivateModelError(Northface.Tools.ORM.ObjectModel.ModelError)">
            <summary>
            Implements IModelErrorActivation.ActivateModelError
            </summary>
            <param name="error">Activated model error</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintShape.StickyInitialize">
            <summary>
            Implements IStickyObject.StickyInitialize
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintShape.StickySelectable(Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Implements IStickyObject.StickySelectable
            </summary>
            <param name="mel"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintShape.StickyRedraw">
            <summary>
            Implements IStickyObject.StickySelectable
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintShape.Northface#Tools#ORM#ShapeModel#IStickyObject#StickyRedraw">
            <summary>
            Implements IStickyObject.StickySelectable
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintShape.OnDoubleClick(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs)">
            <summary>
            A mouse click event has occurred on this ExternalConstraintShape
            </summary>
            <param name="e">DiagramPointEventArgs</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintShape.AttachEventHandlers(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Attach event handlers to the store
            </summary>
            <param name="s"></param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintShape.DetachEventHandlers(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Detach event handlers from the store
            </summary>
            <param name="s"></param>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ExternalConstraintShape.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ExternalConstraintShape.classStyleSet">
            <summary>
            Style Set
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ExternalConstraintShape.shapeFields">
            <summary>
            Shape Fields
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintShape.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintShape.CreateExternalConstraintShape(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintShape.CreateAndInitializeExternalConstraintShape(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintShape.GetCustomSerializedChildElementInfo">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintShape.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintShape.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintShape.MapChildElement(System.String,System.String,System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintShape.MapAttribute(System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ExternalConstraintShape.DefaultSize">
            <summary>
            Set the default size for this object.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ExternalConstraintShape.ShapeGeometry">
            <summary>
            Constraints are drawn as circles
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ExternalConstraintShape.OutlinePenId">
            <summary>
            Use the sticky object pen to draw the outline
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ExternalConstraintShape.AssociatedConstraint">
            <summary>
            Get the typed model element associated with this shape
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ExternalConstraintShape.ClassStyleSet">
            <summary>
            Style Set
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ExternalConstraintShape.ShapeFields">
            <summary>
            Shape Fields
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ExternalConstraintShape.SupportedCustomSerializedOperations">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ExternalConstraintShape.CustomSerializedElementInfo">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ExternalConstraintShape.CustomSerializedChildRoleComparer">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.AutoSizeTextField">
            <summary>
            An extension of a TextField shape. The minimum size is recalculated
            according to the current shape contents.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.AutoSizeTextField.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.AutoSizeTextField.GetMinimumWidth(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
            <summary>
            Get the minimum width of the shape field for the current text.
            </summary>
            <param name="parentShape">ShapeElement</param>
            <returns>Width of current text</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.AutoSizeTextField.GetMinimumHeight(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
            <summary>
            Get the minimum height of the shape field for the current text.
            </summary>
            <param name="parentShape">ShapeElement</param>
            <returns>Width of current text</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.AutoSizeTextField.GetTextSize(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
            <summary>
            Get the size of the given text in the context of this parent shape.
            Helper function for GetMinimumWidth and GetMinimumHeight.
            </summary>
            <param name="parentShape">ShapeElement</param>
            <returns></returns>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.INotifyElementAdded">
            <summary>
            An interface for notifying when an element has been added
            to a Store.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.INotifyElementAdded.ElementAdded(Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            An element has been added to a store
            </summary>
            <param name="element">The newly added element</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.INotifyElementAdded.ElementAdded(Microsoft.VisualStudio.Modeling.ModelElement,System.Boolean)">
            <summary>
            An element has been added to a store
            </summary>
            <param name="element">The newly added element</param>
            <param name="addLinks">true if all links attached directly to the
            element should also be added. Defaults to false.</param>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.IDeserializationFixupListener">
            <summary>
            An interface to provide an extensible plugin point
            for managing deserialization fixups
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.IDeserializationFixupListener.HasElements(System.Int32,Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Test if this listeners needs to process
            elements for the given deserialization phase.
            </summary>
            <param name="phase">An integer pulled from the
            phase enum passed to the DeserializationFixupManager constructor.</param>
            <param name="store">The context store</param>
            <returns>true if this listener has elements for this phase</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.IDeserializationFixupListener.ProcessElements(System.Int32,Microsoft.VisualStudio.Modeling.Store,Northface.Tools.ORM.ObjectModel.INotifyElementAdded)">
            <summary>
            Process elements for the specific fixup phase. Care
            must be taken when implementing this method to support
            additional elements added to the set as a result of the fixups
            occuring while processing elements. The implementation does not
            need to process the new elements immediately (although this is an
            option) because the calling code will continue to call HasElements/ProcessElements
            for each phase until all listeners have no elements.
            </summary>
            <param name="phase">An integer pulled from the
            phase enum passed to the deserialization manager constructor.</param>
            <param name="store">The context store</param>
            <param name="notifyAdded">The listener to notify if elements are added during fixup</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.IDeserializationFixupListener.PhaseCompleted(System.Int32,Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            The phase is completed, meaning that all listeners currently return false from
            HasElements for this phase. PhaseCompleted should not be used to make additional
            model changes. It is provided as the correct time to make external fixups. For example,
            populate the task list after all model errors are in place.
            </summary>
            <param name="phase">An integer pulled from the
            phase enum passed to the deserialization manager constructor.</param>
            <param name="store">The context store</param>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.DeserializationFixupManager">
            <summary>
            A class to manage post-deserialization model fixup
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DeserializationFixupManager.#ctor(System.Type,Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            A class to manage the complex process of post-deserialization
            model fixup. Generally, rules are suspended during loading as
            it is difficult to enforce any complex rules when only portions
            off the model are in place. This means that there is no guarantee
            after a load sequence that the model is in workable valid state.
            The invalid state can occur because certain model elements are not
            serialized, or because of the Notepad factor (edits to the model file
            outside a sanctioned editor). Post-deserialization fixups allow different
            elements in the model to bring the model up to a consistent state
            so that all subsequent edits run against a model in a known state.
            </summary>
            <param name="phaseEnum">An enum with a list of phase
            values. The values are sorted (by value, not by member order in
            the enum) and are then interpreted by each listener. If derived
            models need to add values, then they should include all values
            from the original enums, and add 'phases' with new numbers. Enum values
            should be entered with plenty of space between them to facilitate
            derived models that need to add serialization phases.</param>
            <param name="store">The store being deserialized to.</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DeserializationFixupManager.Northface#Tools#ORM#ObjectModel#INotifyElementAdded#ElementAdded(Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Note that this matches the signature for the
            System.VisualStudio.Modeling.Diagnostics.XmlSerialization.Deserialized
            delegate, so can be used as the callback point for the
            Microsoft-provided IMS deserialization engine.
            </summary>
            <param name="element">The newly added element</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DeserializationFixupManager.ElementAdded(Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Implements INotifyElementAdded.ElementAdded(ModelElement).
            </summary>
            <param name="element">The newly added element</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DeserializationFixupManager.ElementAdded(Microsoft.VisualStudio.Modeling.ModelElement,System.Boolean)">
            <summary>
            Implements INotifyElementAdded.ElementAdded(ModelElement, bool)
            </summary>
            <param name="element">The newly added element</param>
            <param name="addLinks">true if all links attached directly to the
            element should also be added. Defaults to false.</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DeserializationFixupManager.AddListener(Northface.Tools.ORM.ObjectModel.IDeserializationFixupListener)">
            <summary>
            Add a deserialization fixup listener
            </summary>
            <param name="listener">The listener to add</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DeserializationFixupManager.DeserializationComplete">
            <summary>
            Deserialization has been completed. Proceed with the
            fixup process.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.DeserializationFixupListener`1">
            <summary>
            A base implementation of a fixup listener that enables
            listening for a given type and phase of the deserialization
            fixup process.
            </summary>
            <typeparam name="ElementType">The type of element to watch out for.
            Will frequently be an interface.</typeparam>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DeserializationFixupListener`1.#ctor(System.Int32)">
            <summary>
            Create a fixup listener for the specified deserialization phase
            </summary>
            <param name="phase">The phase to watch for. All other phase
            requests return false.</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DeserializationFixupListener`1.HasElements(System.Int32,Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Implements IDeserializationFixupListener.HasElements
            </summary>
            <param name="phase">An integer pulled from the
            phase enum passed to the DeserializationFixupManager constructor.</param>
            <param name="store">The context store</param>
            <returns>True if ProcessElements should be called for this phase</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DeserializationFixupListener`1.ProcessElements(System.Int32,Microsoft.VisualStudio.Modeling.Store,Northface.Tools.ORM.ObjectModel.INotifyElementAdded)">
            <summary>
            Implements IDeserializationFixupListener.ProcessElements
            </summary>
            <param name="phase">An integer pulled from the
            phase enum passed to the DeserializationFixupManager constructor.</param>
            <param name="store">The context store</param>
            <param name="notifyAdded">The listener to notify if elements are added during fixup</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DeserializationFixupListener`1.PhaseCompleted(System.Int32,Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Implements IDeserializationFixupListener.PhaseCompleted. The
            default implementation does nothing.
            </summary>
            <param name="phase">An integer pulled from the
            phase enum passed to the DeserializationFixupManager constructor.</param>
            <param name="store">The context store</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DeserializationFixupListener`1.ElementAdded(Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Implements INotifyElementAdded.ElementAdded. Elements will
            be added if the ModelElement has a type matching ElementType
            type parameter
            </summary>
            <param name="element">The element to add</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DeserializationFixupListener`1.ElementAdded(Microsoft.VisualStudio.Modeling.ModelElement,System.Boolean)">
            <summary>
            Implements INotifyElementAdded.ElementAdded(ModelElement, bool).
            The default implementation throws a NotImplementedException.
            </summary>
            <param name="element">The newly added element</param>
            <param name="addLinks">true if all links attached directly to the
            element should also be added. Defaults to false.</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DeserializationFixupListener`1.ProcessElement(`0,Microsoft.VisualStudio.Modeling.Store,Northface.Tools.ORM.ObjectModel.INotifyElementAdded)">
            <summary>
            Override this method to process an element
            for this phase.
            </summary>
            <param name="element">A typed element. The element
            is always castable to a model element</param>
            <param name="store">The context store</param>
            <param name="notifyAdded">The listener to notify if elements are added during fixup</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DeserializationFixupListener`1.PhaseCompleted(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            The phase is complete. Default implementation does nothing.
            </summary>
            <param name="store">The context store</param>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.CustomReferenceModeEditor">
            <summary>
            Custom reference mode editor.
            </summary>
            <summary>
            Customer Reference mode editor usercontrol
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CustomReferenceModeEditor.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CustomReferenceModeEditor.SetModel(Northface.Tools.ORM.ObjectModel.ORMModel)">
            <summary>
            Sets the Reference modes
            </summary>
            <param name="model"></param>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.CustomReferenceModeEditor.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CustomReferenceModeEditor.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CustomReferenceModeEditor.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.CustomReferenceModeEditor.TreeControl">
            <summary>
            Get the tree control for this editor
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations">
            <summary>
            Supported operations for element custom serialization.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations.None">
            <summary>
            No operations are supported.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations.ChildElementInfo">
            <summary>
            Child element information is supported.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations.ElementInfo">
            <summary>
            Custom element information is supported.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations.AttributeInfo">
            <summary>
            Custom attribute information is supported.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations.LinkInfo">
            <summary>
            Custom link information is supported.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations.CustomSortChildRoles">
            <summary>
            The CustomSerializedChildRoleComparer method is supported
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations.MixedTypedAttributes">
            <summary>
            Set if some of the attributes are written as elements and others are written as attributes.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.Shell.ORMCustomSerializedElementWriteStyle">
            <summary>
            Write style for element custom serialization.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMCustomSerializedElementWriteStyle.NotWritten">
            <summary>
            Dont write.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMCustomSerializedElementWriteStyle.Element">
            <summary>
            Write as an element.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMCustomSerializedElementWriteStyle.DoubleTaggedElement">
            <summary>
            Write as a double tagged element.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMCustomSerializedElementWriteStyle.PrimaryLinkElement">
            <summary>
            Used for links. Write as an element, but write the link
            id, attributes, and referencing child elements at this location.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeWriteStyle">
            <summary>
            Write style for attribute custom serialization.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeWriteStyle.NotWritten">
            <summary>
            Dont write.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeWriteStyle.Attribute">
            <summary>
            Write as an attribute.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeWriteStyle.Element">
            <summary>
            Write as an element.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeWriteStyle.DoubleTaggedElement">
            <summary>
            Write as a double tagged element.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.Shell.ORMCustomSerializedElementMatchStyle">
            <summary>
            An enum used for deserialization to determine if
            an element name and namespace is recognized by a
            custom serialized element.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMCustomSerializedElementMatchStyle.None">
            <summary>
            The element is not recognized, don't process it
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMCustomSerializedElementMatchStyle.Attribute">
            <summary>
            The element matched an attribute written out as an element.
            The DoubleTageName property (if it is not null) specifies the
            double tag name (the tag inside this element where the attribute
            data is stored). The guid identifying the MetaAttributeInfo is
            returned in the Guid property.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMCustomSerializedElementMatchStyle.SingleOppositeMetaRole">
            <summary>
            The element matches a singled contained role. The guid identifying
            the MetaRoleInfo is returned in the SingleOppositeMetaRoleGuid property.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMCustomSerializedElementMatchStyle.MultipleOppositeMetaRoles">
            <summary>
            The element matches more than one contained role. The guids identifying
            the roles are returned in the OppositeMetaRoleGuidCollection property
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.Shell.ORMCustomSerializedInfo">
            <summary>
            Custom serialization information.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMCustomSerializedInfo.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMCustomSerializedInfo.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Main Constructor
            </summary>
            <param name="customPrefix">The custom prefix to use.</param>
            <param name="customName">The custom name to use.</param>
            <param name="customNamespace">The custom namespace to use.</param>
            <param name="doubleTagName">The name of the double tag.</param>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMCustomSerializedInfo.CustomPrefix">
            <summary>
            The custom prefix to use.
            </summary>
            <value>The custom prefix to use.</value>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMCustomSerializedInfo.CustomName">
            <summary>
            The custom name to use.
            </summary>
            <value>The custom name to use.</value>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMCustomSerializedInfo.CustomNamespace">
            <summary>
            The custom namespace to use.
            </summary>
            <value>The custom namespace to use.</value>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMCustomSerializedInfo.DoubleTagName">
            <summary>
            The name of the double tag.
            </summary>
            <value>The name of the double tag.</value>
        </member>
        <member name="T:Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo">
            <summary>
            Custom serialization information for elements.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo.#ctor(Northface.Tools.ORM.Shell.ORMCustomSerializedElementWriteStyle)">
            <summary>
            Constructor
            </summary>
            <param name="writeStyle">The style to use when writing.</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo.#ctor(System.String,System.String,System.String,Northface.Tools.ORM.Shell.ORMCustomSerializedElementWriteStyle,System.String)">
            <summary>
            Main Constructor
            </summary>
            <param name="customPrefix">The custom prefix to use.</param>
            <param name="customName">The custom name to use.</param>
            <param name="customNamespace">The custom namespace to use.</param>
            <param name="writeStyle">The style to use when writting.</param>
            <param name="doubleTagName">The name of the double tag.</param>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo.Default">
            <summary>
            Default ORMCustomSerializedElementInfo
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo.WriteStyle">
            <summary>
            The style to use when writting.
            </summary>
            <value>The style to use when writting.</value>
        </member>
        <member name="T:Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo">
            <summary>
            Custom serialization information for attributes.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo.#ctor(Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeWriteStyle)">
            <summary>
            Constructor
            </summary>
            <param name="writeStyle">The style to use when writting.</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo.#ctor(System.String,System.String,System.String,System.Boolean,Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeWriteStyle,System.String)">
            <summary>
            Main Constructor
            </summary>
            <param name="customPrefix">The custom prefix to use.</param>
            <param name="customName">The custom name to use.</param>
            <param name="customNamespace">The custom namespace to use.</param>
            <param name="writeCustomStorage">true to write when custom storage.</param>
            <param name="writeStyle">The style to use when writting.</param>
            <param name="doubleTagName">The name of the double tag.</param>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo.Default">
            <summary>
            Default ORMCustomSerializedAttributeInfo
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo.WriteCustomStorage">
            <summary>
            true to write when custom storage.
            </summary>
            <value>true to write when custom storage.</value>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo.WriteStyle">
            <summary>
            The style to use when writting.
            </summary>
            <value>The style to use when writting.</value>
        </member>
        <member name="T:Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo">
            <summary>
            Custom serialization information for child elements.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo.#ctor(System.String,System.Guid[])">
            <summary>
            Constructor
            </summary>
            <param name="customName">The custom name to use.</param>
            <param name="childGuids">The child element guids.</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo.#ctor(System.String,System.String,System.String,Northface.Tools.ORM.Shell.ORMCustomSerializedElementWriteStyle,System.String,System.Guid[])">
            <summary>
            Main Constructor
            </summary>
            <param name="customPrefix">The custom prefix to use.</param>
            <param name="customName">The custom name to use.</param>
            <param name="customNamespace">The custom namespace to use.</param>
            <param name="writeStyle">The style to use when writting.</param>
            <param name="doubleTagName">The name of the double tag.</param>
            <param name="childGuids">The child element guids.</param>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo.Default">
            <summary>
            Default ORMCustomSerializedChildElementInfo
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo.ContainsGuid(System.Guid)">
            <summary>
            Test if the list of child elements contains the specified guid
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.Shell.ORMCustomSerializedElementMatch">
            <summary>
            Data returned by IORMCustomSerializedElement.MapElementName.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMCustomSerializedElementMatch.InitializeAttribute(System.Guid,System.String)">
            <summary>
            The element was recognized as a meta attribute.
            </summary>
            <param name="metaAttributeGuid">The guid identifying the meta attribute</param>
            <param name="doubleTagName">the name of the double tag, if any</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMCustomSerializedElementMatch.InitializeRoles(System.Guid[])">
            <summary>
            The element was recognized as an opposite role player
            </summary>
            <param name="oppositeMetaRoleGuids">1 or more opposite meta role guids</param>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMCustomSerializedElementMatch.MetaAttributeGuid">
            <summary>
            The guid identifying the meta attribute. Valid for a match
            style of Attribute.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMCustomSerializedElementMatch.SingleOppositeMetaRoleGuid">
            <summary>
            The guid identifying the opposite meta role if there is only
            one matching meta role. Valid for a match style of SingleOppositeMetaRole.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMCustomSerializedElementMatch.OppositeMetaRoleGuidCollection">
            <summary>
            The guids identifying multiple opposite meta roles. Valid for a match
            style of MultipleOppositeMetaRoles.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMCustomSerializedElementMatch.MatchStyle">
            <summary>
            The type of element match
            </summary>
            <value>ORMCustomSerializedElementMatchStyle</value>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMCustomSerializedElementMatch.DoubleTagName">
            <summary>
            The double tag name for an attribute. null if the MatchStyle
            is not Attribute or if there is no double tag for this element.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.Shell.IORMCustomSerializedMetaModel">
            <summary>
            The interface for getting custom element namespaces.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.IORMCustomSerializedMetaModel.GetCustomElementNamespaces">
            <summary>
            Return all namespaces used by custom elements in this model.
            </summary>
            <returns>Custom element namespaces. return value [*, 0] contains
            the prefix and [*, 1] contains the associated xml namespace</returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.IORMCustomSerializedMetaModel.ShouldSerializeMetaClass(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.MetaClassInfo)">
            <summary>
            Determine if a class or relationship should be serialized. This allows
            the serialization engine to do a meta-level sanity check before retrieving
            elements, and reduces the number of 'NotWritten' elements in the
            serialization specification file.
            </summary>
            <param name="store">The store to check</param>
            <param name="classInfo">The class or relationship to test</param>
            <returns>true if the element should be serialized</returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.IORMCustomSerializedMetaModel.MapRootElement(System.String,System.String)">
            <summary>
            Map an xml namespace name and element name to a meta class guid
            </summary>
            <param name="xmlNamespace">The namespace of a top-level element (directly
            inside the ORM2 tag)</param>
            <param name="elementName">The name of the element to match</param>
            <returns>The guid of a MetaClassInfo, or Guid.Empty if not recognized</returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.IORMCustomSerializedMetaModel.MapClassName(System.String,System.String)">
            <summary>
            Map an xml namespace name and element name to a meta class guid
            </summary>
            <param name="xmlNamespace">The namespace of the xml element</param>
            <param name="elementName">The name of the element to match</param>
            <returns>A meta class guid, or Guid.Empty if the name is not recognized</returns>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.IORMCustomSerializedMetaModel.DefaultElementPrefix">
            <summary>
            Return the default element prefix for elements where the
            prefix is not specified
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.Shell.ORMSerializer">
             <summary>
            New Serialization
             </summary>
            <summary>
            Read/write .orm files leveraging the default IMS serializer
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMSerializer.RootXmlPrefix">
            <summary>
            The standard prefix for the prefix used on the root node of the ORM document
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMSerializer.RootXmlElementName">
            <summary>
            The tag name for the element used as the root node of the ORM document
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMSerializer.RootXmlNamespace">
            <summary>
            The namespace for the root node of the ORM document
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMSerializer.MajorVersion">
            <summary>
            Major Version of File Format
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMSerializer.MinorVersion">
            <summary>
            Minor Version of File Format
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMSerializer.AttributeWriteStylePriority(Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeWriteStyle)">
            <summary>
            Used for sorting.
            </summary>
            <param name="writeStyle">An attribute write style.</param>
            <returns>A number to sort with.</returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMSerializer.ToXML(System.Guid)">
            <summary>
            Used for serializing attributes.
            </summary>
            <param name="guid">The GUID to convert.</param>
            <returns>An XML encoded string.</returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMSerializer.ToXML(System.Object,System.Boolean)">
            <summary>
            Used for serializing attributes.
            </summary>
            <param name="value">The attribute's value.</param>
            <param name="typeConvert">true to type convert the value (value is an object type).</param>
            <returns>An XML encoded string.</returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMSerializer.FindGuid(Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[],System.Guid)">
            <summary>
            Used for serializing child elements.
            </summary>
            <param name="childElementInfo">The child element info to search.</param>
            <param name="guid">The GUID to find.</param>
            <returns>An index or -1.</returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMSerializer.SortAttributes(Northface.Tools.ORM.Shell.IORMCustomSerializedElement,Microsoft.VisualStudio.Modeling.MetaRoleInfo,System.Collections.IList@)">
            <summary>
            Sorts mixed typed attributes.
            </summary>
            <param name="customElement">The element.</param>
            <param name="rolePlayedInfo">The role being played.</param>
            <param name="attributes">The element's attributes.</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMSerializer.WriteCustomizedStartElement(System.Xml.XmlWriter,Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo,System.String,System.String)">
            <summary>
            Writes a customized begin element tag.
            </summary>
            <param name="file">The file to write to.</param>
            <param name="customInfo">The customized tag info.</param>
            <param name="defaultPrefix">The default prefix.</param>
            <param name="defaultName">The default tag name.</param>
            <returns>true if the begin element tag was written.</returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMSerializer.WriteCustomizedEndElement(System.Xml.XmlWriter,Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo)">
            <summary>
            Writes a customized end element tag.
            </summary>
            <param name="file">The file to write to.</param>
            <param name="customInfo">The customized tag info.</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMSerializer.GetParentModel(Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Find the parent model for this element.
            </summary>
            <param name="element">A ModelElement being serialized</param>
            <returns>IORMCustomSerializedMetaModel, or null</returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMSerializer.ShouldSerializeMetaRole(Northface.Tools.ORM.Shell.IORMCustomSerializedMetaModel,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
            <summary>
            Determine based on the type of role and opposite role player if any elements of
            the given type should be serialized.
            </summary>
            <param name="parentModel">The parent model of an element</param>
            <param name="role">The role played</param>
            <returns>true if serialization should continue</returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMSerializer.DefaultElementPrefix(Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Get the default prefix for an element from the meta model containing the element
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMSerializer.SerializeAttribute(System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.ModelElement,Northface.Tools.ORM.Shell.IORMCustomSerializedElement,Microsoft.VisualStudio.Modeling.MetaRoleInfo,Microsoft.VisualStudio.Modeling.MetaAttributeInfo,System.Boolean)">
            <summary>
            Serializes an attribute.
            </summary>
            <param name="file">The file to write to.</param>
            <param name="element">The element.</param>
            <param name="customElement">The element as a custom element.</param>
            <param name="rolePlayedInfo">The role being played.</param>
            <param name="attribute">The element's attribute to write.</param>
            <param name="isCustomAttribute">true if the attribute has custom info.</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMSerializer.SerializeAttributes(System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.ModelElement,Northface.Tools.ORM.Shell.IORMCustomSerializedElement,Microsoft.VisualStudio.Modeling.MetaRoleInfo,System.Collections.IList,System.Boolean)">
            <summary>
            Serializes all attributes of an element.
            </summary>
            <param name="file">The file to write to.</param>
            <param name="element">The element.</param>
            <param name="customElement">The element as a custom element.</param>
            <param name="rolePlayedInfo">The role being played.</param>
            <param name="attributes">The element's attributes.</param>
            <param name="hasCustomAttributes">true if the element has attributes with custom info.</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMSerializer.SerializeLink(System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.ElementLink,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
            <summary>
            Serializes a link.
            </summary>
            <param name="file">The file to write to.</param>
            <param name="link">The link.</param>
            <param name="rolePlayer">The role player.</param>
            <param name="rolePlayedInfo">The role being played.</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMSerializer.SerializeChildElement(System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.MetaRoleInfo,Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo,System.String,System.String)">
            <summary>
            Serializes a child element. (usually a Collection element)
            </summary>
            <param name="file">The file to write to.</param>
            <param name="childElement">The child element.</param>
            <param name="rolePlayedInfo">The role being played.</param>
            <param name="customInfo">The custom element info.</param>
            <param name="defaultPrefix">The default prefix.</param>
            <param name="defaultName">The default element name.</param>
            <returns>true if the begin element tag was written.</returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMSerializer.SerializeChildElement(System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.MetaRoleInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo,Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo,System.String,System.Boolean)">
            <summary>
            Serializes a child element.
            </summary>
            <param name="file">The file to write to.</param>
            <param name="childElement">The child element.</param>
            <param name="rolePlayedInfo">The role being played.</param>
            <param name="oppositeRoleInfo">The opposite role being played.</param>
            <param name="customInfo">The custom element info.</param>
            <param name="defaultPrefix">The default prefix.</param>
            <param name="writeBeginElement">true to write the begin element tag.</param>
            <returns>true if the begin element tag was written.</returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMSerializer.SerializeElement(System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.ModelElement,Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo,System.String,System.String@)">
            <summary>
            Recursivly serializes elements.
            </summary>
            <param name="file">The file to write to.</param>
            <param name="element">The element.</param>
            <param name="containerCustomInfo">The container element's custom serialization information.</param>
            <param name="containerPrefix">The container element's prefix.</param>
            <param name="containerName">The container element's name.</param>
            <returns>false if the container element was not written.</returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMSerializer.SerializeElement(System.Xml.XmlWriter,Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Recursivly serializes elements.
            </summary>
            <param name="file">The file to write to.</param>
            <param name="element">The element.</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMSerializer.Save2(System.IO.Stream)">
            <summary>
            New XML Serialization
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMSerializer.Load2(System.IO.Stream,Northface.Tools.ORM.ObjectModel.DeserializationFixupManager)">
            <summary>
            Load the stream contents into the current store
            </summary>
            <param name="stream">An initialized stream</param>
            <param name="fixupManager">Class used to perfom fixup operations
            after the load is complete.</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMSerializer.ProcessClassElement(System.Xml.XmlReader,Northface.Tools.ORM.Shell.IORMCustomSerializedMetaModel,Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Process a newly created element. The element will have an
            Id set only. The id and ref attributes should be ignored.
            </summary>
            <param name="reader">Reader set to the root node</param>
            <param name="customModel">The custom serialized meta model</param>
            <param name="element">Newly created element</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMSerializer.SetAttributeValue(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.MetaAttributeInfo,System.String)">
            <summary>
            Set the value of the specified attribute on the model element
            </summary>
            <param name="element">The element to modify</param>
            <param name="attributeInfo">The meta attribute to set</param>
            <param name="stringValue">The new value of the attribute</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMSerializer.CreateElementLink(System.String,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
            <summary>
            Create an element link after verifying that the link needs to be created
            </summary>
            <param name="idValue">The value of the id for the link, or null</param>
            <param name="rolePlayer">The near role player</param>
            <param name="oppositeRolePlayer">The opposite role player</param>
            <param name="oppositeMetaRoleInfo">The opposite meta role</param>
            <returns>The newly created element link</returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMSerializer.CreateElement(System.String,Microsoft.VisualStudio.Modeling.MetaClassInfo,System.Guid)">
            <summary>
            Create a class element with the id specified in the reader
            </summary>
            <param name="idValue">The id for this element in the xml file</param>
            <param name="metaClassInfo">The meta class info of the element to create. If null,
            the metaClassId is used to find the class info</param>
            <param name="metaClassId">The identifier for the class</param>
            <returns>A new ModelElement</returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMSerializer.CreateElement(System.String,Microsoft.VisualStudio.Modeling.MetaClassInfo,System.Guid,System.Boolean@)">
            <summary>
            Create a class element with the id specified in the reader
            </summary>
            <param name="idValue">The id for this element in the xml file</param>
            <param name="metaClassInfo">The meta class info of the element to create. If null,
            the metaClassId is used to find the class info</param>
            <param name="metaClassId">The identifier for the class</param>
            <param name="isNewElement">true if the element is actually created, as opposed
            to being identified as an existing element</param>
            <returns>A new ModelElement</returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMSerializer.GetElementId(System.String)">
            <summary>
            Parse or generate a guid from the passed in identifier
            </summary>
            <param name="id">A string taken from an id or ref tag in the xml file. If the
            value cannot be interpreted as a guid then generated a new guid and keep a map
            from this name to the generated guid</param>
            <returns>A non-empty Guid</returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMSerializer.PassEndElement(System.Xml.XmlReader)">
            <summary>
            Move the reader to the node immediately after the end element corresponding to the current open element
            </summary>
            <param name="reader">The XmlReader to advance</param>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMSerializer.myRuleSuspendCount">
            <summary>
            Ref Counter for suspending/resuming Modeling Rule Engine
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMSerializer.mySeenDiagram">
            <summary>
            Track when we've seen a diagram. We only want
            to record SubjectHasPresentation elements after
            a diagram to keep the object and shape portions
            of the model separate.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMSerializer.myStore">
            <summary>
            Current store object. Set in constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMSerializer.#ctor(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Create a serializer on the given store
            </summary>
            <param name="store">Store instance</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMSerializer.Save(System.IO.Stream)">
            <summary>
            Save the contents of the current store to a stream
            </summary>
            <param name="stream">An initialized stream</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMSerializer.ShouldSerialize(Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Determine if an element should be serialized
            </summary>
            <param name="modelElement">Element to test</param>
            <returns>true</returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMSerializer.FormatXml(System.IO.TextReader,System.Xml.XmlTextWriter)">
            <summary>
            Get the formatting the way we want it. Getting it consistent
            via Xsl is very difficult
            </summary>
            <param name="textReader">The xml to format</param>
            <param name="writer">The writer for the new Xml. Processing instructions should be written before this call.</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMSerializer.Load(System.IO.Stream,Northface.Tools.ORM.ObjectModel.DeserializationFixupManager)">
            <summary>
            Load the stream contents into the current store
            </summary>
            <param name="stream">An initialized stream</param>
            <param name="fixupManager">Class used to perfom fixup operations
            after the load is complete.</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMSerializer.UpgradeFileFormat(System.IO.Stream@,System.Int32@,System.Int32@)">
            <summary>
            Called to upgrade an old file format.
            </summary>
            <param name="stream"></param>
            <param name="majorVersion"></param>
            <param name="minorVersion"></param>
            <returns></returns>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMSerializer.RulesSuspended">
            <summary>
            Block rules on store during serialization/deserialization
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMSerializer.RootElements">
            <summary>
            Generate an array of all top level model elements
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.RootType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.RootType.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.RootType.IsExternalMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RootType.ToString">
            <summary>
            Return a simple name instead of a name decorated with the type (the
            default for a ModelElement). This is the easiest way to display
            clean names in the property grid when we reference properties.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.RootType.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.RootType.IsExternalMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.RootType.rootTypeIsExternalFieldHandler">
            <summary>
            FieldHandler for RootType.IsExternal field
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RootType.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.RootType.IsExternal">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.RootType.RootTypeIsExternalFieldHandler">
            <summary>
            Implement the field handler for RootType.IsExternal
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RootType.RootTypeIsExternalFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RootType.RootTypeIsExternalFieldHandler.GetValue(Northface.Tools.ORM.ObjectModel.RootType)">
            <summary>
            Gets the value of the attribute as it exists in the element
            </summary>
            <param name="element">the RootType</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RootType.RootTypeIsExternalFieldHandler.SetValue(Northface.Tools.ORM.ObjectModel.RootType,System.Boolean,Microsoft.VisualStudio.Modeling.CommandFactory,System.Boolean,System.Boolean@)">
            <summary>
            Sets the value into the element
            </summary>
            <param name="element">the element</param>
            <param name="value">new value</param>
            <param name="commandFactory">the command factory for this change</param>
            <param name="allowDuplicates">allow duplicate value to continue to fire rules and events</param>
            <param name="oldValue">the old value before the change</param>
            <returns>true if the value actually changed</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.RootType.RootTypeIsExternalFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the RootType.IsExternal field handler
            </summary>
            <value>RootTypeIsExternalFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.RootType.RootTypeIsExternalFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the RootType.IsExternal field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ResourceStrings">
            <summary>
            A constant list of strings corresponding to resource identifiers
            in the resource files for all models. Any resource id referenced
            directly in non-spit code should be duplicated here.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.ToolboxEntityTypeItemId">
            <summary>
            The identifier for the EntityType toolbox item
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.ToolboxValueTypeItemId">
            <summary>
            The identifier for the ValueType toolbox item
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.ToolboxUnaryFactTypeItemId">
            <summary>
            The identifier for the UnaryFactType toolbox item
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.ToolboxBinaryFactTypeItemId">
            <summary>
            The identifier for the BinaryFactType toolbox item
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.ToolboxTernaryFactTypeItemId">
            <summary>
            The identifier for the TernaryFactType toolbox item
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.ToolboxExternalUniquenessConstraintItemId">
            <summary>
            The identifier for an ExternalUniquenessConstraint toolbox item
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.ToolboxInternalUniquenessConstraintItemId">
            <summary>
            The identifier for an InternalUniquenessConstraint toolbox item
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.ToolboxExclusionConstraintItemId">
            <summary>
            The identifier for an ExclusionConstraint toolbox item
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.ToolboxInclusiveOrConstraintItemId">
            <summary>
            The identifier for an InclusiveOrConstraint toolbox item
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.ToolboxExclusiveOrConstraintItemId">
            <summary>
            The identifier for an ExclusiveOrConstraint toolbox item
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.ToolboxRoleConnectorItemId">
            <summary>
            The identifier for the RoleConnector toolbox item
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.ToolboxFrequencyConstraintItemId">
            <summary>
            The identifier for a FrequencyConstraint toolbox item
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.ToolboxSubsetConstraintItemId">
            <summary>
            The identifier for an SubsetConstraint toolbox item
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.ToolboxEqualityConstraintItemId">
            <summary>
            The identifier for an EqualityConstraint toolbox item
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.ToolboxExternalConstraintConnectorItemId">
            <summary>
            The identifier for an ExternalConstraintConnector toolbox item
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.ToolboxSubtypeConnectorItemId">
            <summary>
            The identifier for an SubtypeConnector toolbox item
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.ToolboxInternalUniquenessConstraintConnectorItemId">
            <summary>
            The identifier for an InternalUniquenessConstraintConnector toolbox item
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.OptionsPageCategoryAppearanceId">
            <summary>
            Category name for options page
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.OptionsPageCategoryDataTypesId">
            <summary>
            Category name for options page
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.OptionsPagePropertyDataTypeDescriptionId">
            <summary>
            Display Name of the Role Name Display option
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.OptionsPagePropertyDataTypeDisplayNameId">
            <summary>
            Display Name of the Role Name Display option
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.OptionsPagePropertyObjectTypeShapeDescriptionId">
            <summary>
            Description of the object type shape
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.OptionsPagePropertyObjectTypeShapeDisplayNameId">
            <summary>
            Display name of the object type shape
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.OptionsPagePropertyObjectifiedShapeDescriptionId">
            <summary>
            Description of the objectified fact shape
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.OptionsPagePropertyObjectifiedShapeDisplayNameId">
            <summary>
            Display name of the objectified fact shape
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.OptionsPagePropertyMandatoryDotDescriptionId">
            <summary>
            Description of the Mandatory Dot placement
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.OptionsPagePropertyMandatoryDotDisplayNameId">
            <summary>
            Display name of the Mandatory Dot placement
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.OptionsPagePropertyRoleNameDisplayDescriptionId">
            <summary>
            Description of the Role Name Display option
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.OptionsPagePropertyRoleNameDisplayDisplayNameId">
            <summary>
            Display Name of the Role Name Display option
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.FactEditorColorsObjectNameId">
            <summary>
            Display Name of the Object Name color
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.FactEditorColorsReferenceModeNameId">
            <summary>
            Display Name of the Reference Mode Name color
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.FactEditorColorsPredicateTextId">
            <summary>
            Display Name of the Predicate Text color
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.FactEditorColorsDelimiterId">
            <summary>
            Display Name of the Delimiter color
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.FontsAndColorsCategoryNameId">
            <summary>
            Display name for the ORM Designer fonts and colors category
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.FontsAndColorsConstraintColorId">
            <summary>
            Display name for the color used to draw an ORM constraint
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.FontsAndColorsConstraintErrorColorId">
            <summary>
            Display name for the color used to draw an ORM constraint
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.FontsAndColorsActiveConstraintColorId">
            <summary>
            Display name for the color used to draw an active ORM constraint and associated roles
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.FontsAndColorsRolePickerColorId">
            <summary>
            Display name for the color used to draw the constraint box for role sequence editing
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.FactEditorColorsQuantifierId">
            <summary>
            Display Name of the Quantifier color
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ResourceStrings.GetOptionsPageString(System.String)">
            <summary>
            The category name to display on the options pages
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ResourceStrings.GetColorNameString(System.String)">
            <summary>
            The localized string to display on Fonts and Colors setting
            for the ORM Designer in the options page.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ToolboxDefaultTabName">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ValueType">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.EntityType">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.FactType">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.SubtypeFact">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ObjectifiedFactType">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ReadingType">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.RolePlayerPickerNullItemText">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.NestedFactTypePickerNullItemText">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.NestingTypePickerNullItemText">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.EntityTypeDefaultNamePattern">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.PortableDataTypeUnspecified">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.PortableDataTypeTextFixedLength">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.PortableDataTypeTextVariableLength">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.PortableDataTypeTextLargeLength">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.PortableDataTypeNumericSignedInteger">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.PortableDataTypeNumericUnsignedInteger">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.PortableDataTypeNumericAutoCounter">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.PortableDataTypeNumericFloatingPoint">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.PortableDataTypeNumericDecimal">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.PortableDataTypeNumericMoney">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.PortableDataTypeRawDataFixedLength">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.PortableDataTypeRawDataVariableLength">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.PortableDataTypeRawDataLargeLength">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.PortableDataTypeRawDataPicture">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.PortableDataTypeRawDataOleObject">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.PortableDataTypeTemporalAutoTimestamp">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.PortableDataTypeTemporalTime">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.PortableDataTypeTemporalDate">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.PortableDataTypeTemporalDateAndTime">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.PortableDataTypeLogicalTrueOrFalse">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.PortableDataTypeLogicalYesOrNo">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.PortableDataTypeOtherRowId">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.PortableDataTypeOtherObjectId">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ValueTypeDefaultNamePattern">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.FactTypeDefaultNamePattern">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.SubtypeFactDefaultNamePattern">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.SubtypeFactPredicateInverseReading">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.SubtypeFactPredicateReading">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.SubtypeFactComponentNameFormat">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ExternalConstraintConnectActionInstructions">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ExternalConstraintConnectActionTransactionName">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.FrequencyConstraintMinimumFormatString">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.FrequencyConstraintBetweenFormatString">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.InternalUniquenessConstraintConnectActionInstructions">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.InternalUniquenessConstraintConnectActionTransactionName">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.InsertRoleTransactionName">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.RoleConnectActionTransactionName">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.SubtypeConnectActionTransactionName">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.OptionsPageChangeTransactionName">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.DeleteRoleSequenceTransactionName">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.MoveRoleSequenceDownTransactionName">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.MoveRoleSequenceUpTransactionName">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.InterpretFactEditorLineTransactionName">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelBrowserWindowTitle">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelExceptionReadingIsPrimaryToFalse">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelExceptionFactAddReadingInvalidReadingText">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelExceptionReadingTextChangeInvalid">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelErrorConstraintHasTooFewRoleSequencesText">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelErrorConstraintHasTooManyRoleSequencesText">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelErrorConstraintExternalConstraintArityMismatch">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelErrorModelHasDuplicateConstraintNames">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelErrorModelHasDuplicateFactTypeNames">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelErrorModelHasDuplicateObjectTypeNames">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelExceptionNameAlreadyUsedByModel">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelExceptionEnforceValueTypeNotNestingType">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelExceptionEnforceRolePlayerNotNestingType">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelExceptionEnforcePreferredIdentifierForUnobjectifiedEntityType">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelExceptionIsMandatoryRequiresAttachedFactType">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelExceptionPreferredIdentifierMustBeUniquenessConstraint">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelExceptionInvalidInternalPreferredIdentifierPreConditions">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelExceptionInternalConstraintInconsistentRoleOwners">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.CommandDeleteFactTypeText">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.CommandDeleteObjectTypeText">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.CommandDeleteConstraintText">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.CommandDeleteRoleText">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelReadingEditorListColumnHeaderReadingText">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelReadingEditorListColumnHeaderIsPrimary">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelReadingEditorAllReadingsNodeName">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelReadingEditorMissingRolePlayerText">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelReadingEditorNewItemText">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelReadingEditorNewReadingTransactionText">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelReadingEditorChangeReadingText">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelReadingEditorIsPrimaryToolTip">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelReadingEditorChangePrimaryReadingText">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelReadingEditorWindowTitle">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelReadingEditorUnsupportedSelectionText">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.PackageOfficialName">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.PackageProductDetails">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelReferenceModeEditorReferenceModeName">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelReferenceModeEditorEntityTypeName">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelReferenceModeEditorReferenceModeKindHeader">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelReferenceModeEditorChangeNameTransaction">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelReferenceModeEditorCustomReferenceModesHeader">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelReferenceModeEditorIntrinsicReferenceModesHeader">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelReferenceModeEditorAbbreviatedEntityTypeName">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelReferenceModeEditorAbbreviatedReferenceModeName">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelReferenceModeEditorAddCustomReferenceModeTransaction">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelReferenceModeEditorAddNewRowText">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelReferenceModeEditorChangeFormatStringTransaction">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelReferenceModeEditorEditorWindowTitle">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelExceptionReferenceModeEnforceUniqueFormatString">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelExceptionReferenceModeKindEnforceUniqueFormatString">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelExceptionReferenceModeIntrinsicRefModesDontChange">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelExceptionReferenceModeReferenceModesKindNotEmpty">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelReferenceModeEditorChangeReferenceModeKindTransaction">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ReferenceModePredicateReading">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ReferenceModePredicateInverseReading">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelReferenceModeEditorFormatStringColumn">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelReferenceModeEditorKindColumn">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelReferenceModeEditorNameColumn">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.FactEditorToolWindowCaption">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelExceptionReferenceModeAmbiguousName">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelExceptionSubtypeConstraintAndRolePatternFixed">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelExceptionSubtypeFactNotNested">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelExceptionSubtypeFactCycle">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelReferenceModePickerFormatString">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelErrorReadingTooFewRolesMessage">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelErrorReadingTooManyRolesMessage">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelReadingRoleDeletedRoleText">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelErrorFactTypeRequiresInternalUniquessConstraintMessage">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelErrorFactTypeRequiresReadingMessage">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelErrorValueTypeDataTypeNotSpecifiedMessage">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelErrorFactTypeRequiresIUCActivateTransactionName">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ValueRangeDefinitionDefinitionContainerPattern">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ValueRangeDefinitionRangeDelimiter">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ValueRangeDefinitionValueDelimiter">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ValueRangeDefinitionStringContainerPattern">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ValueRangeDefinitionOpenInclusionContainer">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ValueRangeDefinitionClosedInclusionContainer">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ReadingShapeReadingSeparator">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ReadingShapeEllipsis">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ReadingShapeInverseReading">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.NMinusOneRuleInternalSpan">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.ModelErrorConstraintCompatibleRolePlayerTypeError">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ResourceStrings.FactEditorIntellisenseImageList">
            <summary>
            The images for the Intellisense drop down
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ResourceStrings.ResourceManagers">
            <summary>
            Recognized resource managers
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.ResourceManagers.ObjectModel">
            <summary>
            IMS-managed resource file for the core object model
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.ResourceManagers.ShapeModel">
            <summary>
            IMS-managed resource file for the shape object model
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.ResourceManagers.Model">
            <summary>
            Standalone resource file for the core model
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ResourceStrings.ResourceManagers.Diagram">
            <summary>
            Standalone resource file for the diagram
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.RegenerateErrorTextEvents">
            <summary>
            Specify which events should automatically trigger
            a GenerateErrorText call.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.RegenerateErrorTextEvents.None">
            <summary>
            Error text is not regenerated
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.RegenerateErrorTextEvents.ModelNameChange">
            <summary>
            Regenerate the error text when the model
            name changes
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.RegenerateErrorTextEvents.OwnerNameChange">
            <summary>
            Regenerate the error text when the parent
            object changes. The parent object is identified
            via the IModelErrorOwner interface.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.IModelErrorOwner">
            <summary>
            Identify an object as an error owner. Used
            to identify errors associated with this object,
            and to automatically update the error text on
            a RegenerateErrorTextEvents.OwnerNameChange.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.IModelErrorOwner.ValidateErrors(Northface.Tools.ORM.ObjectModel.INotifyElementAdded)">
            <summary>
            Called after deserialization to validate errors. Rules
            are not enabled when this is called.
            </summary>
            <param name="notifyAdded">A callback for notifying
            the caller of all objects that are added.</param>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.IModelErrorOwner.ErrorCollection">
            <summary>
            Get the enumeration of errors associated
            with this object.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ModelError">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelError.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelError.AddToTaskProvider(Northface.Tools.ORM.ObjectModel.ModelHasError)">
            <summary>
            Helper function to add an error to the task provider
            when the error is attached to the model.
            </summary>
            <param name="errorLink"></param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelError.GenerateErrorText">
            <summary>
            Called to set the name of the error.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelError.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelError.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ModelError.TaskData">
            <summary>
            Non-IMS managed slot for storing error reporting
            data. Allows items to be easily removed from the task list.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ModelError.RegenerateEvents">
            <summary>
            Determines which name change events will
            automatically regenerate the error text.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ModelError.FixupListener">
            <summary>
            Return a deserialization fixup listener. The listener
            validates all model errors and adds errors to the task provider.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ModelError.Model">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ModelError.ModelErrorFixupListener">
            <summary>
            A listener class to validate and/or populate the ModelError
            collection on load, as well as populating the task list.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelError.ModelErrorFixupListener.#ctor">
            <summary>
            Create a new ModelErrorFixupListener
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelError.ModelErrorFixupListener.ProcessElement(Northface.Tools.ORM.ObjectModel.IModelErrorOwner,Microsoft.VisualStudio.Modeling.Store,Northface.Tools.ORM.ObjectModel.INotifyElementAdded)">
            <summary>
            Defer to the IModelErrorOwner.ValidateErrors method
            to fixup error problems.
            </summary>
            <param name="element">An IModelErrorOwner instance</param>
            <param name="store">The context store</param>
            <param name="notifyAdded">The listener to notify if elements are added during fixup</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelError.ModelErrorFixupListener.PhaseCompleted(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Add all model errors in the specific store to
            the task list.
            </summary>
            <param name="store">The context store</param>
        </member>
        <member name="T:Northface.Tools.ORM.Shell.ORMDesignerEditorFactory">
            <summary>
            Editor factory for ORM Designer. 
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerEditorFactory.#ctor(System.IServiceProvider)">
            <summary>
            Public constructor for our editor factory.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerEditorFactory.MapLogicalView(System.Guid,System.Object)">
            <summary>
            This method is called before the EditorFactory.CreateEditorInstance method to allow us to map LOGICAL views to PHYSICAL ones.  Our Editor Factory supports unlimited physical views.
            NOTE: Physical views are identified by a string of our choice with the one constraint that the default/primary physical view for an editor *MUST* use an empty ("") string as its physical view name (return "").
            </summary>
            <param name="logicalView">Guid</param>
            <param name="viewContext">Context</param>
            <returns>The physical view name</returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerEditorFactory.CreateDocData(System.String,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32)">
            <summary>
            Standard override. Create an ORMDesignerDocData
            </summary>
            <param name="fileName">The document file</param>
            <param name="hierarchy">The project/solution hierarchy to include the file in</param>
            <param name="itemId">The identifier for the new item</param>
            <returns>ORMDesignerDocData</returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerEditorFactory.CreateDocView(Microsoft.VisualStudio.EnterpriseTools.Shell.DocData,System.String,System.String@)">
            <summary>
            Create a view on an ORMDesignerDocData
            </summary>
            <param name="data">The document, created by CreateDocData</param>
            <param name="physicalView">The name of the view to created</param>
            <param name="editorCaption">The editor caption</param>
            <returns>ORMDesignerDocView</returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerEditorFactory.GetToolboxItems">
            <summary>
            Retrieve toolbox items. Called during devenv /setup or
            toolbox refresh. Uses standard prototype settings (mostly
            created in ORMDiagram.InitializeToolboxItem) and adds additional
            filter strings as required.
            </summary>
            <returns>ModelingToolboxItem[]</returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerEditorFactory.AddFilterAttribute(Microsoft.VisualStudio.Modeling.ModelingToolboxItem[],System.Collections.Generic.Dictionary{System.String,System.Int32},System.String,System.ComponentModel.ToolboxItemFilterAttribute)">
            <summary>
            Add a filter string to the specified ModelingToolboxItem
            </summary>
            <param name="items">An array of existing items</param>
            <param name="itemIndexDictionary">A dictionary mapping from the item name
            to an index in the items array</param>
            <param name="itemId">The name of the item to modify</param>
            <param name="attribute">The filter attribute to add</param>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ORMDiagram">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ORMDiagram.ORMDiagramDefaultFilterString">
            <summary>
            The filter string used for simple actions
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ORMDiagram.ORMDiagramExternalConstraintFilterString">
            <summary>
            The filter string used to create an external constraint. Very similar to a
            normal action, except the external constraint connector is activated on completion
            of the action.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ORMDiagram.ORMDiagramConnectExternalConstraintFilterString">
            <summary>
            The filter string used to connect role sequences to external constraints
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ORMDiagram.ORMDiagramCreateSubtypeFilterString">
            <summary>
            The filter string used to create subtype relationships between object types
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ORMDiagram.ORMDiagramInternalUniquenessConstraintFilterString">
            <summary>
            The filter string used to create an internal constraint. Very similar to a
            normal action, except the internal constraint connector is activated on completion
            of the action.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ORMDiagram.ORMDiagramConnectInternalUniquenessConstraintFilterString">
            <summary>
            The filter string used to connect role sequences to internal uniqueness constraints
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ORMDiagram.ORMDiagramConnectRoleFilterString">
            <summary>
            The filter string used to connect a role to its role player object type
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ORMDiagram.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ORMDiagram.mySticky">
            <summary>
            The StickyObject associated with this diagram.  
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.ShouldAddShapeForElement(Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Called as a result of the FixUpDiagram calls
            with the diagram as the first element.
            </summary>
            <param name="element">Added element</param>
            <returns>True for items displayed directly on the
            surface. Nesting object types are not displayed.</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.ShouldDisplayPartOfReferenceMode(Northface.Tools.ORM.ObjectModel.FactType)">
            <summary>
            Function to determine if a fact type, which may be participating
            in a reference mode pattern, should be displayed.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.ShouldDisplayPartOfReferenceMode(Northface.Tools.ORM.ObjectModel.ObjectTypePlaysRole)">
            <summary>
            Function to determine if a role player link, which may be participating
            in a reference mode pattern, should be displayed. Defers to test for
            the corresponding fact type.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.ShouldDisplayPartOfReferenceMode(Northface.Tools.ORM.ObjectModel.ObjectType)">
            <summary>
            Function to determine if an object type, which may be participating
            as the value type in the reference mode pattern, should be displayed. The
            object type needs to be displayed if any of the reference modes using the
            value type has a true ExpandRefMode property or if the object type is
            a role player for any other visible role.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.ShouldCollapseReferenceMode(Northface.Tools.ORM.ObjectModel.ObjectType)">
            <summary>
            Test if the reference mode should be collapsed. Helper function for
            ShouldDisplayPartOfReferenceMode implementations.
            </summary>
            <param name="objectType"></param>
            <returns>True if the object type has a collapsed reference mode</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.ChooseShape(Microsoft.VisualStudio.Modeling.ModelElement,System.Collections.IList)">
            <summary>
            An object type is displayed as an ObjectTypeShape unless it is
            objectified, in which case we display it as an ObjectifiedFactTypeNameShape
            </summary>
            <param name="element">The element to test. Expecting an ObjectType.</param>
            <param name="shapeTypes">The choice of shape types</param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.ChooseShapeTypeForObjectType(Northface.Tools.ORM.ObjectModel.ObjectType,System.Collections.IList)">
            <summary>
            Helper function to choose the appropriate shape for an ObjectType
            UNDONE: The original plan was to override ChooseParentShape here to switch the
            parent to a FactType. However, the childShape passed to ChooseParentShape is not
            yet attached to its backing ModelElement, so the override is essentially useless,
            and we need to duplicate the ChooseShape code on FactTypeShape itself.
            </summary>
            <param name="element">ObjectType</param>
            <param name="shapeTypes">IList of MetaClassInfo</param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.OnChildConfiguring(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
            <summary>
            Defer to ConfiguringAsChildOf for ORMBaseShape children
            </summary>
            <param name="child">The child being configured</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.FindShapeForElement(Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Locate an existing shape on this diagram corresponding to this element
            </summary>
            <param name="element">The element to search</param>
            <returns>An existing shape, or null if not found</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.FindShapeForElement``1(Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Locate an existing typed shape on this diagram corresponding to this element
            </summary>
            <typeparam name="ShapeType">The type of the shape to return</typeparam>
            <param name="element">The element to search</param>
            <returns>An existing shape, or null if not found</returns>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ORMDiagram.StickyBackgroundResource">
            <summary>
            The Brush to use when drawing the background of a sticky object.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ORMDiagram.StickyForegroundResource">
            <summary>
            The Brush to use when drawing the foreground of a sticky object.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.InitializeResources(Microsoft.VisualStudio.Modeling.Diagrams.StyleSet)">
            <summary>
            Standard override to populate the style set for the shape type
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.InitializeToolboxItem(Microsoft.VisualStudio.Modeling.ModelingToolboxItem)">
            <summary>
            Initialize toolbox items. All items are thrown on the diagram (it doesn't
            really matter what object we put them on).
            </summary>
            <param name="toolboxItem"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.OnViewMouseEnter(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs)">
            <summary>
            Enable our toolbox actions. Additional filters recognized in this
            routine are added in ORMEditorFactory.GetToolboxItems.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.SelectToolboxItem(Microsoft.VisualStudio.Modeling.Diagrams.DiagramView,System.String)">
            <summary>
            Select the given item on the default tab
            </summary>
            <param name="activeView">DiagramView</param>
            <param name="itemId">Name of the item id</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.SelectToolboxItem(Microsoft.VisualStudio.Modeling.Diagrams.DiagramView,System.String,System.String)">
            <summary>
            Select the given item on the specified toolbox tab
            UNDONE: The critical point of this routine crashes VS, so
            it is currently a noop
            </summary>
            <param name="activeView">DiagramView</param>
            <param name="itemId">Name of the item id</param>
            <param name="tabName">The tab name to select</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.CreateExternalConstraintConnectAction">
            <summary>
            Create the action used to connect an external constraint to its role sequences
            </summary>
            <returns>ExternalConstraintConnectAction instance</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.CreateExternalConstraintAction">
            <summary>
            Create the action used to add an external constraint from the toolbox
            </summary>
            <returns>ExternalConstraintAction instance</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.CreateInternalUniquenessConstraintConnectAction">
            <summary>
            Create the connect action used to add an internal uniqueness constraint from the toolbox
            </summary>
            <returns>InternalUniquenssConstraintAction instance</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.CreateInternalUniquenessConstraintAction">
            <summary>
            Create the connect action used to connect internal uniqueness constrant roles
            </summary>
            <returns>InternalUniquenssConstraintAction instance</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.CreateRoleDragPendingAction">
            <summary>
            Create the drag action used for the RoleDragPendingAction property
            </summary>
            <returns>RoleDragPendingAction instance</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.CreateRoleConnectAction">
            <summary>
            Create the connect action used to connect roles to their role players
            </summary>
            <returns>RoleConnectAction instance</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.CreateSubtypeConnectAction">
            <summary>
            Create the connect action used to connect roles to their role players
            </summary>
            <returns>SubtypeConnectAction instance</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.Dispose(System.Boolean)">
            <summary>
            Clean up disposable members (connection actions)
            </summary>
            <param name="disposing">Do stuff if true</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.GetComponentName">
            <summary>
            Retrieve the component name for the property grid. The
            component name is displayed bolded in the property grid dropdown
            before the class name (retrieved from GetClassName)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.GetClassName">
            <summary>
            Crash fix, the shell is calling back after the store is disposed. Catch the case.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.ShouldCreatePropertyDescriptor(Microsoft.VisualStudio.Modeling.MetaAttributeInfo)">
            <summary>
            Block display of the diagram's name, which is displayed beside the
            Name for the underlying model if we let it through
            </summary>
            <param name="metaAttrInfo">MetaAttributeInfo</param>
            <returns>false for Diagram.Name, defers to base for all other attributes</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.ModifyLuminosity(System.Drawing.Color)">
            <summary>
            Modify the luminosity for a given color. This
            duplicates the algorithm in ShapeElement.GetShapeLuminosity,
            which is not available because it is only run for shape elements
            in the DiagramClientView.HighlightedShapes collection.
            </summary>
            <param name="startColor">The original color</param>
            <returns>The modified color</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.ModifyLuminosity(System.Int32)">
            <summary>
            Modify a specific luminosity. 
            </summary>
            <param name="startLuminosity">Beginning luminosity value</param>
            <returns>modified luminosity</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.FixupRolePlayerLink(Northface.Tools.ORM.ObjectModel.ObjectTypePlaysRole)">
            <summary>
            Helper function to display role player links.
            </summary>
            <param name="link">An ObjectTypePlaysRole element</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.FixupRoleValueRangeDefinitionLink(Northface.Tools.ORM.ObjectModel.RoleHasValueRangeDefinition,Northface.Tools.ORM.ObjectModel.INotifyElementAdded)">
            <summary>
            Helper function to display role player links.
            </summary>
            <param name="link">A RoleHasValueRangeDefinition element</param>
            <param name="notifyAdded">The listener to notify if elements are added during fixup</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.FixupValueTypeValueRangeDefinitionLink(Northface.Tools.ORM.ObjectModel.ValueTypeHasValueRangeDefinition,Northface.Tools.ORM.ObjectModel.INotifyElementAdded)">
            <summary>
            Helper function to display value type value ranges.
            </summary>
            <param name="link">A ValueTypeHasValueRangeDefinition element</param>
            <param name="notifyAdded">The listener to notify if elements are added during fixup</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.FixupValueTypeValueRangeDefinitionLink(Northface.Tools.ORM.ObjectModel.RoleHasValueRangeDefinition,Northface.Tools.ORM.ObjectModel.INotifyElementAdded)">
            <summary>
            Helper function to display value type value ranges.
            </summary>
            <param name="link">A ValueTypeHasValueRangeDefinition element</param>
            <param name="notifyAdded">The listener to notify if elements are added during fixup</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.FixupExternalConstraintLink(Northface.Tools.ORM.ObjectModel.ExternalFactConstraint)">
            <summary>
            Helper function to display external constraint links.
            </summary>
            <param name="link">An ObjectTypePlaysRole element</param>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ORMDiagram.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ORMDiagram.classStyleSet">
            <summary>
            Style Set
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ORMDiagram.shapeFields">
            <summary>
            Shape Fields
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.CreateORMDiagram(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.CreateAndInitializeORMDiagram(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ORMDiagram.StickyObject">
            <summary>
            Get access to the diagram's StickyObject
            </summary>
            <value>StickyObject</value>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ORMDiagram.DefaultGridSize">
            <summary>
            Drop the grid size to make positioning easier.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ORMDiagram.ExternalConstraintConnectAction">
            <summary>
            The connect action used to connect an external constraint to its role sequences
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ORMDiagram.ExternalConstraintAction">
            <summary>
            The action used to drop an external constraint from the toolbox
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ORMDiagram.InternalUniquenessConstraintConnectAction">
            <summary>
            The connect action used to connect an internal uniqueness constraint
            to its roles.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ORMDiagram.InternalUniquenessConstraintAction">
            <summary>
            The action used to add an internal uniqueness constraint from the toolbox
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ORMDiagram.RoleDragPendingAction">
            <summary>
            The drag action used by a role box to begin dragging.
            The default implementation chains to a RoleConnectAction
            when dragging begins.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ORMDiagram.RoleConnectAction">
            <summary>
            The connect action used to connect a role and
            its role player (an object type)
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ORMDiagram.SubtypeConnectAction">
            <summary>
            The connect action used to connect a base type to a derived type
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ORMDiagram.BaseFontFromEnvironment">
            <summary>
            Set the base font based on the font and color settings.
            UNDONE: This affects the size right now, but not the font name
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ORMDiagram.DeserializationFixupListeners">
            <summary>
            Return all deserialization fixup listeners for the presentation model
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ORMDiagram.ClassStyleSet">
            <summary>
            Style Set
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ORMDiagram.ShapeFields">
            <summary>
            Shape Fields
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.ObjectTypeShapeChangeRule.RemoveShapesFromDiagram(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.Diagrams.Diagram)">
            <summary>
            Helper function to remove shapes on the diagram for a specific element.
            All child shapes will also be removed.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.ObjectTypeShapeChangeRule.ClearChildShapes(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElementMoveableCollection)">
            <summary>
            Helper function to recursively delete child shapes. Used by RemoveShapesFromDiagram.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ORMDiagram.ConstraintRoleSequenceRoleAdded">
            <summary>
            Update the fact type when constraint roles are removed
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ORMDiagram.ConstraintRoleSequenceRoleRemoved">
            <summary>
            Update the fact type when constraint roles are removed
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ORMDiagram.DisplayRolePlayersFixupListener">
            <summary>
            A fixup class to display role player links
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.DisplayRolePlayersFixupListener.#ctor">
            <summary>
            Create a new DisplayRolePlayersFixupListener
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.DisplayRolePlayersFixupListener.ProcessElement(Northface.Tools.ORM.ObjectModel.ObjectTypePlaysRole,Microsoft.VisualStudio.Modeling.Store,Northface.Tools.ORM.ObjectModel.INotifyElementAdded)">
            <summary>
            Add role player links when possible
            </summary>
            <param name="element">An ObjectTypePlaysRole instance</param>
            <param name="store">The context store</param>
            <param name="notifyAdded">The listener to notify if elements are added during fixup</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.ObjectTypePlaysRoleRemoved.ElementRemoved(Microsoft.VisualStudio.Modeling.ElementRemovedEventArgs)">
            <summary>
            Remove presentation elements when the associated RolePlayer link is removed
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ORMDiagram.DisplayRoleValueRangeDefinitionFixupListener">
            <summary>
            A fixup class to display role player links
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.DisplayRoleValueRangeDefinitionFixupListener.#ctor">
            <summary>
            Create a new DisplayValueRangeDefinitionFixupListener
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.DisplayRoleValueRangeDefinitionFixupListener.ProcessElement(Northface.Tools.ORM.ObjectModel.RoleHasValueRangeDefinition,Microsoft.VisualStudio.Modeling.Store,Northface.Tools.ORM.ObjectModel.INotifyElementAdded)">
            <summary>
            Add value range links when possible
            </summary>
            <param name="element">A RoleHasValueRangeDefinition instance</param>
            <param name="store">The context store</param>
            <param name="notifyAdded">The listener to notify if elements are added during fixup</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.RoleHasValueRangeDefinitionRemoved.ElementRemoved(Microsoft.VisualStudio.Modeling.ElementRemovedEventArgs)">
            <summary>
            Remove presentation elements when the associated ValueRange link is removed
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ORMDiagram.DisplayValueTypeValueRangeDefinitionFixupListener">
            <summary>
            A fixup class to display role player links
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.DisplayValueTypeValueRangeDefinitionFixupListener.#ctor">
            <summary>
            Create a new DisplayValueRangeDefinitionFixupListener
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.DisplayValueTypeValueRangeDefinitionFixupListener.ProcessElement(Northface.Tools.ORM.ObjectModel.ValueTypeHasValueRangeDefinition,Microsoft.VisualStudio.Modeling.Store,Northface.Tools.ORM.ObjectModel.INotifyElementAdded)">
            <summary>
            Add value range links when possible
            </summary>
            <param name="element">A RoleHasValueRangeDefinition instance</param>
            <param name="store">The context store</param>
            <param name="notifyAdded">The listener to notify if elements are added during fixup</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.ValueTypeHasValueRangeDefinitionRemoved.ElementRemoved(Microsoft.VisualStudio.Modeling.ElementRemovedEventArgs)">
            <summary>
            Remove presentation elements when the associated ValueRange link is removed
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ORMDiagram.DisplayExternalConstraintLinksFixupListener">
            <summary>
            A fixup class to display external constraint links for
            when both endpoints are represented on the diagram
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.DisplayExternalConstraintLinksFixupListener.#ctor">
            <summary>
            Create a new DisplayExternalConstraintLinksFixupListener
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.DisplayExternalConstraintLinksFixupListener.ProcessElement(Northface.Tools.ORM.ObjectModel.ExternalFactConstraint,Microsoft.VisualStudio.Modeling.Store,Northface.Tools.ORM.ObjectModel.INotifyElementAdded)">
            <summary>
            Add external fact constraint links to the diagram
            </summary>
            <param name="element">A ExternalFactConstraint instance</param>
            <param name="store">The context store</param>
            <param name="notifyAdded">The listener to notify if elements are added during fixup</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.PresentationLinkRemoved.ElementRemoved(Microsoft.VisualStudio.Modeling.ElementRemovedEventArgs)">
            <summary>
            Clearing the PresentationRolePlayers collection does not automatically
            remove the PELs (propagatedelete is false). Add this rule in code here.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ORMDiagram.EliminateOrphanedShapesFixupListener">
            <summary>
            A fixup class to remove orphaned pels
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.EliminateOrphanedShapesFixupListener.#ctor">
            <summary>
            Create a new EliminateOrphanedShapesFixupListener
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.EliminateOrphanedShapesFixupListener.ProcessElement(Microsoft.VisualStudio.Modeling.PresentationElement,Microsoft.VisualStudio.Modeling.Store,Northface.Tools.ORM.ObjectModel.INotifyElementAdded)">
            <summary>
            Remove all orphaned pels
            </summary>
            <param name="element">A PresentationElement instance</param>
            <param name="store">The context store</param>
            <param name="notifyAdded">The listener to notify if elements are added during fixup</param>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ORMDiagram.DisplaySubtypeLinkFixupListener">
            <summary>
            A fixup class to display subtype links
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.DisplaySubtypeLinkFixupListener.#ctor">
            <summary>
            Create a new DisplayRolePlayersFixupListener
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagram.DisplaySubtypeLinkFixupListener.ProcessElement(Northface.Tools.ORM.ObjectModel.ModelHasFactType,Microsoft.VisualStudio.Modeling.Store,Northface.Tools.ORM.ObjectModel.INotifyElementAdded)">
            <summary>
            Add subtype links when possible
            </summary>
            <param name="element">An ModelHasFactType instance</param>
            <param name="store">The context store</param>
            <param name="notifyAdded">The listener to notify if elements are added during fixup</param>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.RoleMultiplicity">
            <summary>
            Define the multiplicity for the roles. The role
            multiplicity is currently displayed only on roles
            associated with binary fact types and is calculated
            based on the existing mandatory and internal uniqueness
            constraints associated with the fact.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.RoleMultiplicity.Unspecified">
            <summary>
            Insufficient constraints are present to
            determine the user intention.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.RoleMultiplicity.Indeterminate">
            <summary>
            Too many constraints are present to determine
            the user intention.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.RoleMultiplicity.ZeroToOne">
            <summary>
            0...1
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.RoleMultiplicity.ZeroToMany">
            <summary>
            0...n
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.RoleMultiplicity.ExactlyOne">
            <summary>
            1
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.RoleMultiplicity.OneToMany">
            <summary>
            1...n
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.Role">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.Role.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.Role.RolePlayerDisplayMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.Role.IsMandatoryMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.Role.MultiplicityMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.Role.ValueRangeTextMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Role.SetValueForCustomStoredAttribute(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,System.Object)">
            <summary>
            Standard override. All custom storage properties are derived, not
            stored. Actual changes are handled in RoleChangeRule.
            </summary>
            <param name="attribute">MetaAttributeInfo</param>
            <param name="newValue">object</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Role.GetValueForCustomStoredAttribute(Microsoft.VisualStudio.Modeling.MetaAttributeInfo)">
            <summary>
            Standard override. Retrieve values for calculated properties.
            </summary>
            <param name="attribute">MetaAttributeInfo</param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Role.GetOldValueForCustomStoredAttribute(Microsoft.VisualStudio.Modeling.MetaAttributeInfo)">
            <summary>
            Standard override. Defer to GetValueForCustomStoredAttribute.
            </summary>
            <param name="attribute">MetaAttributeInfo</param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Role.ShouldCreatePropertyDescriptor(Microsoft.VisualStudio.Modeling.MetaAttributeInfo)">
            <summary>
            Standard override determine when derived attributes are
            displayed in the property grid. Called for all attributes.
            </summary>
            <param name="metaAttrInfo">MetaAttributeInfo</param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Role.IsPropertyDescriptorReadOnly(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Standard override. Determines when derived properties are read-only. Called
            if the ReadOnly setting on the element is one of the SometimesUIReadOnly* values.
            Currently, ValueRangeText is readonly if the role player is an entity type without
            a reference mode.
            </summary>
            <param name="propertyDescriptor">PropertyDescriptor</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Role.CreatePropertyDescriptor(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.ModelElement,System.Attribute[])">
            <summary>
            Override to create a custom property descriptor for
            multiplicity that does not include the Indeterminate
            and Unspecified values in the dropdown, unless either
            of these is the current value.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.Role.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.Role.RolePlayerDisplayMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.Role.roleRolePlayerDisplayFieldHandler">
            <summary>
            FieldHandler for Role.RolePlayerDisplay field
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.Role.IsMandatoryMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.Role.roleIsMandatoryFieldHandler">
            <summary>
            FieldHandler for Role.IsMandatory field
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.Role.MultiplicityMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.Role.roleMultiplicityFieldHandler">
            <summary>
            FieldHandler for Role.Multiplicity field
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.Role.ValueRangeTextMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.Role.roleValueRangeTextFieldHandler">
            <summary>
            FieldHandler for Role.ValueRangeText field
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Role.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Role.CreateRole(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Role.CreateAndInitializeRole(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Role.GetCustomSerializedChildElementInfo">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Role.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Role.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Role.MapChildElement(System.String,System.String,System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Role.MapAttribute(System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Role.OppositeRole">
            <summary>
            Used as a shortcut to find the opposite role in a binary fact.
            Returns null if the fact is not a binary
            </summary>
            <value></value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Role.RolePlayerDisplay">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Role.IsMandatory">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Role.Multiplicity">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Role.ValueRangeText">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Role.FactType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Role.RolePlayer">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Role.ConstraintRoleSequenceCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Role.ValueRangeDefinition">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Role.SupportedCustomSerializedOperations">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Role.CustomSerializedElementInfo">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Role.CustomSerializedChildRoleComparer">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.Role.MultiplicityPropertyDescriptor">
            <summary>
            A property descriptor that filters out some standard values from
            the type converter.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Role.MultiplicityPropertyDescriptor.#ctor(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.ModelElement,System.Attribute[])">
            <summary>
            Constructor
            </summary>
            <param name="modelElement">Passed to base</param>
            <param name="metaAttributeInfo">Passed to base</param>
            <param name="requestor">Passed to base</param>
            <param name="attributes">Passed to base</param>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Role.MultiplicityPropertyDescriptor.Converter">
            <summary>
            Return a custom typeconverter that
            limits the predefined values.
            </summary>
            <value></value>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Role.RoleChangeRule.ElementAttributeChanged(Microsoft.VisualStudio.Modeling.ElementAttributeChangedEventArgs)">
            <summary>
            Forward through the property grid property to the underlying
            generating role property
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.Role.RoleRolePlayerDisplayFieldHandler">
            <summary>
            Implement the field handler for Role.RolePlayerDisplay
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Role.RoleRolePlayerDisplayFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Role.RoleRolePlayerDisplayFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the Role.RolePlayerDisplay field handler
            </summary>
            <value>RoleRolePlayerDisplayFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Role.RoleRolePlayerDisplayFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the Role.RolePlayerDisplay field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.Role.RoleIsMandatoryFieldHandler">
            <summary>
            Implement the field handler for Role.IsMandatory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Role.RoleIsMandatoryFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Role.RoleIsMandatoryFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the Role.IsMandatory field handler
            </summary>
            <value>RoleIsMandatoryFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Role.RoleIsMandatoryFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the Role.IsMandatory field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.Role.RoleMultiplicityFieldHandler">
            <summary>
            Implement the field handler for Role.Multiplicity
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Role.RoleMultiplicityFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Role.RoleMultiplicityFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the Role.Multiplicity field handler
            </summary>
            <value>RoleMultiplicityFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Role.RoleMultiplicityFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the Role.Multiplicity field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.Role.RoleValueRangeTextFieldHandler">
            <summary>
            Implement the field handler for Role.ValueRangeText
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Role.RoleValueRangeTextFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Role.RoleValueRangeTextFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the Role.ValueRangeText field handler
            </summary>
            <value>RoleValueRangeTextFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Role.RoleValueRangeTextFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the Role.ValueRangeText field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.FrequencyConstraintShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.FrequencyConstraintShape.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FrequencyConstraintShape.IsSingleFactFrequencyConstraint">
            <summary>
            Frequency Constraints applied to a single facttype are handled slightly differently. Test if the constraint meets this definition.
            </summary>
            <returns>True if constraint is a Frequency Constraint applied to a single facttype; otherwise, false.</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FrequencyConstraintShape.OnPaintShape(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs)">
            <summary>
            Draw the various constraint types
            </summary>
            <param name="e">DiagramPaintEventArgs</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FrequencyConstraintShape.GetFrequencyString">
            <summary>
            Builds a string representing a Frequency Constraint
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.FrequencyConstraintShape.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.FrequencyConstraintShape.classStyleSet">
            <summary>
            Style Set
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.FrequencyConstraintShape.shapeFields">
            <summary>
            Shape Fields
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FrequencyConstraintShape.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FrequencyConstraintShape.CreateFrequencyConstraintShape(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FrequencyConstraintShape.CreateAndInitializeFrequencyConstraintShape(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FrequencyConstraintShape.ContentSize">
            <summary>
            Return a  size for this frequency constraint
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FrequencyConstraintShape.HasOutline">
            <summary>
            Determine whether or not to draw the default shape outline.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FrequencyConstraintShape.ClassStyleSet">
            <summary>
            Style Set
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FrequencyConstraintShape.ShapeFields">
            <summary>
            Shape Fields
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.RangeInclusion">
            <summary>
            Standard range value inclusion categories
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.RangeInclusion.NotSet">
            <summary>
            Default inclusion type
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.RangeInclusion.Open">
            <summary>
            Indicates the specific value is not included
            in the range.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.RangeInclusion.Closed">
            <summary>
            Indicates the specific value is included
            in the range.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ValueRange">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueRange.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueRange.MinValueMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueRange.MaxValueMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueRange.TextMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueRange.MinInclusionMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueRange.MaxInclusionMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRange.GetValueForCustomStoredAttribute(Microsoft.VisualStudio.Modeling.MetaAttributeInfo)">
            <summary>
            Standard override. Retrieve values for calculated properties.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRange.IsText">
            <summary>
            Tests if the associated data type is a text type.
            </summary>
            <returns>ValueRangeDefinition.IsText() if definition exists; otherwise, true.</returns>
            <remarks>Since text is by far the minority of all the data types and
            the only type to require string container marks, we do not put values inside 
            those marks by default whenever we can't determine the data type (i.e. no
            ValueRangeDefinition exists).</remarks>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRange.GetOldValueForCustomStoredAttribute(Microsoft.VisualStudio.Modeling.MetaAttributeInfo)">
            <summary>
            Standard override. Defer to GetValueForCustomStoredAttribute.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRange.SetValueForCustomStoredAttribute(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,System.Object)">
            <summary>
            Standard override. All custom storage properties are derived, not
            stored. Actual changes are handled in FactTypeChangeRule.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRange.TrimStringMarkers(System.String)">
            <summary>
            Removes the left- and right-strings which denote a value as a string.
            </summary>
            <param name="range">The string to remove left and right string delimiters from.</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRange.StripInclusions(System.String@,System.String@,System.String)">
            <summary>
            Pops the inclusion strings off the ends of the range and stores them
            in the appropriate out string.
            </summary>
            <param name="minInclusion">
            The string to put the minInclusion mark from the rangeString into.
            Will return "" if no mark exists.
            </param>
            <param name="maxInclusion">
            The string to put the maxInclusion mark from the rangeString into.
            Will return "" if no mark exists.
            </param>
            <param name="range">The string to remove inclusion marks from.</param>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueRange.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueRange.MinValueMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueRange.valueRangeMinValueFieldHandler">
            <summary>
            FieldHandler for ValueRange.MinValue field
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueRange.MaxValueMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueRange.valueRangeMaxValueFieldHandler">
            <summary>
            FieldHandler for ValueRange.MaxValue field
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueRange.TextMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueRange.valueRangeTextFieldHandler">
            <summary>
            FieldHandler for ValueRange.Text field
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueRange.MinInclusionMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueRange.valueRangeMinInclusionFieldHandler">
            <summary>
            FieldHandler for ValueRange.MinInclusion field
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueRange.MaxInclusionMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueRange.valueRangeMaxInclusionFieldHandler">
            <summary>
            FieldHandler for ValueRange.MaxInclusion field
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRange.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRange.CreateValueRange(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRange.CreateAndInitializeValueRange(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueRange.MinValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueRange.MaxValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueRange.Text">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueRange.MinInclusion">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueRange.MaxInclusion">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueRange.ValueRangeDefinition">
            <summary>
            
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRange.ValueRangeChangeRule.ElementAttributeChanged(Microsoft.VisualStudio.Modeling.ElementAttributeChangedEventArgs)">
            <summary>
            Translate the Text property
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ValueRange.ValueRangeMinValueFieldHandler">
            <summary>
            Implement the field handler for ValueRange.MinValue
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRange.ValueRangeMinValueFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRange.ValueRangeMinValueFieldHandler.GetValue(Northface.Tools.ORM.ObjectModel.ValueRange)">
            <summary>
            Gets the value of the attribute as it exists in the element
            </summary>
            <param name="element">the ValueRange</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRange.ValueRangeMinValueFieldHandler.SetValue(Northface.Tools.ORM.ObjectModel.ValueRange,System.String,Microsoft.VisualStudio.Modeling.CommandFactory,System.Boolean,System.String@)">
            <summary>
            Sets the value into the element
            </summary>
            <param name="element">the element</param>
            <param name="value">new value</param>
            <param name="commandFactory">the command factory for this change</param>
            <param name="allowDuplicates">allow duplicate value to continue to fire rules and events</param>
            <param name="oldValue">the old value before the change</param>
            <returns>true if the value actually changed</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueRange.ValueRangeMinValueFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the ValueRange.MinValue field handler
            </summary>
            <value>ValueRangeMinValueFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueRange.ValueRangeMinValueFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the ValueRange.MinValue field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ValueRange.ValueRangeMaxValueFieldHandler">
            <summary>
            Implement the field handler for ValueRange.MaxValue
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRange.ValueRangeMaxValueFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRange.ValueRangeMaxValueFieldHandler.GetValue(Northface.Tools.ORM.ObjectModel.ValueRange)">
            <summary>
            Gets the value of the attribute as it exists in the element
            </summary>
            <param name="element">the ValueRange</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRange.ValueRangeMaxValueFieldHandler.SetValue(Northface.Tools.ORM.ObjectModel.ValueRange,System.String,Microsoft.VisualStudio.Modeling.CommandFactory,System.Boolean,System.String@)">
            <summary>
            Sets the value into the element
            </summary>
            <param name="element">the element</param>
            <param name="value">new value</param>
            <param name="commandFactory">the command factory for this change</param>
            <param name="allowDuplicates">allow duplicate value to continue to fire rules and events</param>
            <param name="oldValue">the old value before the change</param>
            <returns>true if the value actually changed</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueRange.ValueRangeMaxValueFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the ValueRange.MaxValue field handler
            </summary>
            <value>ValueRangeMaxValueFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueRange.ValueRangeMaxValueFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the ValueRange.MaxValue field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ValueRange.ValueRangeTextFieldHandler">
            <summary>
            Implement the field handler for ValueRange.Text
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRange.ValueRangeTextFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueRange.ValueRangeTextFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the ValueRange.Text field handler
            </summary>
            <value>ValueRangeTextFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueRange.ValueRangeTextFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the ValueRange.Text field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ValueRange.ValueRangeMinInclusionFieldHandler">
            <summary>
            Implement the field handler for ValueRange.MinInclusion
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRange.ValueRangeMinInclusionFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRange.ValueRangeMinInclusionFieldHandler.GetValue(Northface.Tools.ORM.ObjectModel.ValueRange)">
            <summary>
            Gets the value of the attribute as it exists in the element
            </summary>
            <param name="element">the ValueRange</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRange.ValueRangeMinInclusionFieldHandler.SetValue(Northface.Tools.ORM.ObjectModel.ValueRange,Northface.Tools.ORM.ObjectModel.RangeInclusion,Microsoft.VisualStudio.Modeling.CommandFactory,System.Boolean,Northface.Tools.ORM.ObjectModel.RangeInclusion@)">
            <summary>
            Sets the value into the element
            </summary>
            <param name="element">the element</param>
            <param name="value">new value</param>
            <param name="commandFactory">the command factory for this change</param>
            <param name="allowDuplicates">allow duplicate value to continue to fire rules and events</param>
            <param name="oldValue">the old value before the change</param>
            <returns>true if the value actually changed</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueRange.ValueRangeMinInclusionFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the ValueRange.MinInclusion field handler
            </summary>
            <value>ValueRangeMinInclusionFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueRange.ValueRangeMinInclusionFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the ValueRange.MinInclusion field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ValueRange.ValueRangeMaxInclusionFieldHandler">
            <summary>
            Implement the field handler for ValueRange.MaxInclusion
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRange.ValueRangeMaxInclusionFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRange.ValueRangeMaxInclusionFieldHandler.GetValue(Northface.Tools.ORM.ObjectModel.ValueRange)">
            <summary>
            Gets the value of the attribute as it exists in the element
            </summary>
            <param name="element">the ValueRange</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRange.ValueRangeMaxInclusionFieldHandler.SetValue(Northface.Tools.ORM.ObjectModel.ValueRange,Northface.Tools.ORM.ObjectModel.RangeInclusion,Microsoft.VisualStudio.Modeling.CommandFactory,System.Boolean,Northface.Tools.ORM.ObjectModel.RangeInclusion@)">
            <summary>
            Sets the value into the element
            </summary>
            <param name="element">the element</param>
            <param name="value">new value</param>
            <param name="commandFactory">the command factory for this change</param>
            <param name="allowDuplicates">allow duplicate value to continue to fire rules and events</param>
            <param name="oldValue">the old value before the change</param>
            <returns>true if the value actually changed</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueRange.ValueRangeMaxInclusionFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the ValueRange.MaxInclusion field handler
            </summary>
            <value>ValueRangeMaxInclusionFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueRange.ValueRangeMaxInclusionFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the ValueRange.MaxInclusion field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ValueRangeDefinition">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueRangeDefinition.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueRangeDefinition.TextMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRangeDefinition.GetValueForCustomStoredAttribute(Microsoft.VisualStudio.Modeling.MetaAttributeInfo)">
            <summary>
            Standard override. Retrieve values for calculated properties.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRangeDefinition.GetOldValueForCustomStoredAttribute(Microsoft.VisualStudio.Modeling.MetaAttributeInfo)">
            <summary>
            Standard override. Defer to GetValueForCustomStoredAttribute.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRangeDefinition.SetValueForCustomStoredAttribute(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,System.Object)">
            <summary>
            Standard override. All custom storage properties are derived, not
            stored. Actual changes are handled in FactTypeChangeRule.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRangeDefinition.IsText">
            <summary>
            Tests if the associated data type is a text type.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRangeDefinition.ParseDefinition(System.String)">
            <summary>
            Breaks a value range definition into value ranges and adds them
            to the ValueRangeCollection.
            </summary>
            <param name="newDefinition">The string containing a value range definition.</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRangeDefinition.TrimDefinitionMarkers(System.String)">
            <summary>
            Removes the left- and right-strings which denote a value range definition.
            </summary>
            <param name="definition">The string to remove left and right value range definition strings from.</param>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueRangeDefinition.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueRangeDefinition.TextMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueRangeDefinition.valueRangeDefinitionTextFieldHandler">
            <summary>
            FieldHandler for ValueRangeDefinition.Text field
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRangeDefinition.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueRangeDefinition.Text">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueRangeDefinition.ValueRangeCollection">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ValueRangeDefinition.ValueRangeDefinitionTextFieldHandler">
            <summary>
            Implement the field handler for ValueRangeDefinition.Text
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRangeDefinition.ValueRangeDefinitionTextFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueRangeDefinition.ValueRangeDefinitionTextFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the ValueRangeDefinition.Text field handler
            </summary>
            <value>ValueRangeDefinitionTextFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueRangeDefinition.ValueRangeDefinitionTextFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the ValueRangeDefinition.Text field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ValueTypeValueRangeDefinition">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueTypeValueRangeDefinition.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueTypeValueRangeDefinition.IsText">
            <summary>
            Tests if the associated data type is a text type.
            </summary>
            <returns>
            Returns true if the associated object's datatype is a
            TextDataType; otherwise, false.
            </returns>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueTypeValueRangeDefinition.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueTypeValueRangeDefinition.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueTypeValueRangeDefinition.CreateValueTypeValueRangeDefinition(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueTypeValueRangeDefinition.CreateAndInitializeValueTypeValueRangeDefinition(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueTypeValueRangeDefinition.ValueType">
            <summary>
            
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueTypeValueRangeDefinition.ValueTypeValueRangeDefinitionChangeRule.ElementAttributeChanged(Microsoft.VisualStudio.Modeling.ElementAttributeChangedEventArgs)">
            <summary>
            Translate the Text property
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.RoleValueRangeDefinition">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.RoleValueRangeDefinition.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RoleValueRangeDefinition.IsText">
            <summary>
            Tests if the associated data type is a text type.
            </summary>
            <returns>
            Returns true if the associated object's datatype is a
            TextDataType; otherwise, false.
            </returns>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.RoleValueRangeDefinition.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RoleValueRangeDefinition.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RoleValueRangeDefinition.CreateRoleValueRangeDefinition(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RoleValueRangeDefinition.CreateAndInitializeRoleValueRangeDefinition(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.RoleValueRangeDefinition.Role">
            <summary>
            
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RoleValueRangeDefinition.RoleValueRangeDefinitionChangeRule.ElementAttributeChanged(Microsoft.VisualStudio.Modeling.ElementAttributeChangedEventArgs)">
            <summary>
            Translate the Text property
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.Editors.ElementPicker">
            <summary>
            A base class used to display a simple list of elements
            the property grid. Derived classes override the GetContentList
            method to return items, and alternately the LastControlSize and
            NullItemText getters to control the list contents.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Editors.ElementPicker.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Required UITypeEditor override. Opens dropdown modally
            and waits for user input.
            </summary>
            <param name="context">The descriptor context. Used to retrieve
            the live instance and other data.</param>
            <param name="provider">The service provider for the given context.</param>
            <param name="value">The current property value</param>
            <returns>The updated property value, or the orignal value to effect a cancel</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Editors.ElementPicker.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Select a drop down style
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Editors.ElementPicker.GetContentList(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>
            Generate and return a list to display in the item picker. The initial
            value (if it is not null) must be included in the returned set. If null values
            are allowed, the NullItemText getter should also be overridden.
            </summary>
            <param name="context">ITypeDescriptorContext passed in by the system</param>
            <param name="value">The current value</param>
            <returns>A list. An empty list will</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Editors.ElementPicker.TranslateFromDisplayObject(System.Int32,System.Object)">
            <summary>
            Give a derived class with an opportunity to change the
            chosen object from the dropdown list into a different type
            of object. This allows the passed in candidate list to contain
            objects that have a different type than the type of the property.
            TranslateFromDisplayObject is called when the user selects an item
            in the dropdown.
            </summary>
            <param name="newIndex">The index chosen from the list. If the null
            item was chosen, then the newIndex will be -1</param>
            <param name="newObject">The chosen object. Can be null.</param>
            <returns>Default implementation returns newObject</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Editors.ElementPicker.TranslateToDisplayObject(System.Object,System.Collections.IList)">
            <summary>
            Give a derived class with an opportunity to change the
            chosen object from the dropdown list into a different type
            of object. This allows the passed in candidate list to contain
            objects that have a different type than the type of the property.
            TranslateToDisplayObject is called to determine the initial selection
            in the dropdown.
            </summary>
            <param name="initialObject">The starting value of the property</param>
            <param name="contentList">The list returned from GetContentList</param>
            <returns>Default implementation returns initialObject</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Editors.ElementPicker.IsDropDownResizable">
            <summary>
            Allow resizing
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Editors.ElementPicker.NullItemText">
            <summary>
            Override and set a text value to allow a null element to be returned
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Editors.ElementPicker.LastControlSize">
            <summary>
            Controls the size of the dropdown for a given type as it opens and closes. Override
            both the setter and getter to change the value for specific controls
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Editors.ElementPicker.DropDownListBox.LastSelectedIndex">
            <summary>
            For some reason, the base SelectedItem property
            is null if the commit is made with an Enter instead
            of a double click. Track the selected item index separately.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.Editors.EditorUtility">
            <summary>
            Static helper functions to use with UITypeEditor
            implementations
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Editors.EditorUtility.ResolveContextInstance(System.Object,System.Boolean)">
            <summary>
            Selection context is often based on a wrapper shape, such
            as a NodeShape or a tree node in a model browser. Use this
            helper function to resolve known element containers to get to the
            backing element.
            </summary>
            <param name="instance">The selected object returned by ITypeDescriptorContext.Instance</param>
            <param name="pickAnyElement">If an array of elements is passed in, then any element will work as the context element.</param>
            <returns>A resolved object, or the starting instance if the item is not wrapped.</returns>
        </member>
        <member name="T:Northface.Tools.ORM.FactEditor.FactCompletionSet">
            <summary>
            A completion set manager for fact editing
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactCompletionSet.#ctor(Northface.Tools.ORM.Shell.ORMDesignerPackage,Microsoft.VisualStudio.TextManager.Interop.IVsTextView)">
            <summary>
            Construct a completion set
            </summary>
            <param name="package"></param>
            <param name="textView"></param>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactCompletionSet.Reset(System.Int32@)">
            <summary>
            Clear out the completion flags
            </summary>
            <param name="completionStatusFlags"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactCompletionSet.Dismiss">
            <summary>
            Implements IVsCompletionSet.Dismiss
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactCompletionSet.GetBestMatch(System.String,System.Int32,System.Int32@,System.UInt32@)">
            <summary>
            Implements IVsCompletionSet.GetBestMatch
            Determine the index of the closest matching completion, given 
            what has been typed so far.  Note that this is only called if
            CSF_CUSTOMMATCHING is set in this completion set's flags.  If
            *pdwFlags is set to contain one of the GBM_* flags the default 
            matching in the view uses case sensitive comparison.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactCompletionSet.GetCount">
            <summary>
            Implements IVsCompletionSet.GetCount
            Gets the number of available completions
            </summary>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactCompletionSet.GetDescriptionText(System.Int32,System.String@)">
            <summary>
            Implements IVsCompletionSet.GetDescriptionText. To get this method called GetFlags()
            must include UpdateCompletionFlags.CSF_HAVEDESCRIPTIONS
            </summary>
            <param name="iIndex"></param>
            <param name="pbstrDescription"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactCompletionSet.GetDisplayText(System.Int32,System.String@,System.Int32[])">
            <summary>
            Implements IVsCompletionSet.GetDisplayText
            Get the text of a completion, as it is to be displayed in the list.
            The pointer returned should be maintained by the completion set
            object, and remain valid until final release, or until updated
            through IVsTextView::UpdateCompletionStatus
            </summary>
            <param name="iIndex"></param>
            <param name="ppszText"></param>
            <param name="piGlyph"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactCompletionSet.GetFlags">
            <summary>
            Implements IVsCompletionSet.GetFlags
            Flags indicating specific behaviors of this completion set (CSF_* in textmgr.idl)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactCompletionSet.GetImageList(System.IntPtr@)">
            <summary>
            Implements IVsCompletionSet.GetImageList
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactCompletionSet.GetInitialExtent(System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Implements IVsCompletionSet.GetInitialExtent
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactCompletionSet.OnCommit(System.String,System.Int32,System.Int32,System.UInt16,System.String@)">
            <summary>
            Implements IVsCompletionSet.OnCommit
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.FactEditor.FactCompletionSet.CurrentDocumentView">
            <summary>
            Get the FactCompletionSet's current DocData.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.FactEditor.FactCompletionSet.EditFact">
            <summary>
            Get or set the selected fact we are editing.
            </summary>
            <value></value>
        </member>
        <member name="P:Northface.Tools.ORM.FactEditor.FactCompletionSet.ObjectCount">
            <summary>
            Gets the number of objects in the completion set dropdown
            </summary>		
        </member>
        <member name="T:Northface.Tools.ORM.FactEditor.FactCompletionSet.ObjectTypeNameComparer">
            <summary>
            Compare ObjectType objects by their name
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactCompletionSet.ObjectTypeNameComparer.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.FactEditor.FactEditorFactory">
            <summary>
            The factory which creates instances of the ORM fact editor. A factory is created
            when the ORM package initializes
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactEditorFactory.#ctor(Northface.Tools.ORM.Shell.ORMDesignerPackage)">
            <summary>
            Create an instance of the package
            </summary>
            <param name="package">An ORMDesignerPackage which has a managed IServerProvider</param>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactEditorFactory.Close">
            <summary>
            Implements IVsEditorFactory.Close
            </summary>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactEditorFactory.CreateEditorInstance(System.UInt32,System.String,System.String,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.IntPtr,System.IntPtr@,System.IntPtr@,System.String@,System.Guid@,System.Int32@)">
            <summary>
            Implements IVsEditorFactory.CreateEditorInstance
            </summary>
            <param name="grfCreateDoc"></param>
            <param name="pszMkDocument"></param>
            <param name="pszPhysicalView"></param>
            <param name="pvHier"></param>
            <param name="itemid"></param>
            <param name="punkDocDataExisting"></param>
            <param name="ppunkDocView"></param>
            <param name="ppunkDocData"></param>
            <param name="pbstrEditorCaption"></param>
            <param name="pguidCmdUI"></param>
            <param name="pgrfCDW"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactEditorFactory.MapLogicalView(System.Guid@,System.String@)">
            <summary>
            Implements IVsEditorFactory.MapLogicalView
            </summary>
            <param name="rguidLogicalView"></param>
            <param name="pbstrPhysicalView"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactEditorFactory.SetSite(Microsoft.VisualStudio.OLE.Interop.IServiceProvider)">
            <summary>
            Implements IVsEditorFactory.SetSite
            </summary>
            <param name="psp"></param>
            <returns></returns>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.SubtypeFact">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.FactType">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.INamedElementDictionaryChild">
            <summary>
            An interface to mark a child element as a participant
            in a named element dictionary. This interface should
            only be specified on NamedElement-derived classes.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.INamedElementDictionaryChild.GetRoleGuids(System.Guid@,System.Guid@)">
            <summary>
            Return the role guids to get from a child element
            to its containing parent set.
            </summary>
            <param name="parentMetaRoleGuid"></param>
            <param name="childMetaRoleGuid"></param>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactType.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactType.NestingTypeDisplayMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactType.GetReadingOrder(Northface.Tools.ORM.ObjectModel.FactType,Northface.Tools.ORM.ObjectModel.Role[])">
            <summary>
            Gets a reading order, first by trying to find it, if one doesn't exist
            it will then create a new ReadingOrder. It operates under the assumption
            that a transaction has already been started.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactType.FindMatchingReadingOrder(Northface.Tools.ORM.ObjectModel.FactType,Northface.Tools.ORM.ObjectModel.Role[])">
            <summary>
            Lookes for a ReadingOrder that has the roles in the same order
            as the currently selected role order.
            </summary>
            <returns>The reading order if found, null if it was not.</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactType.FindMatchingReadingOrder(Northface.Tools.ORM.ObjectModel.FactType)">
            <summary>
            Gets the reading order that matches the currently displayed order of the
            fact that is passed in.
            </summary>
            <returns>The matching ReadingOrder or null if one does not exist.</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactType.CreateReadingOrder(Northface.Tools.ORM.ObjectModel.FactType,Northface.Tools.ORM.ObjectModel.Role[])">
            <summary>
            Creates a new ReadingOrder with the same role sequence as the currently selected one.
            A transaction should have been pushed before calling this method. It operates under
            the assumption that a transaction has already been started.
            </summary>
            <returns>Should always return a value unless there was an error creating the ReadingOrder</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactType.GetInternalConstraints(Northface.Tools.ORM.ObjectModel.ConstraintType)">
            <summary>
            Get an enumeration of constraints of the given type
            </summary>
            <param name="filterType">The type of constraint to return</param>
            <returns>IEnumerable</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactType.GetInternalConstraints``1">
            <summary>
            Get an enumeration of constraints of the given type using generics
            </summary>
            <typeparam name="T">An internal constraint type</typeparam>
            <returns>IEnumerable</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactType.GetInternalConstraintsCount(Northface.Tools.ORM.ObjectModel.ConstraintType)">
            <summary>
            Get the number of internal constraints of the specified constraint type
            </summary>
            <param name="filterType">The type of constraint to count</param>
            <returns>int</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactType.GetClassName">
            <summary>
            Distinguish between an objectified and a
            normal fact type.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactType.CanAddChildElement(Microsoft.VisualStudio.Modeling.ElementGroupPrototype,Microsoft.VisualStudio.Modeling.ProtoElementBase)">
            <summary>
            Support adding root elements and constraints directly to the design surface
            </summary>
            <param name="elementGroupPrototype">The object representing the serialized data being added to this FactType.</param>
            <param name="protoElement">The element to add.</param>
            <returns>True if addition is allowed; otherwise, false.</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactType.MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)">
            <summary>
            Attach a deserialized InternalUniquenessConstraint to this FactType.
            Called after prototypes for these items are dropped onto the diagram
            from the toolbox.
            </summary>
            <param name="sourceElement">The element being added</param>
            <param name="elementGroup">The element describing all of the created elements</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactType.SetValueForCustomStoredAttribute(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,System.Object)">
            <summary>
            Standard override. All custom storage properties are derived, not
            stored. Actual changes are handled in FactTypeChangeRule.
            </summary>
            <param name="attribute">MetaAttributeInfo</param>
            <param name="newValue">object</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactType.GetValueForCustomStoredAttribute(Microsoft.VisualStudio.Modeling.MetaAttributeInfo)">
            <summary>
            Standard override. Retrieve values for calculated properties.
            </summary>
            <param name="attribute">MetaAttributeInfo</param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactType.GetOldValueForCustomStoredAttribute(Microsoft.VisualStudio.Modeling.MetaAttributeInfo)">
            <summary>
            Standard override. Defer to GetValueForCustomStoredAttribute.
            </summary>
            <param name="attribute">MetaAttributeInfo</param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactType.GetRoleGuids(System.Guid@,System.Guid@)">
            <summary>
            Implementation of INamedElementDictionaryChild.GetRoleGuids. Identifies
            this child as participating in the 'ModelHasFactType' naming set.
            </summary>
            <param name="parentMetaRoleGuid">Guid</param>
            <param name="childMetaRoleGuid">Guid</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactType.ValidateErrors(Northface.Tools.ORM.ObjectModel.INotifyElementAdded)">
            <summary>
            Implements IModelErrorOwner.ValidateErrors
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactType.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactType.NestingTypeDisplayMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactType.factTypeNestingTypeDisplayFieldHandler">
            <summary>
            FieldHandler for FactType.NestingTypeDisplay field
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactType.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactType.CreateFactType(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactType.CreateAndInitializeFactType(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactType.GetCustomSerializedChildElementInfo">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactType.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactType.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactType.MapChildElement(System.String,System.String,System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactType.MapAttribute(System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactType.ExternalFactConstraintCollection">
            <summary>
            Get a read-only collection of FactConstraint links. Use the
            appropriate methods on IFactConstraint to get to the Constraint
            and RoleCollection values for each returned constraint.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactType.FactConstraintCollection">
            <summary>
            Get a collection of all constraints associated with this fact,
            along with the roles on this fact that are used by each fact
            constraint.
            </summary>
            <value></value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactType.ErrorCollection">
            <summary>
            Returns the error associated with the fact.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactType.NestingTypeDisplay">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactType.DerivationRule">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactType.NestingType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactType.RoleCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactType.Model">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactType.MultiColumnExternalConstraintCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactType.SingleColumnExternalConstraintCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactType.DuplicateNameError">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactType.ReadingOrderCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactType.InternalConstraintCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactType.ReadingRequiredError">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactType.InternalUniquenessConstraintRequiredError">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactType.SupportedCustomSerializedOperations">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactType.CustomSerializedElementInfo">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactType.CustomSerializedChildRoleComparer">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactType.FactConstraintCollectionImpl.#ctor(Northface.Tools.ORM.ObjectModel.FactType,System.Boolean,System.Boolean)">
            <summary>
            Create a FactConstraint collection for the given fact type. Fact constraints
            come from multiple links, this puts them all together.
            </summary>
            <param name="factType">The parent fact type</param>
            <param name="includeInternalConstraints">true to include internal fact constraints</param>
            <param name="includeExternalConstraints">true to include external fact constraints</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactType.FactTypeChangeRule.ElementAttributeChanged(Microsoft.VisualStudio.Modeling.ElementAttributeChangedEventArgs)">
            <summary>
            Forward through the property grid property to the underlying
            nesting type property
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.FactType.ModelHasInternalConstraintAddRuleModelValidation">
            <summary>
            Only validates the InternalUniquenessConstraintRequired error
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.FactType.ModelHasInternalConstraintRemoveRuleModelValidation">
            <summary>
            Only validates the InternalUniquenessConstraintRequired error
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.FactType.ModelHasFactTypeAddRuleModelValidation">
            <summary>
            Calls the validation of all FactType related errors
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.FactType.FactTypeHasReadingOrderAddRuleModelValidation">
            <summary>
            Only validates ReadingRequiredError
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.FactType.FactTypeHasReadingOrderRemovedRuleModelValidation">
            <summary>
            Only validates ReadingRequiredError
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.FactType.ReadingOrderHasReadingAddRuleModelValidation">
            <summary>
            Only validates ReadingRequiredError
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.FactType.ReadingOrderHasReadingRemoveRuleModelValidation">
            <summary>
            Only validates ReadingRequiredError
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.FactType.FactTypeNestingTypeDisplayFieldHandler">
            <summary>
            Implement the field handler for FactType.NestingTypeDisplay
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactType.FactTypeNestingTypeDisplayFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactType.FactTypeNestingTypeDisplayFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the FactType.NestingTypeDisplay field handler
            </summary>
            <value>FactTypeNestingTypeDisplayFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactType.FactTypeNestingTypeDisplayFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the FactType.NestingTypeDisplay field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactType.CustomSortChildComparer.#ctor(Microsoft.VisualStudio.Modeling.Store)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactType.CustomSortChildComparer.Compare(Microsoft.VisualStudio.Modeling.MetaRoleInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactType.CustomSortChildComparer.Equals(Microsoft.VisualStudio.Modeling.MetaRoleInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactType.CustomSortChildComparer.GetHashCode(Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.SubtypeFact.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SubtypeFact.Create(Northface.Tools.ORM.ObjectModel.ObjectType,Northface.Tools.ORM.ObjectModel.ObjectType)">
            <summary>
            Set the derived type as a subtype of the base type
            </summary>
            <param name="subtype">The object type to use as the subtype (base type)</param>
            <param name="supertype">The object type to use as the supertype (derived type)</param>
            <returns>Subtype object</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SubtypeFact.GetClassName">
            <summary>
            Display this type with a different name than a fact type
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SubtypeFact.ShouldCreatePropertyDescriptor(Microsoft.VisualStudio.Modeling.MetaAttributeInfo)">
            <summary>
            Hide the NestingType property (cannot be set for a SubtypeFact)
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SubtypeFact.GetComponentName">
            <summary>
            Display a formatted string defining the relationship
            for the component name
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.SubtypeFact.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SubtypeFact.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SubtypeFact.CreateSubtypeFact(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SubtypeFact.CreateAndInitializeSubtypeFact(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.SubtypeFact.Subtype">
            <summary>
            Get the subtype for this relationship
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.SubtypeFact.Supertype">
            <summary>
            Get the super type for this relationship
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.SubtypeFact.InitializeSubtypeAddRule">
            <summary>
            A rule to create a subtype-style FactType with all
            of the required roles and constraints.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SubtypeFact.InitializeSubtypeAddRule.ElementAdded(Microsoft.VisualStudio.Modeling.ElementAddedEventArgs)">
            <summary>
            Make sure a Subtype is a 1-1 fact with a mandatory role
            on the base type (role 0)
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.SubtypeFact.LimitSubtypeConstraintsAddRule">
            <summary>
            Block internal constraints from being added to a subtype
            after it is included in a model.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SubtypeFact.LimitSubtypeConstraintsAddRule.ElementAdded(Microsoft.VisualStudio.Modeling.ElementAddedEventArgs)">
            <summary>
            Block internal constraint modification on subtypes
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.SubtypeFact.LimitSubtypeConstraintsRemoveRule">
            <summary>
            Block internal constraints from being removed from a subtype
            after it is included in a model.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SubtypeFact.LimitSubtypeConstraintsRemoveRule.ElementRemoved(Microsoft.VisualStudio.Modeling.ElementRemovedEventArgs)">
            <summary>
            Block internal constraint modification on subtypes
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.SubtypeFact.LimitSubtypeRolesAddRule">
            <summary>
            Block roles from being added to a subtype
            after it is included in a model.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SubtypeFact.LimitSubtypeRolesAddRule.ElementAdded(Microsoft.VisualStudio.Modeling.ElementAddedEventArgs)">
            <summary>
            Block internal constraint modification on subtypes
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.SubtypeFact.LimitSubtypeRolesRemoveRule">
            <summary>
            Block roles from being removed from a subtype
            after it is included in a model.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SubtypeFact.LimitSubtypeRolesRemoveRule.ElementRemoved(Microsoft.VisualStudio.Modeling.ElementRemovedEventArgs)">
            <summary>
            Block internal role modification on subtypes
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.SubtypeFact.LimitSubtypeConstraintRolesAddRule">
            <summary>
            Block internal constraints from being modified on a subtype.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SubtypeFact.LimitSubtypeConstraintRolesAddRule.ElementAdded(Microsoft.VisualStudio.Modeling.ElementAddedEventArgs)">
            <summary>
            Block internal constraint modification on subtypes
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.SubtypeFact.LimitSubtypeConstraintRolesRemoveRule">
            <summary>
            Block roles from being removed from subtype constraints
            after it is included in a model.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SubtypeFact.LimitSubtypeConstraintRolesRemoveRule.ElementRemoved(Microsoft.VisualStudio.Modeling.ElementRemovedEventArgs)">
            <summary>
            Block internal role modification on subtypes
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.SubtypeFact.RemoveSubtypeWhenRolePlayerRemoved">
            <summary>
            Ensure that a role player deletion on a subtype results in a deletion
            of the subtype itself.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SubtypeFact.RemoveSubtypeWhenRolePlayerRemoved.ElementRemoved(Microsoft.VisualStudio.Modeling.ElementRemovedEventArgs)">
            <summary>
            Remove the full SubtypeFact when a role player is removed
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.LocatedElement">
            <summary>
            A structure to return a located element, or a collection
            of elements with the same name.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.LocatedElement.Empty">
            <summary>
            An empty LocatedElement structure
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.LocatedElement.#ctor(Microsoft.VisualStudio.Modeling.NamedElement)">
            <summary>
            Construct with a single element
            </summary>
            <param name="singleElement">A NamedElement object</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.LocatedElement.#ctor(System.Collections.ICollection)">
            <summary>
            Construct with multiple elements
            </summary>
            <param name="multipleElements">A collection of NamedElement objects</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.LocatedElement.#ctor(System.Object)">
            <summary>
            Construct with single or multiple elements
            </summary>
            <param name="element">A NamedElement or a collection of NamedElements</param>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.LocatedElement.SingleElement">
            <summary>
            Get a single element. Returns null
            if multiple elements were found with the same name.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.LocatedElement.MultipleElements">
            <summary>
            Get a collection of elements. Returns null if only a
            single element was found.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.LocatedElement.IsEmpty">
            <summary>
            Is the element empty?
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.LocatedElement.AnyElement">
            <summary>
            Get either the SingleElement or the MultipleElements
            value.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.LocatedElement.FirstElement">
            <summary>
            Get either the SingleElement or the first of the multiple elements
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.IDuplicateNameCollectionManager">
            <summary>
            A callback interface to construct a collection of
            elements with the same name. A concrete implementation
            can either collection the elements into an array-like
            collection, or create IMS objects for tracking the errors
            in the object model.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.IDuplicateNameCollectionManager.OnDuplicateElementAdded(System.Collections.ICollection,Microsoft.VisualStudio.Modeling.NamedElement,System.Boolean,Northface.Tools.ORM.ObjectModel.INotifyElementAdded)">
            <summary>
            An element was added whose name conflicted with one or
            more existing elements. This method should create or add
            to a collection of these elements. OnDuplicateElementAdded
            will be called twice when the first duplicate is found. The
            first call will have elementCollection == null and should be
            used to create the collection and add the first item. The second
            call will return the created collection with the second element.
            </summary>
            <param name="elementCollection">An existing collection, or null
            to initialize the collection and populate it with the first element.</param>
            <param name="element">The duplicate element</param>
            <param name="afterTransaction">The store is not in a transaction, so store
            modifications should not be made. This parameter will be true during
            events, which only fire during undo/redo. In this state, a collection that
            is implemented through the IMS will be extant in the desired state in
            the store and needs to be located and returned.</param>
            <param name="notifyAdded">Used during deserialization fixup to
            track elements that are added while rules are disabled</param>
            <returns>A new (or modified) collection containing all elements.</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.IDuplicateNameCollectionManager.OnDuplicateElementRemoved(System.Collections.ICollection,Microsoft.VisualStudio.Modeling.NamedElement,System.Boolean)">
            <summary>
            A duplicate element has been removed. This method is also responsible
            for destroying the collection as the last element is removed.
            </summary>
            <param name="elementCollection">An existing collection containing the
            removed element and other duplicates.</param>
            <param name="element">The element to remove.</param>
            <param name="afterTransaction">The store is not in a transaction, so store
            modifications should not be made. This parameter will be true during
            events, which only interaction with the name dictionaries during undo/redo.
            In this state, a collection implemented through the IMS should not be modified.</param>
            <returns>A new (or modified) collection containing all elements.</returns>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.DuplicateNameAction">
            <summary>
            Specifies how like-named elements should be
            handled by the INamedElementDictionary implementation.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.DuplicateNameAction.ModifyDuplicateCollection">
            <summary>
            Create or modify a duplicate element collection when a duplicate
            is added or removed. Maps to afterTransaction=true parameter values
            in calls to the IDuplicateNameCollectionManager interface.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.DuplicateNameAction.RetrieveDuplicateCollection">
            <summary>
            Retrieve a duplicate element collection when a duplicate
            is added or removed. Maps to afterTransaction=false parameter values
            in calls to the IDuplicateNameCollectionManager interface.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.DuplicateNameAction.ThrowOnDuplicateName">
            <summary>
            Disallow a new duplicate.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.INamedElementDictionary">
            <summary>
            An interface used to manage names on an object
            and provide a quick lookup mechanism for retrieving them.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.INamedElementDictionary.AddElement(Microsoft.VisualStudio.Modeling.NamedElement,Northface.Tools.ORM.ObjectModel.DuplicateNameAction,Northface.Tools.ORM.ObjectModel.INotifyElementAdded)">
            <summary>
            An element has been added. Generate a unique name
            if the name is empty, or ensure a unique name if
            the Name property is not set.
            </summary>
            <param name="element">The element to add.</param>
            <param name="duplicateAction">Specify the action
            to take if the name is already in use in the dictionary.</param>
            <param name="notifyAdded">The listener to notify if elements are added during fixup</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.INamedElementDictionary.RemoveElement(Microsoft.VisualStudio.Modeling.NamedElement,System.String,Northface.Tools.ORM.ObjectModel.DuplicateNameAction)">
            <summary>
            An element is being removed.
            </summary>
            <param name="element">The element to remove</param>
            <param name="alternateElementName">If specified, a name to use instead of
            the current element name value</param>
            <param name="duplicateAction">Specify the action
            to take if the name is already in use in the dictionary.</param>
            <returns>true if the element was successfully removed</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.INamedElementDictionary.ReplaceElement(Microsoft.VisualStudio.Modeling.NamedElement,Microsoft.VisualStudio.Modeling.NamedElement,Northface.Tools.ORM.ObjectModel.DuplicateNameAction)">
            <summary>
            An element is being replaced with another element.
            </summary>
            <param name="originalElement">The element to remove</param>
            <param name="replacementElement">The element to replace it with</param>
            <param name="duplicateAction">Specify the action
            to take if the name is already in use in the dictionary.</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.INamedElementDictionary.RenameElement(Microsoft.VisualStudio.Modeling.NamedElement,System.String,System.String,Northface.Tools.ORM.ObjectModel.DuplicateNameAction)">
            <summary>
            An element has been renamed.
            </summary>
            <param name="element">The element being renamed</param>
            <param name="oldName">The old name for the element</param>
            <param name="newName">The new name for the element</param>
            <param name="duplicateAction">Specify the action
            to take if the name is already in use in the dictionary.</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.INamedElementDictionary.GetElement(System.String)">
            <summary>
            Find elements matching the given name 
            </summary>
            <param name="elementName">The name to locate</param>
            <returns>A LocatedElement structure, indicating no, 1, or
            multiple matches.</returns>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.INamedElementDictionaryParent">
            <summary>
            An interface implemented on the parent role player
            in a name dictionary setup.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.INamedElementDictionaryParent.GetCounterpartRoleDictionary(System.Guid,System.Guid)">
            <summary>
            Get the dictionary corresponding to the elements
            at the counterpart end of the relationship.
            </summary>
            <param name="parentMetaRoleGuid">The role played by
            the implementing object. Generally, this will
            be called for an aggregating role.</param>
            <param name="childMetaRoleGuid">The opposite role,
            representing the many end of the set.</param>
            <returns>INamedElementDictionary implementation</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.INamedElementDictionaryParent.GetAllowDuplicateNamesContextKey(System.Guid,System.Guid)">
            <summary>
            A key to test against the transaction context to determine if
            duplicate names should be allowed or not. Three values are treated
            specially:
            NamedElementDictionary.AllowDuplicateNamesKey allows duplicates with
               checking the ContextInfo of the current transaction.
            NamedElementDictionary.BlockDuplicateNamesKey disallows duplicates with
               checking the ContextInfo of the current transaction.
            null is interpreted as ModelingDocData.Loading. A null return enables
               duplicates during document load, but disallows duplicates in subsequent editing
            </summary>
            <param name="parentMetaRoleGuid"></param>
            <param name="childMetaRoleGuid"></param>
            <returns></returns>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.INamedElementDictionaryLink">
            <summary>
            An interface to mark an ElementLink as the relationship
            that controls a set of named elements. Technically, this
            information can be derived by investigating the role players,
            but this is much more work than we want to do whenever an
            ElementLink is added.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.INamedElementDictionaryLink.ParentRolePlayer">
            <summary>
            Get the parent role player
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.INamedElementDictionaryLink.ChildRolePlayer">
            <summary>
            Get the child role player
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.NamedElementDictionary">
            <summary>
            A class used to enforce naming across a relationship
            representing a collection of NamedElement children.
            Duplicate element collection creation, name generation,
            and exception handling can all be controlled by derived classes.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.NamedElementDictionary.RulePriority">
            <summary>
            A large negative number used to make sure the name generation
            rules fire very early.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.NamedElementDictionary.AllowDuplicateNamesKey">
            <summary>
            A key to return from INamedElementDictionaryParent.GetAllowDuplicateNamesContextKey
            if duplicate names should be allowed.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.NamedElementDictionary.BlockDuplicateNamesKey">
            <summary>
            A key to return from INamedElementDictionaryParent.GetAllowDuplicateNamesContextKey
            if duplicate names should not be allowed.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.NamedElementDictionary.myChangeStack">
            <summary>
            A stack of changes that need to be reverted if the
            transaction is rolled back. Managed by methods in the
            EntryStateChange structure. Note that each dictionary
            will be contained within a single store, and a store can
            only have one top-level transaction at a time, so storing
            this with the object is sufficient.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NamedElementDictionary.#ctor(Northface.Tools.ORM.ObjectModel.IDuplicateNameCollectionManager)">
            <summary>
            Construct a NamedElementDictionary with the specified duplicate
            collection manager
            </summary>
            <param name="duplicateManager">IDuplicateNameCollectionManager implementation</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NamedElementDictionary.#ctor">
            <summary>
            Default constructor. Uses a basic collection manager with no IMS ties
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NamedElementDictionary.GetRootNamePattern(Microsoft.VisualStudio.Modeling.NamedElement)">
            <summary>
            Get the root name for generating a unique name for this
            element. A unique name is generated by default by appending
            numbers to the end of the string. However, the numbers can
            be placed elsewhere in the string by including the formatting
            sequence '{0}' anywhere in the returned string.
            </summary>
            <param name="element">The element to generate a name for</param>
            <returns>A string to use as the base name. Can include {0} to
            indicate where the unique numbers should be included in the string.</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NamedElementDictionary.ThrowDuplicateNameException(Microsoft.VisualStudio.Modeling.NamedElement,System.String)">
            <summary>
            Override to throw a custom exception when
            adding duplicate names is not allowed.
            </summary>
            <param name="element">The element that could not be added due to the duplicate name</param>
            <param name="requestedName"></param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NamedElementDictionary.GenerateUniqueName(Microsoft.VisualStudio.Modeling.NamedElement)">
            <summary>
            Generate a unique name for this element. Defers to
            GetRootNamePattern to get a starting name pattern
            </summary>
            <param name="element">NamedElement</param>
            <returns>A name that is not currently in the dictionary.</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NamedElementDictionary.AddElement(Microsoft.VisualStudio.Modeling.NamedElement,Northface.Tools.ORM.ObjectModel.DuplicateNameAction,Northface.Tools.ORM.ObjectModel.INotifyElementAdded)">
            <summary>
            Implements INamedElementDictionary.AddElement
            </summary>
            <param name="element">NamedElement</param>
            <param name="duplicateAction">DuplicateNameAction</param>
            <param name="notifyAdded">Set if a callback is required when an element is added
            during the IDuplicateNameCollectionManager.OnDuplicateElementAdded. Used
            during deserialization fixup</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NamedElementDictionary.AddElement(Microsoft.VisualStudio.Modeling.NamedElement,Northface.Tools.ORM.ObjectModel.DuplicateNameAction,System.String,Northface.Tools.ORM.ObjectModel.INotifyElementAdded)">
            <summary>
            Add an element with a provided name (ignores the current element name).
            Helper function for AddElement and ReplaceElement
            </summary>
            <param name="element">NamedElement</param>
            <param name="duplicateAction">DuplicateNameAction</param>
            <param name="elementName">Name to use as the remove key</param>
            <param name="notifyAdded">Set if a callback is required when an element is added
            during the IDuplicateNameCollectionManager.OnDuplicateElementAdded. Used
            during deserialization fixup</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NamedElementDictionary.RemoveElement(Microsoft.VisualStudio.Modeling.NamedElement,System.String,Northface.Tools.ORM.ObjectModel.DuplicateNameAction)">
            <summary>
            Implements INamedElementDictionary.RemoveElement, and helper function
            for ReplaceEmenet.
            Remove an element with a provided name. The current element name is
            used if the alternate is not provided.
            </summary>
            <param name="element">NamedElement</param>
            <param name="alternateElementName">If specified, a name to use instead of
            the current element name value</param>
            <param name="duplicateAction">DuplicateNameAction</param>
            <returns>true if the element was successfully removed</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NamedElementDictionary.ReplaceElement(Microsoft.VisualStudio.Modeling.NamedElement,Microsoft.VisualStudio.Modeling.NamedElement,Northface.Tools.ORM.ObjectModel.DuplicateNameAction)">
            <summary>
            Implements INamedElementDictionary.ReplaceElement
            </summary>
            <param name="originalElement">NamedElement</param>
            <param name="replacementElement">NamedElement</param>
            <param name="duplicateAction">DuplicateNameAction</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NamedElementDictionary.RenameElement(Microsoft.VisualStudio.Modeling.NamedElement,System.String,System.String,Northface.Tools.ORM.ObjectModel.DuplicateNameAction)">
            <summary>
            Implements INamedElementDictionary.RenameElement
            </summary>
            <param name="element">NamedElement</param>
            <param name="oldName">string</param>
            <param name="newName">string</param>
            <param name="duplicateAction">duplicateAction</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NamedElementDictionary.GetElement(System.String)">
            <summary>
            Return element(s) with the given name
            </summary>
            <param name="elementName">string</param>
            <returns>LocatedElement structure</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NamedElementDictionary.GetFixupListener(System.Int32)">
            <summary>
            Return a deserialization fixup listener. The listener
            ensures that the name dictionaries are correctly populated
            after a model deserialization is completed.
            </summary>
            <param name="implicitFixupPhase">A fixup phase for adding implicitly
            created elements and populating the name dictionaries</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NamedElementDictionary.GetDuplicateNameActionForRule(Microsoft.VisualStudio.Modeling.NamedElement,System.Object)">
            <summary>
            Translate the current store context settings into
            a duplicate name action setting
            </summary>
            <param name="element">The element to add</param>
            <param name="contextKey">The key to look for</param>
            <returns>DuplicateNameAction (ModifyDuplicateCollection or ThrowOnDuplicateName)</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NamedElementDictionary.HandleAddRemove(Microsoft.VisualStudio.Modeling.ModelElement,System.Boolean,System.Boolean)">
            <summary>
            Add or remove elements to associated named element
            dictionaries when a link is added
            </summary>
            <param name="element">ModelElement to add or remove</param>
            <param name="remove">true to remove, false to add</param>
            <param name="forEvent">This call is handling an event</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NamedElementDictionary.HandleDeserializationAdd(Northface.Tools.ORM.ObjectModel.INamedElementDictionaryLink,Northface.Tools.ORM.ObjectModel.INotifyElementAdded)">
            <summary>
            Add an element resulting from deserialization fixup
            </summary>
            <param name="link">The link to add</param>
            <param name="notifyAdded">A notification interface</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NamedElementDictionary.HandleAddRemove(Northface.Tools.ORM.ObjectModel.INamedElementDictionaryLink,Microsoft.VisualStudio.Modeling.ModelElement,System.Boolean,System.Boolean,Northface.Tools.ORM.ObjectModel.INotifyElementAdded)">
            <summary>
            Add or remove elements to associated named element
            dictionaries when a link is added
            </summary>
            <param name="link">INamedElementDictionaryLink to add</param>
            <param name="element">The ModelElement (same object as link). Not required if forEvent is false</param>
            <param name="remove">true to remove, false to add</param>
            <param name="forEvent">This call is handling an event</param>
            <param name="notifyAdded">The listener to notify if elements are added during fixup.
            Passed through the INamedElementDictionary.AddElement</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NamedElementDictionary.AttachEventHandlers(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Call from ModelingDocData.AddPostLoadModelingEventHandlers to
            attach handlers that correctly deal with undo and redo scenarios.
            </summary>
            <param name="store">The store to attach to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NamedElementDictionary.DetachEventHandlers(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Call from ModelingDocData.RemoveModelingEventHandlers to detach
            handlers from the store.
            </summary>
            <param name="store">The store to detach from</param>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.NamedElementDictionary.SimpleDuplicateCollectionManager">
            <summary>
            A simple collection implementation using arrays. Does not participate
            with IMS in any way.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.NamedElementDictionary.SimpleDuplicateCollectionManager.Singleton">
            <summary>
            The singleton instance of the collection manager
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.NamedElementDictionary.DeserializationFixupListener">
            <summary>
            A listener class to validate and/or populate the ModelError
            collection on load, as well as populating the task list.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NamedElementDictionary.DeserializationFixupListener.#ctor(System.Int32)">
            <summary>
            Create a new NamedElementDictionary.DeserializationFixupListener
            </summary>
            <param name="implicitFixupPhase">A fixup phase for adding implicitly
            created elements and populating the name dictionaries</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NamedElementDictionary.DeserializationFixupListener.ProcessElement(Northface.Tools.ORM.ObjectModel.INamedElementDictionaryLink,Microsoft.VisualStudio.Modeling.Store,Northface.Tools.ORM.ObjectModel.INotifyElementAdded)">
            <summary>
            Add this element to the appropriate dictionary, and allow
            IDuplicateNameCollectionManager implementations to validate
            their current content.
            </summary>
            <param name="element">An IModelErrorOwner instance</param>
            <param name="store">The context store</param>
            <param name="notifyAdded">The listener to notify if elements are added during fixup</param>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.NamedElementDictionary.EntryStateChange">
            <summary>
            A simple structure used for rolling back changes to the
            dictionary when a transaction rolls back. The log entry
            are only used for rollbacks, there is not enough information
            to replay a change.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.NamedElementDictionary.EntryStateChange.myTransactions">
            <summary>
            A dictionary of either single NamedElementDictionary or
            collections of NamedElementDictionary implementations that
            have changes during a live transaction.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NamedElementDictionary.EntryStateChange.OnEntryChange(Microsoft.VisualStudio.Modeling.ModelElement,Northface.Tools.ORM.ObjectModel.NamedElementDictionary,System.String,System.Object)">
            <summary>
            Called before an entry is added/removed/modified in the
            dictionary.
            </summary>
            <param name="element">The element being modified. Used to get the current transaction.</param>
            <param name="dictionary">The dictionary being modified</param>
            <param name="name">The name of the element</param>
            <param name="value">The element value before the change</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NamedElementDictionary.EntryStateChange.TransactionCommitted(Microsoft.VisualStudio.Modeling.Transaction)">
            <summary>
            The transaction was successful. Clear all associated change logs and
            stop watching this transaction.
            </summary>
            <param name="transaction">The transaction being committed</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NamedElementDictionary.EntryStateChange.TransactionRolledBack(Microsoft.VisualStudio.Modeling.Transaction)">
            <summary>
            Return all dictionaries with changes during this transaction back to their
            initial states.
            </summary>
            <param name="transaction"></param>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.NamedElementDictionary.EntryStateChange.Name">
            <summary>
            The new name. Set for a name change, null otherwise.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.NamedElementDictionary.EntryStateChange.Value">
            <summary>
            The element or collection stored in this named slot prior to the change.
            A null value here indicates that the named slot did not exist
            prior to the change and should be removed on rollback.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.NamedElementDictionary.DetachedElementRecord">
            <summary>
            See discussion of the need for DetachedElementRecord in the HandleElementChanged
            routine.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NamedElementDictionary.DetachedElementRecord.#ctor(System.String,System.String)">
            <summary>
            Create a new record, recording the old and
            new names for the element
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NamedElementDictionary.DetachedElementRecord.#ctor(Northface.Tools.ORM.ObjectModel.INamedElementDictionary)">
            <summary>
            Create a new record, recording the dictionary
            it should be removed from
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NamedElementDictionary.DetachedElementRecord.MergeExisting(Northface.Tools.ORM.ObjectModel.NamedElementDictionary.DetachedElementRecord@)">
            <summary>
            Merge an existing record into this one. The dictionaries
            and old name are pulled from the existing record, while the
            new name of this record is preserved
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NamedElementDictionary.DetachedElementRecord.AddDictionary(Northface.Tools.ORM.ObjectModel.INamedElementDictionary)">
            <summary>
            Add a tracked dictionary to this record
            </summary>
            <param name="dictionary"></param>
        </member>
        <member name="T:Northface.Tools.ORM.FactEditor.FactTextViewFilter">
            <summary>
            Filter the text view and look for specific package commands
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactTextViewFilter.#ctor(Northface.Tools.ORM.Shell.ORMDesignerPackage,Microsoft.VisualStudio.TextManager.Interop.IVsTextView)">
            <summary>
            Create a text view on the editor
            </summary>
            <param name="package">The package we are attached to</param>
            <param name="view">The view to filter</param>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactTextViewFilter.Init">
            <summary>
            Initalize the filter by adding the next command target on the text view,
            then create a parser
            </summary>
            <returns>HRESULT</returns>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactTextViewFilter.Exec(System.Guid@,System.UInt32,System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            Implements IOleCommandTarget.Exec
            </summary>
            <param name="pguidCmdGroup"></param>
            <param name="nCmdID"></param>
            <param name="nCmdexecopt"></param>
            <param name="pvaIn"></param>
            <param name="pvaOut"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactTextViewFilter.QueryStatus(System.Guid@,System.UInt32,Microsoft.VisualStudio.OLE.Interop.OLECMD[],System.IntPtr)">
            <summary>
            Implements IOleCommandTarget.QueryStatus
            </summary>
            <param name="pguidCmdGroup"></param>
            <param name="cCmds"></param>
            <param name="prgCmds"></param>
            <param name="pCmdText"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactTextViewFilter.GetDataTipText(Microsoft.VisualStudio.TextManager.Interop.TextSpan[],System.String@)">
            <summary>
            Implements IVsTextViewFilter.GetDataTipText
            </summary>
            <param name="pSpan"></param>
            <param name="pbstrText"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactTextViewFilter.GetPairExtents(System.Int32,System.Int32,Microsoft.VisualStudio.TextManager.Interop.TextSpan[])">
            <summary>
            Implements IVsTextViewFilter.GetPairExtents
            </summary>
            <param name="iLine"></param>
            <param name="iIndex"></param>
            <param name="pSpan"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactTextViewFilter.GetWordExtent(System.Int32,System.Int32,System.UInt32,Microsoft.VisualStudio.TextManager.Interop.TextSpan[])">
            <summary>
            Implements IVsTextViewFilter.GetWordExtent
            </summary>
            <param name="iLine"></param>
            <param name="iIndex"></param>
            <param name="dwFlags"></param>
            <param name="pSpan"></param>
            <returns></returns>
        </member>
        <member name="P:Northface.Tools.ORM.FactEditor.FactTextViewFilter.TextView">
            <summary>
            Expose the text view so the window manager can remove command filters
            </summary>
            <value></value>
        </member>
        <member name="T:Northface.Tools.ORM.FactEditor.FactEditorColorizableItem">
            <summary>
            An indexed list of supported color items
            for the fact editor. Note that these elements
            start at 1. 0 is reserved for plain text and
            is never requested.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.FactEditor.FactEditorColorizableItem.PredicateText">
            <summary>
            The PredicateText color category
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.FactEditor.FactEditorColorizableItem.ObjectName">
            <summary>
            The ObjectName color category
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.FactEditor.FactEditorColorizableItem.ReferenceModeName">
            <summary>
            The ReferenceModeName color category
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.FactEditor.FactEditorColorizableItem.Delimiter">
            <summary>
            The Delimiter color category
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.FactEditor.FactEditorColorizableItem.Quantifier">
            <summary>
            The Quantifier color category
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.FactEditor.FactLanguageService">
            <summary>
            Language service to provide colorization
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.FactEditor.FactLanguageService.StandardColorPaletteBit">
            <summary>
            Bitwise or this value with a value from the ColorIndex array
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.FactEditor.FactLanguageService.myDefaultColorSettings">
            <summary>
            Default setting definition. Must be in the same order as
            the FactEditorColorizableItem enum
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactLanguageService.GetColorableItem(System.Int32,Microsoft.VisualStudio.TextManager.Interop.IVsColorableItem@)">
            <summary>
            Implements IVsProvideColorableItems.GetColorableItem
            </summary>
            <param name="iIndex"></param>
            <param name="ppItem"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactLanguageService.GetItemCount(System.Int32@)">
            <summary>
            Implements IVsProvideColorableItems.GetItemCount
            </summary>
            <param name="piCount"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactLanguageService.#ctor(Northface.Tools.ORM.Shell.ORMDesignerPackage)">
            <summary>
            Construct a language service for the ORM package
            </summary>
            <param name="package"></param>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactLanguageService.GetCodeWindowManager(Microsoft.VisualStudio.TextManager.Interop.IVsCodeWindow,Microsoft.VisualStudio.TextManager.Interop.IVsCodeWindowManager@)">
            <summary>
            Implements IVsLanguageInfo.GetCodeWindowManager
            </summary>
            <param name="pCodeWin"></param>
            <param name="ppCodeWinMgr"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactLanguageService.GetColorizer(Microsoft.VisualStudio.TextManager.Interop.IVsTextLines,Microsoft.VisualStudio.TextManager.Interop.IVsColorizer@)">
            <summary>
            Implements IVsLanguageInfo.GetColorizer
            </summary>
            <param name="pBuffer"></param>
            <param name="ppColorizer"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactLanguageService.GetFileExtensions(System.String@)">
            <summary>
            Implements IVsLanguageInfo.GetFileExtensions
            </summary>
            <param name="pbstrExtensions"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactLanguageService.GetLanguageName(System.String@)">
            <summary>
            Implements IVsLanguageInfo.GetLanguageName
            </summary>
            <param name="bstrName"></param>
            <returns></returns>
        </member>
        <member name="T:Northface.Tools.ORM.FactEditor.FactLanguageService.DefaultColorSetting">
            <summary>
            A helper structure for store default settings
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.SubtypeConnectAction">
            <summary>
            A connect action for attaching a base type to its derived type
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.SubtypeConnectAction.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.Diagram)">
            <summary>
            Create a role connector action for the given diagram. One
            action per diagram should be sufficient.
            </summary>
            <param name="diagram">The hosting diagram</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.SubtypeConnectAction.GetConnectionTypes(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
            <summary>
            Retrieve all connect types associated with this connect action.
            Returns an empty array unless the sourceShapeElement is an ExternalConstraintShape
            </summary>
            <param name="sourceShapeElement">The source element</param>
            <param name="targetShapeElement">The target element. Currently ignored.</param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.SubtypeConnectAction.OnMouseActionDeactivated(Microsoft.VisualStudio.Modeling.Diagrams.DiagramEventArgs)">
            <summary>
            Reset the member variables
            </summary>
            <param name="e">DiagramEventArgs</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.SubtypeConnectAction.OnMouseActionCompleted(Microsoft.VisualStudio.Modeling.Diagrams.DiagramEventArgs)">
            <summary>
            Cancel if the last hit shape is the Diagram by not forwarding
            to the base class. Otherwise, complete the action.
            </summary>
            <param name="e">DiagramEventArgs</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.SubtypeConnectAction.OnClicked(Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEventArgs)">
            <summary>
            Get the source object type or role after the
            base class sets the source shape
            </summary>
            <param name="e">MouseActionEventArgs</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.SubtypeConnectAction.OnMouseUp(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
            <summary>
            If we're emulating a drag (occurs when we're chained from RoleDragPendingAction),
            then complete the action on mouse up
            </summary>
            <param name="e">DiagramMouseEventArgs</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.SubtypeConnectAction.GetCursorFromCursorType(Microsoft.VisualStudio.Modeling.Diagrams.ConnectActionCursor)">
            <summary>
            Get a cursor from the cursor type. Returns the searching cursor for
            everything except the allowed action.
            </summary>
            <param name="connectActionCursor">The requrested cursor styl</param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.SubtypeConnectAction.ChainMouseAction(Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,System.Boolean)">
            <summary>
            Set this mouse action as the active action on the
            diagram of the given shape, and activate its drag line
            centered on the shape.
            </summary>
            <param name="chainFromPoint">The point to begin the mouse action</param>
            <param name="clientView">The active DiagramClientView</param>
            <param name="emulateDrag">true if this should emulate a drag, meaning
            that the mouse up acts like a click.</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.SubtypeConnectAction.ObjectTypeFromShape(Microsoft.VisualStudio.Modeling.PresentationElement)">
            <summary>
            Get the underlying object type for a presentation element
            </summary>
            <param name="shape">A presentation element.</param>
            <returns>An ObjectType, or null</returns>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.SubtypeConnectAction.SubtypeConnectionType">
            <summary>
            The ConnectionType used with this ConnectAction. The type
            is a singleton, holds all of the context-independent logic,
            and operates directly on shape elements.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.SubtypeConnectAction.SubtypeConnectionType.Instance">
            <summary>
            The singleton SubtypeConnectionType instance
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.SubtypeConnectAction.SubtypeConnectionType.InstanceArray">
            <summary>
            An array of one element containing the singleton SubtypeConnectionType instance
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.SubtypeConnectAction.SubtypeConnectionType.IsOfInterest(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
            <summary>
            Called as the pointer is moved over potential targets after a source is selected
            So should be pretty quick
            Gets called with a target of null when the cursor leaves the view.
            Can't find a use for this at present.
            </summary>
            <param name="sourceShapeElement">ShapeElement</param>
            <param name="targetShapeElement">ShapeElement</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.SubtypeConnectAction.SubtypeConnectionType.IsValidSourceAndTarget(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
            <summary>
            Called as the pointer is moved over potential targets after a source is selected
            So should be pretty quick
            </summary>
            <remarks>
            The cursor can change dependant on CanCreateConnection when this returns true
            </remarks>
            <param name="sourceShapeElement">ShapeElement</param>
            <param name="targetShapeElement">ShapeElement</param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.SubtypeConnectAction.SubtypeConnectionType.CanCreateConnection(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,System.String@)">
            <summary>
            Called after IsValidSourceAndTarget allows the shapes through. Used for
            more in-depth checking before ConnectionType.CreateConnection is called, and
            to display warning messages on the design surface.
            </summary>
            <param name="sourceShapeElement">The source of the requested connection</param>
            <param name="targetShapeElement">The target of the requested connection</param>
            <param name="connectionWarning">A location to write the warning string</param>
            <returns>true if the connection can proceed</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.SubtypeConnectAction.SubtypeConnectionType.CreateConnection(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.PaintFeedbackArgs)">
            <summary>
            Create a connection between an ExternalConstraintShape and a FactType. Roles
            used in the connection are stored with the currently active connect action.
            </summary>
            <param name="sourceShapeElement">The source of the requested connection</param>
            <param name="targetShapeElement">The target of the requested connection</param>
            <param name="paintFeedbackArgs">PaintFeedbackArgs</param>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.IFactConstraint">
            <summary>
            A constraint is defined such that it can have
            roles that span multiple fact types. The core
            model makes it difficult to determine which roles
            on a fact are used by a given constraint. ExternalFactConstraint
            and InternalFactConstraint relationships are generated
            automatically, but these have significantly different
            mechanisms for getting from the fact type to the constraint
            and its roles. The IFactConstraint interface is defined to
            smooth over this difference.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.IFactConstraint.Constraint">
            <summary>
            Get the constraint instance bound
            to the context fact
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.IFactConstraint.RoleCollection">
            <summary>
            Get the roles associated with both the
            constraint and the fact.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.IFactConstraint.FactType">
            <summary>
            Get the fact type instance associated
            with this constraint. All roles in RoleCollection
            will be parented to this fact.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.FactTypeRequiresReadingError">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.IRepresentModelElements">
            <summary>
            Retrieve the ModelElement associated with object. Implemented
            on objects that are directly associated with task items.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.IRepresentModelElements.GetRepresentedElements">
            <summary>
            Retrieve the model element associated with this item.
            The retrieved item should have a shape associated with
            it that can be selected on an ORM diagram. If a shape is
            not available, then aggregating parent chain is used to
            find a shape that is available.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeRequiresReadingError.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeRequiresReadingError.GenerateErrorText">
            <summary>
            Creates error text for when a fact has no readings.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeRequiresReadingError.GetRepresentedElements">
            <summary>
            The fact the error belongs to
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeRequiresReadingError.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeRequiresReadingError.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeRequiresReadingError.CreateFactTypeRequiresReadingError(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeRequiresReadingError.CreateAndInitializeFactTypeRequiresReadingError(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeRequiresReadingError.GetCustomSerializedChildElementInfo">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeRequiresReadingError.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeRequiresReadingError.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeRequiresReadingError.MapChildElement(System.String,System.String,System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeRequiresReadingError.MapAttribute(System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeRequiresReadingError.RegenerateEvents">
            <summary>
            Sets regernate to ModelNameChange | OwnerNameChange
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeRequiresReadingError.FactType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeRequiresReadingError.SupportedCustomSerializedOperations">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeRequiresReadingError.CustomSerializedElementInfo">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeRequiresReadingError.CustomSerializedChildRoleComparer">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.FactTypeRequiresInternalUniquenessConstraintError">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeRequiresInternalUniquenessConstraintError.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeRequiresInternalUniquenessConstraintError.GenerateErrorText">
            <summary>
            Creates error text for when a fact lacks an internal uniqueness constraint.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeRequiresInternalUniquenessConstraintError.GetRepresentedElements">
            <summary>
            The fact the error belongs to
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeRequiresInternalUniquenessConstraintError.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeRequiresInternalUniquenessConstraintError.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeRequiresInternalUniquenessConstraintError.CreateFactTypeRequiresInternalUniquenessConstraintError(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeRequiresInternalUniquenessConstraintError.CreateAndInitializeFactTypeRequiresInternalUniquenessConstraintError(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeRequiresInternalUniquenessConstraintError.GetCustomSerializedChildElementInfo">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeRequiresInternalUniquenessConstraintError.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeRequiresInternalUniquenessConstraintError.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeRequiresInternalUniquenessConstraintError.MapChildElement(System.String,System.String,System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeRequiresInternalUniquenessConstraintError.MapAttribute(System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeRequiresInternalUniquenessConstraintError.RegenerateEvents">
            <summary>
            Sets regernate to ModelNameChange | OwnerNameChange
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeRequiresInternalUniquenessConstraintError.FactType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeRequiresInternalUniquenessConstraintError.SupportedCustomSerializedOperations">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeRequiresInternalUniquenessConstraintError.CustomSerializedElementInfo">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeRequiresInternalUniquenessConstraintError.CustomSerializedChildRoleComparer">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.NMinusOneError">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.NMinusOneError.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NMinusOneError.GenerateErrorText">
            <summary>
            Generate text for the error
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NMinusOneError.GetRepresentedElements">
            <summary>
            Implements IRepresentModelElements.GetRepresentedElements
            </summary>
            <returns></returns>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.NMinusOneError.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NMinusOneError.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NMinusOneError.CreateNMinusOneError(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NMinusOneError.CreateAndInitializeNMinusOneError(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NMinusOneError.GetCustomSerializedChildElementInfo">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NMinusOneError.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NMinusOneError.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NMinusOneError.MapChildElement(System.String,System.String,System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NMinusOneError.MapAttribute(System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.NMinusOneError.RegenerateEvents">
            <summary>
            Regenerate the error text when the constraint name changes
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.NMinusOneError.Constraint">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.NMinusOneError.SupportedCustomSerializedOperations">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.NMinusOneError.CustomSerializedElementInfo">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.NMinusOneError.CustomSerializedChildRoleComparer">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.IConstraint">
            <summary>
            Generic information shared by all constraint
            implementers. Constraints are model differently
            depending on the RoleSequenceStyle and ownership
            of the constraint (internal/external). External
            constraints that conceptually have a single role
            in multiple rolesets are modeled as a single role
            set to reduce the object model size.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.IConstraint.ConstraintType">
            <summary>
            Get the type of this constraint
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.IConstraint.RoleSequenceStyles">
            <summary>
            Get the role settings for this constraint
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.IConstraint.ConstraintStorageStyle">
            <summary>
            Get the details of how this constraint is stored.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.IConstraint.Model">
            <summary>
            Retrieve the model for the current constraint
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ConstraintUtility">
            <summary>
            A utility class with static helper methods
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintUtility.RoleSequenceCountMinimum(Northface.Tools.ORM.ObjectModel.IConstraint)">
            <summary>
            The minimum number of required role sequences
            </summary>
            <param name="constraint">Constraint class to test</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintUtility.RoleSequenceCountMaximum(Northface.Tools.ORM.ObjectModel.IConstraint)">
            <summary>
            The maximum number of required role sequences, or -1 if no max
            </summary>
            <param name="constraint">Constraint class to test</param>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ConstraintUtility.ConstraintRoleSequenceHasRoleRemoved">
            <summary>
            Rule that fires when a constraint has a RoleSequence Removed
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintUtility.ConstraintRoleSequenceHasRoleRemoved.ElementRemoved(Microsoft.VisualStudio.Modeling.ElementRemovedEventArgs)">
            <summary>
            Runs when roleset element is removed.  If there are no more roles in the role collection
            then the entire roleset is removed
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.InternalConstraint">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequence">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequence.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequence.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequence.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequence.Constraint">
            <summary>
            Get the constraint that owns this role sequence
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequence.RoleCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequence.PreferredIdentifierFor">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.InternalConstraint.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalConstraint.EnsureConsistentRoleOwner(Northface.Tools.ORM.ObjectModel.Role)">
            <summary>
            Ensure that the role is owned by the same
            fact type as the constraint. This method should
            be called from inside a transaction
            and will throw
            </summary>
            <param name="role"></param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalConstraint.ShouldCreatePropertyDescriptor(Microsoft.VisualStudio.Modeling.MetaAttributeInfo)">
            <summary>
            Eliminate the Name property descriptor. The name is ignored for internal
            constraints.
            </summary>
            <param name="metaAttrInfo"></param>
            <returns>false for Name, defers to base for others</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalConstraint.EnsureConsistentRoleOwnerForRoleSequence(Northface.Tools.ORM.ObjectModel.FactTypeHasInternalConstraint)">
            <summary>
            Helper function to support the same fact constraint fixup
            during both deserialization and rules.
            </summary>
            <param name="link">An internal constraint added to a fact type</param>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.InternalConstraint.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalConstraint.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.InternalConstraint.ConstraintStorageStyle">
            <summary>
            The internal storage style of this constraint.
            </summary>
            <value>ConstraintStorageStyle.InternalConstraint</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.InternalConstraint.IFactConstraintRoleCollection">
            <summary>
            Implements IFactConstraint.RoleCollection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.InternalConstraint.Model">
            <summary>
            Implements IConstraint.Model. Defers to the
            model of the owning fact type.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.InternalConstraint.Constraint">
            <summary>
            An internal constraint is its own role sequence.
            Return this.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.InternalConstraint.FactType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.InternalConstraint.ConstraintRoleSequenceHasRoleAdded">
            <summary>
            If a role is added to an internal constraint then it must
            have the same owning facttype as the constraint.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.InternalConstraint.FactTypeHasInternalConstraintAdded">
            <summary>
            If an internal constraint with existing roles is added
            to a fact type, then make sure that all of the roles
            are parented to the same fact type
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraint">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraint.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraint.EnsureFactConstraintForRole(Northface.Tools.ORM.ObjectModel.Role)">
            <summary>
            Ensure that an ExternalFactConstraint exists between the
            fact type owning the passed in role and this constraint.
            ExternalFactConstraint links are generated automatically
            and should never be directly created.
            </summary>
            <param name="role">The role to attach</param>
            <returns>The associated ExternalFactConstraint relationship</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraint.EnsureFactConstraintForRoleSequence(Northface.Tools.ORM.ObjectModel.ModelHasSingleColumnExternalConstraint)">
            <summary>
            Helper function to support the same fact constraint fixup
            during both deserialization and rules.
            </summary>
            <param name="link">A roleset link added to the constraint</param>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraint.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraint.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraint.GetRoleGuids(System.Guid@,System.Guid@)">
            <summary>
            Implementation of INamedElementDictionaryChild.GetRoleGuids. Identifies
            this child as participating in the 'ModelHasObjectType' naming set.
            </summary>
            <param name="parentMetaRoleGuid">Guid</param>
            <param name="childMetaRoleGuid">Guid</param>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraint.ConstraintStorageStyle">
            <summary>
            The internal storage style of this constraint.
            </summary>
            <value>ConstraintStorageStyle.SingleColumnExternalConstraint</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraint.FixupListener">
            <summary>
            Return a deserialization fixup listener. The listener
            adds the implicit ExternalFactConstraint elements.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraint.Constraint">
            <summary>
            A single column external constraint is its own role sequence.
            Return this.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraint.FactTypeCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraint.Model">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraint.DuplicateNameError">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraint.CompatibleRolePlayerTypeError">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraint.ConstraintRoleSequenceHasRoleAdded">
            <summary>
            If a role is added after the role sequence is already attached,
            then create the corresponding ExternalFactConstraint and ExternalRoleConstraint
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraint.ConstraintHasRoleSequenceAdded">
            <summary>
            If a role sequence is added that already contains roles, then
            make sure the corresponding ExternalFactConstraint and ExternalRoleConstraint
            objects are created for each role. Note that a single column external
            constraint is a role sequence.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraint.ExternalConstraintFixupListener">
            <summary>
            Fixup listener implementation. Adds implicit ExternalFactConstraint relationships
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraint.ExternalConstraintFixupListener.#ctor">
            <summary>
            ExternalConstraintFixupListener constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraint.ExternalConstraintFixupListener.ProcessElement(Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraint,Microsoft.VisualStudio.Modeling.Store,Northface.Tools.ORM.ObjectModel.INotifyElementAdded)">
            <summary>
            Process elements by added an ExternalFactConstraint for
            each roleset
            </summary>
            <param name="element">An ExternalConstraint element</param>
            <param name="store">The context store</param>
            <param name="notifyAdded">The listener to notify if elements are added during fixup</param>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint.EnsureFactConstraintForRole(Northface.Tools.ORM.ObjectModel.Role)">
            <summary>
            Ensure that an ExternalFactConstraint exists between the
            fact type owning the passed in role and this constraint.
            ExternalFactConstraint links are generated automatically
            and should never be directly created.
            </summary>
            <param name="role">The role to attach</param>
            <returns>The associated ExternalFactConstraint relationship</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint.EnsureFactConstraintForRoleSequence(Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasRoleSequence)">
            <summary>
            Helper function to support the same fact constraint fixup
            during both deserialization and rules.
            </summary>
            <param name="link">A roleset link added to the constraint</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint.VerifyRoleSequenceCountForRule(Northface.Tools.ORM.ObjectModel.INotifyElementAdded)">
            <summary>
            Add, remove, and otherwise validate the current set of
            errors for this constraint.
            </summary>
            <param name="notifyAdded">If not null, this is being called during
            load when rules are not in place. Any elements that are added
            must be notified back to the caller.</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint.VerifyRoleSequenceArityForRule(Northface.Tools.ORM.ObjectModel.INotifyElementAdded)">
            <summary>
            Add, remove, and otherwise validate the current set of
            errors for this constraint.
            </summary>
            <param name="notifyAdded">If not null, this is being called during
            load when rules are not in place. Any elements that are added
            must be notified back to the caller.</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint.VerifyRoleSequenceArityForRule(Northface.Tools.ORM.ObjectModel.INotifyElementAdded,System.Boolean)">
            <summary>
            Add, remove, and otherwise validate the current set of
            errors for this constraint.
            </summary>
            <param name="notifyAdded">If not null, this is being called during
            load when rules are not in place. Any elements that are added
            must be notified back to the caller.</param>
            <param name="tooFewOrTooManySequences">Represents correct number of sequences
            for current constraint.  If the constraint has too few or too many sequences, 
            will remove this error if present.</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint.VerifyCompatibleRolePlayerTypeForRule(Northface.Tools.ORM.ObjectModel.INotifyElementAdded,System.Boolean)">
            <summary>
            Add, remove, and otherwise validate the current CompatibleRolePlayerType
            errors
            </summary>
            <param name="notifyAdded">If not null, this is being called during
            load when rules are not in place. Any elements that are added
            must be notified back to the caller.</param>
            <param name="tooFewOrTooManySequencesOrArity">Represents correct number of sequences
            for current constraint.  If the constraint has too few, too many, or the wrong arity of 
            sequences, it will remove this error if present.</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint.RecurseThroughSuperTypes(Northface.Tools.ORM.ObjectModel.ObjectType,Northface.Tools.ORM.ObjectModel.ObjectType)">
            <summary>
            Recurses through the ObjectType A and ObjectType B to find all the parents of the ObjectTypes, and then compares them for compatible fact types
            </summary>
            <param name="typeA">ObjectType being compared</param>
            <param name="typeB">ObjectType being compared</param>
            <returns>The two ObjectTypes are compatible</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint.FindSuperParent(Northface.Tools.ORM.ObjectModel.ObjectType)">
            <summary>
            Recurses through the ObjectType to find the list of Top-Level ObjectType Objects for the parameter passed in.  Default function which is recommended for use.
            </summary>
            <param name="parentType">ObjectType which top elements are to be found</param>
            <returns>Collection consisting of all Top-Level ObjectType Objects</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint.FindSuperParent(Northface.Tools.ORM.ObjectModel.ObjectType,System.Collections.Generic.Collection{Northface.Tools.ORM.ObjectModel.ObjectType})">
            <summary>
            Actual recursive function. Populates the ResultSet with Top-Level ObjectType Objects.
            </summary>
            <param name="parentType">ObjectType which top elements are to be found</param>
            <param name="superParents">Collection consisting of current discovered Top-Level ObjectType Objects</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint.ValidateErrors(Northface.Tools.ORM.ObjectModel.INotifyElementAdded)">
            <summary>
            Implements IModelErrorOwner.ValidateErrors
            Validate all errors on the external constraint. This
            is called during deserialization fixup when rules are
            suspended.
            </summary>
            <param name="notifyAdded">A callback for notifying
            the caller of all objects that are added.</param>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint.GetRoleGuids(System.Guid@,System.Guid@)">
            <summary>
            Implementation of INamedElementDictionaryChild.GetRoleGuids. Identifies
            this child as participating in the 'ModelHasObjectType' naming set.
            </summary>
            <param name="parentMetaRoleGuid">Guid</param>
            <param name="childMetaRoleGuid">Guid</param>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint.ConstraintStorageStyle">
            <summary>
            The internal storage style of this constraint.
            </summary>
            <value>ConstraintStorageStyle.MultiColumnExternalConstraint</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint.ExternalFactConstraintCollection">
            <summary>
            Get a read-only list of FactConstraint links. To get the
            fact type from here, use the FactTypeCollection property on the returned
            object. To get to the roles, use the ConstrainedRoleCollection property.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint.FixupListener">
            <summary>
            Return a deserialization fixup listener. The listener
            adds the implicit ExternalFactConstraint elements.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint.ErrorCollection">
            <summary>
            Implements IModelErrorOwner.ErrorCollection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint.FactTypeCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint.RoleSequenceCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint.TooFewRoleSequencesError">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint.TooManyRoleSequencesError">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint.Model">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint.DuplicateNameError">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint.ArityMismatchError">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint.CompatibleRolePlayerTypeErrorCollection">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint.ConstraintRoleSequenceHasRoleAdded">
            <summary>
            If a role is added after the role sequence is already attached,
            then create the corresponding ExternalFactConstraint and ExternalRoleConstraint
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint.ConstraintHasRoleSequenceAdded">
            <summary>
            If a role sequence is added that already contains roles, then
            make sure the corresponding ExternalFactConstraint and ExternalRoleConstraint
            objects are created for each role.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint.ExternalRoleConstraintRemoved">
            <summary>
            Rip an ExternalFactConstraint relationship when its last role
            goes away. Note that this rule also affects single column external
            constraints, but we only need to write it once.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint.ExternalConstraintFixupListener">
            <summary>
            Fixup listener implementation. Adds implicit ExternalFactConstraint relationships
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint.ExternalConstraintFixupListener.#ctor">
            <summary>
            ExternalConstraintFixupListener constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint.ExternalConstraintFixupListener.ProcessElement(Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint,Microsoft.VisualStudio.Modeling.Store,Northface.Tools.ORM.ObjectModel.INotifyElementAdded)">
            <summary>
            Process elements by added an ExternalFactConstraint for
            each roleset
            </summary>
            <param name="element">An ExternalConstraint element</param>
            <param name="store">The context store</param>
            <param name="notifyAdded">The listener to notify if elements are added during fixup</param>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ExternalFactConstraint">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ExternalFactConstraint.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ExternalFactConstraint.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalFactConstraint.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ExternalFactConstraint.RoleCollection">
            <summary>
            Implements IFactConstraint.RoleCollection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ExternalFactConstraint.FactType">
            <summary>
            Retrieve the fact type from a derived class
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ExternalFactConstraint.Constraint">
            <summary>
            Retrieve the constraint from a derived class
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ExternalFactConstraint.ConstrainedRoleCollection">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.MultiColumnExternalFactConstraint">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.MultiColumnExternalFactConstraint.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.MultiColumnExternalFactConstraint.MultiColumnExternalConstraintCollectionMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.MultiColumnExternalFactConstraint.FactTypeCollectionMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.MultiColumnExternalFactConstraint.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.MultiColumnExternalFactConstraint.MultiColumnExternalConstraintCollectionMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.MultiColumnExternalFactConstraint.FactTypeCollectionMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalFactConstraint.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalFactConstraint.CreateMultiColumnExternalFactConstraint(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalFactConstraint.CreateAndInitializeMultiColumnExternalFactConstraint(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalFactConstraint.FactType">
            <summary>
            Implements FactType for IFactConstraint and ExternalFactConstraint
            by deferring to generated FactTypeCollection accessor
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalFactConstraint.Constraint">
            <summary>
            Implements Constraint for IFactConstraint and ExternalFactConstraint
            by deferring to generated MultiColumnExternalConstraintCollection accessor
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalFactConstraint.MultiColumnExternalConstraintCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalFactConstraint.FactTypeCollection">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.SingleColumnExternalFactConstraint">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.SingleColumnExternalFactConstraint.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.SingleColumnExternalFactConstraint.SingleColumnExternalConstraintCollectionMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.SingleColumnExternalFactConstraint.FactTypeCollectionMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.SingleColumnExternalFactConstraint.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.SingleColumnExternalFactConstraint.SingleColumnExternalConstraintCollectionMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.SingleColumnExternalFactConstraint.FactTypeCollectionMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalFactConstraint.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalFactConstraint.CreateSingleColumnExternalFactConstraint(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalFactConstraint.CreateAndInitializeSingleColumnExternalFactConstraint(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.SingleColumnExternalFactConstraint.FactType">
            <summary>
            Implements FactType for IFactConstraint and ExternalFactConstraint
            by deferring to generated FactTypeCollection accessor
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.SingleColumnExternalFactConstraint.Constraint">
            <summary>
            Implements Constraint for IFactConstraint and ExternalFactConstraint
            by deferring to generated SingleColumnExternalConstraintCollection accessor
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.SingleColumnExternalFactConstraint.SingleColumnExternalConstraintCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.SingleColumnExternalFactConstraint.FactTypeCollection">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequence">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequence.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequence.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequence.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequence.CreateMultiColumnExternalConstraintRoleSequence(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequence.CreateAndInitializeMultiColumnExternalConstraintRoleSequence(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequence.GetCustomSerializedChildElementInfo">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequence.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequence.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequence.MapChildElement(System.String,System.String,System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequence.MapAttribute(System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequence.Constraint">
            <summary>
            Get the external constraint that owns this role sequence
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequence.ExternalConstraint">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequence.SupportedCustomSerializedOperations">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequence.CustomSerializedElementInfo">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequence.CustomSerializedChildRoleComparer">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraint">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraint.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraint.IsPreferredMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraint.GetValueForCustomStoredAttribute(Microsoft.VisualStudio.Modeling.MetaAttributeInfo)">
            <summary>
            Standard override. Retrieve values for calculated properties.
            </summary>
            <param name="attribute">MetaAttributeInfo</param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraint.SetValueForCustomStoredAttribute(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,System.Object)">
            <summary>
            Standard override. All custom storage properties are derived, not
            stored. Actual changes are handled in InternalUniquenessConstraintChangeRule.
            </summary>
            <param name="attribute">MetaAttributeInfo</param>
            <param name="newValue">object</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraint.GetOldValueForCustomStoredAttribute(Microsoft.VisualStudio.Modeling.MetaAttributeInfo)">
            <summary>
            Standard override. Defer to GetValueForCustomStoredAttribute.
            </summary>
            <param name="attribute">MetaAttributeInfo</param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraint.IsPropertyDescriptorReadOnly(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Ensure that the Preferred property is readonly
            when the InternalUniquenessConstraintChangeRule is
            unable to make it true.
            </summary>
            <param name="propertyDescriptor"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraint.TestAllowPreferred(Northface.Tools.ORM.ObjectModel.ObjectType,System.Boolean)">
            <summary>
            Test to see if this constraint can be turned
            into a preferred uniqueness constraint
            </summary>
            <param name="forType">If set, verify that the constraint
            can be the preferred identifier for this type. Can be null.</param>
            <param name="throwIfFalse">If true, thrown instead of returning false</param>
            <returns>true if the test succeeds</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraint.ValidateErrors(Northface.Tools.ORM.ObjectModel.INotifyElementAdded)">
            <summary>
            Implements IModelErrorOwner.ValidateErrors
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraint.VerifyNMinusOneForRule(Northface.Tools.ORM.ObjectModel.INotifyElementAdded)">
            <summary>
            Add, remove, and otherwise validate the current NMinusOne errors
            </summary>
            <param name="notifyAdded">If not null, this is being called during
            load when rules are not in place. Any elements that are added
            must be notified back to the caller.</param>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraint.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraint.IsPreferredMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraint.internalUniquenessConstraintIsPreferredFieldHandler">
            <summary>
            FieldHandler for InternalUniquenessConstraint.IsPreferred field
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraint.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraint.CreateInternalUniquenessConstraint(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraint.CreateAndInitializeInternalUniquenessConstraint(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraint.GetCustomSerializedChildElementInfo">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraint.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraint.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraint.MapChildElement(System.String,System.String,System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraint.MapAttribute(System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraint.ErrorCollection">
            <summary>
            Returns the error associated with the constraint.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraint.ConstraintType">
            <summary>
            Implements IConstraint.ConstraintType. Returns ConstraintType.InternalUniqueness.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraint.RoleSequenceStyles">
            <summary>
            Implements IConstraint.RoleSequenceStyles. Returns {OneRoleSequence, AtLeastCountMinusOneRolesPerSequence}.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraint.IsPreferred">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraint.NMinusOneError">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraint.SupportedCustomSerializedOperations">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraint.CustomSerializedElementInfo">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraint.CustomSerializedChildRoleComparer">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraint.NMinusOneAddRuleModelValidation">
            <summary>
            Only validates NMinusOneError
            Checks when Internal constraint is added
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraint.NMinusOneRemoveRuleModelValidation">
            <summary>
            Only validates NMinusOneError
            Checks when Internal constraint is removed
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraint.NMinusOneAddRuleModelConstraintAddValidation">
            <summary>
            Only validates NMinusOneError
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraint.NMinusOneRemoveRuleModelConstraintRemoveValidation">
            <summary>
            Only validates NMinusOneError
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraint.NMinusOneAddRuleModelFactAddValidation">
            <summary>
            Only validates NMinusOneError
            Used for Adding roles to the role sequence check
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraint.NMinusOneRemoveRuleModelFactRemoveValidation">
            <summary>
            Only validates NMinusOneError
            Used for Removing roles to the role sequence check
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraint.InternalUniquenessConstraintIsPreferredFieldHandler">
            <summary>
            Implement the field handler for InternalUniquenessConstraint.IsPreferred
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraint.InternalUniquenessConstraintIsPreferredFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraint.InternalUniquenessConstraintIsPreferredFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the InternalUniquenessConstraint.IsPreferred field handler
            </summary>
            <value>InternalUniquenessConstraintIsPreferredFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraint.InternalUniquenessConstraintIsPreferredFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the InternalUniquenessConstraint.IsPreferred field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.EntityTypeHasPreferredIdentifier">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.EntityTypeHasPreferredIdentifier.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.EntityTypeHasPreferredIdentifier.PreferredIdentifierMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.EntityTypeHasPreferredIdentifier.PreferredIdentifierForMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.EntityTypeHasPreferredIdentifier.TestRemovePreferredIdentifier">
            <summary>
            Call from a Removing rule to determine if the
            preferred identifier still fits all of the requirements.
            All required elements are tested for existence and IsRemoving.
            If any required elements are missing, then the link itself is removed.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.EntityTypeHasPreferredIdentifier.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.EntityTypeHasPreferredIdentifier.PreferredIdentifierMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.EntityTypeHasPreferredIdentifier.PreferredIdentifierForMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.EntityTypeHasPreferredIdentifier.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.EntityTypeHasPreferredIdentifier.CreateEntityTypeHasPreferredIdentifier(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.EntityTypeHasPreferredIdentifier.CreateAndInitializeEntityTypeHasPreferredIdentifier(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.EntityTypeHasPreferredIdentifier.PreferredIdentifier">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.EntityTypeHasPreferredIdentifier.PreferredIdentifierFor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.EntityTypeHasPreferredIdentifier.TestRemovePreferredIdentifierRule">
            <summary>
            A rule to determine if a mandatory condition for
            a preferred identifier link has been eliminated.
            Remove the rule if this happens.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.EntityTypeHasPreferredIdentifier.TestRemovePreferredIdentifierRule.ElementRemoving(Microsoft.VisualStudio.Modeling.ElementRemovingEventArgs)">
            <summary>
            See if a preferred identifier is still valid
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.EntityTypeHasPreferredIdentifier.PreferredIdentifierAddedRule">
            <summary>
            Verify that all preconditions hold for adding a primary
            identifier and extend modifiable conditions as needed.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.EntityTypeHasPreferredIdentifier.PreferredIdentifierAddedRule.ElementAdded(Microsoft.VisualStudio.Modeling.ElementAddedEventArgs)">
            <summary>
            Check preconditions on an internal or external
            constraint.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.EntityTypeHasPreferredIdentifier.PreferredIdentifierAddedRule.FireBefore">
            <summary>
            This rule checkes preconditions for adding a primary
            identifier link. Fire it before the link is added
            to the transaction log.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ExternalUniquenessConstraint">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ExternalUniquenessConstraint.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ExternalUniquenessConstraint.IsPreferredMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalUniquenessConstraint.GetValueForCustomStoredAttribute(Microsoft.VisualStudio.Modeling.MetaAttributeInfo)">
            <summary>
            Standard override. Retrieve values for calculated properties.
            </summary>
            <param name="attribute">MetaAttributeInfo</param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalUniquenessConstraint.SetValueForCustomStoredAttribute(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,System.Object)">
            <summary>
            Standard override. All custom storage properties are derived, not
            stored. Actual changes are handled in ExternalUniquenessConstraintChangeRule.
            </summary>
            <param name="attribute">MetaAttributeInfo</param>
            <param name="newValue">object</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalUniquenessConstraint.GetOldValueForCustomStoredAttribute(Microsoft.VisualStudio.Modeling.MetaAttributeInfo)">
            <summary>
            Standard override. Defer to GetValueForCustomStoredAttribute.
            </summary>
            <param name="attribute">MetaAttributeInfo</param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalUniquenessConstraint.IsPropertyDescriptorReadOnly(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Ensure that the Preferred property is readonly
            when the InternalUniquenessConstraintChangeRule is
            unable to make it true.
            </summary>
            <param name="propertyDescriptor"></param>
            <returns></returns>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ExternalUniquenessConstraint.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ExternalUniquenessConstraint.IsPreferredMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ExternalUniquenessConstraint.externalUniquenessConstraintIsPreferredFieldHandler">
            <summary>
            FieldHandler for ExternalUniquenessConstraint.IsPreferred field
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalUniquenessConstraint.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalUniquenessConstraint.CreateExternalUniquenessConstraint(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalUniquenessConstraint.CreateAndInitializeExternalUniquenessConstraint(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalUniquenessConstraint.GetCustomSerializedChildElementInfo">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalUniquenessConstraint.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalUniquenessConstraint.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalUniquenessConstraint.MapChildElement(System.String,System.String,System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalUniquenessConstraint.MapAttribute(System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ExternalUniquenessConstraint.ConstraintType">
            <summary>
            Implements IConstraint.ConstraintType. Returns ConstraintType.InternalUniqueness.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ExternalUniquenessConstraint.RoleSequenceStyles">
            <summary>
            Implements IConstraint.RoleSequenceStyles. Returns {MultipleRowSequences, OneRolePerSequence}.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ExternalUniquenessConstraint.IsPreferred">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ExternalUniquenessConstraint.SupportedCustomSerializedOperations">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ExternalUniquenessConstraint.CustomSerializedElementInfo">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ExternalUniquenessConstraint.CustomSerializedChildRoleComparer">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ExternalUniquenessConstraint.ExternalUniquenessConstraintIsPreferredFieldHandler">
            <summary>
            Implement the field handler for ExternalUniquenessConstraint.IsPreferred
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalUniquenessConstraint.ExternalUniquenessConstraintIsPreferredFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ExternalUniquenessConstraint.ExternalUniquenessConstraintIsPreferredFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the ExternalUniquenessConstraint.IsPreferred field handler
            </summary>
            <value>ExternalUniquenessConstraintIsPreferredFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ExternalUniquenessConstraint.ExternalUniquenessConstraintIsPreferredFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the ExternalUniquenessConstraint.IsPreferred field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.TooManyRoleSequencesError">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.TooManyRoleSequencesError.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooManyRoleSequencesError.GenerateErrorText">
            <summary>
            Generate and set text for the error
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooManyRoleSequencesError.GetRepresentedElements">
            <summary>
            Implements IRepresentModelElements.GetRepresentedElements
            </summary>
            <returns></returns>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.TooManyRoleSequencesError.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooManyRoleSequencesError.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooManyRoleSequencesError.CreateTooManyRoleSequencesError(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooManyRoleSequencesError.CreateAndInitializeTooManyRoleSequencesError(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooManyRoleSequencesError.GetCustomSerializedChildElementInfo">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooManyRoleSequencesError.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooManyRoleSequencesError.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooManyRoleSequencesError.MapChildElement(System.String,System.String,System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooManyRoleSequencesError.MapAttribute(System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.TooManyRoleSequencesError.RegenerateEvents">
            <summary>
            Regenerate the error text when the constraint name changes
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.TooManyRoleSequencesError.Constraint">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.TooManyRoleSequencesError.SupportedCustomSerializedOperations">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.TooManyRoleSequencesError.CustomSerializedElementInfo">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.TooManyRoleSequencesError.CustomSerializedChildRoleComparer">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.TooFewRoleSequencesError">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.TooFewRoleSequencesError.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooFewRoleSequencesError.GenerateErrorText">
            <summary>
            Generate text for the error
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooFewRoleSequencesError.GetRepresentedElements">
            <summary>
            Implements IRepresentModelElements.GetRepresentedElements
            </summary>
            <returns></returns>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.TooFewRoleSequencesError.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooFewRoleSequencesError.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooFewRoleSequencesError.CreateTooFewRoleSequencesError(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooFewRoleSequencesError.CreateAndInitializeTooFewRoleSequencesError(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooFewRoleSequencesError.GetCustomSerializedChildElementInfo">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooFewRoleSequencesError.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooFewRoleSequencesError.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooFewRoleSequencesError.MapChildElement(System.String,System.String,System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooFewRoleSequencesError.MapAttribute(System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.TooFewRoleSequencesError.RegenerateEvents">
            <summary>
            Regenerate the error text when the constraint name changes
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.TooFewRoleSequencesError.Constraint">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.TooFewRoleSequencesError.SupportedCustomSerializedOperations">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.TooFewRoleSequencesError.CustomSerializedElementInfo">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.TooFewRoleSequencesError.CustomSerializedChildRoleComparer">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ExternalConstraintRoleSequenceArityMismatch">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ExternalConstraintRoleSequenceArityMismatch.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalConstraintRoleSequenceArityMismatch.GenerateErrorText">
            <summary>
            Generate text for the error
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalConstraintRoleSequenceArityMismatch.GetRepresentedElements">
            <summary>
            Implements IRepresentModelElements.GetRepresentedElements
            </summary>
            <returns></returns>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ExternalConstraintRoleSequenceArityMismatch.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalConstraintRoleSequenceArityMismatch.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalConstraintRoleSequenceArityMismatch.CreateExternalConstraintRoleSequenceArityMismatch(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalConstraintRoleSequenceArityMismatch.CreateAndInitializeExternalConstraintRoleSequenceArityMismatch(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalConstraintRoleSequenceArityMismatch.GetCustomSerializedChildElementInfo">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalConstraintRoleSequenceArityMismatch.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalConstraintRoleSequenceArityMismatch.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalConstraintRoleSequenceArityMismatch.MapChildElement(System.String,System.String,System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalConstraintRoleSequenceArityMismatch.MapAttribute(System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ExternalConstraintRoleSequenceArityMismatch.RegenerateEvents">
            <summary>
            Regenerate the error text when the constraint name changes
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ExternalConstraintRoleSequenceArityMismatch.Constraint">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ExternalConstraintRoleSequenceArityMismatch.SupportedCustomSerializedOperations">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ExternalConstraintRoleSequenceArityMismatch.CustomSerializedElementInfo">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ExternalConstraintRoleSequenceArityMismatch.CustomSerializedChildRoleComparer">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeError">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeError.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeError.GenerateErrorText">
            <summary>
            Generate text for the error
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeError.GetRepresentedElements">
            <summary>
            Implements IRepresentModelElements.GetRepresentedElements
            </summary>
            <returns></returns>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeError.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeError.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeError.CreateCompatibleRolePlayerTypeError(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeError.CreateAndInitializeCompatibleRolePlayerTypeError(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeError.GetCustomSerializedChildElementInfo">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeError.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeError.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeError.MapChildElement(System.String,System.String,System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeError.MapAttribute(System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeError.RegenerateEvents">
            <summary>
            Regenerate the error text when the constraint name changes
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeError.MultiColumnExternalConstraint">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeError.SingleColumnExternalConstraint">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeError.SupportedCustomSerializedOperations">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeError.CustomSerializedElementInfo">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeError.CustomSerializedChildRoleComparer">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ExclusionType">
            <summary>
            Represents the current setting on an exclusion constraint
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ExclusionType.Exclusion">
            <summary>
            An exclusion constraint
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ExclusionType.InclusiveOr">
            <summary>
            An inclusive-or (disjunctive mandatory) constraint
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ExclusionType.ExclusiveOr">
            <summary>
            An exclusive-or constraint
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.RoleSequenceStyles">
            <summary>
            Flags describing the style of role sequences required
            by each type of constraint
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.RoleSequenceStyles.OneRoleSequence">
            <summary>
            Constraint uses a single role sequence
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.RoleSequenceStyles.TwoRoleSequences">
            <summary>
            Constraint uses exactly two role sequences
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.RoleSequenceStyles.MultipleRowSequences">
            <summary>
            Constraint uses >=2 role sequences
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.RoleSequenceStyles.SequenceMultiplicityMask">
            <summary>
            A mask to extract the sequence multiplicity values
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.RoleSequenceStyles.OneRolePerSequence">
            <summary>
            Each role sequence contains exactly one role
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.RoleSequenceStyles.TwoRolesPerSequence">
            <summary>
            Each role sequence contains exactly two roles
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.RoleSequenceStyles.MultipleRolesPerSequence">
            <summary>
            Each role sequence can contain >=1 roles
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.RoleSequenceStyles.AtLeastCountMinusOneRolesPerSequence">
            <summary>
            The role sequence must contain n or n-1 roles. Applicable
            to OneRoleSequence constraints only
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.RoleSequenceStyles.RoleMultiplicityMask">
            <summary>
            A mask to extract the row multiplicity values
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.RoleSequenceStyles.OrderedRoleSequences">
            <summary>
            The order of the role sequences is significant
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ConstraintType">
            <summary>
            A list of constraint types.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ConstraintType.SimpleMandatory">
            <summary>
            An mandatory constraint. Applied
            to a single role.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ConstraintType.InternalUniqueness">
            <summary>
            An internal uniqueness constraint. Applied to
            one or more roles from the same fact type.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ConstraintType.Frequency">
            <summary>
            A frequency constraint. Applied to one or
            more roles from the same fact type.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ConstraintType.Ring">
            <summary>
            A ring constraint. Applied to two roles
            from the same fact type. Directional.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ConstraintType.ExternalUniqueness">
            <summary>
            An external uniqueness constraint. Applied to
            sets of compatible roles from multiple fact types.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ConstraintType.Equality">
            <summary>
            An external equality constraint. Applied to
            sets of compatible roles from multiple fact types.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ConstraintType.Exclusion">
            <summary>
            An external exclusion constraint. Applied to
            sets of compatible roles from multiple fact types.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ConstraintType.DisjunctiveMandatory">
            <summary>
            An disjunctive mandatory constraint. Applied to
            single-role sets of compatible roles from multiple fact types.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ConstraintType.Subset">
            <summary>
            An external subset constraint. Applied to 2
            sets of compatible roles.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ConstraintStorageStyle">
            <summary>
            A list of possible ways to store a constraint's role sequences.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ConstraintStorageStyle.InternalConstraint">
            <summary>
            The constraint is stored as a single role sequence.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ConstraintStorageStyle.SingleColumnExternalConstraint">
            <summary>
            The constraint is stored as a single role sequence, but with the
            rule that all roles must be compatible.  This is because the contraint
            is technically a single column with many rows at the conceptual level,
            but it's easier to store as a single row of many columns.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ConstraintStorageStyle.MultiColumnExternalConstraint">
            <summary>
            The contraint is stored as a sequence of role sequences.  Each role
            in a given role sequence must be compatible with roles in the same
            position of all other role sequences.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.SimpleMandatoryConstraint">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.SimpleMandatoryConstraint.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.SimpleMandatoryConstraint.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SimpleMandatoryConstraint.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SimpleMandatoryConstraint.CreateSimpleMandatoryConstraint(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SimpleMandatoryConstraint.CreateAndInitializeSimpleMandatoryConstraint(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SimpleMandatoryConstraint.GetCustomSerializedChildElementInfo">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SimpleMandatoryConstraint.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SimpleMandatoryConstraint.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SimpleMandatoryConstraint.MapChildElement(System.String,System.String,System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SimpleMandatoryConstraint.MapAttribute(System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.SimpleMandatoryConstraint.ConstraintType">
            <summary>
            Implements IConstraint.ConstraintType. Returns ConstraintType.SimpleMandatory.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.SimpleMandatoryConstraint.RoleSequenceStyles">
            <summary>
            Implements IConstraint.RoleSequenceStyles. Returns {OneRoleSequence, OneRolePerSequence}.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.SimpleMandatoryConstraint.SupportedCustomSerializedOperations">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.SimpleMandatoryConstraint.CustomSerializedElementInfo">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.SimpleMandatoryConstraint.CustomSerializedChildRoleComparer">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.FrequencyConstraint">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FrequencyConstraint.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FrequencyConstraint.MinFrequencyMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FrequencyConstraint.MaxFrequencyMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FrequencyConstraint.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FrequencyConstraint.MinFrequencyMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FrequencyConstraint.frequencyConstraintMinFrequencyFieldHandler">
            <summary>
            FieldHandler for FrequencyConstraint.MinFrequency field
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FrequencyConstraint.MaxFrequencyMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FrequencyConstraint.frequencyConstraintMaxFrequencyFieldHandler">
            <summary>
            FieldHandler for FrequencyConstraint.MaxFrequency field
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FrequencyConstraint.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FrequencyConstraint.CreateFrequencyConstraint(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FrequencyConstraint.CreateAndInitializeFrequencyConstraint(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FrequencyConstraint.GetCustomSerializedChildElementInfo">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FrequencyConstraint.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FrequencyConstraint.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FrequencyConstraint.MapChildElement(System.String,System.String,System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FrequencyConstraint.MapAttribute(System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FrequencyConstraint.ConstraintType">
            <summary>
            Implements IConstraint.ConstraintType. Returns ConstraintType.InternalUniqueness.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FrequencyConstraint.RoleSequenceStyles">
            <summary>
            Implements IConstraint.RoleSequenceStyles. Returns {OneRoleSequence, MultipleRolesPerSequence}.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FrequencyConstraint.MinFrequency">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FrequencyConstraint.MaxFrequency">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FrequencyConstraint.SupportedCustomSerializedOperations">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FrequencyConstraint.CustomSerializedElementInfo">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FrequencyConstraint.CustomSerializedChildRoleComparer">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.FrequencyConstraint.FrequencyConstraintMinFrequencyFieldHandler">
            <summary>
            Implement the field handler for FrequencyConstraint.MinFrequency
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FrequencyConstraint.FrequencyConstraintMinFrequencyFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FrequencyConstraint.FrequencyConstraintMinFrequencyFieldHandler.GetValue(Northface.Tools.ORM.ObjectModel.FrequencyConstraint)">
            <summary>
            Gets the value of the attribute as it exists in the element
            </summary>
            <param name="element">the FrequencyConstraint</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FrequencyConstraint.FrequencyConstraintMinFrequencyFieldHandler.SetValue(Northface.Tools.ORM.ObjectModel.FrequencyConstraint,System.Int32,Microsoft.VisualStudio.Modeling.CommandFactory,System.Boolean,System.Int32@)">
            <summary>
            Sets the value into the element
            </summary>
            <param name="element">the element</param>
            <param name="value">new value</param>
            <param name="commandFactory">the command factory for this change</param>
            <param name="allowDuplicates">allow duplicate value to continue to fire rules and events</param>
            <param name="oldValue">the old value before the change</param>
            <returns>true if the value actually changed</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FrequencyConstraint.FrequencyConstraintMinFrequencyFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the FrequencyConstraint.MinFrequency field handler
            </summary>
            <value>FrequencyConstraintMinFrequencyFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FrequencyConstraint.FrequencyConstraintMinFrequencyFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the FrequencyConstraint.MinFrequency field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.FrequencyConstraint.FrequencyConstraintMaxFrequencyFieldHandler">
            <summary>
            Implement the field handler for FrequencyConstraint.MaxFrequency
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FrequencyConstraint.FrequencyConstraintMaxFrequencyFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FrequencyConstraint.FrequencyConstraintMaxFrequencyFieldHandler.GetValue(Northface.Tools.ORM.ObjectModel.FrequencyConstraint)">
            <summary>
            Gets the value of the attribute as it exists in the element
            </summary>
            <param name="element">the FrequencyConstraint</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FrequencyConstraint.FrequencyConstraintMaxFrequencyFieldHandler.SetValue(Northface.Tools.ORM.ObjectModel.FrequencyConstraint,System.Int32,Microsoft.VisualStudio.Modeling.CommandFactory,System.Boolean,System.Int32@)">
            <summary>
            Sets the value into the element
            </summary>
            <param name="element">the element</param>
            <param name="value">new value</param>
            <param name="commandFactory">the command factory for this change</param>
            <param name="allowDuplicates">allow duplicate value to continue to fire rules and events</param>
            <param name="oldValue">the old value before the change</param>
            <returns>true if the value actually changed</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FrequencyConstraint.FrequencyConstraintMaxFrequencyFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the FrequencyConstraint.MaxFrequency field handler
            </summary>
            <value>FrequencyConstraintMaxFrequencyFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FrequencyConstraint.FrequencyConstraintMaxFrequencyFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the FrequencyConstraint.MaxFrequency field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.RingConstraint">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.RingConstraint.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.RingConstraint.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RingConstraint.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RingConstraint.CreateRingConstraint(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RingConstraint.CreateAndInitializeRingConstraint(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.RingConstraint.ConstraintType">
            <summary>
            Implements IConstraint.ConstraintType. Returns ConstraintType.InternalUniqueness.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.RingConstraint.RoleSequenceStyles">
            <summary>
            Implements IConstraint.RoleSequenceStyles. Returns {TwoRoleSequences, OneRolePerSequence}.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.EqualityConstraint">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.EqualityConstraint.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.EqualityConstraint.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.EqualityConstraint.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.EqualityConstraint.CreateEqualityConstraint(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.EqualityConstraint.CreateAndInitializeEqualityConstraint(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.EqualityConstraint.GetCustomSerializedChildElementInfo">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.EqualityConstraint.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.EqualityConstraint.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.EqualityConstraint.MapChildElement(System.String,System.String,System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.EqualityConstraint.MapAttribute(System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.EqualityConstraint.ConstraintType">
            <summary>
            Implements IConstraint.ConstraintType. Returns ConstraintType.InternalUniqueness.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.EqualityConstraint.RoleSequenceStyles">
            <summary>
            Implements IConstraint.RoleSequenceStyles. Returns {MultipleRowSequences, MultipleRolesPerSequence}.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.EqualityConstraint.SupportedCustomSerializedOperations">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.EqualityConstraint.CustomSerializedElementInfo">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.EqualityConstraint.CustomSerializedChildRoleComparer">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ExclusionConstraint">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ExclusionConstraint.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ExclusionConstraint.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExclusionConstraint.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExclusionConstraint.CreateExclusionConstraint(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExclusionConstraint.CreateAndInitializeExclusionConstraint(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExclusionConstraint.GetCustomSerializedChildElementInfo">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExclusionConstraint.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExclusionConstraint.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExclusionConstraint.MapChildElement(System.String,System.String,System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExclusionConstraint.MapAttribute(System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ExclusionConstraint.ConstraintType">
            <summary>
            Implements IConstraint.ConstraintType. Returns ConstraintType.InternalUniqueness.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ExclusionConstraint.RoleSequenceStyles">
            <summary>
            Implements IConstraint.RoleSequenceStyles. Returns {MultipleRowSequences, MultipleRowSequences}.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ExclusionConstraint.SupportedCustomSerializedOperations">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ExclusionConstraint.CustomSerializedElementInfo">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ExclusionConstraint.CustomSerializedChildRoleComparer">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.DisjunctiveMandatoryConstraint">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.DisjunctiveMandatoryConstraint.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.DisjunctiveMandatoryConstraint.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DisjunctiveMandatoryConstraint.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DisjunctiveMandatoryConstraint.CreateDisjunctiveMandatoryConstraint(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DisjunctiveMandatoryConstraint.CreateAndInitializeDisjunctiveMandatoryConstraint(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DisjunctiveMandatoryConstraint.GetCustomSerializedChildElementInfo">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DisjunctiveMandatoryConstraint.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DisjunctiveMandatoryConstraint.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DisjunctiveMandatoryConstraint.MapChildElement(System.String,System.String,System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DisjunctiveMandatoryConstraint.MapAttribute(System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.DisjunctiveMandatoryConstraint.ConstraintType">
            <summary>
            Implements IConstraint.ConstraintType. Returns ConstraintType.InternalUniqueness.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.DisjunctiveMandatoryConstraint.RoleSequenceStyles">
            <summary>
            Implements IConstraint.RoleSequenceStyles. Returns {MultipleRowSequences, OneRolePerSequence}.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.DisjunctiveMandatoryConstraint.SupportedCustomSerializedOperations">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.DisjunctiveMandatoryConstraint.CustomSerializedElementInfo">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.DisjunctiveMandatoryConstraint.CustomSerializedChildRoleComparer">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.SubsetConstraint">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.SubsetConstraint.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.SubsetConstraint.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SubsetConstraint.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SubsetConstraint.CreateSubsetConstraint(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SubsetConstraint.CreateAndInitializeSubsetConstraint(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SubsetConstraint.GetCustomSerializedChildElementInfo">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SubsetConstraint.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SubsetConstraint.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SubsetConstraint.MapChildElement(System.String,System.String,System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SubsetConstraint.MapAttribute(System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.SubsetConstraint.ConstraintType">
            <summary>
            Implements IConstraint.ConstraintType. Returns ConstraintType.InternalUniqueness.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.SubsetConstraint.RoleSequenceStyles">
            <summary>
            Implements IConstraint.RoleSequenceStyles. Returns {TwoRoleSequences, MultipleRolesPerSequence, OrderedRoleSequences}.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.SubsetConstraint.SupportedCustomSerializedOperations">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.SubsetConstraint.CustomSerializedElementInfo">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.SubsetConstraint.CustomSerializedChildRoleComparer">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.FactEditor.FactSaver">
            <summary>
            Use to draw a FactLine on the model.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactSaver.AddFact(Northface.Tools.ORM.Shell.ORMDesignerDocView,Northface.Tools.ORM.FactEditor.ParsedFact,Northface.Tools.ORM.ObjectModel.FactType)">
            <summary>
            Add facts to the model
            </summary>
            <param name="docView">Curent document view</param>
            <param name="parsedFact">Parsed fact</param>
            <param name="fact">Editing fact</param>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ExternalConstraintConnectAction">
            <summary>
            A ConnectAction to add role sequences to an external constraint
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintConnectAction.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.Diagram)">
            <summary>
            Create an external constract action for the given diagram. One
            action per diagram should be sufficient.
            </summary>
            <param name="diagram">The hosting diagram</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintConnectAction.GetConnectionTypes(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
            <summary>
            Retrieve all connect types associated with this connect action.
            Returns an empty array unless the sourceShapeElement is an ExternalConstraintShape
            </summary>
            <param name="sourceShapeElement">The source element</param>
            <param name="targetShapeElement">The target element. Currently ignored.</param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintConnectAction.GetCursorFromCursorType(Microsoft.VisualStudio.Modeling.Diagrams.ConnectActionCursor)">
            <summary>
            Get a cursor from the cursor type. Returns the searching cursor for
            everything except the allowed action.
            </summary>
            <param name="connectActionCursor">The requrested cursor styl</param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintConnectAction.OnMouseDown(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
            <summary>
            Test for a double click if a commit is expected to signal the
            OnClicked to forward the click to the base ConnectAction and
            complete the operation.
            </summary>
            <param name="e">DiagramMouseEventArgs</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintConnectAction.OnMouseMove(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
            <summary>
            Track the last hit diagram item
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintConnectAction.OnClicked(Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEventArgs)">
            <summary>
            Add a source shape or commit/cancel the action by forwarding the
            click to the base class, or modify the current role sequence by handling
            the click locally.
            </summary>
            <param name="e">MouseActionEventArgs</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintConnectAction.OnMouseActionDeactivated(Microsoft.VisualStudio.Modeling.Diagrams.DiagramEventArgs)">
            <summary>
            Redraw fact types for any selected roles, deselect the toolbox item,
            and chain to a new connect action if this one completed successfully.
            </summary>
            <param name="e">DiagramEventArgs</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintConnectAction.OnMouseActionCompleted(Microsoft.VisualStudio.Modeling.Diagrams.DiagramEventArgs)">
            <summary>
            Cancel if the last hit shape is the Diagram by not forwarding
            to the base class. Otherwise, complete the action.
            </summary>
            <param name="e">DiagramEventArgs</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintConnectAction.GetActiveRoleIndex(Northface.Tools.ORM.ObjectModel.Role)">
            <summary>
            If a role is actively selected, return the 0-based selection index,
            or -1 if the role is not actively selected.
            </summary>
            <param name="role">A role to test</param>
            <returns>0-based role index, or -1 if not selected</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintConnectAction.ChainMouseAction(Northface.Tools.ORM.ShapeModel.ExternalConstraintShape,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
            <summary>
            Set this mouse action as the active action on the
            diagram of the given shape, and activate its drag line
            centered on the shape.
            </summary>
            <param name="attachToShape">The shape for the constraint
            being connected.</param>
            <param name="clientView">The active DiagramClientView</param>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ExternalConstraintConnectAction.SelectedRoleCollection">
            <summary>
            Get the sequence of currently selected roles.
            </summary>
            <value>IList&lt;Role&gt;</value>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ExternalConstraintConnectAction.ConstraintRoleSequenceToEdit">
            <summary>
            Set the sequence of initially selected roles.
            </summary>
            <value>RoleMovableCollection</value>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ExternalConstraintConnectAction.InitialRoles">
            <summary>
            The initial roles that were in the role sequence that this ConnectAction is editing.
            </summary>
            <value>List&lt;Role&gt;</value>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ExternalConstraintConnectAction.ExternalConstraintConnectionType">
            <summary>
            The ConnectionType used with this ConnectAction. The type
            is a singleton, holds all of the context-independent logic,
            and operates directly on shape elements.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ExternalConstraintConnectAction.ExternalConstraintConnectionType.Instance">
            <summary>
            The singleton ExternalConstraintConnectionType instance
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ExternalConstraintConnectAction.ExternalConstraintConnectionType.InstanceArray">
            <summary>
            An array of one element containing the singleton ExternalConstraintConnectionType instance
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintConnectAction.ExternalConstraintConnectionType.IsValidSourceAndTarget(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
            <summary>
            Called as the pointer is moved over potential targets after a source is selected
            So should be pretty quick
            </summary>
            <remarks>
            The cursor can change dependant on CanCreateConnection when this returns true
            When this returns false, the control falls back to
            ExternalConstraintConectAction.
            </remarks>
            <param name="sourceShapeElement">ShapeElement</param>
            <param name="targetShapeElement">ShapeElement</param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintConnectAction.ExternalConstraintConnectionType.CanCreateConnection(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,System.String@)">
            <summary>
            Used for more in-depth checking before ConnectionType.CreateConnection is called, and
            to display warning messages on the design surface.
            </summary>
            <param name="sourceShapeElement">The source of the requested connection</param>
            <param name="targetShapeElement">The target of the requested connection</param>
            <param name="connectionWarning">A location to write the warning string</param>
            <returns>true if the connection can proceed</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintConnectAction.ExternalConstraintConnectionType.CreateConnection(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.PaintFeedbackArgs)">
            <summary>
            Create a connection between an ExternalConstraintShape and a FactType. Roles
            used in the connection are stored with the currently active connect action.
            </summary>
            <param name="sourceShapeElement">The source of the requested connection</param>
            <param name="targetShapeElement">The target of the requested connection</param>
            <param name="paintFeedbackArgs">PaintFeedbackArgs</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintConnectAction.ExternalConstraintConnectionType.UpdatePaintFeedbackParameters(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.PaintFeedbackArgs)">
            <summary>
            Move the feedback dragline to the center
            </summary>
            <param name="sourceShapeElement"></param>
            <param name="sourcePoint"></param>
            <param name="targetShapeElement"></param>
            <param name="targetPoint"></param>
            <param name="paintFeedbackArgs"></param>
            <returns></returns>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ExternalConstraintAction">
            <summary>
            A toolbox action to add an external constraint and activate
            the external constraint connect action
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintAction.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.Diagram)">
            <summary>
            Construct a new constraint action for a specific diagram. The
            same connect action can be reused multiple times by activating and
            deactivating it.
            </summary>
            <param name="diagram">The owning diagram</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintAction.Reset">
            <summary>
            Central function to return member variables to a clean state.
            Called by the constructor and the deactivation sequence.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintAction.AddStoreEvents(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Add events to the store during connect action
            activation. The default implementation watches for
            new external constraints added to the diagram.
            </summary>
            <param name="store">Store</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintAction.RemoveStoreEvents(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Removed any events added during the AddStoreEvents methods
            </summary>
            <param name="store">Store</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintAction.ExternalConstraintShapeAddedEvent(System.Object,Microsoft.VisualStudio.Modeling.ElementAddedEventArgs)">
            <summary>
            An IMS event to track the shape element added to the associated
            diagram during this connect action.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintAction.OnMouseActionActivated(Microsoft.VisualStudio.Modeling.Diagrams.DiagramEventArgs)">
            <summary>
            Add an event on the store so we can track
            the shape for an external constraint added during
            the transaction resulting from completion of the mouse
            action.
            </summary>
            <param name="e">DiagramEventArgs</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintAction.OnMouseActionDeactivated(Microsoft.VisualStudio.Modeling.Diagrams.DiagramEventArgs)">
            <summary>
            Deactivate the mouse action by removing the listening events,
            call the base, then firing off our own AfterMouseActionDeactivated
            event, if it is set.
            </summary>
            <param name="e">DiagramEventArgs</param>
        </member>
        <member name="E:Northface.Tools.ORM.ShapeModel.ExternalConstraintAction.AfterMouseActionDeactivated">
            <summary>
            An event that fires after the standard MouseActionDeactivated event. The
            standard event clears the toolbox, this one can be used to chain this
            action to a new standard action.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ExternalConstraintAction.AddedConstraintShape">
            <summary>
            The constraint shape added as a result of a completed mouse action
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ExternalConstraintAction.ActionCompleted">
            <summary>
            Was this action completed successfully?
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.InternalUniquenessConstraintConnectAction">
            <summary>
            A ConnectAction to add role sequences to an Internal constraint
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.InternalUniquenessConstraintConnectAction.DoPaintFeedback(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs)">
            <summary>
            Override DoPaintFeedback in order to stop connect line from drawing when mouse
            is over invalid object. We won't do anything.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.InternalUniquenessConstraintConnectAction.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.Diagram)">
            <summary>
            Create an Internal constraint action for the given diagram. One
            action per diagram should be sufficient.
            </summary>
            <param name="diagram">The hosting diagram</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.InternalUniquenessConstraintConnectAction.GetConnectionTypes(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
            <summary>
            Retrieve all connect types associated with this connect action.
            Returns an empty array unless the sourceShapeElement is a FactTypeShape
            </summary>
            <param name="sourceShapeElement">The source element</param>
            <param name="targetShapeElement">The target element. Currently ignored.</param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.InternalUniquenessConstraintConnectAction.GetCursorFromCursorType(Microsoft.VisualStudio.Modeling.Diagrams.ConnectActionCursor)">
            <summary>
            Get a cursor from the cursor type. Returns the searching cursor for
            everything except the allowed action.
            </summary>
            <param name="connectActionCursor">The requested cursor style</param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.InternalUniquenessConstraintConnectAction.OnMouseDown(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
            <summary>
            Test for a double click if a commit is expected to signal the
            OnClicked to forward the click to the base ConnectAction and
            complete the operation.
            </summary>
            <param name="e">DiagramMouseEventArgs</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.InternalUniquenessConstraintConnectAction.OnMouseMove(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
            <summary>
            Track the last hit diagram item
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.InternalUniquenessConstraintConnectAction.OnClicked(Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEventArgs)">
            <summary>
            Add a source shape or commit/cancel the action by forwarding the
            click to the base class, or modify the current role sequence by handling
            the click locally.
            </summary>
            <param name="e">MouseActionEventArgs</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.InternalUniquenessConstraintConnectAction.OnMouseActionDeactivated(Microsoft.VisualStudio.Modeling.Diagrams.DiagramEventArgs)">
            <summary>
            Redraw fact types for any selected roles, deselect the toolbox item,
            and chain to a new connect action if this one completed successfully.
            </summary>
            <param name="e">DiagramEventArgs</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.InternalUniquenessConstraintConnectAction.OnMouseActionCompleted(Microsoft.VisualStudio.Modeling.Diagrams.DiagramEventArgs)">
            <summary>
            Cancel if the last hit shape is the Diagram by not forwarding
            to the base class. Otherwise, complete the action.
            </summary>
            <param name="e">DiagramEventArgs</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.InternalUniquenessConstraintConnectAction.GetActiveRoleIndex(Northface.Tools.ORM.ObjectModel.Role)">
            <summary>
            If a role is actively selected, return the 0-based selection index,
            or -1 if the role is not actively selected.
            </summary>
            <param name="role">A role to test</param>
            <returns>0-based role index, or -1 if not selected</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.InternalUniquenessConstraintConnectAction.ChainMouseAction(Northface.Tools.ORM.ShapeModel.FactTypeShape,Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraint,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
            <summary>
            Set this mouse action as the active action on the
            diagram of the given shape.
            </summary>
            <param name="attachToShape">The shape the constraint is being attached to.</param>
            <param name="constraint">The constraint being connected.</param>
            <param name="clientView">The active DiagramClientView</param>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.InternalUniquenessConstraintConnectAction.SourceShape">
            <summary>
            Gets the FactTypeShape this internal uniqueness constraint is on.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.InternalUniquenessConstraintConnectAction.SourceInternalUniquenessConstraint">
            <summary>
            Gets the InternalUniquenessConstraint being worked on.
            </summary>
            <value></value>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.InternalUniquenessConstraintConnectAction.SelectedRoleCollection">
            <summary>
            Gets and sets the selected roles.
            </summary>
            <value></value>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.InternalUniquenessConstraintConnectAction.ActiveConstraint">
            <summary>
            The constraint that acts as the Source object for this mouse action
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.InternalUniquenessConstraintConnectAction.InternalUniquenessConstraintConnectionType">
            <summary>
            The ConnectionType used with this ConnectAction. The type
            is a singleton, holds all of the context-independent logic,
            and operates directly on shape elements.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.InternalUniquenessConstraintConnectAction.InternalUniquenessConstraintConnectionType.Instance">
            <summary>
            The singleton InternalConstraintConnectionType instance
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.InternalUniquenessConstraintConnectAction.InternalUniquenessConstraintConnectionType.InstanceArray">
            <summary>
            An array of one element containing the singleton InternalUniquenessConstraintConnectionType instance
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.InternalUniquenessConstraintConnectAction.InternalUniquenessConstraintConnectionType.#ctor">
            <summary>
            Enforce use static properties to get singleton.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.InternalUniquenessConstraintConnectAction.InternalUniquenessConstraintConnectionType.IsValidSourceAndTarget(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
            <summary>
            Called as the pointer is moved over potential targets after a source is selected
            So should be pretty quick
            </summary>
            <remarks>
            The cursor can change dependant on CanCreateConnection when this returns true
            When this returns false, the control falls back to
            InternalUniquenessConstraintConectAction.
            </remarks>
            <param name="sourceShapeElement">ShapeElement</param>
            <param name="targetShapeElement">ShapeElement</param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.InternalUniquenessConstraintConnectAction.InternalUniquenessConstraintConnectionType.CanCreateConnection(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,System.String@)">
            <summary>
            Used for more in-depth checking before ConnectionType.CreateConnection is called, and
            to display warning messages on the design surface.
            </summary>
            <param name="sourceShapeElement">The source of the requested connection</param>
            <param name="targetShapeElement">The target of the requested connection</param>
            <param name="connectionWarning">A location to write the warning string</param>
            <returns>true if the connection can proceed</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.InternalUniquenessConstraintConnectAction.InternalUniquenessConstraintConnectionType.CreateConnection(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.PaintFeedbackArgs)">
            <summary>
            Create a connection between a FactTypeShape and a FactType. Roles
            used in the connection are stored with the currently active connect action.
            </summary>
            <param name="sourceShapeElement">The source of the requested connection</param>
            <param name="targetShapeElement">The target of the requested connection</param>
            <param name="paintFeedbackArgs">PaintFeedbackArgs</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.InternalUniquenessConstraintConnectAction.InternalUniquenessConstraintConnectionType.UpdatePaintFeedbackParameters(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.PaintFeedbackArgs)">
            <summary>
            Controls the PaintFeedbackArgs for while building an internal uniqueness constraint.
            </summary>
            <param name="sourceShapeElement">The shape that the internal uniqueness constraint is being added to.</param>
            <param name="sourcePoint">The point where the internal uniqueness constraint was added.</param>
            <param name="targetShapeElement">The shape that the mouse is currently over.</param>
            <param name="targetPoint">The point that the mouse is currently over.</param>
            <param name="paintFeedbackArgs">The current PaintFeedbackArgs.</param>
            <returns>The modified PaintFeedbackArgs</returns>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.InternalUniquenessConstraintAction">
            <summary>
            A toolbox action to add an Internal constraint
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.InternalUniquenessConstraintAction.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.Diagram)">
            <summary>
            Construct a new constraint action for a specific diagram. The
            same connect action can be reused multiple times by activating and
            deactivating it.
            </summary>
            <param name="diagram">The owning diagram</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.InternalUniquenessConstraintAction.Reset">
            <summary>
            Central function to return member variables to a clean state.
            Called by the constructor and the deactivation sequence.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.InternalUniquenessConstraintAction.AddStoreEvents(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Add events to the store during connect action
            activation. The default implementation watches for
            new Internal constraints added to the diagram.
            </summary>
            <param name="store">Store</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.InternalUniquenessConstraintAction.RemoveStoreEvents(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Removed any events added during the AddStoreEvents methods
            </summary>
            <param name="store">Store</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.InternalUniquenessConstraintAction.InternalConstraintAddedEvent(System.Object,Microsoft.VisualStudio.Modeling.ElementAddedEventArgs)">
            <summary>
            An IMS event to track the shape element added to the associated
            diagram during this connect action.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.InternalUniquenessConstraintAction.OnMouseActionActivated(Microsoft.VisualStudio.Modeling.Diagrams.DiagramEventArgs)">
            <summary>
            Add an event on the store so we can track
            the shape for an Internal constraint added during
            the transaction resulting from completion of the mouse
            action.
            </summary>
            <param name="e">DiagramEventArgs</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.InternalUniquenessConstraintAction.OnMouseActionDeactivated(Microsoft.VisualStudio.Modeling.Diagrams.DiagramEventArgs)">
            <summary>
            Deactivate the mouse action by removing the listening events,
            call the base, then firing off our own AfterMouseActionDeactivated
            event, if it is set.
            </summary>
            <param name="e">DiagramEventArgs</param>
        </member>
        <member name="E:Northface.Tools.ORM.ShapeModel.InternalUniquenessConstraintAction.AfterMouseActionDeactivated">
            <summary>
            An event that fires after the standard MouseActionDeactivated event. The
            standard event clears the toolbox, this one can be used to chain this
            action to a new standard action.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.InternalUniquenessConstraintAction.DropTargetShape">
            <summary>
            The fact type shape added to as a result of a completed mouse action
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.InternalUniquenessConstraintAction.AddedConstraint">
            <summary>
            The internal uniqueness constraint added as a result of a completed mouse action
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.InternalUniquenessConstraintAction.ActionCompleted">
            <summary>
            Was this action completed successfully?
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ReadingShape">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.FloatingTextShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.FloatingTextShape.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FloatingTextShape.InitializeShapeFields(Microsoft.VisualStudio.Modeling.Diagrams.ShapeFieldCollection)">
            <summary>
            Associate the value of the text field with a property
            specified by the derived class. Called one per class type.
            </summary>
            <param name="shapeFields">ShapeFieldCollection to initialized</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FloatingTextShape.CreateAutoSizeTextField">
            <summary>
            Method to allow inheritors to provide custom implementations of the AutoSizeTextField.
            </summary>
            <returns>The AutoSizeTextField to use.</returns>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.FloatingTextShape.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.FloatingTextShape.classStyleSet">
            <summary>
            Style Set
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.FloatingTextShape.shapeFields">
            <summary>
            Shape Fields
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FloatingTextShape.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FloatingTextShape.TextShapeField">
            <summary>
            Retrieve or set the (singleton) shape field for the text
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FloatingTextShape.ContentSize">
            <summary>
            Size the label shape to the size of the content label
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FloatingTextShape.HasOutline">
            <summary>
            Don't outline the text
            </summary>
            <value></value>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FloatingTextShape.HasFilledBackground">
            <summary>
            Changed to make the background transparent
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FloatingTextShape.AssociatedShapeMetaAttributeGuid">
            <summary>
            Retrieve the attribute on the shape field to be associated with the
            text field. This attribute should be an xpath-bound property to
            the attribute specified in the AssociatedModelMetaAttributeGuid override
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FloatingTextShape.AssociatedModelMetaAttributeGuid">
            <summary>
            Retrieve the attribute on the associated model element to be bound to
            the text field. This attribute should be xpath-bound to a property on
            the derived shape class. The opposite property is specified with the
            AssociatedShapeMetaAttributeGuid override. Defaults to NamedElement.NameMetaAttributeGuid
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FloatingTextShape.ClassStyleSet">
            <summary>
            Style Set
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FloatingTextShape.ShapeFields">
            <summary>
            Shape Fields
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ReadingShape.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ReadingShape.ReadingTextMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ReadingShape.AttachEventHandlers(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Attaches event listeners for the purpose of notifying the
            ReadingShape to invalidate its cached data.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ReadingShape.DetachEventHandlers(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Detaches event listeners for the purpose of notifying the
            ReadingShape to invalidate its cached data.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ReadingShape.ReadingAddedEvent(System.Object,Microsoft.VisualStudio.Modeling.ElementAddedEventArgs)">
            <summary>
            Event handler that listens for when ReadingOrderHasReading link is being added
            and then tells associated model elements to invalidate their cache
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ReadingShape.ReadingRemovedEvent(System.Object,Microsoft.VisualStudio.Modeling.ElementRemovedEventArgs)">
            <summary>
            Event handler that listens for when ReadingOrderHasReading link is being removed
            and then tells associated model elements to invalidate their cache
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ReadingShape.ReadingAttributeChangedEvent(System.Object,Microsoft.VisualStudio.Modeling.ElementAttributeChangedEventArgs)">
            <summary>
            Event handler that listens for when a Reading attribute is changed
            and then tells associated model elements to invalidate their cache
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ReadingShape.RoleAddedEvent(System.Object,Microsoft.VisualStudio.Modeling.ElementAddedEventArgs)">
            <summary>
            Event handler that listens for when ReadingOrderHasRole link is being added
            and then tells associated model elements to invalidate their cache
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ReadingShape.RoleRemovedEvent(System.Object,Microsoft.VisualStudio.Modeling.ElementRemovedEventArgs)">
            <summary>
            Event handler that listens for when ReadingOrderHasRole link is being removed
            and then tells associated model elements to invalidate their cache
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ReadingShape.RefreshPresentationElements(Microsoft.VisualStudio.Modeling.PresentationElementMoveableCollection)">
            <summary>
            Used to invalidate caches on presentation elements.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ReadingShape.OnBoundsFixup(Microsoft.VisualStudio.Modeling.Diagrams.BoundsFixupState,System.Int32)">
            <summary>
            Putting the reading text under the fact.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ReadingShape.CreateAutoSizeTextField">
            <summary>
            Overrides default implemenation to instantiate an Reading specific one.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ReadingShape.InvalidateDisplayText">
            <summary>
            Notifies the shape that the currently cached display text may no longer
            be accurate, so it needs to be recreated.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ReadingShape.ActivateModelError(Northface.Tools.ORM.ObjectModel.ModelError)">
            <summary>
            Implements IModelErrorActivation.ActivateModelError. Forwards errors to
            associated fact type
            </summary>
            <param name="error">Activated model error</param>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ReadingShape.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ReadingShape.classStyleSet">
            <summary>
            Style Set
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ReadingShape.shapeFields">
            <summary>
            Shape Fields
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ReadingShape.ReadingTextMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ReadingShape.readingShapeReadingTextFieldHandler">
            <summary>
            FieldHandler for ReadingShape.ReadingText field
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ReadingShape.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ReadingShape.CreateReadingShape(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ReadingShape.CreateAndInitializeReadingShape(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ReadingShape.GetCustomSerializedChildElementInfo">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ReadingShape.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ReadingShape.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ReadingShape.MapChildElement(System.String,System.String,System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ReadingShape.MapAttribute(System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ReadingShape.AssociatedShapeMetaAttributeGuid">
            <summary>
            Associate the reading text with this shape
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ReadingShape.AssociatedModelMetaAttributeGuid">
            <summary>
            Associate to the readints text attribute
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ReadingShape.TextShapeField">
            <summary>
            Store per-type value for the base class
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ReadingShape.ResizableSides">
            <summary>
            Changed to allow resizing of the label
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ReadingShape.DisplayText">
            <summary>
            Constructs how the reading text should be displayed.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ReadingShape.ClassStyleSet">
            <summary>
            Style Set
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ReadingShape.ShapeFields">
            <summary>
            Shape Fields
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ReadingShape.ReadingText">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ReadingShape.SupportedCustomSerializedOperations">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ReadingShape.CustomSerializedElementInfo">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ReadingShape.CustomSerializedChildRoleComparer">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ReadingShape.ReadingAutoSizeTextField">
            <summary>
            Contains code to replace RolePlayer place holders with an ellipsis.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ReadingShape.ReadingAutoSizeTextField.#ctor">
            <summary>
            Initialize a ReadingAutoSizeTextField
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ReadingShape.ReadingAutoSizeTextField.GetDisplayText(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
            <summary>
            Code that handles the displaying of ellipsis in place of place holders and also
            their suppression if the are on the outside of a binary fact.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ReadingShape.ReadingAutoSizeTextField.GetMultipleLine(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
            <summary>
            Changed to return true to get multiple line support.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ReadingShape.ReadingOrderReadingTextChanged">
            <summary>
            Rule to detect changes to the ReadingText so that the shape knows the
            display text needs to be recreated.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ReadingShape.ReadingOrderReadingTextChanged.ElementAttributeChanged(Microsoft.VisualStudio.Modeling.ElementAttributeChangedEventArgs)">
            <summary>
            Used to get notification of attribute changes.
            Current code interested in changes to:
            ReadingText
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ReadingShape.ReadingTextChanged">
            <summary>
            Rule to notice changes to Reading.Text properties so that the
            reading shapes can have their display text invalidated.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ReadingShape.ReadingTextChanged.ElementAttributeChanged(Microsoft.VisualStudio.Modeling.ElementAttributeChangedEventArgs)">
            <summary>
            Notice when Text attribute is changed and invalidate display text of the ReadingShapes
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ReadingShape.ReadingShapeReadingTextFieldHandler">
            <summary>
            Implement the field handler for ReadingShape.ReadingText
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ReadingShape.ReadingShapeReadingTextFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ReadingShape.ReadingShapeReadingTextFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the ReadingShape.ReadingText field handler
            </summary>
            <value>ReadingShapeReadingTextFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ReadingShape.ReadingShapeReadingTextFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the ReadingShape.ReadingText field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ORMMetaModel">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ORMMetaModel.MetaModelGuidString">
            <summary>
            MetaModel Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ORMMetaModel.ResourceBaseName">
            <summary>
            The base name of this models resources.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ORMMetaModel.MetaModelGuid">
            <summary>
            MetaModel Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ORMMetaModel.#ctor(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ORMMetaModel.internalSyncObject">
            <summary>
            A internal object used for synchronization.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ORMMetaModel.copyClosureMember">
            <summary>
            CopyClosure cache
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ORMMetaModel.removeClosureMember">
            <summary>
            RemoveClosure cache
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ORMMetaModel.GetClosureFilter(Microsoft.VisualStudio.Modeling.ClosureType,System.Collections.ICollection)">
            <summary>
            Returns an IElementVisitorFilter that corresponds to the ClosureType.
            </summary>
            <param name="type">closure type</param>
            <param name="rootElements">collection of root elements</param>
            <returns>IElementVisitorFilter or null</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ORMMetaModel.GetCustomElementNamespaces">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ORMMetaModel.ShouldSerializeMetaClass(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.MetaClassInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ORMMetaModel.MapRootElement(System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ORMMetaModel.MapClassName(System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ORMMetaModel.ResourceManager">
            <summary>
            Returns the SubStore's ResourceManager. If the ResourceManager does not already exist, then it is created.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ORMMetaModel.InternalSyncObject">
            <summary>
            Gets the internal object used for synchronization.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ORMMetaModel.SingletonResourceManager">
            <summary>
            Gets the Singleton ResourceManager for this SubStore
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ORMMetaModel.CopyClosure">
            <summary>
            CopyClosure cache
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ORMMetaModel.RemoveClosure">
            <summary>
            RemoveClosure cache
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ORMMetaModel.DefaultElementPrefix">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ORMMetaModelCopyClosure">
            <summary>
            Copy closure visitor filter
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ORMMetaModelCopyClosure.metaRolesMember">
            <summary>
            MetaRoles
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ORMMetaModelCopyClosure.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ORMMetaModelCopyClosure.ShouldVisitRelationship(Microsoft.VisualStudio.Modeling.ElementWalker,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.MetaRoleInfo,Microsoft.VisualStudio.Modeling.MetaRelationshipInfo,Microsoft.VisualStudio.Modeling.ElementLink)">
            <summary>
            Called to ask the filter if a particular relationship from a source element should be included in the traversal
            </summary>
            <param name="walker">ElementWalker traversing the model</param>
            <param name="sourceElement">Model Element playing the source role</param>
            <param name="sourceRoleInfo">MetaRoleInfo of the role that the source element is playing in the relationship</param>
            <param name="metaRelationshipInfo">MetaRelationshipInfo for the ElementLink in question</param>
            <param name="targetRelationship">Relationship in question</param>
            <returns>Yes if the relationship should be traversed</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ORMMetaModelCopyClosure.ShouldVisitRolePlayer(Microsoft.VisualStudio.Modeling.ElementWalker,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementLink,Microsoft.VisualStudio.Modeling.MetaRoleInfo,Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Called to ask the filter if a particular role player should be Visited during traversal
            </summary>
            <param name="walker">ElementWalker traversing the model</param>
            <param name="sourceElement">Model Element playing the source role</param>
            <param name="elementLink">Element Link that forms the relationship to the role player in question</param>
            <param name="targetRoleInfo">MetaRoleInfo of the target role</param>
            <param name="targetRolePlayer">Model Element that plays the target role in the relationship</param>
            <returns></returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ORMMetaModelCopyClosure.MetaRoles">
            <summary>
            MetaRoles
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ORMMetaModelRemoveClosure">
            <summary>
            Remove closure visitor filter
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ORMMetaModelRemoveClosure.metaRolesMember">
            <summary>
            MetaRoles
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ORMMetaModelRemoveClosure.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ORMMetaModelRemoveClosure.ShouldVisitRelationship(Microsoft.VisualStudio.Modeling.ElementWalker,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.MetaRoleInfo,Microsoft.VisualStudio.Modeling.MetaRelationshipInfo,Microsoft.VisualStudio.Modeling.ElementLink)">
            <summary>
            Called to ask the filter if a particular relationship from a source element should be included in the traversal
            </summary>
            <param name="walker">ElementWalker that is traversing the model</param>
            <param name="sourceElement">Model Element playing the source role</param>
            <param name="sourceRoleInfo">MetaRoleInfo of the role that the source element is playing in the relationship</param>
            <param name="metaRelationshipInfo">MetaRelationshipInfo for the ElementLink in question</param>
            <param name="targetRelationship">Relationship in question</param>
            <returns>Yes if the relationship should be traversed</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ORMMetaModelRemoveClosure.ShouldVisitRolePlayer(Microsoft.VisualStudio.Modeling.ElementWalker,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementLink,Microsoft.VisualStudio.Modeling.MetaRoleInfo,Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Called to ask the filter if a particular role player should be Visited during traversal
            </summary>
            <param name="walker">ElementWalker that is traversing the model</param>
            <param name="sourceElement">Model Element playing the source role</param>
            <param name="elementLink">Element Link that forms the relationship to the role player in question</param>
            <param name="targetRoleInfo">MetaRoleInfo of the target role</param>
            <param name="targetRolePlayer">Model Element that plays the target role in the relationship</param>
            <returns></returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ORMMetaModelRemoveClosure.MetaRoles">
            <summary>
            MetaRoles
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ORMModel">
            <summary>
            
            </summary>
             <summary>
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ORMModel.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ORMModel.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ORMModel.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ORMModel.CreateORMModel(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ORMModel.CreateAndInitializeORMModel(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ORMModel.GetPortableDataType(Northface.Tools.ORM.ObjectModel.PortableDataType)">
            <summary>
            Get one of the known data types. Data types
            are created automatically during model deserialization.
            </summary>
            <param name="portableType">PortableDataType value</param>
            <returns>Known type, or throws if out of range</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ORMModel.CanAddChildElement(Microsoft.VisualStudio.Modeling.ElementGroupPrototype,Microsoft.VisualStudio.Modeling.ProtoElementBase)">
            <summary>
            Support adding root elements and constraints directly to the design surface
            </summary>
            <param name="elementGroupPrototype"></param>
            <param name="protoElement"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ORMModel.MergeRelate(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementGroup)">
            <summary>
            Attach a deserialized ObjectType, FactType, or external constraint to the model.
            Called after prototypes for these items are dropped onto the diagram
            from the toolbox.
            </summary>
            <param name="sourceElement">The element being added</param>
            <param name="elementGroup">The element describing all of the created elements</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ORMModel.GetCounterpartRoleDictionary(System.Guid,System.Guid)">
            <summary>
            Implements INamedElementDictionaryParent.GetCounterpartRoleDictionary
            </summary>
            <param name="parentMetaRoleGuid">Guid</param>
            <param name="childMetaRoleGuid">Guid</param>
            <returns>Dictionaries for object types, fact types, and constraints</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ORMModel.GetAllowDuplicateNamesContextKey(System.Guid,System.Guid)">
            <summary>
            Implements INamedElementDictionaryParent.GetAllowDuplicateNamesContextKey
            </summary>
            <param name="parentMetaRoleGuid">Guid</param>
            <param name="childMetaRoleGuid">Guid</param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ORMModel.GetCustomSerializedChildElementInfo">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ORMModel.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ORMModel.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ORMModel.MapChildElement(System.String,System.String,System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ORMModel.MapAttribute(System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ORMModel.ObjectTypeCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ORMModel.FactTypeCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ORMModel.ErrorCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ORMModel.ReferenceModeKindCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ORMModel.ReferenceModeCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ORMModel.SingleColumnExternalConstraintCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ORMModel.MultiColumnExternalConstraintCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ORMModel.DataTypeCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ORMModel.DefaultDataType">
            <summary>
            Return the current portable data type specified in the
            ORM Designer options page
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ORMModel.DataTypesFixupListener">
            <summary>
            Return a fixup listener for data type deserialization.
            The listener adds the implicit DataType elements if they
            are not already in the model.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ORMModel.EntityTypeCollection">
            <summary>
            All of the entity types in the object types collection.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ORMModel.ValueTypeCollection">
            <summary>
            All of the value types in the object types collection.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ORMModel.DeserializationFixupListeners">
            <summary>
            Return all deserialization fixup listeners for the core object model
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ORMModel.ObjectTypesDictionary">
            <summary>
            Returns the Object Types Dictionary
            </summary>
            <value>The model ObjectTypesDictionary </value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ORMModel.FactTypesDictionary">
            <summary>
            Returns the Fact Types Dictionary
            </summary>
            <value>The model FactTypesDictionary</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ORMModel.ConstraintsDictionary">
            <summary>
            Returns the Constraints Dictionary
            </summary>
            <value>The model ConstraintsDictionary.</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ORMModel.SupportedCustomSerializedOperations">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ORMModel.CustomSerializedElementInfo">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ORMModel.CustomSerializedChildRoleComparer">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ORMModel.AddIntrinsicDataTypesFixupListener">
            <summary>
            Fixup listener implementation. Adds intrinsic data type implementations.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ORMModel.AddIntrinsicDataTypesFixupListener.#ctor(System.Int32)">
            <summary>
            AddIntrinsicsFixupListener constructor
            </summary>
            <param name="intrinsicPhase">A phase constant to watch</param>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ORMModel.ObjectTypeNamedElementDictionary">
            <summary>
            Dictionary used to set the initial names of object and value types and to
            generate model validation errors and exceptions for duplicate
            element names.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ORMModel.ObjectTypeNamedElementDictionary.#ctor">
            <summary>
            Default constructor for ObjectTypeNamedElementDictionary
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ORMModel.ObjectTypeNamedElementDictionary.GetRootNamePattern(Microsoft.VisualStudio.Modeling.NamedElement)">
            <summary>
            Provide different base names for entity types and value types
            </summary>
            <param name="element">The element to test</param>
            <returns>A base name string pattern</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ORMModel.ObjectTypeNamedElementDictionary.ThrowDuplicateNameException(Microsoft.VisualStudio.Modeling.NamedElement,System.String)">
            <summary>
            Raise an exception with text specific to a name in a model
            </summary>
            <param name="element">Element we're attempting to name</param>
            <param name="requestedName">The in-use requested name</param>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ORMModel.FactTypeNamedElementDictionary">
            <summary>
            Dictionary used to set the initial names of fact types and to
            generate model validation errors and exceptions for duplicate
            element names.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ORMModel.FactTypeNamedElementDictionary.#ctor">
            <summary>
            Default constructor for FactTypeNamedElementDictionary
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ORMModel.FactTypeNamedElementDictionary.GetRootNamePattern(Microsoft.VisualStudio.Modeling.NamedElement)">
            <summary>
            Provide a localized base name pattern for a new FactType
            </summary>
            <param name="element">Ignored. Should be a FactType</param>
            <returns>A base name string pattern</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ORMModel.FactTypeNamedElementDictionary.ThrowDuplicateNameException(Microsoft.VisualStudio.Modeling.NamedElement,System.String)">
            <summary>
            Raise an exception with text specific to a name in a model
            </summary>
            <param name="element">Element we're attempting to name</param>
            <param name="requestedName">The in-use requested name</param>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ORMModel.ConstraintNamedElementDictionary">
            <summary>
            Dictionary used to set the initial names of constraints and to
            generate model validation errors and exceptions for duplicate
            element names.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ORMModel.ConstraintNamedElementDictionary.#ctor">
            <summary>
            Default constructor for ConstraintNamedElementDictionary
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ORMModel.ConstraintNamedElementDictionary.GetRootNamePattern(Microsoft.VisualStudio.Modeling.NamedElement)">
            <summary>
            Provide a localized base name pattern for a new Constraint
            </summary>
            <param name="element">Ignored. Should be a FactType</param>
            <returns>A base name string pattern</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ORMModel.ConstraintNamedElementDictionary.ThrowDuplicateNameException(Microsoft.VisualStudio.Modeling.NamedElement,System.String)">
            <summary>
            Raise an exception with text specific to a name in a model
            </summary>
            <param name="element">Element we're attempting to name</param>
            <param name="requestedName">The in-use requested name</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ORMModel.CustomSortChildComparer.#ctor(Microsoft.VisualStudio.Modeling.Store)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ORMModel.CustomSortChildComparer.Compare(Microsoft.VisualStudio.Modeling.MetaRoleInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ORMModel.CustomSortChildComparer.Equals(Microsoft.VisualStudio.Modeling.MetaRoleInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ORMModel.CustomSortChildComparer.GetHashCode(Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ORMModelElementFactoryCreator">
            <summary>
            ORMModel Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ORMModelElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ORMModelElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ObjectType">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectType.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectType.IsIndependentMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectType.IsValueTypeMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectType.ScaleMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectType.LengthMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectType.NestedFactTypeDisplayMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectType.ReferenceModeDisplayMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectType.ReferenceModeStringMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectType.ReferenceModeMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectType.DataTypeDisplayMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectType.ValueRangeTextMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectType.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectType.IsIndependentMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectType.objectTypeIsIndependentFieldHandler">
            <summary>
            FieldHandler for ObjectType.IsIndependent field
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectType.IsValueTypeMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectType.objectTypeIsValueTypeFieldHandler">
            <summary>
            FieldHandler for ObjectType.IsValueType field
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectType.ScaleMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectType.objectTypeScaleFieldHandler">
            <summary>
            FieldHandler for ObjectType.Scale field
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectType.LengthMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectType.objectTypeLengthFieldHandler">
            <summary>
            FieldHandler for ObjectType.Length field
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectType.NestedFactTypeDisplayMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectType.objectTypeNestedFactTypeDisplayFieldHandler">
            <summary>
            FieldHandler for ObjectType.NestedFactTypeDisplay field
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectType.ReferenceModeDisplayMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectType.objectTypeReferenceModeDisplayFieldHandler">
            <summary>
            FieldHandler for ObjectType.ReferenceModeDisplay field
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectType.ReferenceModeStringMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectType.objectTypeReferenceModeStringFieldHandler">
            <summary>
            FieldHandler for ObjectType.ReferenceModeString field
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectType.ReferenceModeMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectType.objectTypeReferenceModeFieldHandler">
            <summary>
            FieldHandler for ObjectType.ReferenceMode field
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectType.DataTypeDisplayMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectType.objectTypeDataTypeDisplayFieldHandler">
            <summary>
            FieldHandler for ObjectType.DataTypeDisplay field
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectType.ValueRangeTextMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectType.objectTypeValueRangeTextFieldHandler">
            <summary>
            FieldHandler for ObjectType.ValueRangeText field
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.CreateObjectType(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.CreateAndInitializeObjectType(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.GetCustomSerializedChildElementInfo">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.MapChildElement(System.String,System.String,System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.MapAttribute(System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectType.DeleteReferenceModeValueType">
            <summary>
            A key to return from INamedElementDictionaryParent.GetAllowDuplicateNamesContextKey
            if duplicate names should be allowed.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.SetValueForCustomStoredAttribute(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,System.Object)">
            <summary>
            Standard override. All custom storage properties are derived, not
            stored. Actual changes are handled in ObjectTypeChangeRule.
            </summary>
            <param name="attribute">MetaAttributeInfo</param>
            <param name="newValue">object</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.GetValueForCustomStoredAttribute(Microsoft.VisualStudio.Modeling.MetaAttributeInfo)">
            <summary>
            Standard override. Retrieve values for calculated properties.
            </summary>
            <param name="attribute">MetaAttributeInfo</param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.GetOldValueForCustomStoredAttribute(Microsoft.VisualStudio.Modeling.MetaAttributeInfo)">
            <summary>
            Standard override. Defer to GetValueForCustomStoredAttribute.
            </summary>
            <param name="attribute">MetaAttributeInfo</param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.GetDataTypeLink">
            <summary>
            Return the link object between a value type and its referenced
            data type object.
            </summary>
            <returns>ValueTypeHasDataType relationship</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.ShouldCreatePropertyDescriptor(Microsoft.VisualStudio.Modeling.MetaAttributeInfo)">
            <summary>
            Standard override determine when derived attributes are
            displayed in the property grid. Called for all attributes.
            </summary>
            <param name="metaAttrInfo">MetaAttributeInfo</param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.CreatePropertyDescriptor(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.ModelElement,System.Attribute[])">
            <summary>
            Return a custom property descriptor for the ReferenceModeDisplay property
            </summary>
            <param name="modelElement"></param>
            <param name="metaAttributeInfo"></param>
            <param name="requestor"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.IsPropertyDescriptorReadOnly(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Standard override. Determines when derived properties are read-only. Called
            if the ReadOnly setting on the element is one of the SometimesUIReadOnly* values.
            Currently, IsValueType is readonly if there is a nested fact type.
            </summary>
            <param name="propertyDescriptor">PropertyDescriptor</param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.GetClassName">
            <summary>
            Distinguish between a value type and object
            type in the property grid display.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.CreateReferenceMode(System.String)">
            <summary>
            Utility function to create the reference mode objects.  Creates the fact, value type, and
            preffered internal uniqueness constraint.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.RenameReferenceMode(System.String)">
            <summary>
             Utility function to cahnge the name of an existing reference mode.
            </summary>
            <param name="valueTypeName"></param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.KillReferenceMode(System.Boolean)">
            <summary>
            Utility function to remove the reference mode objects.  Removes the fact, value type, and
            preffered internal uniqueness constraint.
            </summary>
            <param name="aggressivelyKillValueType">Allow removing the value type along with the reference mode predicate</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.GetObjectTypeForPreferredConstraint">
            <summary>
            Retrieves the role player on the preferred internal uniquiness constraint.
            </summary>
            <returns>The role player as an ObjectType if it exists; otherwise, null.</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.GetValueTypeForPreferredConstraint">
            <summary>
            Retrieves the ValueType object representing this ObjectType's value type.
            </summary>
            <returns>The value type as an ObjectType if it exists; otherwise, null.</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.GetReferenceMode">
            <summary>
            Returns the Reference Mode for the given object if one exists
            </summary>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.GetReferenceMode(System.String)">
            <summary>
            Returns the Reference Mode for the given object if one exists
            </summary>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.GetReferenceMode(System.String,System.String,System.String)">
            <summary>
            Returns the Reference Mode for the given object if one exists
            </summary>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.GetReferenceMode(Northface.Tools.ORM.ObjectModel.ReferenceMode@,System.String@)">
            <summary>
            Determines whether to return the valuetype name as the reference mode or, if there
            is a reference mode, it returns the reference mode name
            </summary>
            <param name="refMode"></param>
            <param name="refModeString"></param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.FindValueRangeDefinition(System.Boolean)">
            <summary>
            Retrieves the ValueRangeDefinition to use for this ObjectType.
            </summary>
            <param name="autoCreate">If the ValueRangeDefinition is null, should one be created?
            This should be false if we're simply reading the definition.</param>
            <returns>For ObjectTypes with a ref mode, this returns the ValueRangeDefinition
            found on the ObjectType's preferred identifier role.</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.GetRoleGuids(System.Guid@,System.Guid@)">
            <summary>
            Implementation of INamedElementDictionaryChild.GetRoleGuids. Identifies
            this child as participating in the 'ModelHasObjectType' naming set.
            </summary>
            <param name="parentMetaRoleGuid">Guid</param>
            <param name="childMetaRoleGuid">Guid</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.ValidateDataTypeNotSpecifiedError(Northface.Tools.ORM.ObjectModel.INotifyElementAdded)">
            <summary>
            Validate that a DataTypeNotSpecifiedError is present if neede, and that
            the data type is an unspecified type instance if the error is present.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.ValidateErrors(Northface.Tools.ORM.ObjectModel.INotifyElementAdded)">
            <summary>
            Implements IModelErrorOwner.ValidateErrors
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.IsIndependent">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.IsValueType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.Scale">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.Length">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.NestedFactTypeDisplay">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.ReferenceModeDisplay">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.ReferenceModeString">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.ReferenceMode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.DataTypeDisplay">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.ValueRangeText">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.DataType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.NestedFactType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.PlayedRoleCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.Model">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.DuplicateNameError">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.PreferredIdentifier">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.ValueRangeDefinition">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.SupportedCustomSerializedOperations">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.CustomSerializedElementInfo">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.CustomSerializedChildRoleComparer">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.SubtypeCollection">
            <summary>
            Get the sub types for this type
            </summary>
            <returns>Enumeration of ObjectType</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.SupertypeCollection">
            <summary>
            Get the super types for this type
            </summary>
            <returns>Enumeration of ObjectType</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.ReferenceModeSharesValueType">
            <summary>
            Returns true if the reference mode pattern is sharing a value
            type with another object type
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.HasReferenceMode">
            <summary>
            Indicates whether this ObjectType has a reference mode set.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.DataTypeNotSpecifiedError">
            <summary>
            Returns an error object if the data type is the unspecified data
            type. The UnspecifiedDataType is different than a null DataType, which
            is simply implying that this ObjectType is not a ValueType.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.ErrorCollection">
            <summary>
            Returns the errors associated with the object.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeIsIndependentFieldHandler">
            <summary>
            Implement the field handler for ObjectType.IsIndependent
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeIsIndependentFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeIsIndependentFieldHandler.GetValue(Northface.Tools.ORM.ObjectModel.ObjectType)">
            <summary>
            Gets the value of the attribute as it exists in the element
            </summary>
            <param name="element">the ObjectType</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeIsIndependentFieldHandler.SetValue(Northface.Tools.ORM.ObjectModel.ObjectType,System.Boolean,Microsoft.VisualStudio.Modeling.CommandFactory,System.Boolean,System.Boolean@)">
            <summary>
            Sets the value into the element
            </summary>
            <param name="element">the element</param>
            <param name="value">new value</param>
            <param name="commandFactory">the command factory for this change</param>
            <param name="allowDuplicates">allow duplicate value to continue to fire rules and events</param>
            <param name="oldValue">the old value before the change</param>
            <returns>true if the value actually changed</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeIsIndependentFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the ObjectType.IsIndependent field handler
            </summary>
            <value>ObjectTypeIsIndependentFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeIsIndependentFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the ObjectType.IsIndependent field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeIsValueTypeFieldHandler">
            <summary>
            Implement the field handler for ObjectType.IsValueType
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeIsValueTypeFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeIsValueTypeFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the ObjectType.IsValueType field handler
            </summary>
            <value>ObjectTypeIsValueTypeFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeIsValueTypeFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the ObjectType.IsValueType field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeScaleFieldHandler">
            <summary>
            Implement the field handler for ObjectType.Scale
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeScaleFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeScaleFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the ObjectType.Scale field handler
            </summary>
            <value>ObjectTypeScaleFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeScaleFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the ObjectType.Scale field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeLengthFieldHandler">
            <summary>
            Implement the field handler for ObjectType.Length
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeLengthFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeLengthFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the ObjectType.Length field handler
            </summary>
            <value>ObjectTypeLengthFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeLengthFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the ObjectType.Length field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeNestedFactTypeDisplayFieldHandler">
            <summary>
            Implement the field handler for ObjectType.NestedFactTypeDisplay
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeNestedFactTypeDisplayFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeNestedFactTypeDisplayFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the ObjectType.NestedFactTypeDisplay field handler
            </summary>
            <value>ObjectTypeNestedFactTypeDisplayFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeNestedFactTypeDisplayFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the ObjectType.NestedFactTypeDisplay field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeReferenceModeDisplayFieldHandler">
            <summary>
            Implement the field handler for ObjectType.ReferenceModeDisplay
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeReferenceModeDisplayFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeReferenceModeDisplayFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the ObjectType.ReferenceModeDisplay field handler
            </summary>
            <value>ObjectTypeReferenceModeDisplayFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeReferenceModeDisplayFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the ObjectType.ReferenceModeDisplay field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeReferenceModeStringFieldHandler">
            <summary>
            Implement the field handler for ObjectType.ReferenceModeString
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeReferenceModeStringFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeReferenceModeStringFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the ObjectType.ReferenceModeString field handler
            </summary>
            <value>ObjectTypeReferenceModeStringFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeReferenceModeStringFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the ObjectType.ReferenceModeString field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeReferenceModeFieldHandler">
            <summary>
            Implement the field handler for ObjectType.ReferenceMode
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeReferenceModeFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeReferenceModeFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the ObjectType.ReferenceMode field handler
            </summary>
            <value>ObjectTypeReferenceModeFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeReferenceModeFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the ObjectType.ReferenceMode field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeDataTypeDisplayFieldHandler">
            <summary>
            Implement the field handler for ObjectType.DataTypeDisplay
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeDataTypeDisplayFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeDataTypeDisplayFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the ObjectType.DataTypeDisplay field handler
            </summary>
            <value>ObjectTypeDataTypeDisplayFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeDataTypeDisplayFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the ObjectType.DataTypeDisplay field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeValueRangeTextFieldHandler">
            <summary>
            Implement the field handler for ObjectType.ValueRangeText
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeValueRangeTextFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeValueRangeTextFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the ObjectType.ValueRangeText field handler
            </summary>
            <value>ObjectTypeValueRangeTextFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeValueRangeTextFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the ObjectType.ValueRangeText field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.CustomSortChildComparer.#ctor(Microsoft.VisualStudio.Modeling.Store)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.CustomSortChildComparer.Compare(Microsoft.VisualStudio.Modeling.MetaRoleInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.CustomSortChildComparer.Equals(Microsoft.VisualStudio.Modeling.MetaRoleInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.CustomSortChildComparer.GetHashCode(Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeChangeRule">
            <summary>
            Enforces Change Rules
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeChangeRule.ElementAttributeChanged(Microsoft.VisualStudio.Modeling.ElementAttributeChangedEventArgs)">
            <summary>
            Add or remove a ValueTypeHasDataType link depending on the value
            of the IsValueType property.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeChangeRule.SetReferenceMode(Northface.Tools.ORM.ObjectModel.ObjectType,Northface.Tools.ORM.ObjectModel.ReferenceMode,Northface.Tools.ORM.ObjectModel.ReferenceMode,System.String,System.String)">
            <summary>
            Determines if the value type associated with the reference mode pattern needs to be 
            removed, renamed, or created based on the new and old values of the property.
            Value Type modifications won't be seen unless the object type is viewed in expanded mode.
            </summary>
            <param name="objectType">the selected object</param>
            <param name="newMode">The new reference mode</param>
            <param name="oldMode">The old reference mode</param>
            <param name="newModeName">The new reference mode name</param>
            <param name="oldModeName">The old reference mode name</param>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeRemoveRule">
            <summary>
            Enforces Delete Rules
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.ObjectTypeRemoveRule.ElementRemoving(Microsoft.VisualStudio.Modeling.ElementRemovingEventArgs)">
            <summary>
            Executes when an object is removing
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ObjectType.CheckForIncompatibleRelationshipRule">
            <summary>
            Ensure consistency among relationships attached to ObjectType roles.
            This is an object model backup for the UI, which does not offer these
            conditions to the user.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.CheckForIncompatibleRelationshipRule.ElementAdded(Microsoft.VisualStudio.Modeling.ElementAddedEventArgs)">
            <summary>
            Called when an attempt is made to turn an ObjectType into either
            a value type or a nesting type.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.CheckForIncompatibleRelationshipRule.FireBefore">
            <summary>
            Fire early. There is no reason to put this in the transaction log
            if it isn't valid.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ObjectType.ReferenceModeDisplayPropertyDescriptor">
            <summary>
            A property descriptor that filters out some standard values from
            the type converter.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectType.ReferenceModeDisplayPropertyDescriptor.#ctor(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.ModelElement,System.Attribute[])">
            <summary>
            Constructor
            </summary>
            <param name="modelElement">Passed to base</param>
            <param name="metaAttributeInfo">Passed to base</param>
            <param name="requestor">Passed to base</param>
            <param name="attributes">Passed to base</param>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectType.ReferenceModeDisplayPropertyDescriptor.Converter">
            <summary>
            Return a custom typeconverter that
            limits the predefined values.
            </summary>
            <value></value>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ObjectTypeMoveableCollection">
            <summary>
            Northface.Tools.ORM.ObjectModel.ObjectType Collection class, strongly-typed collection
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypeMoveableCollection.#ctor(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,System.Guid)">
            <summary>
            Constructor
            </summary>
            <param name="counterpart">Counterpart to create relationship with</param>
            <param name="sourceMetaRoleGuid">Source's meta role in this relationship</param>
            <param name="targetMetaRoleGuid">Target's meta role in this relationship</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypeMoveableCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypeMoveableCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            When implemented by a class, copies the elements of the System.Collection.ICollections to an System.Array, starting at a particular System.Array index
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from System.Collections.ICollection.  The System.Array must have zero-based indexing</param>
            <param name="index">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypeMoveableCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            When implemented by a class, adds an item to the System.Collections.IList
            </summary>
            <param name="value">The System.Object to add to the System.Collections.IList</param>
            <returns>index where object was added</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypeMoveableCollection.System#Collections#IList#Clear">
            <summary>
            When implemented by a class, removes all items from the System.Collections.IList
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypeMoveableCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            When implemented by a class, determines whether the System.Collections.IList has a specific value
            </summary>
            <param name="value">The System.Object to locate in the System.Collections.IList</param>
            <returns>true if object is contained, false otherwise</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypeMoveableCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            When implemented by a class, determines the index of a specific item in the System.Collections.IList
            </summary>
            <param name="value">The System.Object to locate in the System.Collections.IList</param>
            <returns>index of object</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypeMoveableCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            When implemented by a class, inserts an item to the System.Collections.IList at the specified position
            </summary>
            <param name="index">The zero-based index at which the value should be inserted</param>
            <param name="value">The System.Object to insert into the System.Collections.IList</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypeMoveableCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            When implemented by a class, removes the first occurrence of a specific object from the System.Collections.IList
            </summary>
            <param name="value">The System.Object to remove from the System.Collections.IList</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypeMoveableCollection.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
            When implemented by a class, removes the System.Collections.IList item at the specified index
            </summary>
            <param name="index">The zero-based index of the item to remove</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypeMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#Move(Microsoft.VisualStudio.Modeling.ModelElement,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="rolePlayer">The role player to move</param>
            <param name="newPosition">The position to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypeMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#Move(System.Int32,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="oldPosition">The position of the role player to move from</param>
            <param name="newPosition">The position of the role player to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypeMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#ReplaceAt(System.Int32,Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Insert a roleplayer in the specified location
            </summary>
            <param name="position">The index of the roleplayer that needs to be replaced</param>
            <param name="rolePlayer">The role player that will be inserted</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypeMoveableCollection.CopyTo(Northface.Tools.ORM.ObjectModel.ObjectType[],System.Int32)">
            <summary>
            When implemented by a class, copies the elements of the System.Collection.ICollections to an System.Array, starting at a particular System.Array index
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from System.Collections.ICollection.  The System.Array must have zero-based indexing</param>
            <param name="index">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypeMoveableCollection.Add(Northface.Tools.ORM.ObjectModel.ObjectType)">
            <summary>
            Adds an item to the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ObjectType to add to the list</param>
            <returns>index where object was added</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypeMoveableCollection.Clear">
            <summary>
            Removes all items from the list
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypeMoveableCollection.Contains(Northface.Tools.ORM.ObjectModel.ObjectType)">
            <summary>
            Determines whether the list has a specific value
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ObjectType to locate in the list</param>
            <returns>true if object is contained, false otherwise</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypeMoveableCollection.IndexOf(Northface.Tools.ORM.ObjectModel.ObjectType)">
            <summary>
            Determines the index of a specific item in the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ObjectType to locate in the list</param>
            <returns>index of object</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypeMoveableCollection.Insert(System.Int32,Northface.Tools.ORM.ObjectModel.ObjectType)">
            <summary>
            Inserts an item to the list at the specified position
            </summary>
            <param name="index">The zero-based index at which the value should be inserted</param>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ObjectType to insert into the list</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypeMoveableCollection.Remove(Northface.Tools.ORM.ObjectModel.ObjectType)">
            <summary>
            Removes the first occurrence of a specific object from the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ObjectType to remove from the list</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypeMoveableCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the list item at the specified index
            </summary>
            <param name="index">The zero-based index of the item to remove</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypeMoveableCollection.Move(Northface.Tools.ORM.ObjectModel.ObjectType,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="rolePlayer">The role player to move</param>
            <param name="newPosition">The position to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypeMoveableCollection.Move(System.Int32,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="oldPosition">The position of the role player to move from</param>
            <param name="newPosition">The position of the role player to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypeMoveableCollection.ReplaceAt(System.Int32,Northface.Tools.ORM.ObjectModel.ObjectType)">
            <summary>
            Insert a roleplayer in the specified location
            </summary>
            <param name="position">The index of the roleplayer that needs to be replaced</param>
            <param name="rolePlayer">The role player that will be inserted</param>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectTypeMoveableCollection.Counterpart">
            <summary>
            Counterpart
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectTypeMoveableCollection.SourceRole">
            <summary>
            Source Role
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectTypeMoveableCollection.TargetRole">
            <summary>
            Target Role
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectTypeMoveableCollection.System#Collections#ICollection#Count">
            <summary>
            When implemented by a class, gets the number of elements contained in the System.Collections.ICollection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectTypeMoveableCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            When implemented by a class, gets a value indicating whether access to the System.Collections.ICollection is synchronized (thread-safe)
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectTypeMoveableCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            When implemented by a class, gets an object that can be used to synchronize access to the System.Collections.ICollection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectTypeMoveableCollection.System#Collections#IList#IsFixedSize">
            <summary>
            When implemented by a class, gets a value indicating whether the System.Collections.IList has a fixed size
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectTypeMoveableCollection.System#Collections#IList#IsReadOnly">
            <summary>
            When implemented by a class, gets a value indicating whether the System.Collections.IList is read-only
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectTypeMoveableCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Indexed accessor
            </summary>
            <param name="index">Index to access</param>
            <returns>object at that index</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectTypeMoveableCollection.Count">
            <summary>
            Gets the number of elements contained in the collection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectTypeMoveableCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the list is read-only
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectTypeMoveableCollection.Item(System.Int32)">
            <summary>
            Indexed accessor
            </summary>
            <param name="index">Index to access</param>
            <returns>Northface.Tools.ORM.ObjectModel.ObjectType at that index</returns>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ObjectTypeElementFactoryCreator">
            <summary>
            ObjectType Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypeElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypeElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.FactTypeMoveableCollection">
            <summary>
            Northface.Tools.ORM.ObjectModel.FactType Collection class, strongly-typed collection
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeMoveableCollection.#ctor(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,System.Guid)">
            <summary>
            Constructor
            </summary>
            <param name="counterpart">Counterpart to create relationship with</param>
            <param name="sourceMetaRoleGuid">Source's meta role in this relationship</param>
            <param name="targetMetaRoleGuid">Target's meta role in this relationship</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeMoveableCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeMoveableCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            When implemented by a class, copies the elements of the System.Collection.ICollections to an System.Array, starting at a particular System.Array index
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from System.Collections.ICollection.  The System.Array must have zero-based indexing</param>
            <param name="index">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeMoveableCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            When implemented by a class, adds an item to the System.Collections.IList
            </summary>
            <param name="value">The System.Object to add to the System.Collections.IList</param>
            <returns>index where object was added</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeMoveableCollection.System#Collections#IList#Clear">
            <summary>
            When implemented by a class, removes all items from the System.Collections.IList
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeMoveableCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            When implemented by a class, determines whether the System.Collections.IList has a specific value
            </summary>
            <param name="value">The System.Object to locate in the System.Collections.IList</param>
            <returns>true if object is contained, false otherwise</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeMoveableCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            When implemented by a class, determines the index of a specific item in the System.Collections.IList
            </summary>
            <param name="value">The System.Object to locate in the System.Collections.IList</param>
            <returns>index of object</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeMoveableCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            When implemented by a class, inserts an item to the System.Collections.IList at the specified position
            </summary>
            <param name="index">The zero-based index at which the value should be inserted</param>
            <param name="value">The System.Object to insert into the System.Collections.IList</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeMoveableCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            When implemented by a class, removes the first occurrence of a specific object from the System.Collections.IList
            </summary>
            <param name="value">The System.Object to remove from the System.Collections.IList</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeMoveableCollection.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
            When implemented by a class, removes the System.Collections.IList item at the specified index
            </summary>
            <param name="index">The zero-based index of the item to remove</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#Move(Microsoft.VisualStudio.Modeling.ModelElement,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="rolePlayer">The role player to move</param>
            <param name="newPosition">The position to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#Move(System.Int32,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="oldPosition">The position of the role player to move from</param>
            <param name="newPosition">The position of the role player to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#ReplaceAt(System.Int32,Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Insert a roleplayer in the specified location
            </summary>
            <param name="position">The index of the roleplayer that needs to be replaced</param>
            <param name="rolePlayer">The role player that will be inserted</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeMoveableCollection.CopyTo(Northface.Tools.ORM.ObjectModel.FactType[],System.Int32)">
            <summary>
            When implemented by a class, copies the elements of the System.Collection.ICollections to an System.Array, starting at a particular System.Array index
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from System.Collections.ICollection.  The System.Array must have zero-based indexing</param>
            <param name="index">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeMoveableCollection.Add(Northface.Tools.ORM.ObjectModel.FactType)">
            <summary>
            Adds an item to the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.FactType to add to the list</param>
            <returns>index where object was added</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeMoveableCollection.Clear">
            <summary>
            Removes all items from the list
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeMoveableCollection.Contains(Northface.Tools.ORM.ObjectModel.FactType)">
            <summary>
            Determines whether the list has a specific value
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.FactType to locate in the list</param>
            <returns>true if object is contained, false otherwise</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeMoveableCollection.IndexOf(Northface.Tools.ORM.ObjectModel.FactType)">
            <summary>
            Determines the index of a specific item in the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.FactType to locate in the list</param>
            <returns>index of object</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeMoveableCollection.Insert(System.Int32,Northface.Tools.ORM.ObjectModel.FactType)">
            <summary>
            Inserts an item to the list at the specified position
            </summary>
            <param name="index">The zero-based index at which the value should be inserted</param>
            <param name="value">The Northface.Tools.ORM.ObjectModel.FactType to insert into the list</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeMoveableCollection.Remove(Northface.Tools.ORM.ObjectModel.FactType)">
            <summary>
            Removes the first occurrence of a specific object from the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.FactType to remove from the list</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeMoveableCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the list item at the specified index
            </summary>
            <param name="index">The zero-based index of the item to remove</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeMoveableCollection.Move(Northface.Tools.ORM.ObjectModel.FactType,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="rolePlayer">The role player to move</param>
            <param name="newPosition">The position to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeMoveableCollection.Move(System.Int32,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="oldPosition">The position of the role player to move from</param>
            <param name="newPosition">The position of the role player to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeMoveableCollection.ReplaceAt(System.Int32,Northface.Tools.ORM.ObjectModel.FactType)">
            <summary>
            Insert a roleplayer in the specified location
            </summary>
            <param name="position">The index of the roleplayer that needs to be replaced</param>
            <param name="rolePlayer">The role player that will be inserted</param>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeMoveableCollection.Counterpart">
            <summary>
            Counterpart
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeMoveableCollection.SourceRole">
            <summary>
            Source Role
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeMoveableCollection.TargetRole">
            <summary>
            Target Role
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeMoveableCollection.System#Collections#ICollection#Count">
            <summary>
            When implemented by a class, gets the number of elements contained in the System.Collections.ICollection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeMoveableCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            When implemented by a class, gets a value indicating whether access to the System.Collections.ICollection is synchronized (thread-safe)
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeMoveableCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            When implemented by a class, gets an object that can be used to synchronize access to the System.Collections.ICollection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeMoveableCollection.System#Collections#IList#IsFixedSize">
            <summary>
            When implemented by a class, gets a value indicating whether the System.Collections.IList has a fixed size
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeMoveableCollection.System#Collections#IList#IsReadOnly">
            <summary>
            When implemented by a class, gets a value indicating whether the System.Collections.IList is read-only
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeMoveableCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Indexed accessor
            </summary>
            <param name="index">Index to access</param>
            <returns>object at that index</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeMoveableCollection.Count">
            <summary>
            Gets the number of elements contained in the collection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeMoveableCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the list is read-only
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeMoveableCollection.Item(System.Int32)">
            <summary>
            Indexed accessor
            </summary>
            <param name="index">Index to access</param>
            <returns>Northface.Tools.ORM.ObjectModel.FactType at that index</returns>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.FactTypeElementFactoryCreator">
            <summary>
            FactType Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.SubtypeFactElementFactoryCreator">
            <summary>
            SubtypeFact Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SubtypeFactElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SubtypeFactElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintMoveableCollection">
            <summary>
            Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint Collection class, strongly-typed collection
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintMoveableCollection.#ctor(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,System.Guid)">
            <summary>
            Constructor
            </summary>
            <param name="counterpart">Counterpart to create relationship with</param>
            <param name="sourceMetaRoleGuid">Source's meta role in this relationship</param>
            <param name="targetMetaRoleGuid">Target's meta role in this relationship</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintMoveableCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintMoveableCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            When implemented by a class, copies the elements of the System.Collection.ICollections to an System.Array, starting at a particular System.Array index
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from System.Collections.ICollection.  The System.Array must have zero-based indexing</param>
            <param name="index">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintMoveableCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            When implemented by a class, adds an item to the System.Collections.IList
            </summary>
            <param name="value">The System.Object to add to the System.Collections.IList</param>
            <returns>index where object was added</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintMoveableCollection.System#Collections#IList#Clear">
            <summary>
            When implemented by a class, removes all items from the System.Collections.IList
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintMoveableCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            When implemented by a class, determines whether the System.Collections.IList has a specific value
            </summary>
            <param name="value">The System.Object to locate in the System.Collections.IList</param>
            <returns>true if object is contained, false otherwise</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintMoveableCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            When implemented by a class, determines the index of a specific item in the System.Collections.IList
            </summary>
            <param name="value">The System.Object to locate in the System.Collections.IList</param>
            <returns>index of object</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintMoveableCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            When implemented by a class, inserts an item to the System.Collections.IList at the specified position
            </summary>
            <param name="index">The zero-based index at which the value should be inserted</param>
            <param name="value">The System.Object to insert into the System.Collections.IList</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintMoveableCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            When implemented by a class, removes the first occurrence of a specific object from the System.Collections.IList
            </summary>
            <param name="value">The System.Object to remove from the System.Collections.IList</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintMoveableCollection.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
            When implemented by a class, removes the System.Collections.IList item at the specified index
            </summary>
            <param name="index">The zero-based index of the item to remove</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#Move(Microsoft.VisualStudio.Modeling.ModelElement,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="rolePlayer">The role player to move</param>
            <param name="newPosition">The position to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#Move(System.Int32,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="oldPosition">The position of the role player to move from</param>
            <param name="newPosition">The position of the role player to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#ReplaceAt(System.Int32,Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Insert a roleplayer in the specified location
            </summary>
            <param name="position">The index of the roleplayer that needs to be replaced</param>
            <param name="rolePlayer">The role player that will be inserted</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintMoveableCollection.CopyTo(Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint[],System.Int32)">
            <summary>
            When implemented by a class, copies the elements of the System.Collection.ICollections to an System.Array, starting at a particular System.Array index
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from System.Collections.ICollection.  The System.Array must have zero-based indexing</param>
            <param name="index">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintMoveableCollection.Add(Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint)">
            <summary>
            Adds an item to the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint to add to the list</param>
            <returns>index where object was added</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintMoveableCollection.Clear">
            <summary>
            Removes all items from the list
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintMoveableCollection.Contains(Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint)">
            <summary>
            Determines whether the list has a specific value
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint to locate in the list</param>
            <returns>true if object is contained, false otherwise</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintMoveableCollection.IndexOf(Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint)">
            <summary>
            Determines the index of a specific item in the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint to locate in the list</param>
            <returns>index of object</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintMoveableCollection.Insert(System.Int32,Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint)">
            <summary>
            Inserts an item to the list at the specified position
            </summary>
            <param name="index">The zero-based index at which the value should be inserted</param>
            <param name="value">The Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint to insert into the list</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintMoveableCollection.Remove(Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint)">
            <summary>
            Removes the first occurrence of a specific object from the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint to remove from the list</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintMoveableCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the list item at the specified index
            </summary>
            <param name="index">The zero-based index of the item to remove</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintMoveableCollection.Move(Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="rolePlayer">The role player to move</param>
            <param name="newPosition">The position to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintMoveableCollection.Move(System.Int32,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="oldPosition">The position of the role player to move from</param>
            <param name="newPosition">The position of the role player to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintMoveableCollection.ReplaceAt(System.Int32,Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint)">
            <summary>
            Insert a roleplayer in the specified location
            </summary>
            <param name="position">The index of the roleplayer that needs to be replaced</param>
            <param name="rolePlayer">The role player that will be inserted</param>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintMoveableCollection.Counterpart">
            <summary>
            Counterpart
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintMoveableCollection.SourceRole">
            <summary>
            Source Role
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintMoveableCollection.TargetRole">
            <summary>
            Target Role
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintMoveableCollection.System#Collections#ICollection#Count">
            <summary>
            When implemented by a class, gets the number of elements contained in the System.Collections.ICollection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintMoveableCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            When implemented by a class, gets a value indicating whether access to the System.Collections.ICollection is synchronized (thread-safe)
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintMoveableCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            When implemented by a class, gets an object that can be used to synchronize access to the System.Collections.ICollection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintMoveableCollection.System#Collections#IList#IsFixedSize">
            <summary>
            When implemented by a class, gets a value indicating whether the System.Collections.IList has a fixed size
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintMoveableCollection.System#Collections#IList#IsReadOnly">
            <summary>
            When implemented by a class, gets a value indicating whether the System.Collections.IList is read-only
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintMoveableCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Indexed accessor
            </summary>
            <param name="index">Index to access</param>
            <returns>object at that index</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintMoveableCollection.Count">
            <summary>
            Gets the number of elements contained in the collection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintMoveableCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the list is read-only
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintMoveableCollection.Item(System.Int32)">
            <summary>
            Indexed accessor
            </summary>
            <param name="index">Index to access</param>
            <returns>Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraint at that index</returns>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.EqualityConstraintElementFactoryCreator">
            <summary>
            EqualityConstraint Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.EqualityConstraintElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.EqualityConstraintElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ExclusionConstraintElementFactoryCreator">
            <summary>
            ExclusionConstraint Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExclusionConstraintElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExclusionConstraintElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.SubsetConstraintElementFactoryCreator">
            <summary>
            SubsetConstraint Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SubsetConstraintElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SubsetConstraintElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.DataType">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.DataType.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.DataType.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataType.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataType.ToString">
            <summary>
            Override ToString() to localize the property descriptor.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataType.IsPropertyDescriptorReadOnly(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Defines property descriptor read only status.
            </summary>
            <returns>True</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataType.GetCustomSerializedChildElementInfo">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataType.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataType.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataType.MapChildElement(System.String,System.String,System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataType.MapAttribute(System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.DataType.ValueTypeCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.DataType.Model">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.DataType.PortableDataType">
            <summary>
            Gets the PortableDataType of this DataType.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.DataType.SupportedCustomSerializedOperations">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.DataType.CustomSerializedElementInfo">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.DataType.CustomSerializedChildRoleComparer">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.DataTypeMoveableCollection">
            <summary>
            Northface.Tools.ORM.ObjectModel.DataType Collection class, strongly-typed collection
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataTypeMoveableCollection.#ctor(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,System.Guid)">
            <summary>
            Constructor
            </summary>
            <param name="counterpart">Counterpart to create relationship with</param>
            <param name="sourceMetaRoleGuid">Source's meta role in this relationship</param>
            <param name="targetMetaRoleGuid">Target's meta role in this relationship</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataTypeMoveableCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataTypeMoveableCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            When implemented by a class, copies the elements of the System.Collection.ICollections to an System.Array, starting at a particular System.Array index
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from System.Collections.ICollection.  The System.Array must have zero-based indexing</param>
            <param name="index">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataTypeMoveableCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            When implemented by a class, adds an item to the System.Collections.IList
            </summary>
            <param name="value">The System.Object to add to the System.Collections.IList</param>
            <returns>index where object was added</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataTypeMoveableCollection.System#Collections#IList#Clear">
            <summary>
            When implemented by a class, removes all items from the System.Collections.IList
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataTypeMoveableCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            When implemented by a class, determines whether the System.Collections.IList has a specific value
            </summary>
            <param name="value">The System.Object to locate in the System.Collections.IList</param>
            <returns>true if object is contained, false otherwise</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataTypeMoveableCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            When implemented by a class, determines the index of a specific item in the System.Collections.IList
            </summary>
            <param name="value">The System.Object to locate in the System.Collections.IList</param>
            <returns>index of object</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataTypeMoveableCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            When implemented by a class, inserts an item to the System.Collections.IList at the specified position
            </summary>
            <param name="index">The zero-based index at which the value should be inserted</param>
            <param name="value">The System.Object to insert into the System.Collections.IList</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataTypeMoveableCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            When implemented by a class, removes the first occurrence of a specific object from the System.Collections.IList
            </summary>
            <param name="value">The System.Object to remove from the System.Collections.IList</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataTypeMoveableCollection.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
            When implemented by a class, removes the System.Collections.IList item at the specified index
            </summary>
            <param name="index">The zero-based index of the item to remove</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataTypeMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#Move(Microsoft.VisualStudio.Modeling.ModelElement,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="rolePlayer">The role player to move</param>
            <param name="newPosition">The position to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataTypeMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#Move(System.Int32,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="oldPosition">The position of the role player to move from</param>
            <param name="newPosition">The position of the role player to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataTypeMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#ReplaceAt(System.Int32,Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Insert a roleplayer in the specified location
            </summary>
            <param name="position">The index of the roleplayer that needs to be replaced</param>
            <param name="rolePlayer">The role player that will be inserted</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataTypeMoveableCollection.CopyTo(Northface.Tools.ORM.ObjectModel.DataType[],System.Int32)">
            <summary>
            When implemented by a class, copies the elements of the System.Collection.ICollections to an System.Array, starting at a particular System.Array index
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from System.Collections.ICollection.  The System.Array must have zero-based indexing</param>
            <param name="index">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataTypeMoveableCollection.Add(Northface.Tools.ORM.ObjectModel.DataType)">
            <summary>
            Adds an item to the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.DataType to add to the list</param>
            <returns>index where object was added</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataTypeMoveableCollection.Clear">
            <summary>
            Removes all items from the list
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataTypeMoveableCollection.Contains(Northface.Tools.ORM.ObjectModel.DataType)">
            <summary>
            Determines whether the list has a specific value
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.DataType to locate in the list</param>
            <returns>true if object is contained, false otherwise</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataTypeMoveableCollection.IndexOf(Northface.Tools.ORM.ObjectModel.DataType)">
            <summary>
            Determines the index of a specific item in the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.DataType to locate in the list</param>
            <returns>index of object</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataTypeMoveableCollection.Insert(System.Int32,Northface.Tools.ORM.ObjectModel.DataType)">
            <summary>
            Inserts an item to the list at the specified position
            </summary>
            <param name="index">The zero-based index at which the value should be inserted</param>
            <param name="value">The Northface.Tools.ORM.ObjectModel.DataType to insert into the list</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataTypeMoveableCollection.Remove(Northface.Tools.ORM.ObjectModel.DataType)">
            <summary>
            Removes the first occurrence of a specific object from the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.DataType to remove from the list</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataTypeMoveableCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the list item at the specified index
            </summary>
            <param name="index">The zero-based index of the item to remove</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataTypeMoveableCollection.Move(Northface.Tools.ORM.ObjectModel.DataType,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="rolePlayer">The role player to move</param>
            <param name="newPosition">The position to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataTypeMoveableCollection.Move(System.Int32,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="oldPosition">The position of the role player to move from</param>
            <param name="newPosition">The position of the role player to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataTypeMoveableCollection.ReplaceAt(System.Int32,Northface.Tools.ORM.ObjectModel.DataType)">
            <summary>
            Insert a roleplayer in the specified location
            </summary>
            <param name="position">The index of the roleplayer that needs to be replaced</param>
            <param name="rolePlayer">The role player that will be inserted</param>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.DataTypeMoveableCollection.Counterpart">
            <summary>
            Counterpart
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.DataTypeMoveableCollection.SourceRole">
            <summary>
            Source Role
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.DataTypeMoveableCollection.TargetRole">
            <summary>
            Target Role
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.DataTypeMoveableCollection.System#Collections#ICollection#Count">
            <summary>
            When implemented by a class, gets the number of elements contained in the System.Collections.ICollection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.DataTypeMoveableCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            When implemented by a class, gets a value indicating whether access to the System.Collections.ICollection is synchronized (thread-safe)
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.DataTypeMoveableCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            When implemented by a class, gets an object that can be used to synchronize access to the System.Collections.ICollection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.DataTypeMoveableCollection.System#Collections#IList#IsFixedSize">
            <summary>
            When implemented by a class, gets a value indicating whether the System.Collections.IList has a fixed size
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.DataTypeMoveableCollection.System#Collections#IList#IsReadOnly">
            <summary>
            When implemented by a class, gets a value indicating whether the System.Collections.IList is read-only
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.DataTypeMoveableCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Indexed accessor
            </summary>
            <param name="index">Index to access</param>
            <returns>object at that index</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.DataTypeMoveableCollection.Count">
            <summary>
            Gets the number of elements contained in the collection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.DataTypeMoveableCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the list is read-only
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.DataTypeMoveableCollection.Item(System.Int32)">
            <summary>
            Indexed accessor
            </summary>
            <param name="index">Index to access</param>
            <returns>Northface.Tools.ORM.ObjectModel.DataType at that index</returns>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.UnspecifiedDataType">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.UnspecifiedDataType.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.UnspecifiedDataType.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.UnspecifiedDataType.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.UnspecifiedDataType.CreateUnspecifiedDataType(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.UnspecifiedDataType.CreateAndInitializeUnspecifiedDataType(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.UnspecifiedDataType.ToString">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.UnspecifiedDataType.PortableDataType">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.UnspecifiedDataTypeElementFactoryCreator">
            <summary>
            UnspecifiedDataType Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.UnspecifiedDataTypeElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.UnspecifiedDataTypeElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.TextDataType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.TextDataType.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.TextDataType.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TextDataType.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.FixedLengthTextDataType">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FixedLengthTextDataType.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FixedLengthTextDataType.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FixedLengthTextDataType.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FixedLengthTextDataType.CreateFixedLengthTextDataType(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FixedLengthTextDataType.CreateAndInitializeFixedLengthTextDataType(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FixedLengthTextDataType.ToString">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FixedLengthTextDataType.PortableDataType">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.FixedLengthTextDataTypeElementFactoryCreator">
            <summary>
            FixedLengthTextDataType Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FixedLengthTextDataTypeElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FixedLengthTextDataTypeElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.VariableLengthTextDataType">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.VariableLengthTextDataType.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.VariableLengthTextDataType.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.VariableLengthTextDataType.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.VariableLengthTextDataType.CreateVariableLengthTextDataType(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.VariableLengthTextDataType.CreateAndInitializeVariableLengthTextDataType(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.VariableLengthTextDataType.ToString">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.VariableLengthTextDataType.PortableDataType">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.VariableLengthTextDataTypeElementFactoryCreator">
            <summary>
            VariableLengthTextDataType Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.VariableLengthTextDataTypeElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.VariableLengthTextDataTypeElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.LargeLengthTextDataType">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.LargeLengthTextDataType.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.LargeLengthTextDataType.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.LargeLengthTextDataType.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.LargeLengthTextDataType.CreateLargeLengthTextDataType(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.LargeLengthTextDataType.CreateAndInitializeLargeLengthTextDataType(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.LargeLengthTextDataType.ToString">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.LargeLengthTextDataType.PortableDataType">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.LargeLengthTextDataTypeElementFactoryCreator">
            <summary>
            LargeLengthTextDataType Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.LargeLengthTextDataTypeElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.LargeLengthTextDataTypeElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.NumericDataType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.NumericDataType.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.NumericDataType.AllowNumericMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.NumericDataType.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.NumericDataType.AllowNumericMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.NumericDataType.numericDataTypeAllowNumericFieldHandler">
            <summary>
            FieldHandler for NumericDataType.AllowNumeric field
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NumericDataType.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.NumericDataType.AllowNumeric">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.NumericDataType.NumericDataTypeAllowNumericFieldHandler">
            <summary>
            Implement the field handler for NumericDataType.AllowNumeric
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NumericDataType.NumericDataTypeAllowNumericFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NumericDataType.NumericDataTypeAllowNumericFieldHandler.GetValue(Northface.Tools.ORM.ObjectModel.NumericDataType)">
            <summary>
            Gets the value of the attribute as it exists in the element
            </summary>
            <param name="element">the NumericDataType</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NumericDataType.NumericDataTypeAllowNumericFieldHandler.SetValue(Northface.Tools.ORM.ObjectModel.NumericDataType,System.Boolean,Microsoft.VisualStudio.Modeling.CommandFactory,System.Boolean,System.Boolean@)">
            <summary>
            Sets the value into the element
            </summary>
            <param name="element">the element</param>
            <param name="value">new value</param>
            <param name="commandFactory">the command factory for this change</param>
            <param name="allowDuplicates">allow duplicate value to continue to fire rules and events</param>
            <param name="oldValue">the old value before the change</param>
            <returns>true if the value actually changed</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.NumericDataType.NumericDataTypeAllowNumericFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the NumericDataType.AllowNumeric field handler
            </summary>
            <value>NumericDataTypeAllowNumericFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.NumericDataType.NumericDataTypeAllowNumericFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the NumericDataType.AllowNumeric field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.SignedIntegerNumericDataType">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.SignedIntegerNumericDataType.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.SignedIntegerNumericDataType.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SignedIntegerNumericDataType.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SignedIntegerNumericDataType.CreateSignedIntegerNumericDataType(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SignedIntegerNumericDataType.CreateAndInitializeSignedIntegerNumericDataType(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SignedIntegerNumericDataType.ToString">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.SignedIntegerNumericDataType.PortableDataType">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.SignedIntegerNumericDataTypeElementFactoryCreator">
            <summary>
            SignedIntegerNumericDataType Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SignedIntegerNumericDataTypeElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SignedIntegerNumericDataTypeElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.UnsignedIntegerNumericDataType">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.UnsignedIntegerNumericDataType.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.UnsignedIntegerNumericDataType.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.UnsignedIntegerNumericDataType.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.UnsignedIntegerNumericDataType.CreateUnsignedIntegerNumericDataType(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.UnsignedIntegerNumericDataType.CreateAndInitializeUnsignedIntegerNumericDataType(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.UnsignedIntegerNumericDataType.ToString">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.UnsignedIntegerNumericDataType.PortableDataType">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.UnsignedIntegerNumericDataTypeElementFactoryCreator">
            <summary>
            UnsignedIntegerNumericDataType Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.UnsignedIntegerNumericDataTypeElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.UnsignedIntegerNumericDataTypeElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.AutoCounterNumericDataType">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.AutoCounterNumericDataType.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.AutoCounterNumericDataType.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.AutoCounterNumericDataType.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.AutoCounterNumericDataType.CreateAutoCounterNumericDataType(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.AutoCounterNumericDataType.CreateAndInitializeAutoCounterNumericDataType(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.AutoCounterNumericDataType.ToString">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.AutoCounterNumericDataType.PortableDataType">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.AutoCounterNumericDataTypeElementFactoryCreator">
            <summary>
            AutoCounterNumericDataType Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.AutoCounterNumericDataTypeElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.AutoCounterNumericDataTypeElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.FloatingPointNumericDataType">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FloatingPointNumericDataType.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FloatingPointNumericDataType.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FloatingPointNumericDataType.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FloatingPointNumericDataType.CreateFloatingPointNumericDataType(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FloatingPointNumericDataType.CreateAndInitializeFloatingPointNumericDataType(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FloatingPointNumericDataType.ToString">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FloatingPointNumericDataType.PortableDataType">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.FloatingPointNumericDataTypeElementFactoryCreator">
            <summary>
            FloatingPointNumericDataType Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FloatingPointNumericDataTypeElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FloatingPointNumericDataTypeElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.DecimalNumericDataType">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.DecimalNumericDataType.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.DecimalNumericDataType.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DecimalNumericDataType.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DecimalNumericDataType.CreateDecimalNumericDataType(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DecimalNumericDataType.CreateAndInitializeDecimalNumericDataType(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DecimalNumericDataType.ToString">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.DecimalNumericDataType.PortableDataType">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.DecimalNumericDataTypeElementFactoryCreator">
            <summary>
            DecimalNumericDataType Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DecimalNumericDataTypeElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DecimalNumericDataTypeElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.MoneyNumericDataType">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.MoneyNumericDataType.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.MoneyNumericDataType.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MoneyNumericDataType.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MoneyNumericDataType.CreateMoneyNumericDataType(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MoneyNumericDataType.CreateAndInitializeMoneyNumericDataType(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MoneyNumericDataType.ToString">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MoneyNumericDataType.PortableDataType">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.MoneyNumericDataTypeElementFactoryCreator">
            <summary>
            MoneyNumericDataType Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MoneyNumericDataTypeElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MoneyNumericDataTypeElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.RawDataDataType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.RawDataDataType.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.RawDataDataType.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RawDataDataType.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.FixedLengthRawDataDataType">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FixedLengthRawDataDataType.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FixedLengthRawDataDataType.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FixedLengthRawDataDataType.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FixedLengthRawDataDataType.CreateFixedLengthRawDataDataType(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FixedLengthRawDataDataType.CreateAndInitializeFixedLengthRawDataDataType(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FixedLengthRawDataDataType.ToString">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FixedLengthRawDataDataType.PortableDataType">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.FixedLengthRawDataDataTypeElementFactoryCreator">
            <summary>
            FixedLengthRawDataDataType Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FixedLengthRawDataDataTypeElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FixedLengthRawDataDataTypeElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.VariableLengthRawDataDataType">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.VariableLengthRawDataDataType.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.VariableLengthRawDataDataType.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.VariableLengthRawDataDataType.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.VariableLengthRawDataDataType.CreateVariableLengthRawDataDataType(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.VariableLengthRawDataDataType.CreateAndInitializeVariableLengthRawDataDataType(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.VariableLengthRawDataDataType.ToString">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.VariableLengthRawDataDataType.PortableDataType">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.VariableLengthRawDataDataTypeElementFactoryCreator">
            <summary>
            VariableLengthRawDataDataType Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.VariableLengthRawDataDataTypeElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.VariableLengthRawDataDataTypeElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.LargeLengthRawDataDataType">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.LargeLengthRawDataDataType.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.LargeLengthRawDataDataType.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.LargeLengthRawDataDataType.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.LargeLengthRawDataDataType.CreateLargeLengthRawDataDataType(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.LargeLengthRawDataDataType.CreateAndInitializeLargeLengthRawDataDataType(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.LargeLengthRawDataDataType.ToString">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.LargeLengthRawDataDataType.PortableDataType">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.LargeLengthRawDataDataTypeElementFactoryCreator">
            <summary>
            LargeLengthRawDataDataType Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.LargeLengthRawDataDataTypeElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.LargeLengthRawDataDataTypeElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.PictureRawDataDataType">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.PictureRawDataDataType.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.PictureRawDataDataType.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.PictureRawDataDataType.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.PictureRawDataDataType.CreatePictureRawDataDataType(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.PictureRawDataDataType.CreateAndInitializePictureRawDataDataType(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.PictureRawDataDataType.ToString">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.PictureRawDataDataType.PortableDataType">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.PictureRawDataDataTypeElementFactoryCreator">
            <summary>
            PictureRawDataDataType Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.PictureRawDataDataTypeElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.PictureRawDataDataTypeElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.OleObjectRawDataDataType">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.OleObjectRawDataDataType.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.OleObjectRawDataDataType.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.OleObjectRawDataDataType.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.OleObjectRawDataDataType.CreateOleObjectRawDataDataType(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.OleObjectRawDataDataType.CreateAndInitializeOleObjectRawDataDataType(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.OleObjectRawDataDataType.ToString">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.OleObjectRawDataDataType.PortableDataType">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.OleObjectRawDataDataTypeElementFactoryCreator">
            <summary>
            OleObjectRawDataDataType Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.OleObjectRawDataDataTypeElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.OleObjectRawDataDataTypeElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.TemporalDataType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.TemporalDataType.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.TemporalDataType.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TemporalDataType.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.AutoTimestampTemporalDataType">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.AutoTimestampTemporalDataType.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.AutoTimestampTemporalDataType.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.AutoTimestampTemporalDataType.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.AutoTimestampTemporalDataType.CreateAutoTimestampTemporalDataType(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.AutoTimestampTemporalDataType.CreateAndInitializeAutoTimestampTemporalDataType(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.AutoTimestampTemporalDataType.ToString">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.AutoTimestampTemporalDataType.PortableDataType">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.AutoTimestampTemporalDataTypeElementFactoryCreator">
            <summary>
            AutoTimestampTemporalDataType Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.AutoTimestampTemporalDataTypeElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.AutoTimestampTemporalDataTypeElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.TimeTemporalDataType">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.TimeTemporalDataType.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.TimeTemporalDataType.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TimeTemporalDataType.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TimeTemporalDataType.CreateTimeTemporalDataType(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TimeTemporalDataType.CreateAndInitializeTimeTemporalDataType(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TimeTemporalDataType.ToString">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.TimeTemporalDataType.PortableDataType">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.TimeTemporalDataTypeElementFactoryCreator">
            <summary>
            TimeTemporalDataType Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TimeTemporalDataTypeElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TimeTemporalDataTypeElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.DateTemporalDataType">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.DateTemporalDataType.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.DateTemporalDataType.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DateTemporalDataType.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DateTemporalDataType.CreateDateTemporalDataType(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DateTemporalDataType.CreateAndInitializeDateTemporalDataType(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DateTemporalDataType.ToString">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.DateTemporalDataType.PortableDataType">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.DateTemporalDataTypeElementFactoryCreator">
            <summary>
            DateTemporalDataType Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DateTemporalDataTypeElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DateTemporalDataTypeElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.DateAndTimeTemporalDataType">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.DateAndTimeTemporalDataType.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.DateAndTimeTemporalDataType.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DateAndTimeTemporalDataType.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DateAndTimeTemporalDataType.CreateDateAndTimeTemporalDataType(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DateAndTimeTemporalDataType.CreateAndInitializeDateAndTimeTemporalDataType(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DateAndTimeTemporalDataType.ToString">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.DateAndTimeTemporalDataType.PortableDataType">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.DateAndTimeTemporalDataTypeElementFactoryCreator">
            <summary>
            DateAndTimeTemporalDataType Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DateAndTimeTemporalDataTypeElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DateAndTimeTemporalDataTypeElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.LogicalDataType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.LogicalDataType.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.LogicalDataType.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.LogicalDataType.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.TrueOrFalseLogicalDataType">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.TrueOrFalseLogicalDataType.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.TrueOrFalseLogicalDataType.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TrueOrFalseLogicalDataType.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TrueOrFalseLogicalDataType.CreateTrueOrFalseLogicalDataType(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TrueOrFalseLogicalDataType.CreateAndInitializeTrueOrFalseLogicalDataType(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TrueOrFalseLogicalDataType.ToString">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.TrueOrFalseLogicalDataType.PortableDataType">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.TrueOrFalseLogicalDataTypeElementFactoryCreator">
            <summary>
            TrueOrFalseLogicalDataType Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TrueOrFalseLogicalDataTypeElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TrueOrFalseLogicalDataTypeElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.YesOrNoLogicalDataType">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.YesOrNoLogicalDataType.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.YesOrNoLogicalDataType.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.YesOrNoLogicalDataType.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.YesOrNoLogicalDataType.CreateYesOrNoLogicalDataType(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.YesOrNoLogicalDataType.CreateAndInitializeYesOrNoLogicalDataType(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.YesOrNoLogicalDataType.ToString">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.YesOrNoLogicalDataType.PortableDataType">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.YesOrNoLogicalDataTypeElementFactoryCreator">
            <summary>
            YesOrNoLogicalDataType Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.YesOrNoLogicalDataTypeElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.YesOrNoLogicalDataTypeElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.OtherDataType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.OtherDataType.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.OtherDataType.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.OtherDataType.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.RowIdOtherDataType">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.RowIdOtherDataType.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.RowIdOtherDataType.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RowIdOtherDataType.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RowIdOtherDataType.CreateRowIdOtherDataType(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RowIdOtherDataType.CreateAndInitializeRowIdOtherDataType(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RowIdOtherDataType.ToString">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.RowIdOtherDataType.PortableDataType">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.RowIdOtherDataTypeElementFactoryCreator">
            <summary>
            RowIdOtherDataType Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RowIdOtherDataTypeElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RowIdOtherDataTypeElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ObjectIdOtherDataType">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectIdOtherDataType.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectIdOtherDataType.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectIdOtherDataType.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectIdOtherDataType.CreateObjectIdOtherDataType(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectIdOtherDataType.CreateAndInitializeObjectIdOtherDataType(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectIdOtherDataType.ToString">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectIdOtherDataType.PortableDataType">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ObjectIdOtherDataTypeElementFactoryCreator">
            <summary>
            ObjectIdOtherDataType Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectIdOtherDataTypeElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectIdOtherDataTypeElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.Expression">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.Expression.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.Expression.BodyMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.Expression.LanguageMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.Expression.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.Expression.BodyMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.Expression.expressionBodyFieldHandler">
            <summary>
            FieldHandler for Expression.Body field
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.Expression.LanguageMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.Expression.expressionLanguageFieldHandler">
            <summary>
            FieldHandler for Expression.Language field
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Expression.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Expression.CreateExpression(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Expression.CreateAndInitializeExpression(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Expression.Body">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Expression.Language">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.Expression.ExpressionBodyFieldHandler">
            <summary>
            Implement the field handler for Expression.Body
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Expression.ExpressionBodyFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Expression.ExpressionBodyFieldHandler.GetValue(Northface.Tools.ORM.ObjectModel.Expression)">
            <summary>
            Gets the value of the attribute as it exists in the element
            </summary>
            <param name="element">the Expression</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Expression.ExpressionBodyFieldHandler.SetValue(Northface.Tools.ORM.ObjectModel.Expression,System.String,Microsoft.VisualStudio.Modeling.CommandFactory,System.Boolean,System.String@)">
            <summary>
            Sets the value into the element
            </summary>
            <param name="element">the element</param>
            <param name="value">new value</param>
            <param name="commandFactory">the command factory for this change</param>
            <param name="allowDuplicates">allow duplicate value to continue to fire rules and events</param>
            <param name="oldValue">the old value before the change</param>
            <returns>true if the value actually changed</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Expression.ExpressionBodyFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the Expression.Body field handler
            </summary>
            <value>ExpressionBodyFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Expression.ExpressionBodyFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the Expression.Body field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.Expression.ExpressionLanguageFieldHandler">
            <summary>
            Implement the field handler for Expression.Language
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Expression.ExpressionLanguageFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Expression.ExpressionLanguageFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the Expression.Language field handler
            </summary>
            <value>ExpressionLanguageFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Expression.ExpressionLanguageFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the Expression.Language field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ExpressionElementFactoryCreator">
            <summary>
            Expression Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExpressionElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExpressionElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.RoleMoveableCollection">
            <summary>
            Northface.Tools.ORM.ObjectModel.Role Collection class, strongly-typed collection
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RoleMoveableCollection.#ctor(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,System.Guid)">
            <summary>
            Constructor
            </summary>
            <param name="counterpart">Counterpart to create relationship with</param>
            <param name="sourceMetaRoleGuid">Source's meta role in this relationship</param>
            <param name="targetMetaRoleGuid">Target's meta role in this relationship</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RoleMoveableCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RoleMoveableCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            When implemented by a class, copies the elements of the System.Collection.ICollections to an System.Array, starting at a particular System.Array index
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from System.Collections.ICollection.  The System.Array must have zero-based indexing</param>
            <param name="index">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RoleMoveableCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            When implemented by a class, adds an item to the System.Collections.IList
            </summary>
            <param name="value">The System.Object to add to the System.Collections.IList</param>
            <returns>index where object was added</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RoleMoveableCollection.System#Collections#IList#Clear">
            <summary>
            When implemented by a class, removes all items from the System.Collections.IList
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RoleMoveableCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            When implemented by a class, determines whether the System.Collections.IList has a specific value
            </summary>
            <param name="value">The System.Object to locate in the System.Collections.IList</param>
            <returns>true if object is contained, false otherwise</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RoleMoveableCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            When implemented by a class, determines the index of a specific item in the System.Collections.IList
            </summary>
            <param name="value">The System.Object to locate in the System.Collections.IList</param>
            <returns>index of object</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RoleMoveableCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            When implemented by a class, inserts an item to the System.Collections.IList at the specified position
            </summary>
            <param name="index">The zero-based index at which the value should be inserted</param>
            <param name="value">The System.Object to insert into the System.Collections.IList</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RoleMoveableCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            When implemented by a class, removes the first occurrence of a specific object from the System.Collections.IList
            </summary>
            <param name="value">The System.Object to remove from the System.Collections.IList</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RoleMoveableCollection.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
            When implemented by a class, removes the System.Collections.IList item at the specified index
            </summary>
            <param name="index">The zero-based index of the item to remove</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RoleMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#Move(Microsoft.VisualStudio.Modeling.ModelElement,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="rolePlayer">The role player to move</param>
            <param name="newPosition">The position to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RoleMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#Move(System.Int32,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="oldPosition">The position of the role player to move from</param>
            <param name="newPosition">The position of the role player to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RoleMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#ReplaceAt(System.Int32,Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Insert a roleplayer in the specified location
            </summary>
            <param name="position">The index of the roleplayer that needs to be replaced</param>
            <param name="rolePlayer">The role player that will be inserted</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RoleMoveableCollection.CopyTo(Northface.Tools.ORM.ObjectModel.Role[],System.Int32)">
            <summary>
            When implemented by a class, copies the elements of the System.Collection.ICollections to an System.Array, starting at a particular System.Array index
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from System.Collections.ICollection.  The System.Array must have zero-based indexing</param>
            <param name="index">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RoleMoveableCollection.Add(Northface.Tools.ORM.ObjectModel.Role)">
            <summary>
            Adds an item to the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.Role to add to the list</param>
            <returns>index where object was added</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RoleMoveableCollection.Clear">
            <summary>
            Removes all items from the list
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RoleMoveableCollection.Contains(Northface.Tools.ORM.ObjectModel.Role)">
            <summary>
            Determines whether the list has a specific value
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.Role to locate in the list</param>
            <returns>true if object is contained, false otherwise</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RoleMoveableCollection.IndexOf(Northface.Tools.ORM.ObjectModel.Role)">
            <summary>
            Determines the index of a specific item in the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.Role to locate in the list</param>
            <returns>index of object</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RoleMoveableCollection.Insert(System.Int32,Northface.Tools.ORM.ObjectModel.Role)">
            <summary>
            Inserts an item to the list at the specified position
            </summary>
            <param name="index">The zero-based index at which the value should be inserted</param>
            <param name="value">The Northface.Tools.ORM.ObjectModel.Role to insert into the list</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RoleMoveableCollection.Remove(Northface.Tools.ORM.ObjectModel.Role)">
            <summary>
            Removes the first occurrence of a specific object from the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.Role to remove from the list</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RoleMoveableCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the list item at the specified index
            </summary>
            <param name="index">The zero-based index of the item to remove</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RoleMoveableCollection.Move(Northface.Tools.ORM.ObjectModel.Role,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="rolePlayer">The role player to move</param>
            <param name="newPosition">The position to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RoleMoveableCollection.Move(System.Int32,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="oldPosition">The position of the role player to move from</param>
            <param name="newPosition">The position of the role player to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RoleMoveableCollection.ReplaceAt(System.Int32,Northface.Tools.ORM.ObjectModel.Role)">
            <summary>
            Insert a roleplayer in the specified location
            </summary>
            <param name="position">The index of the roleplayer that needs to be replaced</param>
            <param name="rolePlayer">The role player that will be inserted</param>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.RoleMoveableCollection.Counterpart">
            <summary>
            Counterpart
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.RoleMoveableCollection.SourceRole">
            <summary>
            Source Role
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.RoleMoveableCollection.TargetRole">
            <summary>
            Target Role
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.RoleMoveableCollection.System#Collections#ICollection#Count">
            <summary>
            When implemented by a class, gets the number of elements contained in the System.Collections.ICollection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.RoleMoveableCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            When implemented by a class, gets a value indicating whether access to the System.Collections.ICollection is synchronized (thread-safe)
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.RoleMoveableCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            When implemented by a class, gets an object that can be used to synchronize access to the System.Collections.ICollection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.RoleMoveableCollection.System#Collections#IList#IsFixedSize">
            <summary>
            When implemented by a class, gets a value indicating whether the System.Collections.IList has a fixed size
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.RoleMoveableCollection.System#Collections#IList#IsReadOnly">
            <summary>
            When implemented by a class, gets a value indicating whether the System.Collections.IList is read-only
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.RoleMoveableCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Indexed accessor
            </summary>
            <param name="index">Index to access</param>
            <returns>object at that index</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.RoleMoveableCollection.Count">
            <summary>
            Gets the number of elements contained in the collection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.RoleMoveableCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the list is read-only
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.RoleMoveableCollection.Item(System.Int32)">
            <summary>
            Indexed accessor
            </summary>
            <param name="index">Index to access</param>
            <returns>Northface.Tools.ORM.ObjectModel.Role at that index</returns>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.RoleElementFactoryCreator">
            <summary>
            Role Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RoleElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RoleElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceMoveableCollection">
            <summary>
            Northface.Tools.ORM.ObjectModel.ConstraintRoleSequence Collection class, strongly-typed collection
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceMoveableCollection.#ctor(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,System.Guid)">
            <summary>
            Constructor
            </summary>
            <param name="counterpart">Counterpart to create relationship with</param>
            <param name="sourceMetaRoleGuid">Source's meta role in this relationship</param>
            <param name="targetMetaRoleGuid">Target's meta role in this relationship</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceMoveableCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceMoveableCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            When implemented by a class, copies the elements of the System.Collection.ICollections to an System.Array, starting at a particular System.Array index
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from System.Collections.ICollection.  The System.Array must have zero-based indexing</param>
            <param name="index">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceMoveableCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            When implemented by a class, adds an item to the System.Collections.IList
            </summary>
            <param name="value">The System.Object to add to the System.Collections.IList</param>
            <returns>index where object was added</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceMoveableCollection.System#Collections#IList#Clear">
            <summary>
            When implemented by a class, removes all items from the System.Collections.IList
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceMoveableCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            When implemented by a class, determines whether the System.Collections.IList has a specific value
            </summary>
            <param name="value">The System.Object to locate in the System.Collections.IList</param>
            <returns>true if object is contained, false otherwise</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceMoveableCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            When implemented by a class, determines the index of a specific item in the System.Collections.IList
            </summary>
            <param name="value">The System.Object to locate in the System.Collections.IList</param>
            <returns>index of object</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceMoveableCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            When implemented by a class, inserts an item to the System.Collections.IList at the specified position
            </summary>
            <param name="index">The zero-based index at which the value should be inserted</param>
            <param name="value">The System.Object to insert into the System.Collections.IList</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceMoveableCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            When implemented by a class, removes the first occurrence of a specific object from the System.Collections.IList
            </summary>
            <param name="value">The System.Object to remove from the System.Collections.IList</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceMoveableCollection.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
            When implemented by a class, removes the System.Collections.IList item at the specified index
            </summary>
            <param name="index">The zero-based index of the item to remove</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#Move(Microsoft.VisualStudio.Modeling.ModelElement,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="rolePlayer">The role player to move</param>
            <param name="newPosition">The position to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#Move(System.Int32,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="oldPosition">The position of the role player to move from</param>
            <param name="newPosition">The position of the role player to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#ReplaceAt(System.Int32,Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Insert a roleplayer in the specified location
            </summary>
            <param name="position">The index of the roleplayer that needs to be replaced</param>
            <param name="rolePlayer">The role player that will be inserted</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceMoveableCollection.CopyTo(Northface.Tools.ORM.ObjectModel.ConstraintRoleSequence[],System.Int32)">
            <summary>
            When implemented by a class, copies the elements of the System.Collection.ICollections to an System.Array, starting at a particular System.Array index
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from System.Collections.ICollection.  The System.Array must have zero-based indexing</param>
            <param name="index">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceMoveableCollection.Add(Northface.Tools.ORM.ObjectModel.ConstraintRoleSequence)">
            <summary>
            Adds an item to the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ConstraintRoleSequence to add to the list</param>
            <returns>index where object was added</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceMoveableCollection.Clear">
            <summary>
            Removes all items from the list
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceMoveableCollection.Contains(Northface.Tools.ORM.ObjectModel.ConstraintRoleSequence)">
            <summary>
            Determines whether the list has a specific value
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ConstraintRoleSequence to locate in the list</param>
            <returns>true if object is contained, false otherwise</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceMoveableCollection.IndexOf(Northface.Tools.ORM.ObjectModel.ConstraintRoleSequence)">
            <summary>
            Determines the index of a specific item in the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ConstraintRoleSequence to locate in the list</param>
            <returns>index of object</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceMoveableCollection.Insert(System.Int32,Northface.Tools.ORM.ObjectModel.ConstraintRoleSequence)">
            <summary>
            Inserts an item to the list at the specified position
            </summary>
            <param name="index">The zero-based index at which the value should be inserted</param>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ConstraintRoleSequence to insert into the list</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceMoveableCollection.Remove(Northface.Tools.ORM.ObjectModel.ConstraintRoleSequence)">
            <summary>
            Removes the first occurrence of a specific object from the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ConstraintRoleSequence to remove from the list</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceMoveableCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the list item at the specified index
            </summary>
            <param name="index">The zero-based index of the item to remove</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceMoveableCollection.Move(Northface.Tools.ORM.ObjectModel.ConstraintRoleSequence,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="rolePlayer">The role player to move</param>
            <param name="newPosition">The position to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceMoveableCollection.Move(System.Int32,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="oldPosition">The position of the role player to move from</param>
            <param name="newPosition">The position of the role player to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceMoveableCollection.ReplaceAt(System.Int32,Northface.Tools.ORM.ObjectModel.ConstraintRoleSequence)">
            <summary>
            Insert a roleplayer in the specified location
            </summary>
            <param name="position">The index of the roleplayer that needs to be replaced</param>
            <param name="rolePlayer">The role player that will be inserted</param>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceMoveableCollection.Counterpart">
            <summary>
            Counterpart
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceMoveableCollection.SourceRole">
            <summary>
            Source Role
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceMoveableCollection.TargetRole">
            <summary>
            Target Role
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceMoveableCollection.System#Collections#ICollection#Count">
            <summary>
            When implemented by a class, gets the number of elements contained in the System.Collections.ICollection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceMoveableCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            When implemented by a class, gets a value indicating whether access to the System.Collections.ICollection is synchronized (thread-safe)
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceMoveableCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            When implemented by a class, gets an object that can be used to synchronize access to the System.Collections.ICollection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceMoveableCollection.System#Collections#IList#IsFixedSize">
            <summary>
            When implemented by a class, gets a value indicating whether the System.Collections.IList has a fixed size
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceMoveableCollection.System#Collections#IList#IsReadOnly">
            <summary>
            When implemented by a class, gets a value indicating whether the System.Collections.IList is read-only
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceMoveableCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Indexed accessor
            </summary>
            <param name="index">Index to access</param>
            <returns>object at that index</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceMoveableCollection.Count">
            <summary>
            Gets the number of elements contained in the collection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceMoveableCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the list is read-only
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceMoveableCollection.Item(System.Int32)">
            <summary>
            Indexed accessor
            </summary>
            <param name="index">Index to access</param>
            <returns>Northface.Tools.ORM.ObjectModel.ConstraintRoleSequence at that index</returns>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.InternalConstraintMoveableCollection">
            <summary>
            Northface.Tools.ORM.ObjectModel.InternalConstraint Collection class, strongly-typed collection
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalConstraintMoveableCollection.#ctor(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,System.Guid)">
            <summary>
            Constructor
            </summary>
            <param name="counterpart">Counterpart to create relationship with</param>
            <param name="sourceMetaRoleGuid">Source's meta role in this relationship</param>
            <param name="targetMetaRoleGuid">Target's meta role in this relationship</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalConstraintMoveableCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalConstraintMoveableCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            When implemented by a class, copies the elements of the System.Collection.ICollections to an System.Array, starting at a particular System.Array index
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from System.Collections.ICollection.  The System.Array must have zero-based indexing</param>
            <param name="index">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalConstraintMoveableCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            When implemented by a class, adds an item to the System.Collections.IList
            </summary>
            <param name="value">The System.Object to add to the System.Collections.IList</param>
            <returns>index where object was added</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalConstraintMoveableCollection.System#Collections#IList#Clear">
            <summary>
            When implemented by a class, removes all items from the System.Collections.IList
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalConstraintMoveableCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            When implemented by a class, determines whether the System.Collections.IList has a specific value
            </summary>
            <param name="value">The System.Object to locate in the System.Collections.IList</param>
            <returns>true if object is contained, false otherwise</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalConstraintMoveableCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            When implemented by a class, determines the index of a specific item in the System.Collections.IList
            </summary>
            <param name="value">The System.Object to locate in the System.Collections.IList</param>
            <returns>index of object</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalConstraintMoveableCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            When implemented by a class, inserts an item to the System.Collections.IList at the specified position
            </summary>
            <param name="index">The zero-based index at which the value should be inserted</param>
            <param name="value">The System.Object to insert into the System.Collections.IList</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalConstraintMoveableCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            When implemented by a class, removes the first occurrence of a specific object from the System.Collections.IList
            </summary>
            <param name="value">The System.Object to remove from the System.Collections.IList</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalConstraintMoveableCollection.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
            When implemented by a class, removes the System.Collections.IList item at the specified index
            </summary>
            <param name="index">The zero-based index of the item to remove</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalConstraintMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#Move(Microsoft.VisualStudio.Modeling.ModelElement,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="rolePlayer">The role player to move</param>
            <param name="newPosition">The position to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalConstraintMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#Move(System.Int32,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="oldPosition">The position of the role player to move from</param>
            <param name="newPosition">The position of the role player to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalConstraintMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#ReplaceAt(System.Int32,Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Insert a roleplayer in the specified location
            </summary>
            <param name="position">The index of the roleplayer that needs to be replaced</param>
            <param name="rolePlayer">The role player that will be inserted</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalConstraintMoveableCollection.CopyTo(Northface.Tools.ORM.ObjectModel.InternalConstraint[],System.Int32)">
            <summary>
            When implemented by a class, copies the elements of the System.Collection.ICollections to an System.Array, starting at a particular System.Array index
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from System.Collections.ICollection.  The System.Array must have zero-based indexing</param>
            <param name="index">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalConstraintMoveableCollection.Add(Northface.Tools.ORM.ObjectModel.InternalConstraint)">
            <summary>
            Adds an item to the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.InternalConstraint to add to the list</param>
            <returns>index where object was added</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalConstraintMoveableCollection.Clear">
            <summary>
            Removes all items from the list
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalConstraintMoveableCollection.Contains(Northface.Tools.ORM.ObjectModel.InternalConstraint)">
            <summary>
            Determines whether the list has a specific value
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.InternalConstraint to locate in the list</param>
            <returns>true if object is contained, false otherwise</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalConstraintMoveableCollection.IndexOf(Northface.Tools.ORM.ObjectModel.InternalConstraint)">
            <summary>
            Determines the index of a specific item in the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.InternalConstraint to locate in the list</param>
            <returns>index of object</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalConstraintMoveableCollection.Insert(System.Int32,Northface.Tools.ORM.ObjectModel.InternalConstraint)">
            <summary>
            Inserts an item to the list at the specified position
            </summary>
            <param name="index">The zero-based index at which the value should be inserted</param>
            <param name="value">The Northface.Tools.ORM.ObjectModel.InternalConstraint to insert into the list</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalConstraintMoveableCollection.Remove(Northface.Tools.ORM.ObjectModel.InternalConstraint)">
            <summary>
            Removes the first occurrence of a specific object from the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.InternalConstraint to remove from the list</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalConstraintMoveableCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the list item at the specified index
            </summary>
            <param name="index">The zero-based index of the item to remove</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalConstraintMoveableCollection.Move(Northface.Tools.ORM.ObjectModel.InternalConstraint,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="rolePlayer">The role player to move</param>
            <param name="newPosition">The position to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalConstraintMoveableCollection.Move(System.Int32,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="oldPosition">The position of the role player to move from</param>
            <param name="newPosition">The position of the role player to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalConstraintMoveableCollection.ReplaceAt(System.Int32,Northface.Tools.ORM.ObjectModel.InternalConstraint)">
            <summary>
            Insert a roleplayer in the specified location
            </summary>
            <param name="position">The index of the roleplayer that needs to be replaced</param>
            <param name="rolePlayer">The role player that will be inserted</param>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.InternalConstraintMoveableCollection.Counterpart">
            <summary>
            Counterpart
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.InternalConstraintMoveableCollection.SourceRole">
            <summary>
            Source Role
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.InternalConstraintMoveableCollection.TargetRole">
            <summary>
            Target Role
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.InternalConstraintMoveableCollection.System#Collections#ICollection#Count">
            <summary>
            When implemented by a class, gets the number of elements contained in the System.Collections.ICollection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.InternalConstraintMoveableCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            When implemented by a class, gets a value indicating whether access to the System.Collections.ICollection is synchronized (thread-safe)
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.InternalConstraintMoveableCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            When implemented by a class, gets an object that can be used to synchronize access to the System.Collections.ICollection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.InternalConstraintMoveableCollection.System#Collections#IList#IsFixedSize">
            <summary>
            When implemented by a class, gets a value indicating whether the System.Collections.IList has a fixed size
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.InternalConstraintMoveableCollection.System#Collections#IList#IsReadOnly">
            <summary>
            When implemented by a class, gets a value indicating whether the System.Collections.IList is read-only
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.InternalConstraintMoveableCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Indexed accessor
            </summary>
            <param name="index">Index to access</param>
            <returns>object at that index</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.InternalConstraintMoveableCollection.Count">
            <summary>
            Gets the number of elements contained in the collection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.InternalConstraintMoveableCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the list is read-only
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.InternalConstraintMoveableCollection.Item(System.Int32)">
            <summary>
            Indexed accessor
            </summary>
            <param name="index">Index to access</param>
            <returns>Northface.Tools.ORM.ObjectModel.InternalConstraint at that index</returns>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.SimpleMandatoryConstraintElementFactoryCreator">
            <summary>
            SimpleMandatoryConstraint Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SimpleMandatoryConstraintElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SimpleMandatoryConstraintElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraintElementFactoryCreator">
            <summary>
            InternalUniquenessConstraint Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraintElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraintElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequenceMoveableCollection">
            <summary>
            Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequence Collection class, strongly-typed collection
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequenceMoveableCollection.#ctor(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,System.Guid)">
            <summary>
            Constructor
            </summary>
            <param name="counterpart">Counterpart to create relationship with</param>
            <param name="sourceMetaRoleGuid">Source's meta role in this relationship</param>
            <param name="targetMetaRoleGuid">Target's meta role in this relationship</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequenceMoveableCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequenceMoveableCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            When implemented by a class, copies the elements of the System.Collection.ICollections to an System.Array, starting at a particular System.Array index
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from System.Collections.ICollection.  The System.Array must have zero-based indexing</param>
            <param name="index">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequenceMoveableCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            When implemented by a class, adds an item to the System.Collections.IList
            </summary>
            <param name="value">The System.Object to add to the System.Collections.IList</param>
            <returns>index where object was added</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequenceMoveableCollection.System#Collections#IList#Clear">
            <summary>
            When implemented by a class, removes all items from the System.Collections.IList
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequenceMoveableCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            When implemented by a class, determines whether the System.Collections.IList has a specific value
            </summary>
            <param name="value">The System.Object to locate in the System.Collections.IList</param>
            <returns>true if object is contained, false otherwise</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequenceMoveableCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            When implemented by a class, determines the index of a specific item in the System.Collections.IList
            </summary>
            <param name="value">The System.Object to locate in the System.Collections.IList</param>
            <returns>index of object</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequenceMoveableCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            When implemented by a class, inserts an item to the System.Collections.IList at the specified position
            </summary>
            <param name="index">The zero-based index at which the value should be inserted</param>
            <param name="value">The System.Object to insert into the System.Collections.IList</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequenceMoveableCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            When implemented by a class, removes the first occurrence of a specific object from the System.Collections.IList
            </summary>
            <param name="value">The System.Object to remove from the System.Collections.IList</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequenceMoveableCollection.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
            When implemented by a class, removes the System.Collections.IList item at the specified index
            </summary>
            <param name="index">The zero-based index of the item to remove</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequenceMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#Move(Microsoft.VisualStudio.Modeling.ModelElement,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="rolePlayer">The role player to move</param>
            <param name="newPosition">The position to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequenceMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#Move(System.Int32,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="oldPosition">The position of the role player to move from</param>
            <param name="newPosition">The position of the role player to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequenceMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#ReplaceAt(System.Int32,Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Insert a roleplayer in the specified location
            </summary>
            <param name="position">The index of the roleplayer that needs to be replaced</param>
            <param name="rolePlayer">The role player that will be inserted</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequenceMoveableCollection.CopyTo(Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequence[],System.Int32)">
            <summary>
            When implemented by a class, copies the elements of the System.Collection.ICollections to an System.Array, starting at a particular System.Array index
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from System.Collections.ICollection.  The System.Array must have zero-based indexing</param>
            <param name="index">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequenceMoveableCollection.Add(Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequence)">
            <summary>
            Adds an item to the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequence to add to the list</param>
            <returns>index where object was added</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequenceMoveableCollection.Clear">
            <summary>
            Removes all items from the list
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequenceMoveableCollection.Contains(Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequence)">
            <summary>
            Determines whether the list has a specific value
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequence to locate in the list</param>
            <returns>true if object is contained, false otherwise</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequenceMoveableCollection.IndexOf(Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequence)">
            <summary>
            Determines the index of a specific item in the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequence to locate in the list</param>
            <returns>index of object</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequenceMoveableCollection.Insert(System.Int32,Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequence)">
            <summary>
            Inserts an item to the list at the specified position
            </summary>
            <param name="index">The zero-based index at which the value should be inserted</param>
            <param name="value">The Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequence to insert into the list</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequenceMoveableCollection.Remove(Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequence)">
            <summary>
            Removes the first occurrence of a specific object from the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequence to remove from the list</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequenceMoveableCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the list item at the specified index
            </summary>
            <param name="index">The zero-based index of the item to remove</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequenceMoveableCollection.Move(Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequence,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="rolePlayer">The role player to move</param>
            <param name="newPosition">The position to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequenceMoveableCollection.Move(System.Int32,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="oldPosition">The position of the role player to move from</param>
            <param name="newPosition">The position of the role player to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequenceMoveableCollection.ReplaceAt(System.Int32,Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequence)">
            <summary>
            Insert a roleplayer in the specified location
            </summary>
            <param name="position">The index of the roleplayer that needs to be replaced</param>
            <param name="rolePlayer">The role player that will be inserted</param>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequenceMoveableCollection.Counterpart">
            <summary>
            Counterpart
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequenceMoveableCollection.SourceRole">
            <summary>
            Source Role
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequenceMoveableCollection.TargetRole">
            <summary>
            Target Role
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequenceMoveableCollection.System#Collections#ICollection#Count">
            <summary>
            When implemented by a class, gets the number of elements contained in the System.Collections.ICollection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequenceMoveableCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            When implemented by a class, gets a value indicating whether access to the System.Collections.ICollection is synchronized (thread-safe)
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequenceMoveableCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            When implemented by a class, gets an object that can be used to synchronize access to the System.Collections.ICollection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequenceMoveableCollection.System#Collections#IList#IsFixedSize">
            <summary>
            When implemented by a class, gets a value indicating whether the System.Collections.IList has a fixed size
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequenceMoveableCollection.System#Collections#IList#IsReadOnly">
            <summary>
            When implemented by a class, gets a value indicating whether the System.Collections.IList is read-only
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequenceMoveableCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Indexed accessor
            </summary>
            <param name="index">Index to access</param>
            <returns>object at that index</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequenceMoveableCollection.Count">
            <summary>
            Gets the number of elements contained in the collection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequenceMoveableCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the list is read-only
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequenceMoveableCollection.Item(System.Int32)">
            <summary>
            Indexed accessor
            </summary>
            <param name="index">Index to access</param>
            <returns>Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequence at that index</returns>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequenceElementFactoryCreator">
            <summary>
            MultiColumnExternalConstraintRoleSequence Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequenceElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintRoleSequenceElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintMoveableCollection">
            <summary>
            Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraint Collection class, strongly-typed collection
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintMoveableCollection.#ctor(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,System.Guid)">
            <summary>
            Constructor
            </summary>
            <param name="counterpart">Counterpart to create relationship with</param>
            <param name="sourceMetaRoleGuid">Source's meta role in this relationship</param>
            <param name="targetMetaRoleGuid">Target's meta role in this relationship</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintMoveableCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintMoveableCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            When implemented by a class, copies the elements of the System.Collection.ICollections to an System.Array, starting at a particular System.Array index
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from System.Collections.ICollection.  The System.Array must have zero-based indexing</param>
            <param name="index">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintMoveableCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            When implemented by a class, adds an item to the System.Collections.IList
            </summary>
            <param name="value">The System.Object to add to the System.Collections.IList</param>
            <returns>index where object was added</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintMoveableCollection.System#Collections#IList#Clear">
            <summary>
            When implemented by a class, removes all items from the System.Collections.IList
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintMoveableCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            When implemented by a class, determines whether the System.Collections.IList has a specific value
            </summary>
            <param name="value">The System.Object to locate in the System.Collections.IList</param>
            <returns>true if object is contained, false otherwise</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintMoveableCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            When implemented by a class, determines the index of a specific item in the System.Collections.IList
            </summary>
            <param name="value">The System.Object to locate in the System.Collections.IList</param>
            <returns>index of object</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintMoveableCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            When implemented by a class, inserts an item to the System.Collections.IList at the specified position
            </summary>
            <param name="index">The zero-based index at which the value should be inserted</param>
            <param name="value">The System.Object to insert into the System.Collections.IList</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintMoveableCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            When implemented by a class, removes the first occurrence of a specific object from the System.Collections.IList
            </summary>
            <param name="value">The System.Object to remove from the System.Collections.IList</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintMoveableCollection.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
            When implemented by a class, removes the System.Collections.IList item at the specified index
            </summary>
            <param name="index">The zero-based index of the item to remove</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#Move(Microsoft.VisualStudio.Modeling.ModelElement,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="rolePlayer">The role player to move</param>
            <param name="newPosition">The position to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#Move(System.Int32,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="oldPosition">The position of the role player to move from</param>
            <param name="newPosition">The position of the role player to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#ReplaceAt(System.Int32,Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Insert a roleplayer in the specified location
            </summary>
            <param name="position">The index of the roleplayer that needs to be replaced</param>
            <param name="rolePlayer">The role player that will be inserted</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintMoveableCollection.CopyTo(Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraint[],System.Int32)">
            <summary>
            When implemented by a class, copies the elements of the System.Collection.ICollections to an System.Array, starting at a particular System.Array index
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from System.Collections.ICollection.  The System.Array must have zero-based indexing</param>
            <param name="index">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintMoveableCollection.Add(Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraint)">
            <summary>
            Adds an item to the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraint to add to the list</param>
            <returns>index where object was added</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintMoveableCollection.Clear">
            <summary>
            Removes all items from the list
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintMoveableCollection.Contains(Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraint)">
            <summary>
            Determines whether the list has a specific value
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraint to locate in the list</param>
            <returns>true if object is contained, false otherwise</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintMoveableCollection.IndexOf(Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraint)">
            <summary>
            Determines the index of a specific item in the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraint to locate in the list</param>
            <returns>index of object</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintMoveableCollection.Insert(System.Int32,Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraint)">
            <summary>
            Inserts an item to the list at the specified position
            </summary>
            <param name="index">The zero-based index at which the value should be inserted</param>
            <param name="value">The Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraint to insert into the list</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintMoveableCollection.Remove(Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraint)">
            <summary>
            Removes the first occurrence of a specific object from the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraint to remove from the list</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintMoveableCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the list item at the specified index
            </summary>
            <param name="index">The zero-based index of the item to remove</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintMoveableCollection.Move(Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraint,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="rolePlayer">The role player to move</param>
            <param name="newPosition">The position to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintMoveableCollection.Move(System.Int32,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="oldPosition">The position of the role player to move from</param>
            <param name="newPosition">The position of the role player to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintMoveableCollection.ReplaceAt(System.Int32,Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraint)">
            <summary>
            Insert a roleplayer in the specified location
            </summary>
            <param name="position">The index of the roleplayer that needs to be replaced</param>
            <param name="rolePlayer">The role player that will be inserted</param>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintMoveableCollection.Counterpart">
            <summary>
            Counterpart
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintMoveableCollection.SourceRole">
            <summary>
            Source Role
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintMoveableCollection.TargetRole">
            <summary>
            Target Role
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintMoveableCollection.System#Collections#ICollection#Count">
            <summary>
            When implemented by a class, gets the number of elements contained in the System.Collections.ICollection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintMoveableCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            When implemented by a class, gets a value indicating whether access to the System.Collections.ICollection is synchronized (thread-safe)
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintMoveableCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            When implemented by a class, gets an object that can be used to synchronize access to the System.Collections.ICollection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintMoveableCollection.System#Collections#IList#IsFixedSize">
            <summary>
            When implemented by a class, gets a value indicating whether the System.Collections.IList has a fixed size
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintMoveableCollection.System#Collections#IList#IsReadOnly">
            <summary>
            When implemented by a class, gets a value indicating whether the System.Collections.IList is read-only
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintMoveableCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Indexed accessor
            </summary>
            <param name="index">Index to access</param>
            <returns>object at that index</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintMoveableCollection.Count">
            <summary>
            Gets the number of elements contained in the collection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintMoveableCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the list is read-only
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintMoveableCollection.Item(System.Int32)">
            <summary>
            Indexed accessor
            </summary>
            <param name="index">Index to access</param>
            <returns>Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraint at that index</returns>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.RingConstraintElementFactoryCreator">
            <summary>
            RingConstraint Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RingConstraintElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RingConstraintElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.FrequencyConstraintElementFactoryCreator">
            <summary>
            FrequencyConstraint Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FrequencyConstraintElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FrequencyConstraintElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ExternalUniquenessConstraintElementFactoryCreator">
            <summary>
            ExternalUniquenessConstraint Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalUniquenessConstraintElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalUniquenessConstraintElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.DisjunctiveMandatoryConstraintElementFactoryCreator">
            <summary>
            DisjunctiveMandatoryConstraint Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DisjunctiveMandatoryConstraintElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DisjunctiveMandatoryConstraintElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.Reading">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.Reading.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.Reading.TextMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.Reading.IsPrimaryMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.Reading.LanguageMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.Reading.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.Reading.TextMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.Reading.readingTextFieldHandler">
            <summary>
            FieldHandler for Reading.Text field
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.Reading.IsPrimaryMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.Reading.readingIsPrimaryFieldHandler">
            <summary>
            FieldHandler for Reading.IsPrimary field
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.Reading.LanguageMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.Reading.readingLanguageFieldHandler">
            <summary>
            FieldHandler for Reading.Language field
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Reading.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Reading.CreateReading(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Reading.CreateAndInitializeReading(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Reading.GetCustomSerializedChildElementInfo">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Reading.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Reading.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Reading.MapChildElement(System.String,System.String,System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Reading.MapAttribute(System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Reading.ToString">
            <summary>
            The filled version of the reading. Currently works on the assumption that the arity of
            the statement is equal to the number of roles. The text is expected to have {n} where
            n is the 0 based position of the predicate to substitute.
            
            "{0} has {1}" with the role players Person and GivenName would be returned as
            "Person has GivenName"
            </summary>
            <returns>The filled version of the reading.</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Reading.IsPropertyDescriptorReadOnly(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Standard override. Determines when derived properties are read-only. Called
            if the ReadOnly setting on the element is one of the SometimesUIReadOnly* values.
            Currently, IsPrimary is read-only if true.
            </summary>
            <param name="propertyDescriptor">PropertyDescriptor</param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Reading.GetComponentName">
            <summary>
            Identify the reading for the property grid component dropdown
            </summary>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Reading.IsValidReadingText">
            <summary>
            Does some testing to see if the reading text is appropriate for the current
            set of roles assigned to it. Would eventually be more useful if it provided
            some information as to why it was not valid.
            </summary>
            <returns>True if the reading is deemed valid, false otherwise.</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Reading.IsValidReadingText(System.String,System.Int32)">
            <summary>
            Does some testing to see if the reading text is appropriate for the current
            set of roles assigned to it. Would eventually be more useful if it provided
            some information as to why it was not valid.
            </summary>
            <param name="testText">The reading text to test</param>
            <param name="roleCount">The number of expected role place holders</param>
            <returns>True if the reading is deemed valid, false otherwise.</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Reading.PlaceHolderCount(System.String)">
            <summary>
            Determines how many role placeholders are indicated in the indicated text
            and returns the count.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Reading.ValidateRoleCountError(Northface.Tools.ORM.ObjectModel.INotifyElementAdded)">
            <summary>
            Compares number of roles in ReadingOrder ot the place holders in
            the reading and then creates or removes errors as needed.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Reading.ValidateErrors(Northface.Tools.ORM.ObjectModel.INotifyElementAdded)">
            <summary>
            Implements IModelErrorOwner.ValidateErrors
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Reading.Text">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Reading.IsPrimary">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Reading.Language">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Reading.RoleCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Reading.ReadingOrder">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Reading.TooManyRolesError">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Reading.TooFewRolesError">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Reading.SupportedCustomSerializedOperations">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Reading.CustomSerializedElementInfo">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Reading.CustomSerializedChildRoleComparer">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Reading.ErrorCollection">
            <summary>
            Returns the errors associated with the Reading.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.Reading.ReadingTextFieldHandler">
            <summary>
            Implement the field handler for Reading.Text
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Reading.ReadingTextFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Reading.ReadingTextFieldHandler.GetValue(Northface.Tools.ORM.ObjectModel.Reading)">
            <summary>
            Gets the value of the attribute as it exists in the element
            </summary>
            <param name="element">the Reading</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Reading.ReadingTextFieldHandler.SetValue(Northface.Tools.ORM.ObjectModel.Reading,System.String,Microsoft.VisualStudio.Modeling.CommandFactory,System.Boolean,System.String@)">
            <summary>
            Sets the value into the element
            </summary>
            <param name="element">the element</param>
            <param name="value">new value</param>
            <param name="commandFactory">the command factory for this change</param>
            <param name="allowDuplicates">allow duplicate value to continue to fire rules and events</param>
            <param name="oldValue">the old value before the change</param>
            <returns>true if the value actually changed</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Reading.ReadingTextFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the Reading.Text field handler
            </summary>
            <value>ReadingTextFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Reading.ReadingTextFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the Reading.Text field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.Reading.ReadingIsPrimaryFieldHandler">
            <summary>
            Implement the field handler for Reading.IsPrimary
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Reading.ReadingIsPrimaryFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Reading.ReadingIsPrimaryFieldHandler.GetValue(Northface.Tools.ORM.ObjectModel.Reading)">
            <summary>
            Gets the value of the attribute as it exists in the element
            </summary>
            <param name="element">the Reading</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Reading.ReadingIsPrimaryFieldHandler.SetValue(Northface.Tools.ORM.ObjectModel.Reading,System.Boolean,Microsoft.VisualStudio.Modeling.CommandFactory,System.Boolean,System.Boolean@)">
            <summary>
            Sets the value into the element
            </summary>
            <param name="element">the element</param>
            <param name="value">new value</param>
            <param name="commandFactory">the command factory for this change</param>
            <param name="allowDuplicates">allow duplicate value to continue to fire rules and events</param>
            <param name="oldValue">the old value before the change</param>
            <returns>true if the value actually changed</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Reading.ReadingIsPrimaryFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the Reading.IsPrimary field handler
            </summary>
            <value>ReadingIsPrimaryFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Reading.ReadingIsPrimaryFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the Reading.IsPrimary field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.Reading.ReadingLanguageFieldHandler">
            <summary>
            Implement the field handler for Reading.Language
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Reading.ReadingLanguageFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Reading.ReadingLanguageFieldHandler.GetValue(Northface.Tools.ORM.ObjectModel.Reading)">
            <summary>
            Gets the value of the attribute as it exists in the element
            </summary>
            <param name="element">the Reading</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Reading.ReadingLanguageFieldHandler.SetValue(Northface.Tools.ORM.ObjectModel.Reading,System.String,Microsoft.VisualStudio.Modeling.CommandFactory,System.Boolean,System.String@)">
            <summary>
            Sets the value into the element
            </summary>
            <param name="element">the element</param>
            <param name="value">new value</param>
            <param name="commandFactory">the command factory for this change</param>
            <param name="allowDuplicates">allow duplicate value to continue to fire rules and events</param>
            <param name="oldValue">the old value before the change</param>
            <returns>true if the value actually changed</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Reading.ReadingLanguageFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the Reading.Language field handler
            </summary>
            <value>ReadingLanguageFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Reading.ReadingLanguageFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the Reading.Language field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.Reading.ReadingPropertiesChanged">
            <summary>
            Handles the resetting the current primary reading when a new one is selected.
            Also rejects trying to change the current primary reading's IsPrimary to false.
            Validates that the reading text has the necessary number of placeholders.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ReadingMoveableCollection">
            <summary>
            Northface.Tools.ORM.ObjectModel.Reading Collection class, strongly-typed collection
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingMoveableCollection.#ctor(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,System.Guid)">
            <summary>
            Constructor
            </summary>
            <param name="counterpart">Counterpart to create relationship with</param>
            <param name="sourceMetaRoleGuid">Source's meta role in this relationship</param>
            <param name="targetMetaRoleGuid">Target's meta role in this relationship</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingMoveableCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingMoveableCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            When implemented by a class, copies the elements of the System.Collection.ICollections to an System.Array, starting at a particular System.Array index
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from System.Collections.ICollection.  The System.Array must have zero-based indexing</param>
            <param name="index">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingMoveableCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            When implemented by a class, adds an item to the System.Collections.IList
            </summary>
            <param name="value">The System.Object to add to the System.Collections.IList</param>
            <returns>index where object was added</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingMoveableCollection.System#Collections#IList#Clear">
            <summary>
            When implemented by a class, removes all items from the System.Collections.IList
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingMoveableCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            When implemented by a class, determines whether the System.Collections.IList has a specific value
            </summary>
            <param name="value">The System.Object to locate in the System.Collections.IList</param>
            <returns>true if object is contained, false otherwise</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingMoveableCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            When implemented by a class, determines the index of a specific item in the System.Collections.IList
            </summary>
            <param name="value">The System.Object to locate in the System.Collections.IList</param>
            <returns>index of object</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingMoveableCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            When implemented by a class, inserts an item to the System.Collections.IList at the specified position
            </summary>
            <param name="index">The zero-based index at which the value should be inserted</param>
            <param name="value">The System.Object to insert into the System.Collections.IList</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingMoveableCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            When implemented by a class, removes the first occurrence of a specific object from the System.Collections.IList
            </summary>
            <param name="value">The System.Object to remove from the System.Collections.IList</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingMoveableCollection.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
            When implemented by a class, removes the System.Collections.IList item at the specified index
            </summary>
            <param name="index">The zero-based index of the item to remove</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#Move(Microsoft.VisualStudio.Modeling.ModelElement,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="rolePlayer">The role player to move</param>
            <param name="newPosition">The position to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#Move(System.Int32,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="oldPosition">The position of the role player to move from</param>
            <param name="newPosition">The position of the role player to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#ReplaceAt(System.Int32,Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Insert a roleplayer in the specified location
            </summary>
            <param name="position">The index of the roleplayer that needs to be replaced</param>
            <param name="rolePlayer">The role player that will be inserted</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingMoveableCollection.CopyTo(Northface.Tools.ORM.ObjectModel.Reading[],System.Int32)">
            <summary>
            When implemented by a class, copies the elements of the System.Collection.ICollections to an System.Array, starting at a particular System.Array index
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from System.Collections.ICollection.  The System.Array must have zero-based indexing</param>
            <param name="index">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingMoveableCollection.Add(Northface.Tools.ORM.ObjectModel.Reading)">
            <summary>
            Adds an item to the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.Reading to add to the list</param>
            <returns>index where object was added</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingMoveableCollection.Clear">
            <summary>
            Removes all items from the list
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingMoveableCollection.Contains(Northface.Tools.ORM.ObjectModel.Reading)">
            <summary>
            Determines whether the list has a specific value
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.Reading to locate in the list</param>
            <returns>true if object is contained, false otherwise</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingMoveableCollection.IndexOf(Northface.Tools.ORM.ObjectModel.Reading)">
            <summary>
            Determines the index of a specific item in the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.Reading to locate in the list</param>
            <returns>index of object</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingMoveableCollection.Insert(System.Int32,Northface.Tools.ORM.ObjectModel.Reading)">
            <summary>
            Inserts an item to the list at the specified position
            </summary>
            <param name="index">The zero-based index at which the value should be inserted</param>
            <param name="value">The Northface.Tools.ORM.ObjectModel.Reading to insert into the list</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingMoveableCollection.Remove(Northface.Tools.ORM.ObjectModel.Reading)">
            <summary>
            Removes the first occurrence of a specific object from the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.Reading to remove from the list</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingMoveableCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the list item at the specified index
            </summary>
            <param name="index">The zero-based index of the item to remove</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingMoveableCollection.Move(Northface.Tools.ORM.ObjectModel.Reading,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="rolePlayer">The role player to move</param>
            <param name="newPosition">The position to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingMoveableCollection.Move(System.Int32,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="oldPosition">The position of the role player to move from</param>
            <param name="newPosition">The position of the role player to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingMoveableCollection.ReplaceAt(System.Int32,Northface.Tools.ORM.ObjectModel.Reading)">
            <summary>
            Insert a roleplayer in the specified location
            </summary>
            <param name="position">The index of the roleplayer that needs to be replaced</param>
            <param name="rolePlayer">The role player that will be inserted</param>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingMoveableCollection.Counterpart">
            <summary>
            Counterpart
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingMoveableCollection.SourceRole">
            <summary>
            Source Role
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingMoveableCollection.TargetRole">
            <summary>
            Target Role
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingMoveableCollection.System#Collections#ICollection#Count">
            <summary>
            When implemented by a class, gets the number of elements contained in the System.Collections.ICollection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingMoveableCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            When implemented by a class, gets a value indicating whether access to the System.Collections.ICollection is synchronized (thread-safe)
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingMoveableCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            When implemented by a class, gets an object that can be used to synchronize access to the System.Collections.ICollection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingMoveableCollection.System#Collections#IList#IsFixedSize">
            <summary>
            When implemented by a class, gets a value indicating whether the System.Collections.IList has a fixed size
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingMoveableCollection.System#Collections#IList#IsReadOnly">
            <summary>
            When implemented by a class, gets a value indicating whether the System.Collections.IList is read-only
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingMoveableCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Indexed accessor
            </summary>
            <param name="index">Index to access</param>
            <returns>object at that index</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingMoveableCollection.Count">
            <summary>
            Gets the number of elements contained in the collection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingMoveableCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the list is read-only
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingMoveableCollection.Item(System.Int32)">
            <summary>
            Indexed accessor
            </summary>
            <param name="index">Index to access</param>
            <returns>Northface.Tools.ORM.ObjectModel.Reading at that index</returns>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ReadingElementFactoryCreator">
            <summary>
            Reading Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ModelErrorMoveableCollection">
            <summary>
            Northface.Tools.ORM.ObjectModel.ModelError Collection class, strongly-typed collection
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelErrorMoveableCollection.#ctor(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,System.Guid)">
            <summary>
            Constructor
            </summary>
            <param name="counterpart">Counterpart to create relationship with</param>
            <param name="sourceMetaRoleGuid">Source's meta role in this relationship</param>
            <param name="targetMetaRoleGuid">Target's meta role in this relationship</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelErrorMoveableCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelErrorMoveableCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            When implemented by a class, copies the elements of the System.Collection.ICollections to an System.Array, starting at a particular System.Array index
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from System.Collections.ICollection.  The System.Array must have zero-based indexing</param>
            <param name="index">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelErrorMoveableCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            When implemented by a class, adds an item to the System.Collections.IList
            </summary>
            <param name="value">The System.Object to add to the System.Collections.IList</param>
            <returns>index where object was added</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelErrorMoveableCollection.System#Collections#IList#Clear">
            <summary>
            When implemented by a class, removes all items from the System.Collections.IList
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelErrorMoveableCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            When implemented by a class, determines whether the System.Collections.IList has a specific value
            </summary>
            <param name="value">The System.Object to locate in the System.Collections.IList</param>
            <returns>true if object is contained, false otherwise</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelErrorMoveableCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            When implemented by a class, determines the index of a specific item in the System.Collections.IList
            </summary>
            <param name="value">The System.Object to locate in the System.Collections.IList</param>
            <returns>index of object</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelErrorMoveableCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            When implemented by a class, inserts an item to the System.Collections.IList at the specified position
            </summary>
            <param name="index">The zero-based index at which the value should be inserted</param>
            <param name="value">The System.Object to insert into the System.Collections.IList</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelErrorMoveableCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            When implemented by a class, removes the first occurrence of a specific object from the System.Collections.IList
            </summary>
            <param name="value">The System.Object to remove from the System.Collections.IList</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelErrorMoveableCollection.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
            When implemented by a class, removes the System.Collections.IList item at the specified index
            </summary>
            <param name="index">The zero-based index of the item to remove</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelErrorMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#Move(Microsoft.VisualStudio.Modeling.ModelElement,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="rolePlayer">The role player to move</param>
            <param name="newPosition">The position to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelErrorMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#Move(System.Int32,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="oldPosition">The position of the role player to move from</param>
            <param name="newPosition">The position of the role player to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelErrorMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#ReplaceAt(System.Int32,Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Insert a roleplayer in the specified location
            </summary>
            <param name="position">The index of the roleplayer that needs to be replaced</param>
            <param name="rolePlayer">The role player that will be inserted</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelErrorMoveableCollection.CopyTo(Northface.Tools.ORM.ObjectModel.ModelError[],System.Int32)">
            <summary>
            When implemented by a class, copies the elements of the System.Collection.ICollections to an System.Array, starting at a particular System.Array index
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from System.Collections.ICollection.  The System.Array must have zero-based indexing</param>
            <param name="index">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelErrorMoveableCollection.Add(Northface.Tools.ORM.ObjectModel.ModelError)">
            <summary>
            Adds an item to the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ModelError to add to the list</param>
            <returns>index where object was added</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelErrorMoveableCollection.Clear">
            <summary>
            Removes all items from the list
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelErrorMoveableCollection.Contains(Northface.Tools.ORM.ObjectModel.ModelError)">
            <summary>
            Determines whether the list has a specific value
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ModelError to locate in the list</param>
            <returns>true if object is contained, false otherwise</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelErrorMoveableCollection.IndexOf(Northface.Tools.ORM.ObjectModel.ModelError)">
            <summary>
            Determines the index of a specific item in the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ModelError to locate in the list</param>
            <returns>index of object</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelErrorMoveableCollection.Insert(System.Int32,Northface.Tools.ORM.ObjectModel.ModelError)">
            <summary>
            Inserts an item to the list at the specified position
            </summary>
            <param name="index">The zero-based index at which the value should be inserted</param>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ModelError to insert into the list</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelErrorMoveableCollection.Remove(Northface.Tools.ORM.ObjectModel.ModelError)">
            <summary>
            Removes the first occurrence of a specific object from the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ModelError to remove from the list</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelErrorMoveableCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the list item at the specified index
            </summary>
            <param name="index">The zero-based index of the item to remove</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelErrorMoveableCollection.Move(Northface.Tools.ORM.ObjectModel.ModelError,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="rolePlayer">The role player to move</param>
            <param name="newPosition">The position to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelErrorMoveableCollection.Move(System.Int32,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="oldPosition">The position of the role player to move from</param>
            <param name="newPosition">The position of the role player to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelErrorMoveableCollection.ReplaceAt(System.Int32,Northface.Tools.ORM.ObjectModel.ModelError)">
            <summary>
            Insert a roleplayer in the specified location
            </summary>
            <param name="position">The index of the roleplayer that needs to be replaced</param>
            <param name="rolePlayer">The role player that will be inserted</param>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ModelErrorMoveableCollection.Counterpart">
            <summary>
            Counterpart
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ModelErrorMoveableCollection.SourceRole">
            <summary>
            Source Role
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ModelErrorMoveableCollection.TargetRole">
            <summary>
            Target Role
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ModelErrorMoveableCollection.System#Collections#ICollection#Count">
            <summary>
            When implemented by a class, gets the number of elements contained in the System.Collections.ICollection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ModelErrorMoveableCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            When implemented by a class, gets a value indicating whether access to the System.Collections.ICollection is synchronized (thread-safe)
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ModelErrorMoveableCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            When implemented by a class, gets an object that can be used to synchronize access to the System.Collections.ICollection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ModelErrorMoveableCollection.System#Collections#IList#IsFixedSize">
            <summary>
            When implemented by a class, gets a value indicating whether the System.Collections.IList has a fixed size
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ModelErrorMoveableCollection.System#Collections#IList#IsReadOnly">
            <summary>
            When implemented by a class, gets a value indicating whether the System.Collections.IList is read-only
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ModelErrorMoveableCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Indexed accessor
            </summary>
            <param name="index">Index to access</param>
            <returns>object at that index</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ModelErrorMoveableCollection.Count">
            <summary>
            Gets the number of elements contained in the collection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ModelErrorMoveableCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the list is read-only
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ModelErrorMoveableCollection.Item(System.Int32)">
            <summary>
            Indexed accessor
            </summary>
            <param name="index">Index to access</param>
            <returns>Northface.Tools.ORM.ObjectModel.ModelError at that index</returns>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.TooFewRoleSequencesErrorElementFactoryCreator">
            <summary>
            TooFewRoleSequencesError Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooFewRoleSequencesErrorElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooFewRoleSequencesErrorElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.TooManyRoleSequencesErrorElementFactoryCreator">
            <summary>
            TooManyRoleSequencesError Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooManyRoleSequencesErrorElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooManyRoleSequencesErrorElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.DuplicateNameError">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.DuplicateNameError.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.DuplicateNameError.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DuplicateNameError.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DuplicateNameError.ValidateDuplicates(Microsoft.VisualStudio.Modeling.NamedElement)">
            <summary>
            Verify that all of the duplicate elements attached to
            this error actually have the same name.
            </summary>
            <param name="testElement"></param>
            <returns>true if validation succeeded. false is
            returned if testElement does not have a name specified</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DuplicateNameError.ValidateDuplicates(Microsoft.VisualStudio.Modeling.NamedElement,System.Collections.IList)">
            <summary>
            Helper function to allow ValidateDuplicates call from
            IModelErrorOwner.ValidateErrors with expensive second
            call to the DuplicateElements function.
            </summary>
            <param name="testElement">The element to test</param>
            <param name="duplicates">Pre-fetched duplicates, or null</param>
            <returns>true if validation succeeded. false is
            returned if testElement does not have a name specified</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DuplicateNameError.GenerateErrorText">
            <summary>
            Generate text for the error
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DuplicateNameError.GetRepresentedElements">
            <summary>
            Implements IRepresentModelElements.GetRepresentedElements
            </summary>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DuplicateNameError.ValidateErrors(Northface.Tools.ORM.ObjectModel.INotifyElementAdded)">
            <summary>
            Implements IModelErrorOwner.ValidateErrors
            Make sure that the DuplicateNameError is correct
            </summary>
            <param name="notifyAdded">A callback for notifying
            the caller of all objects that are added.</param>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.DuplicateNameError.DuplicateElements">
            <summary>
            Get a list of elements with the same name. The
            returned elements will all come from a
            generated metarole collections.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.DuplicateNameError.ErrorFormatText">
            <summary>
            Get the text to display the duplicate error information. Replacement
            field {0} is replaced by the model name, field {1} is replaced by the
            element name.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.DuplicateNameError.RegenerateEvents">
            <summary>
            Regenerate the error text when the model name changes.
            An owner name change will drop the error, so there is
            no reason to regenerate on owner name change.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.DuplicateNameError.ErrorCollection">
            <summary>
            Implements IModelErrorOwner.ErrorCollection
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ObjectTypeDuplicateNameError">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectTypeDuplicateNameError.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectTypeDuplicateNameError.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypeDuplicateNameError.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypeDuplicateNameError.CreateObjectTypeDuplicateNameError(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypeDuplicateNameError.CreateAndInitializeObjectTypeDuplicateNameError(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypeDuplicateNameError.GetCustomSerializedChildElementInfo">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypeDuplicateNameError.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypeDuplicateNameError.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypeDuplicateNameError.MapChildElement(System.String,System.String,System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypeDuplicateNameError.MapAttribute(System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectTypeDuplicateNameError.ObjectTypeCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectTypeDuplicateNameError.DuplicateElements">
            <summary>
            Get the duplicate elements represented by this DuplicateNameError
            </summary>
            <returns>ObjectTypeCollection</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectTypeDuplicateNameError.ErrorFormatText">
            <summary>
            Get the text to display the duplicate error information. Replacement
            field {0} is replaced by the model name, field {1} is replaced by the
            element name.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectTypeDuplicateNameError.SupportedCustomSerializedOperations">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectTypeDuplicateNameError.CustomSerializedElementInfo">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectTypeDuplicateNameError.CustomSerializedChildRoleComparer">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ObjectTypeDuplicateNameErrorElementFactoryCreator">
            <summary>
            ObjectTypeDuplicateNameError Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypeDuplicateNameErrorElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypeDuplicateNameErrorElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.FactTypeDuplicateNameError">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeDuplicateNameError.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeDuplicateNameError.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeDuplicateNameError.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeDuplicateNameError.CreateFactTypeDuplicateNameError(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeDuplicateNameError.CreateAndInitializeFactTypeDuplicateNameError(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeDuplicateNameError.GetCustomSerializedChildElementInfo">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeDuplicateNameError.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeDuplicateNameError.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeDuplicateNameError.MapChildElement(System.String,System.String,System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeDuplicateNameError.MapAttribute(System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeDuplicateNameError.FactTypeCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeDuplicateNameError.DuplicateElements">
            <summary>
            Get the duplicate elements represented by this DuplicateNameError
            </summary>
            <returns>FactTypeCollection</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeDuplicateNameError.ErrorFormatText">
            <summary>
            Get the text to display the duplicate error information. Replacement
            field {0} is replaced by the model name, field {1} is replaced by the
            element name.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeDuplicateNameError.SupportedCustomSerializedOperations">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeDuplicateNameError.CustomSerializedElementInfo">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeDuplicateNameError.CustomSerializedChildRoleComparer">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.FactTypeDuplicateNameErrorElementFactoryCreator">
            <summary>
            FactTypeDuplicateNameError Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeDuplicateNameErrorElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeDuplicateNameErrorElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ConstraintDuplicateNameError">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ConstraintDuplicateNameError.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ConstraintDuplicateNameError.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintDuplicateNameError.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintDuplicateNameError.CreateConstraintDuplicateNameError(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintDuplicateNameError.CreateAndInitializeConstraintDuplicateNameError(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintDuplicateNameError.GetCustomSerializedChildElementInfo">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintDuplicateNameError.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintDuplicateNameError.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintDuplicateNameError.MapChildElement(System.String,System.String,System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintDuplicateNameError.MapAttribute(System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ConstraintDuplicateNameError.SingleColumnExternalConstraintCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ConstraintDuplicateNameError.MultiColumnExternalConstraintCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ConstraintDuplicateNameError.DuplicateElements">
            <summary>
            Get the duplicate elements represented by this DuplicateNameError
            </summary>
            <returns>ConstraintCollection</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ConstraintDuplicateNameError.ErrorFormatText">
            <summary>
            Get the text to display the duplicate error information. Replacement
            field {0} is replaced by the model name, field {1} is replaced by the
            element name.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ConstraintDuplicateNameError.ConstraintCollection">
            <summary>
            Return a constraint collection encompassing
            both single column and multi column external constraints
            </summary>
            <value></value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ConstraintDuplicateNameError.SupportedCustomSerializedOperations">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ConstraintDuplicateNameError.CustomSerializedElementInfo">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ConstraintDuplicateNameError.CustomSerializedChildRoleComparer">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ConstraintDuplicateNameErrorElementFactoryCreator">
            <summary>
            ConstraintDuplicateNameError Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintDuplicateNameErrorElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintDuplicateNameErrorElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.TooFewReadingRolesError">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.TooFewReadingRolesError.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.TooFewReadingRolesError.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooFewReadingRolesError.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooFewReadingRolesError.CreateTooFewReadingRolesError(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooFewReadingRolesError.CreateAndInitializeTooFewReadingRolesError(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooFewReadingRolesError.GetCustomSerializedChildElementInfo">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooFewReadingRolesError.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooFewReadingRolesError.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooFewReadingRolesError.MapChildElement(System.String,System.String,System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooFewReadingRolesError.MapAttribute(System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooFewReadingRolesError.GenerateErrorText">
            <summary>
            Creates the error text.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooFewReadingRolesError.GetRepresentedElements">
            <summary>
            The reading the error belongs to
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.TooFewReadingRolesError.Reading">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.TooFewReadingRolesError.SupportedCustomSerializedOperations">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.TooFewReadingRolesError.CustomSerializedElementInfo">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.TooFewReadingRolesError.CustomSerializedChildRoleComparer">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.TooFewReadingRolesError.RegenerateEvents">
            <summary>
            Sets regernate to ModelNameChange | OwnerNameChange
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.TooFewReadingRolesErrorElementFactoryCreator">
            <summary>
            TooFewReadingRolesError Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooFewReadingRolesErrorElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooFewReadingRolesErrorElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.TooManyReadingRolesError">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.TooManyReadingRolesError.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.TooManyReadingRolesError.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooManyReadingRolesError.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooManyReadingRolesError.CreateTooManyReadingRolesError(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooManyReadingRolesError.CreateAndInitializeTooManyReadingRolesError(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooManyReadingRolesError.GetCustomSerializedChildElementInfo">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooManyReadingRolesError.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooManyReadingRolesError.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooManyReadingRolesError.MapChildElement(System.String,System.String,System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooManyReadingRolesError.MapAttribute(System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooManyReadingRolesError.GenerateErrorText">
            <summary>
            Creates the error text.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooManyReadingRolesError.GetRepresentedElements">
            <summary>
            The Reading the error belongs too.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.TooManyReadingRolesError.Reading">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.TooManyReadingRolesError.SupportedCustomSerializedOperations">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.TooManyReadingRolesError.CustomSerializedElementInfo">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.TooManyReadingRolesError.CustomSerializedChildRoleComparer">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.TooManyReadingRolesError.RegenerateEvents">
            <summary>
            Sets regernate to ModelNameChange | OwnerNameChange
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.TooManyReadingRolesErrorElementFactoryCreator">
            <summary>
            TooManyReadingRolesError Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooManyReadingRolesErrorElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.TooManyReadingRolesErrorElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ExternalConstraintRoleSequenceArityMismatchElementFactoryCreator">
            <summary>
            ExternalConstraintRoleSequenceArityMismatch Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalConstraintRoleSequenceArityMismatchElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalConstraintRoleSequenceArityMismatchElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.FactTypeRequiresReadingErrorElementFactoryCreator">
            <summary>
            FactTypeRequiresReadingError Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeRequiresReadingErrorElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeRequiresReadingErrorElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.FactTypeRequiresInternalUniquenessConstraintErrorElementFactoryCreator">
            <summary>
            FactTypeRequiresInternalUniquenessConstraintError Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeRequiresInternalUniquenessConstraintErrorElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeRequiresInternalUniquenessConstraintErrorElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.DataTypeNotSpecifiedError">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.DataTypeNotSpecifiedError.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.DataTypeNotSpecifiedError.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataTypeNotSpecifiedError.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataTypeNotSpecifiedError.CreateDataTypeNotSpecifiedError(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataTypeNotSpecifiedError.CreateAndInitializeDataTypeNotSpecifiedError(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataTypeNotSpecifiedError.GenerateErrorText">
            <summary>
            Creates the error text.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataTypeNotSpecifiedError.GetRepresentedElements">
            <summary>
            Implements IRepresentModelElements.GetRepresentedElements
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataTypeNotSpecifiedError.GetCustomSerializedChildElementInfo">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataTypeNotSpecifiedError.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataTypeNotSpecifiedError.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataTypeNotSpecifiedError.MapChildElement(System.String,System.String,System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataTypeNotSpecifiedError.MapAttribute(System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.DataTypeNotSpecifiedError.ValueTypeHasDataType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.DataTypeNotSpecifiedError.AssociatedValueType">
            <summary>
            The value type associated with this error
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.DataTypeNotSpecifiedError.RegenerateEvents">
            <summary>
            Sets regenerate to ModelNameChange | OwnerNameChange
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.DataTypeNotSpecifiedError.SupportedCustomSerializedOperations">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.DataTypeNotSpecifiedError.CustomSerializedElementInfo">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.DataTypeNotSpecifiedError.CustomSerializedChildRoleComparer">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.DataTypeNotSpecifiedError.UnspecifiedTypeAddedRule">
            <summary>
            A class to add unspecified data type errors
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataTypeNotSpecifiedError.UnspecifiedTypeAddedRule.ElementAdded(Microsoft.VisualStudio.Modeling.ElementAddedEventArgs)">
            <summary>
            Test if an added data type relationship points to
            an unspecified type
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.DataTypeNotSpecifiedErrorElementFactoryCreator">
            <summary>
            DataTypeNotSpecifiedError Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataTypeNotSpecifiedErrorElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.DataTypeNotSpecifiedErrorElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.NMinusOneErrorElementFactoryCreator">
            <summary>
            NMinusOneError Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NMinusOneErrorElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NMinusOneErrorElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeErrorMoveableCollection">
            <summary>
            Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeError Collection class, strongly-typed collection
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeErrorMoveableCollection.#ctor(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,System.Guid)">
            <summary>
            Constructor
            </summary>
            <param name="counterpart">Counterpart to create relationship with</param>
            <param name="sourceMetaRoleGuid">Source's meta role in this relationship</param>
            <param name="targetMetaRoleGuid">Target's meta role in this relationship</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeErrorMoveableCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeErrorMoveableCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            When implemented by a class, copies the elements of the System.Collection.ICollections to an System.Array, starting at a particular System.Array index
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from System.Collections.ICollection.  The System.Array must have zero-based indexing</param>
            <param name="index">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeErrorMoveableCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            When implemented by a class, adds an item to the System.Collections.IList
            </summary>
            <param name="value">The System.Object to add to the System.Collections.IList</param>
            <returns>index where object was added</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeErrorMoveableCollection.System#Collections#IList#Clear">
            <summary>
            When implemented by a class, removes all items from the System.Collections.IList
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeErrorMoveableCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            When implemented by a class, determines whether the System.Collections.IList has a specific value
            </summary>
            <param name="value">The System.Object to locate in the System.Collections.IList</param>
            <returns>true if object is contained, false otherwise</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeErrorMoveableCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            When implemented by a class, determines the index of a specific item in the System.Collections.IList
            </summary>
            <param name="value">The System.Object to locate in the System.Collections.IList</param>
            <returns>index of object</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeErrorMoveableCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            When implemented by a class, inserts an item to the System.Collections.IList at the specified position
            </summary>
            <param name="index">The zero-based index at which the value should be inserted</param>
            <param name="value">The System.Object to insert into the System.Collections.IList</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeErrorMoveableCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            When implemented by a class, removes the first occurrence of a specific object from the System.Collections.IList
            </summary>
            <param name="value">The System.Object to remove from the System.Collections.IList</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeErrorMoveableCollection.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
            When implemented by a class, removes the System.Collections.IList item at the specified index
            </summary>
            <param name="index">The zero-based index of the item to remove</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeErrorMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#Move(Microsoft.VisualStudio.Modeling.ModelElement,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="rolePlayer">The role player to move</param>
            <param name="newPosition">The position to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeErrorMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#Move(System.Int32,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="oldPosition">The position of the role player to move from</param>
            <param name="newPosition">The position of the role player to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeErrorMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#ReplaceAt(System.Int32,Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Insert a roleplayer in the specified location
            </summary>
            <param name="position">The index of the roleplayer that needs to be replaced</param>
            <param name="rolePlayer">The role player that will be inserted</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeErrorMoveableCollection.CopyTo(Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeError[],System.Int32)">
            <summary>
            When implemented by a class, copies the elements of the System.Collection.ICollections to an System.Array, starting at a particular System.Array index
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from System.Collections.ICollection.  The System.Array must have zero-based indexing</param>
            <param name="index">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeErrorMoveableCollection.Add(Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeError)">
            <summary>
            Adds an item to the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeError to add to the list</param>
            <returns>index where object was added</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeErrorMoveableCollection.Clear">
            <summary>
            Removes all items from the list
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeErrorMoveableCollection.Contains(Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeError)">
            <summary>
            Determines whether the list has a specific value
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeError to locate in the list</param>
            <returns>true if object is contained, false otherwise</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeErrorMoveableCollection.IndexOf(Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeError)">
            <summary>
            Determines the index of a specific item in the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeError to locate in the list</param>
            <returns>index of object</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeErrorMoveableCollection.Insert(System.Int32,Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeError)">
            <summary>
            Inserts an item to the list at the specified position
            </summary>
            <param name="index">The zero-based index at which the value should be inserted</param>
            <param name="value">The Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeError to insert into the list</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeErrorMoveableCollection.Remove(Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeError)">
            <summary>
            Removes the first occurrence of a specific object from the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeError to remove from the list</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeErrorMoveableCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the list item at the specified index
            </summary>
            <param name="index">The zero-based index of the item to remove</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeErrorMoveableCollection.Move(Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeError,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="rolePlayer">The role player to move</param>
            <param name="newPosition">The position to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeErrorMoveableCollection.Move(System.Int32,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="oldPosition">The position of the role player to move from</param>
            <param name="newPosition">The position of the role player to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeErrorMoveableCollection.ReplaceAt(System.Int32,Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeError)">
            <summary>
            Insert a roleplayer in the specified location
            </summary>
            <param name="position">The index of the roleplayer that needs to be replaced</param>
            <param name="rolePlayer">The role player that will be inserted</param>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeErrorMoveableCollection.Counterpart">
            <summary>
            Counterpart
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeErrorMoveableCollection.SourceRole">
            <summary>
            Source Role
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeErrorMoveableCollection.TargetRole">
            <summary>
            Target Role
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeErrorMoveableCollection.System#Collections#ICollection#Count">
            <summary>
            When implemented by a class, gets the number of elements contained in the System.Collections.ICollection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeErrorMoveableCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            When implemented by a class, gets a value indicating whether access to the System.Collections.ICollection is synchronized (thread-safe)
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeErrorMoveableCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            When implemented by a class, gets an object that can be used to synchronize access to the System.Collections.ICollection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeErrorMoveableCollection.System#Collections#IList#IsFixedSize">
            <summary>
            When implemented by a class, gets a value indicating whether the System.Collections.IList has a fixed size
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeErrorMoveableCollection.System#Collections#IList#IsReadOnly">
            <summary>
            When implemented by a class, gets a value indicating whether the System.Collections.IList is read-only
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeErrorMoveableCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Indexed accessor
            </summary>
            <param name="index">Index to access</param>
            <returns>object at that index</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeErrorMoveableCollection.Count">
            <summary>
            Gets the number of elements contained in the collection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeErrorMoveableCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the list is read-only
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeErrorMoveableCollection.Item(System.Int32)">
            <summary>
            Indexed accessor
            </summary>
            <param name="index">Index to access</param>
            <returns>Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeError at that index</returns>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeErrorElementFactoryCreator">
            <summary>
            CompatibleRolePlayerTypeError Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeErrorElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CompatibleRolePlayerTypeErrorElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ReadingOrder">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReadingOrder.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReadingOrder.ReadingTextMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReadingOrder.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReadingOrder.ReadingTextMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReadingOrder.readingOrderReadingTextFieldHandler">
            <summary>
            FieldHandler for ReadingOrder.ReadingText field
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrder.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrder.CreateReadingOrder(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrder.CreateAndInitializeReadingOrder(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrder.GetCustomSerializedChildElementInfo">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrder.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrder.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrder.MapChildElement(System.String,System.String,System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrder.MapAttribute(System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrder.AddReading(System.String)">
            <summary>
            Adds a reading to the fact.
            </summary>
            <param name="readingText">The text of the reading to add.</param>
            <returns>The reading that was added.</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrder.GetValueForCustomStoredAttribute(Microsoft.VisualStudio.Modeling.MetaAttributeInfo)">
            <summary>
            Currently only handles when the ReadingText value is accessed.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrder.SetValueForCustomStoredAttribute(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,System.Object)">
            <summary>
            Currently only handles when the ReadingText is set.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrder.InvalidatePrimaryReading">
            <summary>
            Invalidates the cached value of the primary reading.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrder.ValidateReadingOrdersRoleCollection(Northface.Tools.ORM.ObjectModel.FactType,Northface.Tools.ORM.ObjectModel.Role)">
            <summary>
            Common place for code to deal with roles that exist in a fact
            but do not exist in the ReadingOrder objects that it contains.
            This allows it to be used by both the rule and to be called
            during post load model fixup.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingOrder.ReadingText">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingOrder.ReadingCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingOrder.RoleCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingOrder.FactType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingOrder.SupportedCustomSerializedOperations">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingOrder.CustomSerializedElementInfo">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingOrder.CustomSerializedChildRoleComparer">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingOrder.PrimaryReading">
            <summary>
            An alternate means of setting and retrieving which reading is primary.
            </summary>
            <value>The primary Reading.</value>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ReadingOrder.ReadingOrderReadingTextFieldHandler">
            <summary>
            Implement the field handler for ReadingOrder.ReadingText
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrder.ReadingOrderReadingTextFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingOrder.ReadingOrderReadingTextFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the ReadingOrder.ReadingText field handler
            </summary>
            <value>ReadingOrderReadingTextFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingOrder.ReadingOrderReadingTextFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the ReadingOrder.ReadingText field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrder.ReadingOrderHasReadingRemoved.ElementRemoved(Microsoft.VisualStudio.Modeling.ElementRemovedEventArgs)">
            <summary>
            deals with the primary reading being removed by selecting the first
            reading in the list if there are any left.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ReadingOrder.ReadingOrderHasRoleRemoving">
            <summary>
            Handles the clean up of the readings that the role is involved in by replacing
            the place holder with the text {{deleted}}
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ReadingOrder.FactTypeHasRoleAddedRule">
            <summary>
            Rule to detect when a Role is added to the FactType so that it
            can also be added to the ReadingOrders and their Readings.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ReadingOrderMoveableCollection">
            <summary>
            Northface.Tools.ORM.ObjectModel.ReadingOrder Collection class, strongly-typed collection
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrderMoveableCollection.#ctor(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,System.Guid)">
            <summary>
            Constructor
            </summary>
            <param name="counterpart">Counterpart to create relationship with</param>
            <param name="sourceMetaRoleGuid">Source's meta role in this relationship</param>
            <param name="targetMetaRoleGuid">Target's meta role in this relationship</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrderMoveableCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrderMoveableCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            When implemented by a class, copies the elements of the System.Collection.ICollections to an System.Array, starting at a particular System.Array index
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from System.Collections.ICollection.  The System.Array must have zero-based indexing</param>
            <param name="index">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrderMoveableCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            When implemented by a class, adds an item to the System.Collections.IList
            </summary>
            <param name="value">The System.Object to add to the System.Collections.IList</param>
            <returns>index where object was added</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrderMoveableCollection.System#Collections#IList#Clear">
            <summary>
            When implemented by a class, removes all items from the System.Collections.IList
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrderMoveableCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            When implemented by a class, determines whether the System.Collections.IList has a specific value
            </summary>
            <param name="value">The System.Object to locate in the System.Collections.IList</param>
            <returns>true if object is contained, false otherwise</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrderMoveableCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            When implemented by a class, determines the index of a specific item in the System.Collections.IList
            </summary>
            <param name="value">The System.Object to locate in the System.Collections.IList</param>
            <returns>index of object</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrderMoveableCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            When implemented by a class, inserts an item to the System.Collections.IList at the specified position
            </summary>
            <param name="index">The zero-based index at which the value should be inserted</param>
            <param name="value">The System.Object to insert into the System.Collections.IList</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrderMoveableCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            When implemented by a class, removes the first occurrence of a specific object from the System.Collections.IList
            </summary>
            <param name="value">The System.Object to remove from the System.Collections.IList</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrderMoveableCollection.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
            When implemented by a class, removes the System.Collections.IList item at the specified index
            </summary>
            <param name="index">The zero-based index of the item to remove</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrderMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#Move(Microsoft.VisualStudio.Modeling.ModelElement,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="rolePlayer">The role player to move</param>
            <param name="newPosition">The position to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrderMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#Move(System.Int32,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="oldPosition">The position of the role player to move from</param>
            <param name="newPosition">The position of the role player to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrderMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#ReplaceAt(System.Int32,Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Insert a roleplayer in the specified location
            </summary>
            <param name="position">The index of the roleplayer that needs to be replaced</param>
            <param name="rolePlayer">The role player that will be inserted</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrderMoveableCollection.CopyTo(Northface.Tools.ORM.ObjectModel.ReadingOrder[],System.Int32)">
            <summary>
            When implemented by a class, copies the elements of the System.Collection.ICollections to an System.Array, starting at a particular System.Array index
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from System.Collections.ICollection.  The System.Array must have zero-based indexing</param>
            <param name="index">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrderMoveableCollection.Add(Northface.Tools.ORM.ObjectModel.ReadingOrder)">
            <summary>
            Adds an item to the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ReadingOrder to add to the list</param>
            <returns>index where object was added</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrderMoveableCollection.Clear">
            <summary>
            Removes all items from the list
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrderMoveableCollection.Contains(Northface.Tools.ORM.ObjectModel.ReadingOrder)">
            <summary>
            Determines whether the list has a specific value
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ReadingOrder to locate in the list</param>
            <returns>true if object is contained, false otherwise</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrderMoveableCollection.IndexOf(Northface.Tools.ORM.ObjectModel.ReadingOrder)">
            <summary>
            Determines the index of a specific item in the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ReadingOrder to locate in the list</param>
            <returns>index of object</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrderMoveableCollection.Insert(System.Int32,Northface.Tools.ORM.ObjectModel.ReadingOrder)">
            <summary>
            Inserts an item to the list at the specified position
            </summary>
            <param name="index">The zero-based index at which the value should be inserted</param>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ReadingOrder to insert into the list</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrderMoveableCollection.Remove(Northface.Tools.ORM.ObjectModel.ReadingOrder)">
            <summary>
            Removes the first occurrence of a specific object from the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ReadingOrder to remove from the list</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrderMoveableCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the list item at the specified index
            </summary>
            <param name="index">The zero-based index of the item to remove</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrderMoveableCollection.Move(Northface.Tools.ORM.ObjectModel.ReadingOrder,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="rolePlayer">The role player to move</param>
            <param name="newPosition">The position to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrderMoveableCollection.Move(System.Int32,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="oldPosition">The position of the role player to move from</param>
            <param name="newPosition">The position of the role player to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrderMoveableCollection.ReplaceAt(System.Int32,Northface.Tools.ORM.ObjectModel.ReadingOrder)">
            <summary>
            Insert a roleplayer in the specified location
            </summary>
            <param name="position">The index of the roleplayer that needs to be replaced</param>
            <param name="rolePlayer">The role player that will be inserted</param>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingOrderMoveableCollection.Counterpart">
            <summary>
            Counterpart
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingOrderMoveableCollection.SourceRole">
            <summary>
            Source Role
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingOrderMoveableCollection.TargetRole">
            <summary>
            Target Role
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingOrderMoveableCollection.System#Collections#ICollection#Count">
            <summary>
            When implemented by a class, gets the number of elements contained in the System.Collections.ICollection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingOrderMoveableCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            When implemented by a class, gets a value indicating whether access to the System.Collections.ICollection is synchronized (thread-safe)
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingOrderMoveableCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            When implemented by a class, gets an object that can be used to synchronize access to the System.Collections.ICollection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingOrderMoveableCollection.System#Collections#IList#IsFixedSize">
            <summary>
            When implemented by a class, gets a value indicating whether the System.Collections.IList has a fixed size
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingOrderMoveableCollection.System#Collections#IList#IsReadOnly">
            <summary>
            When implemented by a class, gets a value indicating whether the System.Collections.IList is read-only
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingOrderMoveableCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Indexed accessor
            </summary>
            <param name="index">Index to access</param>
            <returns>object at that index</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingOrderMoveableCollection.Count">
            <summary>
            Gets the number of elements contained in the collection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingOrderMoveableCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the list is read-only
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingOrderMoveableCollection.Item(System.Int32)">
            <summary>
            Indexed accessor
            </summary>
            <param name="index">Index to access</param>
            <returns>Northface.Tools.ORM.ObjectModel.ReadingOrder at that index</returns>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ReadingOrderElementFactoryCreator">
            <summary>
            ReadingOrder Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrderElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrderElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ReferenceModeKind">
            <summary>
            
            </summary>
             <summary>
            </summary>
            <summary>
            Reference Mode Kind's ToString implementation
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReferenceModeKind.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReferenceModeKind.FormatStringMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReferenceModeKind.ReferenceModeTypeMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReferenceModeKind.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReferenceModeKind.FormatStringMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReferenceModeKind.referenceModeKindFormatStringFieldHandler">
            <summary>
            FieldHandler for ReferenceModeKind.FormatString field
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReferenceModeKind.ReferenceModeTypeMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReferenceModeKind.referenceModeKindReferenceModeTypeFieldHandler">
            <summary>
            FieldHandler for ReferenceModeKind.ReferenceModeType field
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKind.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKind.CreateReferenceModeKind(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKind.CreateAndInitializeReferenceModeKind(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKind.GetCustomSerializedChildElementInfo">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKind.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKind.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKind.MapChildElement(System.String,System.String,System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKind.MapAttribute(System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKind.ToString">
            <summary>
            Overriding ToString to return the Reference Mode Type name
            </summary>
            <returns>Reference Mode Type name as the string</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceModeKind.FormatString">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceModeKind.ReferenceModeType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceModeKind.Model">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceModeKind.ReferenceModeCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceModeKind.SupportedCustomSerializedOperations">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceModeKind.CustomSerializedElementInfo">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceModeKind.CustomSerializedChildRoleComparer">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ReferenceModeKind.ReferenceModeKindFormatStringFieldHandler">
            <summary>
            Implement the field handler for ReferenceModeKind.FormatString
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKind.ReferenceModeKindFormatStringFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKind.ReferenceModeKindFormatStringFieldHandler.GetValue(Northface.Tools.ORM.ObjectModel.ReferenceModeKind)">
            <summary>
            Gets the value of the attribute as it exists in the element
            </summary>
            <param name="element">the ReferenceModeKind</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKind.ReferenceModeKindFormatStringFieldHandler.SetValue(Northface.Tools.ORM.ObjectModel.ReferenceModeKind,System.String,Microsoft.VisualStudio.Modeling.CommandFactory,System.Boolean,System.String@)">
            <summary>
            Sets the value into the element
            </summary>
            <param name="element">the element</param>
            <param name="value">new value</param>
            <param name="commandFactory">the command factory for this change</param>
            <param name="allowDuplicates">allow duplicate value to continue to fire rules and events</param>
            <param name="oldValue">the old value before the change</param>
            <returns>true if the value actually changed</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceModeKind.ReferenceModeKindFormatStringFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the ReferenceModeKind.FormatString field handler
            </summary>
            <value>ReferenceModeKindFormatStringFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceModeKind.ReferenceModeKindFormatStringFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the ReferenceModeKind.FormatString field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ReferenceModeKind.ReferenceModeKindReferenceModeTypeFieldHandler">
            <summary>
            Implement the field handler for ReferenceModeKind.ReferenceModeType
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKind.ReferenceModeKindReferenceModeTypeFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKind.ReferenceModeKindReferenceModeTypeFieldHandler.GetValue(Northface.Tools.ORM.ObjectModel.ReferenceModeKind)">
            <summary>
            Gets the value of the attribute as it exists in the element
            </summary>
            <param name="element">the ReferenceModeKind</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKind.ReferenceModeKindReferenceModeTypeFieldHandler.SetValue(Northface.Tools.ORM.ObjectModel.ReferenceModeKind,Northface.Tools.ORM.ObjectModel.ReferenceModeType,Microsoft.VisualStudio.Modeling.CommandFactory,System.Boolean,Northface.Tools.ORM.ObjectModel.ReferenceModeType@)">
            <summary>
            Sets the value into the element
            </summary>
            <param name="element">the element</param>
            <param name="value">new value</param>
            <param name="commandFactory">the command factory for this change</param>
            <param name="allowDuplicates">allow duplicate value to continue to fire rules and events</param>
            <param name="oldValue">the old value before the change</param>
            <returns>true if the value actually changed</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceModeKind.ReferenceModeKindReferenceModeTypeFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the ReferenceModeKind.ReferenceModeType field handler
            </summary>
            <value>ReferenceModeKindReferenceModeTypeFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceModeKind.ReferenceModeKindReferenceModeTypeFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the ReferenceModeKind.ReferenceModeType field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ReferenceModeKind.ReferenceModeKindChangeRule">
            <summary>
            Rule to forward the KindDisplay property to the generated
            Kind property
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKind.ReferenceModeKindChangeRule.ElementAttributeChanged(Microsoft.VisualStudio.Modeling.ElementAttributeChangedEventArgs)">
            <summary>
            Update value types when format string changes
            </summary>
            <param name="e">ElementAttributeChangedEventArgs</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKind.ReferenceModeKindChangeRule.EnsureUnique(Northface.Tools.ORM.ObjectModel.ReferenceModeKind,Northface.Tools.ORM.ObjectModel.ORMModel)">
            <summary>
            Throws an exception if the format strings are not unique
            </summary>
            <param name="newKind"></param>
            <param name="model"></param>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ReferenceModeKindMoveableCollection">
            <summary>
            Northface.Tools.ORM.ObjectModel.ReferenceModeKind Collection class, strongly-typed collection
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKindMoveableCollection.#ctor(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,System.Guid)">
            <summary>
            Constructor
            </summary>
            <param name="counterpart">Counterpart to create relationship with</param>
            <param name="sourceMetaRoleGuid">Source's meta role in this relationship</param>
            <param name="targetMetaRoleGuid">Target's meta role in this relationship</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKindMoveableCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKindMoveableCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            When implemented by a class, copies the elements of the System.Collection.ICollections to an System.Array, starting at a particular System.Array index
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from System.Collections.ICollection.  The System.Array must have zero-based indexing</param>
            <param name="index">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKindMoveableCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            When implemented by a class, adds an item to the System.Collections.IList
            </summary>
            <param name="value">The System.Object to add to the System.Collections.IList</param>
            <returns>index where object was added</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKindMoveableCollection.System#Collections#IList#Clear">
            <summary>
            When implemented by a class, removes all items from the System.Collections.IList
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKindMoveableCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            When implemented by a class, determines whether the System.Collections.IList has a specific value
            </summary>
            <param name="value">The System.Object to locate in the System.Collections.IList</param>
            <returns>true if object is contained, false otherwise</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKindMoveableCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            When implemented by a class, determines the index of a specific item in the System.Collections.IList
            </summary>
            <param name="value">The System.Object to locate in the System.Collections.IList</param>
            <returns>index of object</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKindMoveableCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            When implemented by a class, inserts an item to the System.Collections.IList at the specified position
            </summary>
            <param name="index">The zero-based index at which the value should be inserted</param>
            <param name="value">The System.Object to insert into the System.Collections.IList</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKindMoveableCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            When implemented by a class, removes the first occurrence of a specific object from the System.Collections.IList
            </summary>
            <param name="value">The System.Object to remove from the System.Collections.IList</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKindMoveableCollection.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
            When implemented by a class, removes the System.Collections.IList item at the specified index
            </summary>
            <param name="index">The zero-based index of the item to remove</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKindMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#Move(Microsoft.VisualStudio.Modeling.ModelElement,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="rolePlayer">The role player to move</param>
            <param name="newPosition">The position to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKindMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#Move(System.Int32,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="oldPosition">The position of the role player to move from</param>
            <param name="newPosition">The position of the role player to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKindMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#ReplaceAt(System.Int32,Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Insert a roleplayer in the specified location
            </summary>
            <param name="position">The index of the roleplayer that needs to be replaced</param>
            <param name="rolePlayer">The role player that will be inserted</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKindMoveableCollection.CopyTo(Northface.Tools.ORM.ObjectModel.ReferenceModeKind[],System.Int32)">
            <summary>
            When implemented by a class, copies the elements of the System.Collection.ICollections to an System.Array, starting at a particular System.Array index
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from System.Collections.ICollection.  The System.Array must have zero-based indexing</param>
            <param name="index">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKindMoveableCollection.Add(Northface.Tools.ORM.ObjectModel.ReferenceModeKind)">
            <summary>
            Adds an item to the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ReferenceModeKind to add to the list</param>
            <returns>index where object was added</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKindMoveableCollection.Clear">
            <summary>
            Removes all items from the list
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKindMoveableCollection.Contains(Northface.Tools.ORM.ObjectModel.ReferenceModeKind)">
            <summary>
            Determines whether the list has a specific value
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ReferenceModeKind to locate in the list</param>
            <returns>true if object is contained, false otherwise</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKindMoveableCollection.IndexOf(Northface.Tools.ORM.ObjectModel.ReferenceModeKind)">
            <summary>
            Determines the index of a specific item in the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ReferenceModeKind to locate in the list</param>
            <returns>index of object</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKindMoveableCollection.Insert(System.Int32,Northface.Tools.ORM.ObjectModel.ReferenceModeKind)">
            <summary>
            Inserts an item to the list at the specified position
            </summary>
            <param name="index">The zero-based index at which the value should be inserted</param>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ReferenceModeKind to insert into the list</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKindMoveableCollection.Remove(Northface.Tools.ORM.ObjectModel.ReferenceModeKind)">
            <summary>
            Removes the first occurrence of a specific object from the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ReferenceModeKind to remove from the list</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKindMoveableCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the list item at the specified index
            </summary>
            <param name="index">The zero-based index of the item to remove</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKindMoveableCollection.Move(Northface.Tools.ORM.ObjectModel.ReferenceModeKind,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="rolePlayer">The role player to move</param>
            <param name="newPosition">The position to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKindMoveableCollection.Move(System.Int32,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="oldPosition">The position of the role player to move from</param>
            <param name="newPosition">The position of the role player to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKindMoveableCollection.ReplaceAt(System.Int32,Northface.Tools.ORM.ObjectModel.ReferenceModeKind)">
            <summary>
            Insert a roleplayer in the specified location
            </summary>
            <param name="position">The index of the roleplayer that needs to be replaced</param>
            <param name="rolePlayer">The role player that will be inserted</param>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceModeKindMoveableCollection.Counterpart">
            <summary>
            Counterpart
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceModeKindMoveableCollection.SourceRole">
            <summary>
            Source Role
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceModeKindMoveableCollection.TargetRole">
            <summary>
            Target Role
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceModeKindMoveableCollection.System#Collections#ICollection#Count">
            <summary>
            When implemented by a class, gets the number of elements contained in the System.Collections.ICollection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceModeKindMoveableCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            When implemented by a class, gets a value indicating whether access to the System.Collections.ICollection is synchronized (thread-safe)
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceModeKindMoveableCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            When implemented by a class, gets an object that can be used to synchronize access to the System.Collections.ICollection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceModeKindMoveableCollection.System#Collections#IList#IsFixedSize">
            <summary>
            When implemented by a class, gets a value indicating whether the System.Collections.IList has a fixed size
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceModeKindMoveableCollection.System#Collections#IList#IsReadOnly">
            <summary>
            When implemented by a class, gets a value indicating whether the System.Collections.IList is read-only
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceModeKindMoveableCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Indexed accessor
            </summary>
            <param name="index">Index to access</param>
            <returns>object at that index</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceModeKindMoveableCollection.Count">
            <summary>
            Gets the number of elements contained in the collection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceModeKindMoveableCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the list is read-only
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceModeKindMoveableCollection.Item(System.Int32)">
            <summary>
            Indexed accessor
            </summary>
            <param name="index">Index to access</param>
            <returns>Northface.Tools.ORM.ObjectModel.ReferenceModeKind at that index</returns>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ReferenceModeKindElementFactoryCreator">
            <summary>
            ReferenceModeKind Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKindElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKindElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ReferenceMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReferenceMode.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReferenceMode.KindDisplayMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReferenceMode.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReferenceMode.KindDisplayMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReferenceMode.referenceModeKindDisplayFieldHandler">
            <summary>
            FieldHandler for ReferenceMode.KindDisplay field
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceMode.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceMode.GenerateValueTypeName(System.String)">
            <summary>
            Given an entity name, generate the value type
            name that would correspond to the entity name for
            this reference type.
            </summary>
            <param name="entityName">The name of the associated entity type</param>
            <returns>Formatted string</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceMode.GenerateValueTypeName(System.String,System.String)">
            <summary>
            Given an entity name, generate the value type
            name that would correspond to the entity name for
            this reference type.
            </summary>
            <param name="entityName">The name of the associated entity type</param>
            <param name="formatString"></param>
            <returns>Formatted string</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceMode.GenerateValueTypeName(System.String,System.String,System.String)">
            <summary>
            Given an entity name, generate the value type
            name that would correspond to the entity name for
            this reference type.
            </summary>
            <param name="entityName">The name of the associated entity type</param>
            <param name="formatString">The format string to use to generate the name.</param>
            <param name="referenceModeName">The reference Mode Name to use to generate the name.</param>
            <returns>Formatted string</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceMode.ToString">
            <summary>
            Overridden ToString for Reference Modes
            </summary>
            <returns>Returns Reference Mode name</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceMode.CreatePropertyDescriptor(Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.ModelElement,System.Attribute[])">
            <summary>
            Return a custom property descriptor for the Kind Display property
            </summary>
            <param name="modelElement"></param>
            <param name="metaAttributeInfo"></param>
            <param name="requestor"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceMode.FindReferenceModeFromEntityNameAndValueName(System.String,System.String,Northface.Tools.ORM.ObjectModel.ORMModel)">
            <summary>
            Given the Entity and the the value type created the ref mode name
            </summary>
            <param name="valueTypeName">The name of the valuetype attached
            to the preferred identifier role.</param>
            <param name="entityTypeName">The name of the entity type.</param>
            <param name="model">The model that owns the reference modes</param>
            <returns>A ReferenceMode instance, or null</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceMode.FindReferenceModeFromEntityNameAndValueName(System.String,System.String,System.String,Northface.Tools.ORM.ObjectModel.ORMModel)">
            <summary>
            Given the Entity and the the value type created the ref mode name
            </summary>
            <param name="valueTypeName">The name of the valuetype attached
            to the preferred identifier role.</param>
            <param name="entityTypeName">The name of the entity type.</param>
            <param name="formatString">Use this format string when finding the name.</param>
            <param name="model">The model that owns the reference modes</param>
            <returns>A ReferenceMode instance, or null</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceMode.FindReferenceModeFromEntityNameAndValueName(System.String,System.String,System.String,System.String,System.String,Northface.Tools.ORM.ObjectModel.ORMModel)">
            <summary>
            Given the Entity and the the value type created the ref mode name
            </summary>
            <param name="valueTypeName">The name of the valuetype attached
            to the preferred identifier role.</param>
            <param name="entityTypeName">The name of the entity type.</param>
            <param name="formatString">Use this format string when finding the name.</param>
            <param name="referenceModeName">Use this name when finding the name.</param>
            <param name="oldReferenceModeName">Use this name when the name of the object
            has changed, but you need to locate other elements with the old name</param>
            <param name="model">The model that owns the reference modes</param>
            <returns>A ReferenceMode instance, or null</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceMode.FindReferenceModesByFormatString(System.String,Northface.Tools.ORM.ObjectModel.ORMModel)">
            <summary>
            Looks at all Reference modes in the model and returns the one with the gien format string
            </summary>
            <param name="formatString"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceMode.FindObjectUsingReferenceModes(Northface.Tools.ORM.ObjectModel.ReferenceMode,System.String,Northface.Tools.ORM.ObjectModel.ORMModel)">
            <summary>
            Finds all enity types using a given reference Mode
            </summary>
            <param name="mode"></param>
            <param name="formatString"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceMode.FindObjectUsingReferenceModes(Northface.Tools.ORM.ObjectModel.ReferenceMode,System.String,System.String,Northface.Tools.ORM.ObjectModel.ORMModel)">
            <summary>
            Finds all enity types using a given reference Mode
            </summary>
            <param name="mode"></param>
            <param name="formatString"></param>
            <param name="oldReferenceModeName"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceMode.FindReferenceModesByName(System.String,Northface.Tools.ORM.ObjectModel.ORMModel)">
            <summary>
            Given the Entity and the ReferenceMode name return the ValueTypeCollection
            </summary>
            <param name="referenceModeName">The name of the reference mode(s) to locate</param>
            <param name="model">The containing model</param>
            <returns>Always returns a collection, does not return null</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceMode.SetValueForCustomStoredAttribute(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,System.Object)">
            <summary>
            Standard override. All custom storage properties are derived, not
            stored. Actual changes are handled in ObjectTypeChangeRule.
            </summary>
            <param name="attribute">MetaAttributeInfo</param>
            <param name="newValue">object</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceMode.GetValueForCustomStoredAttribute(Microsoft.VisualStudio.Modeling.MetaAttributeInfo)">
            <summary>
            Standard override. Retrieve values for calculated properties.
            </summary>
            <param name="attribute">MetaAttributeInfo</param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceMode.GetOldValueForCustomStoredAttribute(Microsoft.VisualStudio.Modeling.MetaAttributeInfo)">
            <summary>
            Standard override. Defer to GetValueForCustomStoredAttribute.
            </summary>
            <param name="attribute">MetaAttributeInfo</param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceMode.CompareTo(Northface.Tools.ORM.ObjectModel.ReferenceMode)">
            <summary>
            Defines how to compare to ReferenceMode.  Used in sorting reference modes by name.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceMode.Equals(Northface.Tools.ORM.ObjectModel.ReferenceMode)">
            <summary>
            Reteurns true if the two elements are the same element
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceMode.EnsureUnique(Northface.Tools.ORM.ObjectModel.ReferenceMode,Northface.Tools.ORM.ObjectModel.ORMModel)">
            <summary>
            Throws an exception if the format strings are not unique
            </summary>
            <param name="newMode"></param>
            <param name="model"></param>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceMode.KindDisplay">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceMode.Model">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceMode.FormatString">
            <summary>
            The FormatString used for reference modes. All
            format strings must be unique across the model.
            FormatString should use the replacement field {0}
            for the entity name and {1} for refmode name
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceMode.Kind">
            <summary>
            Property to change the reference mode kind. Modification of
            standard code spit to generate a role player change instead of
            a delete/add when the property is changed.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceMode.FixupListener">
            <summary>
            Return a deserialization fixup listener. The listener
            adds the implicit InternalFactConstraint elements.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ReferenceMode.ReferenceModeKindDisplayFieldHandler">
            <summary>
            Implement the field handler for ReferenceMode.KindDisplay
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceMode.ReferenceModeKindDisplayFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceMode.ReferenceModeKindDisplayFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the ReferenceMode.KindDisplay field handler
            </summary>
            <value>ReferenceModeKindDisplayFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceMode.ReferenceModeKindDisplayFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the ReferenceMode.KindDisplay field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ReferenceMode.AddIntrinsicsFixupListener">
            <summary>
            Fixup listener implementation. Adds intrinsic reference
            mode implementations
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceMode.AddIntrinsicsFixupListener.#ctor(System.Int32)">
            <summary>
            AddIntrinsicsFixupListener constructor
            </summary>
            <param name="intrinsicPhase">A phase constant to watch</param>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ReferenceMode.ReferenceModeChangeRule">
            <summary>
            Rule to forward the KindDisplay property to the generated
            Kind property
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceMode.ReferenceModeChangeRule.ElementAttributeChanged(Microsoft.VisualStudio.Modeling.ElementAttributeChangedEventArgs)">
            <summary>
            Forward KindDisplay change value to Kind
            </summary>
            <param name="e">ElementAttributeChangedEventArgs</param>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ReferenceMode.ReferenceModeAddedRule">
            <summary>
            Make sure that every added reference mode has a valid
            reference mode kind. Default to general.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceMode.ReferenceModeAddedRule.ElementAdded(Microsoft.VisualStudio.Modeling.ElementAddedEventArgs)">
            <summary>
            Verify the Kind relationship is set on a newly
            added reference mode
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ReferenceModeMoveableCollection">
            <summary>
            Northface.Tools.ORM.ObjectModel.ReferenceMode Collection class, strongly-typed collection
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeMoveableCollection.#ctor(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,System.Guid)">
            <summary>
            Constructor
            </summary>
            <param name="counterpart">Counterpart to create relationship with</param>
            <param name="sourceMetaRoleGuid">Source's meta role in this relationship</param>
            <param name="targetMetaRoleGuid">Target's meta role in this relationship</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeMoveableCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeMoveableCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            When implemented by a class, copies the elements of the System.Collection.ICollections to an System.Array, starting at a particular System.Array index
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from System.Collections.ICollection.  The System.Array must have zero-based indexing</param>
            <param name="index">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeMoveableCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            When implemented by a class, adds an item to the System.Collections.IList
            </summary>
            <param name="value">The System.Object to add to the System.Collections.IList</param>
            <returns>index where object was added</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeMoveableCollection.System#Collections#IList#Clear">
            <summary>
            When implemented by a class, removes all items from the System.Collections.IList
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeMoveableCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            When implemented by a class, determines whether the System.Collections.IList has a specific value
            </summary>
            <param name="value">The System.Object to locate in the System.Collections.IList</param>
            <returns>true if object is contained, false otherwise</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeMoveableCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            When implemented by a class, determines the index of a specific item in the System.Collections.IList
            </summary>
            <param name="value">The System.Object to locate in the System.Collections.IList</param>
            <returns>index of object</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeMoveableCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            When implemented by a class, inserts an item to the System.Collections.IList at the specified position
            </summary>
            <param name="index">The zero-based index at which the value should be inserted</param>
            <param name="value">The System.Object to insert into the System.Collections.IList</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeMoveableCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            When implemented by a class, removes the first occurrence of a specific object from the System.Collections.IList
            </summary>
            <param name="value">The System.Object to remove from the System.Collections.IList</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeMoveableCollection.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
            When implemented by a class, removes the System.Collections.IList item at the specified index
            </summary>
            <param name="index">The zero-based index of the item to remove</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#Move(Microsoft.VisualStudio.Modeling.ModelElement,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="rolePlayer">The role player to move</param>
            <param name="newPosition">The position to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#Move(System.Int32,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="oldPosition">The position of the role player to move from</param>
            <param name="newPosition">The position of the role player to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#ReplaceAt(System.Int32,Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Insert a roleplayer in the specified location
            </summary>
            <param name="position">The index of the roleplayer that needs to be replaced</param>
            <param name="rolePlayer">The role player that will be inserted</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeMoveableCollection.CopyTo(Northface.Tools.ORM.ObjectModel.ReferenceMode[],System.Int32)">
            <summary>
            When implemented by a class, copies the elements of the System.Collection.ICollections to an System.Array, starting at a particular System.Array index
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from System.Collections.ICollection.  The System.Array must have zero-based indexing</param>
            <param name="index">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeMoveableCollection.Add(Northface.Tools.ORM.ObjectModel.ReferenceMode)">
            <summary>
            Adds an item to the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ReferenceMode to add to the list</param>
            <returns>index where object was added</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeMoveableCollection.Clear">
            <summary>
            Removes all items from the list
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeMoveableCollection.Contains(Northface.Tools.ORM.ObjectModel.ReferenceMode)">
            <summary>
            Determines whether the list has a specific value
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ReferenceMode to locate in the list</param>
            <returns>true if object is contained, false otherwise</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeMoveableCollection.IndexOf(Northface.Tools.ORM.ObjectModel.ReferenceMode)">
            <summary>
            Determines the index of a specific item in the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ReferenceMode to locate in the list</param>
            <returns>index of object</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeMoveableCollection.Insert(System.Int32,Northface.Tools.ORM.ObjectModel.ReferenceMode)">
            <summary>
            Inserts an item to the list at the specified position
            </summary>
            <param name="index">The zero-based index at which the value should be inserted</param>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ReferenceMode to insert into the list</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeMoveableCollection.Remove(Northface.Tools.ORM.ObjectModel.ReferenceMode)">
            <summary>
            Removes the first occurrence of a specific object from the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ReferenceMode to remove from the list</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeMoveableCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the list item at the specified index
            </summary>
            <param name="index">The zero-based index of the item to remove</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeMoveableCollection.Move(Northface.Tools.ORM.ObjectModel.ReferenceMode,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="rolePlayer">The role player to move</param>
            <param name="newPosition">The position to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeMoveableCollection.Move(System.Int32,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="oldPosition">The position of the role player to move from</param>
            <param name="newPosition">The position of the role player to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeMoveableCollection.ReplaceAt(System.Int32,Northface.Tools.ORM.ObjectModel.ReferenceMode)">
            <summary>
            Insert a roleplayer in the specified location
            </summary>
            <param name="position">The index of the roleplayer that needs to be replaced</param>
            <param name="rolePlayer">The role player that will be inserted</param>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceModeMoveableCollection.Counterpart">
            <summary>
            Counterpart
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceModeMoveableCollection.SourceRole">
            <summary>
            Source Role
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceModeMoveableCollection.TargetRole">
            <summary>
            Target Role
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceModeMoveableCollection.System#Collections#ICollection#Count">
            <summary>
            When implemented by a class, gets the number of elements contained in the System.Collections.ICollection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceModeMoveableCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            When implemented by a class, gets a value indicating whether access to the System.Collections.ICollection is synchronized (thread-safe)
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceModeMoveableCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            When implemented by a class, gets an object that can be used to synchronize access to the System.Collections.ICollection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceModeMoveableCollection.System#Collections#IList#IsFixedSize">
            <summary>
            When implemented by a class, gets a value indicating whether the System.Collections.IList has a fixed size
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceModeMoveableCollection.System#Collections#IList#IsReadOnly">
            <summary>
            When implemented by a class, gets a value indicating whether the System.Collections.IList is read-only
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceModeMoveableCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Indexed accessor
            </summary>
            <param name="index">Index to access</param>
            <returns>object at that index</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceModeMoveableCollection.Count">
            <summary>
            Gets the number of elements contained in the collection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceModeMoveableCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the list is read-only
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceModeMoveableCollection.Item(System.Int32)">
            <summary>
            Indexed accessor
            </summary>
            <param name="index">Index to access</param>
            <returns>Northface.Tools.ORM.ObjectModel.ReferenceMode at that index</returns>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.IntrinsicReferenceMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.IntrinsicReferenceMode.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.IntrinsicReferenceMode.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.IntrinsicReferenceMode.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.IntrinsicReferenceMode.CreateIntrinsicReferenceMode(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.IntrinsicReferenceMode.CreateAndInitializeIntrinsicReferenceMode(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.IntrinsicReferenceMode.CompareTo(Northface.Tools.ORM.ObjectModel.IntrinsicReferenceMode)">
            <summary>
            Implements IComparable&lt;IntrinsicReferenceMode&gt;.CompareTo
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.IntrinsicReferenceMode.Equals(Northface.Tools.ORM.ObjectModel.IntrinsicReferenceMode)">
            <summary>
            Typed Equals method. Implements IComparable&lt;IntrinsicReferenceMode&gt;.Equals.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.IntrinsicReferenceModeElementFactoryCreator">
            <summary>
            IntrinsicReferenceMode Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.IntrinsicReferenceModeElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.IntrinsicReferenceModeElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.CustomReferenceMode">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.CustomReferenceMode.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.CustomReferenceMode.CustomFormatStringMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.CustomReferenceMode.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.CustomReferenceMode.CustomFormatStringMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.CustomReferenceMode.customReferenceModeCustomFormatStringFieldHandler">
            <summary>
            FieldHandler for CustomReferenceMode.CustomFormatString field
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CustomReferenceMode.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CustomReferenceMode.CreateCustomReferenceMode(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CustomReferenceMode.CreateAndInitializeCustomReferenceMode(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CustomReferenceMode.GetCustomSerializedChildElementInfo">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CustomReferenceMode.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CustomReferenceMode.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CustomReferenceMode.MapChildElement(System.String,System.String,System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CustomReferenceMode.MapAttribute(System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.CustomReferenceMode.CustomFormatString">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.CustomReferenceMode.SupportedCustomSerializedOperations">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.CustomReferenceMode.CustomSerializedElementInfo">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.CustomReferenceMode.CustomSerializedChildRoleComparer">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.CustomReferenceMode.FormatString">
            <summary>
            Allow an override of the virtual FormatString
            property by setting the CustomFormatString property.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.CustomReferenceMode.CustomReferenceModeCustomFormatStringFieldHandler">
            <summary>
            Implement the field handler for CustomReferenceMode.CustomFormatString
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CustomReferenceMode.CustomReferenceModeCustomFormatStringFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CustomReferenceMode.CustomReferenceModeCustomFormatStringFieldHandler.GetValue(Northface.Tools.ORM.ObjectModel.CustomReferenceMode)">
            <summary>
            Gets the value of the attribute as it exists in the element
            </summary>
            <param name="element">the CustomReferenceMode</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CustomReferenceMode.CustomReferenceModeCustomFormatStringFieldHandler.SetValue(Northface.Tools.ORM.ObjectModel.CustomReferenceMode,System.String,Microsoft.VisualStudio.Modeling.CommandFactory,System.Boolean,System.String@)">
            <summary>
            Sets the value into the element
            </summary>
            <param name="element">the element</param>
            <param name="value">new value</param>
            <param name="commandFactory">the command factory for this change</param>
            <param name="allowDuplicates">allow duplicate value to continue to fire rules and events</param>
            <param name="oldValue">the old value before the change</param>
            <returns>true if the value actually changed</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.CustomReferenceMode.CustomReferenceModeCustomFormatStringFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the CustomReferenceMode.CustomFormatString field handler
            </summary>
            <value>CustomReferenceModeCustomFormatStringFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.CustomReferenceMode.CustomReferenceModeCustomFormatStringFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the CustomReferenceMode.CustomFormatString field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.CustomReferenceMode.CustomReferenceModeChangeRule">
            <summary>
            Rule to forward the KindDisplay property to the generated
            Kind property
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CustomReferenceMode.CustomReferenceModeChangeRule.ElementAttributeChanged(Microsoft.VisualStudio.Modeling.ElementAttributeChangedEventArgs)">
            <summary>
            Update value types when format string changes
            </summary>
            <param name="e">ElementAttributeChangedEventArgs</param>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.CustomReferenceModeElementFactoryCreator">
            <summary>
            CustomReferenceMode Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CustomReferenceModeElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CustomReferenceModeElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ValueRangeMoveableCollection">
            <summary>
            Northface.Tools.ORM.ObjectModel.ValueRange Collection class, strongly-typed collection
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRangeMoveableCollection.#ctor(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,System.Guid)">
            <summary>
            Constructor
            </summary>
            <param name="counterpart">Counterpart to create relationship with</param>
            <param name="sourceMetaRoleGuid">Source's meta role in this relationship</param>
            <param name="targetMetaRoleGuid">Target's meta role in this relationship</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRangeMoveableCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRangeMoveableCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            When implemented by a class, copies the elements of the System.Collection.ICollections to an System.Array, starting at a particular System.Array index
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from System.Collections.ICollection.  The System.Array must have zero-based indexing</param>
            <param name="index">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRangeMoveableCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            When implemented by a class, adds an item to the System.Collections.IList
            </summary>
            <param name="value">The System.Object to add to the System.Collections.IList</param>
            <returns>index where object was added</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRangeMoveableCollection.System#Collections#IList#Clear">
            <summary>
            When implemented by a class, removes all items from the System.Collections.IList
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRangeMoveableCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            When implemented by a class, determines whether the System.Collections.IList has a specific value
            </summary>
            <param name="value">The System.Object to locate in the System.Collections.IList</param>
            <returns>true if object is contained, false otherwise</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRangeMoveableCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            When implemented by a class, determines the index of a specific item in the System.Collections.IList
            </summary>
            <param name="value">The System.Object to locate in the System.Collections.IList</param>
            <returns>index of object</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRangeMoveableCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            When implemented by a class, inserts an item to the System.Collections.IList at the specified position
            </summary>
            <param name="index">The zero-based index at which the value should be inserted</param>
            <param name="value">The System.Object to insert into the System.Collections.IList</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRangeMoveableCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            When implemented by a class, removes the first occurrence of a specific object from the System.Collections.IList
            </summary>
            <param name="value">The System.Object to remove from the System.Collections.IList</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRangeMoveableCollection.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
            When implemented by a class, removes the System.Collections.IList item at the specified index
            </summary>
            <param name="index">The zero-based index of the item to remove</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRangeMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#Move(Microsoft.VisualStudio.Modeling.ModelElement,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="rolePlayer">The role player to move</param>
            <param name="newPosition">The position to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRangeMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#Move(System.Int32,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="oldPosition">The position of the role player to move from</param>
            <param name="newPosition">The position of the role player to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRangeMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#ReplaceAt(System.Int32,Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Insert a roleplayer in the specified location
            </summary>
            <param name="position">The index of the roleplayer that needs to be replaced</param>
            <param name="rolePlayer">The role player that will be inserted</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRangeMoveableCollection.CopyTo(Northface.Tools.ORM.ObjectModel.ValueRange[],System.Int32)">
            <summary>
            When implemented by a class, copies the elements of the System.Collection.ICollections to an System.Array, starting at a particular System.Array index
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from System.Collections.ICollection.  The System.Array must have zero-based indexing</param>
            <param name="index">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRangeMoveableCollection.Add(Northface.Tools.ORM.ObjectModel.ValueRange)">
            <summary>
            Adds an item to the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ValueRange to add to the list</param>
            <returns>index where object was added</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRangeMoveableCollection.Clear">
            <summary>
            Removes all items from the list
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRangeMoveableCollection.Contains(Northface.Tools.ORM.ObjectModel.ValueRange)">
            <summary>
            Determines whether the list has a specific value
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ValueRange to locate in the list</param>
            <returns>true if object is contained, false otherwise</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRangeMoveableCollection.IndexOf(Northface.Tools.ORM.ObjectModel.ValueRange)">
            <summary>
            Determines the index of a specific item in the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ValueRange to locate in the list</param>
            <returns>index of object</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRangeMoveableCollection.Insert(System.Int32,Northface.Tools.ORM.ObjectModel.ValueRange)">
            <summary>
            Inserts an item to the list at the specified position
            </summary>
            <param name="index">The zero-based index at which the value should be inserted</param>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ValueRange to insert into the list</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRangeMoveableCollection.Remove(Northface.Tools.ORM.ObjectModel.ValueRange)">
            <summary>
            Removes the first occurrence of a specific object from the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ValueRange to remove from the list</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRangeMoveableCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the list item at the specified index
            </summary>
            <param name="index">The zero-based index of the item to remove</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRangeMoveableCollection.Move(Northface.Tools.ORM.ObjectModel.ValueRange,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="rolePlayer">The role player to move</param>
            <param name="newPosition">The position to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRangeMoveableCollection.Move(System.Int32,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="oldPosition">The position of the role player to move from</param>
            <param name="newPosition">The position of the role player to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRangeMoveableCollection.ReplaceAt(System.Int32,Northface.Tools.ORM.ObjectModel.ValueRange)">
            <summary>
            Insert a roleplayer in the specified location
            </summary>
            <param name="position">The index of the roleplayer that needs to be replaced</param>
            <param name="rolePlayer">The role player that will be inserted</param>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueRangeMoveableCollection.Counterpart">
            <summary>
            Counterpart
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueRangeMoveableCollection.SourceRole">
            <summary>
            Source Role
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueRangeMoveableCollection.TargetRole">
            <summary>
            Target Role
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueRangeMoveableCollection.System#Collections#ICollection#Count">
            <summary>
            When implemented by a class, gets the number of elements contained in the System.Collections.ICollection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueRangeMoveableCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            When implemented by a class, gets a value indicating whether access to the System.Collections.ICollection is synchronized (thread-safe)
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueRangeMoveableCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            When implemented by a class, gets an object that can be used to synchronize access to the System.Collections.ICollection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueRangeMoveableCollection.System#Collections#IList#IsFixedSize">
            <summary>
            When implemented by a class, gets a value indicating whether the System.Collections.IList has a fixed size
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueRangeMoveableCollection.System#Collections#IList#IsReadOnly">
            <summary>
            When implemented by a class, gets a value indicating whether the System.Collections.IList is read-only
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueRangeMoveableCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Indexed accessor
            </summary>
            <param name="index">Index to access</param>
            <returns>object at that index</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueRangeMoveableCollection.Count">
            <summary>
            Gets the number of elements contained in the collection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueRangeMoveableCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the list is read-only
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueRangeMoveableCollection.Item(System.Int32)">
            <summary>
            Indexed accessor
            </summary>
            <param name="index">Index to access</param>
            <returns>Northface.Tools.ORM.ObjectModel.ValueRange at that index</returns>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ValueRangeElementFactoryCreator">
            <summary>
            ValueRange Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRangeElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRangeElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ValueTypeValueRangeDefinitionElementFactoryCreator">
            <summary>
            ValueTypeValueRangeDefinition Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueTypeValueRangeDefinitionElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueTypeValueRangeDefinitionElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.RoleValueRangeDefinitionElementFactoryCreator">
            <summary>
            RoleValueRangeDefinition Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RoleValueRangeDefinitionElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RoleValueRangeDefinitionElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType.ScaleMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType.LengthMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType.DataTypeMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType.ValueTypeCollectionMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType.ScaleMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType.valueTypeHasDataTypeScaleFieldHandler">
            <summary>
            FieldHandler for ValueTypeHasDataType.Scale field
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType.LengthMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType.valueTypeHasDataTypeLengthFieldHandler">
            <summary>
            FieldHandler for ValueTypeHasDataType.Length field
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType.DataTypeMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType.ValueTypeCollectionMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType.CreateValueTypeHasDataType(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType.CreateAndInitializeValueTypeHasDataType(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType.GetCustomSerializedChildElementInfo">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType.MapChildElement(System.String,System.String,System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType.MapAttribute(System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType.Scale">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType.Length">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType.DataType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType.ValueTypeCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType.DataTypeNotSpecifiedError">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType.SupportedCustomSerializedOperations">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType.CustomSerializedElementInfo">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType.CustomSerializedChildRoleComparer">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType.ValueTypeHasDataTypeScaleFieldHandler">
            <summary>
            Implement the field handler for ValueTypeHasDataType.Scale
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType.ValueTypeHasDataTypeScaleFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType.ValueTypeHasDataTypeScaleFieldHandler.GetValue(Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType)">
            <summary>
            Gets the value of the attribute as it exists in the element
            </summary>
            <param name="element">the ValueTypeHasDataType</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType.ValueTypeHasDataTypeScaleFieldHandler.SetValue(Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType,System.Int32,Microsoft.VisualStudio.Modeling.CommandFactory,System.Boolean,System.Int32@)">
            <summary>
            Sets the value into the element
            </summary>
            <param name="element">the element</param>
            <param name="value">new value</param>
            <param name="commandFactory">the command factory for this change</param>
            <param name="allowDuplicates">allow duplicate value to continue to fire rules and events</param>
            <param name="oldValue">the old value before the change</param>
            <returns>true if the value actually changed</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType.ValueTypeHasDataTypeScaleFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the ValueTypeHasDataType.Scale field handler
            </summary>
            <value>ValueTypeHasDataTypeScaleFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType.ValueTypeHasDataTypeScaleFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the ValueTypeHasDataType.Scale field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType.ValueTypeHasDataTypeLengthFieldHandler">
            <summary>
            Implement the field handler for ValueTypeHasDataType.Length
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType.ValueTypeHasDataTypeLengthFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType.ValueTypeHasDataTypeLengthFieldHandler.GetValue(Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType)">
            <summary>
            Gets the value of the attribute as it exists in the element
            </summary>
            <param name="element">the ValueTypeHasDataType</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType.ValueTypeHasDataTypeLengthFieldHandler.SetValue(Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType,System.Int32,Microsoft.VisualStudio.Modeling.CommandFactory,System.Boolean,System.Int32@)">
            <summary>
            Sets the value into the element
            </summary>
            <param name="element">the element</param>
            <param name="value">new value</param>
            <param name="commandFactory">the command factory for this change</param>
            <param name="allowDuplicates">allow duplicate value to continue to fire rules and events</param>
            <param name="oldValue">the old value before the change</param>
            <returns>true if the value actually changed</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType.ValueTypeHasDataTypeLengthFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the ValueTypeHasDataType.Length field handler
            </summary>
            <value>ValueTypeHasDataTypeLengthFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataType.ValueTypeHasDataTypeLengthFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the ValueTypeHasDataType.Length field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataTypeElementFactoryCreator">
            <summary>
            ValueTypeHasDataType Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataTypeElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueTypeHasDataTypeElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.FactTypeDerivation">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeDerivation.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeDerivation.IsStoredMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeDerivation.AssociatedFactTypeMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeDerivation.DerivationRuleMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeDerivation.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeDerivation.IsStoredMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeDerivation.factTypeDerivationIsStoredFieldHandler">
            <summary>
            FieldHandler for FactTypeDerivation.IsStored field
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeDerivation.AssociatedFactTypeMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeDerivation.DerivationRuleMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeDerivation.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeDerivation.CreateFactTypeDerivation(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeDerivation.CreateAndInitializeFactTypeDerivation(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeDerivation.IsStored">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeDerivation.AssociatedFactType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeDerivation.DerivationRule">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.FactTypeDerivation.FactTypeDerivationIsStoredFieldHandler">
            <summary>
            Implement the field handler for FactTypeDerivation.IsStored
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeDerivation.FactTypeDerivationIsStoredFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeDerivation.FactTypeDerivationIsStoredFieldHandler.GetValue(Northface.Tools.ORM.ObjectModel.FactTypeDerivation)">
            <summary>
            Gets the value of the attribute as it exists in the element
            </summary>
            <param name="element">the FactTypeDerivation</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeDerivation.FactTypeDerivationIsStoredFieldHandler.SetValue(Northface.Tools.ORM.ObjectModel.FactTypeDerivation,System.Boolean,Microsoft.VisualStudio.Modeling.CommandFactory,System.Boolean,System.Boolean@)">
            <summary>
            Sets the value into the element
            </summary>
            <param name="element">the element</param>
            <param name="value">new value</param>
            <param name="commandFactory">the command factory for this change</param>
            <param name="allowDuplicates">allow duplicate value to continue to fire rules and events</param>
            <param name="oldValue">the old value before the change</param>
            <returns>true if the value actually changed</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeDerivation.FactTypeDerivationIsStoredFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the FactTypeDerivation.IsStored field handler
            </summary>
            <value>FactTypeDerivationIsStoredFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeDerivation.FactTypeDerivationIsStoredFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the FactTypeDerivation.IsStored field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.FactTypeDerivationElementFactoryCreator">
            <summary>
            FactTypeDerivation Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeDerivationElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeDerivationElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.NestingEntityTypeHasFactType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.NestingEntityTypeHasFactType.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.NestingEntityTypeHasFactType.NestedFactTypeMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.NestingEntityTypeHasFactType.NestingTypeMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.NestingEntityTypeHasFactType.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.NestingEntityTypeHasFactType.NestedFactTypeMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.NestingEntityTypeHasFactType.NestingTypeMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NestingEntityTypeHasFactType.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NestingEntityTypeHasFactType.CreateNestingEntityTypeHasFactType(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NestingEntityTypeHasFactType.CreateAndInitializeNestingEntityTypeHasFactType(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.NestingEntityTypeHasFactType.NestedFactType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.NestingEntityTypeHasFactType.NestingType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.NestingEntityTypeHasFactTypeElementFactoryCreator">
            <summary>
            NestingEntityTypeHasFactType Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NestingEntityTypeHasFactTypeElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.NestingEntityTypeHasFactTypeElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.FactTypeHasRole">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeHasRole.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeHasRole.FactTypeMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeHasRole.RoleCollectionMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeHasRole.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeHasRole.FactTypeMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeHasRole.RoleCollectionMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeHasRole.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeHasRole.CreateFactTypeHasRole(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeHasRole.CreateAndInitializeFactTypeHasRole(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeHasRole.FactType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeHasRole.RoleCollection">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.FactTypeHasRoleElementFactoryCreator">
            <summary>
            FactTypeHasRole Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeHasRoleElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeHasRoleElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ObjectTypePlaysRole">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectTypePlaysRole.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectTypePlaysRole.RolePlayerMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectTypePlaysRole.PlayedRoleCollectionMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectTypePlaysRole.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectTypePlaysRole.RolePlayerMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectTypePlaysRole.PlayedRoleCollectionMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypePlaysRole.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypePlaysRole.CreateObjectTypePlaysRole(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypePlaysRole.CreateAndInitializeObjectTypePlaysRole(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectTypePlaysRole.RolePlayer">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectTypePlaysRole.PlayedRoleCollection">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ObjectTypePlaysRoleElementFactoryCreator">
            <summary>
            ObjectTypePlaysRole Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypePlaysRoleElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypePlaysRoleElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ModelHasObjectType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasObjectType.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasObjectType.ModelMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasObjectType.ObjectTypeCollectionMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasObjectType.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasObjectType.ModelMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasObjectType.ObjectTypeCollectionMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelHasObjectType.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelHasObjectType.CreateModelHasObjectType(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelHasObjectType.CreateAndInitializeModelHasObjectType(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ModelHasObjectType.Model">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ModelHasObjectType.ObjectTypeCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ModelHasObjectType.ParentRolePlayer">
            <summary>
            Implements INamedElementDictionaryLink.ParentRolePlayer
            Returns Model.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ModelHasObjectType.ChildRolePlayer">
            <summary>
            Implements INamedElementDictionaryLink.ChildRolePlayer
            Returns ObjectTypeCollection.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ModelHasObjectTypeElementFactoryCreator">
            <summary>
            ModelHasObjectType Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelHasObjectTypeElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelHasObjectTypeElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ModelHasFactType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasFactType.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasFactType.ModelMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasFactType.FactTypeCollectionMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasFactType.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasFactType.ModelMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasFactType.FactTypeCollectionMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelHasFactType.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelHasFactType.CreateModelHasFactType(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelHasFactType.CreateAndInitializeModelHasFactType(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ModelHasFactType.Model">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ModelHasFactType.FactTypeCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ModelHasFactType.ParentRolePlayer">
            <summary>
            Implements INamedElementDictionaryLink.ParentRolePlayer
            Returns Model.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ModelHasFactType.ChildRolePlayer">
            <summary>
            Implements INamedElementDictionaryLink.ChildRolePlayer
            Returns ObjectTypeCollection.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ModelHasFactTypeElementFactoryCreator">
            <summary>
            ModelHasFactType Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelHasFactTypeElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelHasFactTypeElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ExternalFactConstraintMoveableCollection">
            <summary>
            Northface.Tools.ORM.ObjectModel.ExternalFactConstraint Collection class, strongly-typed collection
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalFactConstraintMoveableCollection.#ctor(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,System.Guid)">
            <summary>
            Constructor
            </summary>
            <param name="counterpart">Counterpart to create relationship with</param>
            <param name="sourceMetaRoleGuid">Source's meta role in this relationship</param>
            <param name="targetMetaRoleGuid">Target's meta role in this relationship</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalFactConstraintMoveableCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalFactConstraintMoveableCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            When implemented by a class, copies the elements of the System.Collection.ICollections to an System.Array, starting at a particular System.Array index
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from System.Collections.ICollection.  The System.Array must have zero-based indexing</param>
            <param name="index">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalFactConstraintMoveableCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            When implemented by a class, adds an item to the System.Collections.IList
            </summary>
            <param name="value">The System.Object to add to the System.Collections.IList</param>
            <returns>index where object was added</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalFactConstraintMoveableCollection.System#Collections#IList#Clear">
            <summary>
            When implemented by a class, removes all items from the System.Collections.IList
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalFactConstraintMoveableCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            When implemented by a class, determines whether the System.Collections.IList has a specific value
            </summary>
            <param name="value">The System.Object to locate in the System.Collections.IList</param>
            <returns>true if object is contained, false otherwise</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalFactConstraintMoveableCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            When implemented by a class, determines the index of a specific item in the System.Collections.IList
            </summary>
            <param name="value">The System.Object to locate in the System.Collections.IList</param>
            <returns>index of object</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalFactConstraintMoveableCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            When implemented by a class, inserts an item to the System.Collections.IList at the specified position
            </summary>
            <param name="index">The zero-based index at which the value should be inserted</param>
            <param name="value">The System.Object to insert into the System.Collections.IList</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalFactConstraintMoveableCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            When implemented by a class, removes the first occurrence of a specific object from the System.Collections.IList
            </summary>
            <param name="value">The System.Object to remove from the System.Collections.IList</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalFactConstraintMoveableCollection.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
            When implemented by a class, removes the System.Collections.IList item at the specified index
            </summary>
            <param name="index">The zero-based index of the item to remove</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalFactConstraintMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#Move(Microsoft.VisualStudio.Modeling.ModelElement,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="rolePlayer">The role player to move</param>
            <param name="newPosition">The position to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalFactConstraintMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#Move(System.Int32,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="oldPosition">The position of the role player to move from</param>
            <param name="newPosition">The position of the role player to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalFactConstraintMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#ReplaceAt(System.Int32,Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Insert a roleplayer in the specified location
            </summary>
            <param name="position">The index of the roleplayer that needs to be replaced</param>
            <param name="rolePlayer">The role player that will be inserted</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalFactConstraintMoveableCollection.CopyTo(Northface.Tools.ORM.ObjectModel.ExternalFactConstraint[],System.Int32)">
            <summary>
            When implemented by a class, copies the elements of the System.Collection.ICollections to an System.Array, starting at a particular System.Array index
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from System.Collections.ICollection.  The System.Array must have zero-based indexing</param>
            <param name="index">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalFactConstraintMoveableCollection.Add(Northface.Tools.ORM.ObjectModel.ExternalFactConstraint)">
            <summary>
            Adds an item to the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ExternalFactConstraint to add to the list</param>
            <returns>index where object was added</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalFactConstraintMoveableCollection.Clear">
            <summary>
            Removes all items from the list
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalFactConstraintMoveableCollection.Contains(Northface.Tools.ORM.ObjectModel.ExternalFactConstraint)">
            <summary>
            Determines whether the list has a specific value
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ExternalFactConstraint to locate in the list</param>
            <returns>true if object is contained, false otherwise</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalFactConstraintMoveableCollection.IndexOf(Northface.Tools.ORM.ObjectModel.ExternalFactConstraint)">
            <summary>
            Determines the index of a specific item in the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ExternalFactConstraint to locate in the list</param>
            <returns>index of object</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalFactConstraintMoveableCollection.Insert(System.Int32,Northface.Tools.ORM.ObjectModel.ExternalFactConstraint)">
            <summary>
            Inserts an item to the list at the specified position
            </summary>
            <param name="index">The zero-based index at which the value should be inserted</param>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ExternalFactConstraint to insert into the list</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalFactConstraintMoveableCollection.Remove(Northface.Tools.ORM.ObjectModel.ExternalFactConstraint)">
            <summary>
            Removes the first occurrence of a specific object from the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ExternalFactConstraint to remove from the list</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalFactConstraintMoveableCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the list item at the specified index
            </summary>
            <param name="index">The zero-based index of the item to remove</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalFactConstraintMoveableCollection.Move(Northface.Tools.ORM.ObjectModel.ExternalFactConstraint,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="rolePlayer">The role player to move</param>
            <param name="newPosition">The position to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalFactConstraintMoveableCollection.Move(System.Int32,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="oldPosition">The position of the role player to move from</param>
            <param name="newPosition">The position of the role player to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalFactConstraintMoveableCollection.ReplaceAt(System.Int32,Northface.Tools.ORM.ObjectModel.ExternalFactConstraint)">
            <summary>
            Insert a roleplayer in the specified location
            </summary>
            <param name="position">The index of the roleplayer that needs to be replaced</param>
            <param name="rolePlayer">The role player that will be inserted</param>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ExternalFactConstraintMoveableCollection.Counterpart">
            <summary>
            Counterpart
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ExternalFactConstraintMoveableCollection.SourceRole">
            <summary>
            Source Role
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ExternalFactConstraintMoveableCollection.TargetRole">
            <summary>
            Target Role
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ExternalFactConstraintMoveableCollection.System#Collections#ICollection#Count">
            <summary>
            When implemented by a class, gets the number of elements contained in the System.Collections.ICollection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ExternalFactConstraintMoveableCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            When implemented by a class, gets a value indicating whether access to the System.Collections.ICollection is synchronized (thread-safe)
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ExternalFactConstraintMoveableCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            When implemented by a class, gets an object that can be used to synchronize access to the System.Collections.ICollection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ExternalFactConstraintMoveableCollection.System#Collections#IList#IsFixedSize">
            <summary>
            When implemented by a class, gets a value indicating whether the System.Collections.IList has a fixed size
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ExternalFactConstraintMoveableCollection.System#Collections#IList#IsReadOnly">
            <summary>
            When implemented by a class, gets a value indicating whether the System.Collections.IList is read-only
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ExternalFactConstraintMoveableCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Indexed accessor
            </summary>
            <param name="index">Index to access</param>
            <returns>object at that index</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ExternalFactConstraintMoveableCollection.Count">
            <summary>
            Gets the number of elements contained in the collection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ExternalFactConstraintMoveableCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the list is read-only
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ExternalFactConstraintMoveableCollection.Item(System.Int32)">
            <summary>
            Indexed accessor
            </summary>
            <param name="index">Index to access</param>
            <returns>Northface.Tools.ORM.ObjectModel.ExternalFactConstraint at that index</returns>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.MultiColumnExternalFactConstraintElementFactoryCreator">
            <summary>
            MultiColumnExternalFactConstraint Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalFactConstraintElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalFactConstraintElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.SingleColumnExternalFactConstraintElementFactoryCreator">
            <summary>
            SingleColumnExternalFactConstraint Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalFactConstraintElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalFactConstraintElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ExternalRoleConstraint">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ExternalRoleConstraint.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ExternalRoleConstraint.FactConstraintCollectionMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ExternalRoleConstraint.ConstrainedRoleCollectionMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ExternalRoleConstraint.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ExternalRoleConstraint.FactConstraintCollectionMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ExternalRoleConstraint.ConstrainedRoleCollectionMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalRoleConstraint.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalRoleConstraint.CreateExternalRoleConstraint(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalRoleConstraint.CreateAndInitializeExternalRoleConstraint(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ExternalRoleConstraint.FactConstraintCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ExternalRoleConstraint.ConstrainedRoleCollection">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ExternalRoleConstraintElementFactoryCreator">
            <summary>
            ExternalRoleConstraint Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalRoleConstraintElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalRoleConstraintElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasRoleSequence">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasRoleSequence.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasRoleSequence.RoleSequenceCollectionMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasRoleSequence.ExternalConstraintMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasRoleSequence.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasRoleSequence.RoleSequenceCollectionMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasRoleSequence.ExternalConstraintMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasRoleSequence.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasRoleSequence.CreateMultiColumnExternalConstraintHasRoleSequence(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasRoleSequence.CreateAndInitializeMultiColumnExternalConstraintHasRoleSequence(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasRoleSequence.RoleSequenceCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasRoleSequence.ExternalConstraint">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasRoleSequenceElementFactoryCreator">
            <summary>
            MultiColumnExternalConstraintHasRoleSequence Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasRoleSequenceElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasRoleSequenceElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRole">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRole.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRole.ConstraintRoleSequenceCollectionMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRole.RoleCollectionMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRole.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRole.ConstraintRoleSequenceCollectionMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRole.RoleCollectionMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRole.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRole.CreateConstraintRoleSequenceHasRole(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRole.CreateAndInitializeConstraintRoleSequenceHasRole(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRole.ConstraintRoleSequenceCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRole.RoleCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRole.FactConstraintCollection">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRoleMoveableCollection">
            <summary>
            Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRole Collection class, strongly-typed collection
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRoleMoveableCollection.#ctor(Microsoft.VisualStudio.Modeling.ModelElement,System.Guid,System.Guid)">
            <summary>
            Constructor
            </summary>
            <param name="counterpart">Counterpart to create relationship with</param>
            <param name="sourceMetaRoleGuid">Source's meta role in this relationship</param>
            <param name="targetMetaRoleGuid">Target's meta role in this relationship</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRoleMoveableCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRoleMoveableCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            When implemented by a class, copies the elements of the System.Collection.ICollections to an System.Array, starting at a particular System.Array index
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from System.Collections.ICollection.  The System.Array must have zero-based indexing</param>
            <param name="index">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRoleMoveableCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            When implemented by a class, adds an item to the System.Collections.IList
            </summary>
            <param name="value">The System.Object to add to the System.Collections.IList</param>
            <returns>index where object was added</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRoleMoveableCollection.System#Collections#IList#Clear">
            <summary>
            When implemented by a class, removes all items from the System.Collections.IList
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRoleMoveableCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            When implemented by a class, determines whether the System.Collections.IList has a specific value
            </summary>
            <param name="value">The System.Object to locate in the System.Collections.IList</param>
            <returns>true if object is contained, false otherwise</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRoleMoveableCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            When implemented by a class, determines the index of a specific item in the System.Collections.IList
            </summary>
            <param name="value">The System.Object to locate in the System.Collections.IList</param>
            <returns>index of object</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRoleMoveableCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            When implemented by a class, inserts an item to the System.Collections.IList at the specified position
            </summary>
            <param name="index">The zero-based index at which the value should be inserted</param>
            <param name="value">The System.Object to insert into the System.Collections.IList</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRoleMoveableCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            When implemented by a class, removes the first occurrence of a specific object from the System.Collections.IList
            </summary>
            <param name="value">The System.Object to remove from the System.Collections.IList</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRoleMoveableCollection.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
            When implemented by a class, removes the System.Collections.IList item at the specified index
            </summary>
            <param name="index">The zero-based index of the item to remove</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRoleMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#Move(Microsoft.VisualStudio.Modeling.ModelElement,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="rolePlayer">The role player to move</param>
            <param name="newPosition">The position to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRoleMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#Move(System.Int32,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="oldPosition">The position of the role player to move from</param>
            <param name="newPosition">The position of the role player to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRoleMoveableCollection.Microsoft#VisualStudio#Modeling#IMoveableCollection#ReplaceAt(System.Int32,Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Insert a roleplayer in the specified location
            </summary>
            <param name="position">The index of the roleplayer that needs to be replaced</param>
            <param name="rolePlayer">The role player that will be inserted</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRoleMoveableCollection.CopyTo(Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRole[],System.Int32)">
            <summary>
            When implemented by a class, copies the elements of the System.Collection.ICollections to an System.Array, starting at a particular System.Array index
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from System.Collections.ICollection.  The System.Array must have zero-based indexing</param>
            <param name="index">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRoleMoveableCollection.Add(Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRole)">
            <summary>
            Adds an item to the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRole to add to the list</param>
            <returns>index where object was added</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRoleMoveableCollection.Clear">
            <summary>
            Removes all items from the list
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRoleMoveableCollection.Contains(Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRole)">
            <summary>
            Determines whether the list has a specific value
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRole to locate in the list</param>
            <returns>true if object is contained, false otherwise</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRoleMoveableCollection.IndexOf(Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRole)">
            <summary>
            Determines the index of a specific item in the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRole to locate in the list</param>
            <returns>index of object</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRoleMoveableCollection.Insert(System.Int32,Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRole)">
            <summary>
            Inserts an item to the list at the specified position
            </summary>
            <param name="index">The zero-based index at which the value should be inserted</param>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRole to insert into the list</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRoleMoveableCollection.Remove(Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRole)">
            <summary>
            Removes the first occurrence of a specific object from the list
            </summary>
            <param name="value">The Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRole to remove from the list</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRoleMoveableCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the list item at the specified index
            </summary>
            <param name="index">The zero-based index of the item to remove</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRoleMoveableCollection.Move(Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRole,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="rolePlayer">The role player to move</param>
            <param name="newPosition">The position to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRoleMoveableCollection.Move(System.Int32,System.Int32)">
            <summary>
            Move the roleplayer to the new position in the collection
            </summary>
            <param name="oldPosition">The position of the role player to move from</param>
            <param name="newPosition">The position of the role player to move to</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRoleMoveableCollection.ReplaceAt(System.Int32,Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRole)">
            <summary>
            Insert a roleplayer in the specified location
            </summary>
            <param name="position">The index of the roleplayer that needs to be replaced</param>
            <param name="rolePlayer">The role player that will be inserted</param>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRoleMoveableCollection.Counterpart">
            <summary>
            Counterpart
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRoleMoveableCollection.SourceRole">
            <summary>
            Source Role
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRoleMoveableCollection.TargetRole">
            <summary>
            Target Role
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRoleMoveableCollection.System#Collections#ICollection#Count">
            <summary>
            When implemented by a class, gets the number of elements contained in the System.Collections.ICollection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRoleMoveableCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            When implemented by a class, gets a value indicating whether access to the System.Collections.ICollection is synchronized (thread-safe)
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRoleMoveableCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            When implemented by a class, gets an object that can be used to synchronize access to the System.Collections.ICollection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRoleMoveableCollection.System#Collections#IList#IsFixedSize">
            <summary>
            When implemented by a class, gets a value indicating whether the System.Collections.IList has a fixed size
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRoleMoveableCollection.System#Collections#IList#IsReadOnly">
            <summary>
            When implemented by a class, gets a value indicating whether the System.Collections.IList is read-only
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRoleMoveableCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Indexed accessor
            </summary>
            <param name="index">Index to access</param>
            <returns>object at that index</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRoleMoveableCollection.Count">
            <summary>
            Gets the number of elements contained in the collection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRoleMoveableCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the list is read-only
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRoleMoveableCollection.Item(System.Int32)">
            <summary>
            Indexed accessor
            </summary>
            <param name="index">Index to access</param>
            <returns>Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRole at that index</returns>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRoleElementFactoryCreator">
            <summary>
            ConstraintRoleSequenceHasRole Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRoleElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ConstraintRoleSequenceHasRoleElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ReadingHasRole">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReadingHasRole.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReadingHasRole.RoleCollectionMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReadingHasRole.ReadingCollectionMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReadingHasRole.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReadingHasRole.RoleCollectionMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReadingHasRole.ReadingCollectionMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingHasRole.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingHasRole.CreateReadingHasRole(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingHasRole.CreateAndInitializeReadingHasRole(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingHasRole.RoleCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingHasRole.ReadingCollection">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ReadingHasRoleElementFactoryCreator">
            <summary>
            ReadingHasRole Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingHasRoleElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingHasRoleElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ModelHasError">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasError.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasError.ErrorCollectionMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasError.ModelMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasError.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasError.ErrorCollectionMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasError.ModelMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelHasError.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelHasError.CreateModelHasError(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelHasError.CreateAndInitializeModelHasError(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ModelHasError.ErrorCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ModelHasError.Model">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ModelHasErrorElementFactoryCreator">
            <summary>
            ModelHasError Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelHasErrorElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelHasErrorElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ExternalConstraintHasTooFewRoleSequencesError">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ExternalConstraintHasTooFewRoleSequencesError.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ExternalConstraintHasTooFewRoleSequencesError.TooFewRoleSequencesErrorMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ExternalConstraintHasTooFewRoleSequencesError.ConstraintMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ExternalConstraintHasTooFewRoleSequencesError.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ExternalConstraintHasTooFewRoleSequencesError.TooFewRoleSequencesErrorMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ExternalConstraintHasTooFewRoleSequencesError.ConstraintMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalConstraintHasTooFewRoleSequencesError.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalConstraintHasTooFewRoleSequencesError.CreateExternalConstraintHasTooFewRoleSequencesError(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalConstraintHasTooFewRoleSequencesError.CreateAndInitializeExternalConstraintHasTooFewRoleSequencesError(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ExternalConstraintHasTooFewRoleSequencesError.TooFewRoleSequencesError">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ExternalConstraintHasTooFewRoleSequencesError.Constraint">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ExternalConstraintHasTooFewRoleSequencesErrorElementFactoryCreator">
            <summary>
            ExternalConstraintHasTooFewRoleSequencesError Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalConstraintHasTooFewRoleSequencesErrorElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalConstraintHasTooFewRoleSequencesErrorElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ExternalConstraintHasTooManyRoleSequencesError">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ExternalConstraintHasTooManyRoleSequencesError.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ExternalConstraintHasTooManyRoleSequencesError.TooManyRoleSequencesErrorMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ExternalConstraintHasTooManyRoleSequencesError.ConstraintMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ExternalConstraintHasTooManyRoleSequencesError.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ExternalConstraintHasTooManyRoleSequencesError.TooManyRoleSequencesErrorMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ExternalConstraintHasTooManyRoleSequencesError.ConstraintMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalConstraintHasTooManyRoleSequencesError.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalConstraintHasTooManyRoleSequencesError.CreateExternalConstraintHasTooManyRoleSequencesError(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalConstraintHasTooManyRoleSequencesError.CreateAndInitializeExternalConstraintHasTooManyRoleSequencesError(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ExternalConstraintHasTooManyRoleSequencesError.TooManyRoleSequencesError">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ExternalConstraintHasTooManyRoleSequencesError.Constraint">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ExternalConstraintHasTooManyRoleSequencesErrorElementFactoryCreator">
            <summary>
            ExternalConstraintHasTooManyRoleSequencesError Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalConstraintHasTooManyRoleSequencesErrorElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ExternalConstraintHasTooManyRoleSequencesErrorElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ObjectTypeHasDuplicateNameError">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectTypeHasDuplicateNameError.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectTypeHasDuplicateNameError.DuplicateNameErrorMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectTypeHasDuplicateNameError.ObjectTypeCollectionMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectTypeHasDuplicateNameError.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectTypeHasDuplicateNameError.DuplicateNameErrorMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ObjectTypeHasDuplicateNameError.ObjectTypeCollectionMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypeHasDuplicateNameError.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypeHasDuplicateNameError.CreateObjectTypeHasDuplicateNameError(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypeHasDuplicateNameError.CreateAndInitializeObjectTypeHasDuplicateNameError(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectTypeHasDuplicateNameError.DuplicateNameError">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ObjectTypeHasDuplicateNameError.ObjectTypeCollection">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ObjectTypeHasDuplicateNameErrorElementFactoryCreator">
            <summary>
            ObjectTypeHasDuplicateNameError Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypeHasDuplicateNameErrorElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ObjectTypeHasDuplicateNameErrorElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.FactTypeHasDuplicateNameError">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeHasDuplicateNameError.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeHasDuplicateNameError.DuplicateNameErrorMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeHasDuplicateNameError.FactTypeCollectionMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeHasDuplicateNameError.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeHasDuplicateNameError.DuplicateNameErrorMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeHasDuplicateNameError.FactTypeCollectionMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeHasDuplicateNameError.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeHasDuplicateNameError.CreateFactTypeHasDuplicateNameError(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeHasDuplicateNameError.CreateAndInitializeFactTypeHasDuplicateNameError(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeHasDuplicateNameError.DuplicateNameError">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeHasDuplicateNameError.FactTypeCollection">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.FactTypeHasDuplicateNameErrorElementFactoryCreator">
            <summary>
            FactTypeHasDuplicateNameError Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeHasDuplicateNameErrorElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeHasDuplicateNameErrorElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ReadingOrderHasReading">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReadingOrderHasReading.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReadingOrderHasReading.ReadingCollectionMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReadingOrderHasReading.ReadingOrderMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReadingOrderHasReading.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReadingOrderHasReading.ReadingCollectionMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReadingOrderHasReading.ReadingOrderMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrderHasReading.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrderHasReading.CreateReadingOrderHasReading(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrderHasReading.CreateAndInitializeReadingOrderHasReading(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingOrderHasReading.ReadingCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingOrderHasReading.ReadingOrder">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ReadingOrderHasReadingElementFactoryCreator">
            <summary>
            ReadingOrderHasReading Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrderHasReadingElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrderHasReadingElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ReadingOrderHasRole">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReadingOrderHasRole.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReadingOrderHasRole.RoleCollectionMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReadingOrderHasRole.ReadingOrderMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReadingOrderHasRole.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReadingOrderHasRole.RoleCollectionMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReadingOrderHasRole.ReadingOrderMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrderHasRole.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrderHasRole.CreateReadingOrderHasRole(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrderHasRole.CreateAndInitializeReadingOrderHasRole(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingOrderHasRole.RoleCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingOrderHasRole.ReadingOrder">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ReadingOrderHasRoleElementFactoryCreator">
            <summary>
            ReadingOrderHasRole Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrderHasRoleElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingOrderHasRoleElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.FactTypeHasReadingOrder">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeHasReadingOrder.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeHasReadingOrder.ReadingOrderCollectionMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeHasReadingOrder.FactTypeMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeHasReadingOrder.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeHasReadingOrder.ReadingOrderCollectionMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeHasReadingOrder.FactTypeMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeHasReadingOrder.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeHasReadingOrder.CreateFactTypeHasReadingOrder(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeHasReadingOrder.CreateAndInitializeFactTypeHasReadingOrder(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeHasReadingOrder.ReadingOrderCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeHasReadingOrder.FactType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.FactTypeHasReadingOrderElementFactoryCreator">
            <summary>
            FactTypeHasReadingOrder Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeHasReadingOrderElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeHasReadingOrderElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ModelHasReferenceModeKind">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasReferenceModeKind.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasReferenceModeKind.ReferenceModeKindCollectionMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasReferenceModeKind.ModelMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasReferenceModeKind.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasReferenceModeKind.ReferenceModeKindCollectionMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasReferenceModeKind.ModelMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelHasReferenceModeKind.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelHasReferenceModeKind.CreateModelHasReferenceModeKind(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelHasReferenceModeKind.CreateAndInitializeModelHasReferenceModeKind(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ModelHasReferenceModeKind.ReferenceModeKindCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ModelHasReferenceModeKind.Model">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ModelHasReferenceModeKindElementFactoryCreator">
            <summary>
            ModelHasReferenceModeKind Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelHasReferenceModeKindElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelHasReferenceModeKindElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ModelHasReferenceMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasReferenceMode.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasReferenceMode.ReferenceModeCollectionMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasReferenceMode.ModelMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasReferenceMode.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasReferenceMode.ReferenceModeCollectionMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasReferenceMode.ModelMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelHasReferenceMode.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelHasReferenceMode.CreateModelHasReferenceMode(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelHasReferenceMode.CreateAndInitializeModelHasReferenceMode(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ModelHasReferenceMode.ReferenceModeCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ModelHasReferenceMode.Model">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ModelHasReferenceModeElementFactoryCreator">
            <summary>
            ModelHasReferenceMode Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelHasReferenceModeElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelHasReferenceModeElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ReferenceModeHasReferenceModeKind">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReferenceModeHasReferenceModeKind.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReferenceModeHasReferenceModeKind.KindMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReferenceModeHasReferenceModeKind.ReferenceModeCollectionMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReferenceModeHasReferenceModeKind.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReferenceModeHasReferenceModeKind.KindMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReferenceModeHasReferenceModeKind.ReferenceModeCollectionMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeHasReferenceModeKind.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeHasReferenceModeKind.CreateReferenceModeHasReferenceModeKind(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeHasReferenceModeKind.CreateAndInitializeReferenceModeHasReferenceModeKind(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceModeHasReferenceModeKind.Kind">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceModeHasReferenceModeKind.ReferenceModeCollection">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ReferenceModeHasReferenceModeKind.ReferenceModeHasReferenceModeKindChangeRule">
            <summary>
            Rule to forward the KindDisplay property to the generated
            Kind property
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeHasReferenceModeKind.ReferenceModeHasReferenceModeKindChangeRule.RolePlayerChanged(Microsoft.VisualStudio.Modeling.RolePlayerChangedEventArgs)">
            <summary>
            Update value types when reference mode kind changes
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ReferenceModeHasReferenceModeKind.ReferenceModeHasReferenceModeKindRemovingRule">
            <summary>
            Rule to forward the KindDisplay property to the generated
            Kind property
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeHasReferenceModeKind.ReferenceModeHasReferenceModeKindRemovingRule.ElementRemoving(Microsoft.VisualStudio.Modeling.ElementRemovingEventArgs)">
            <summary>
            Disallow removal of kind
            </summary>
            <param name="e">ElementAttributeChangedEventArgs</param>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ReferenceModeHasReferenceModeKindElementFactoryCreator">
            <summary>
            ReferenceModeHasReferenceModeKind Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeHasReferenceModeKindElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeHasReferenceModeKindElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ModelHasSingleColumnExternalConstraint">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasSingleColumnExternalConstraint.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasSingleColumnExternalConstraint.SingleColumnExternalConstraintCollectionMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasSingleColumnExternalConstraint.ModelMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasSingleColumnExternalConstraint.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasSingleColumnExternalConstraint.SingleColumnExternalConstraintCollectionMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasSingleColumnExternalConstraint.ModelMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelHasSingleColumnExternalConstraint.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelHasSingleColumnExternalConstraint.CreateModelHasSingleColumnExternalConstraint(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelHasSingleColumnExternalConstraint.CreateAndInitializeModelHasSingleColumnExternalConstraint(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ModelHasSingleColumnExternalConstraint.SingleColumnExternalConstraintCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ModelHasSingleColumnExternalConstraint.Model">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ModelHasSingleColumnExternalConstraint.ParentRolePlayer">
            <summary>
            Implements INamedElementDictionaryLink.ParentRolePlayer
            Returns Model.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ModelHasSingleColumnExternalConstraint.ChildRolePlayer">
            <summary>
            Implements INamedElementDictionaryLink.ChildRolePlayer
            Returns SingleColumnExternalConstraintCollection.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ModelHasSingleColumnExternalConstraintElementFactoryCreator">
            <summary>
            ModelHasSingleColumnExternalConstraint Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelHasSingleColumnExternalConstraintElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelHasSingleColumnExternalConstraintElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ModelHasMultiColumnExternalConstraint">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasMultiColumnExternalConstraint.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasMultiColumnExternalConstraint.MultiColumnExternalConstraintCollectionMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasMultiColumnExternalConstraint.ModelMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasMultiColumnExternalConstraint.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasMultiColumnExternalConstraint.MultiColumnExternalConstraintCollectionMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasMultiColumnExternalConstraint.ModelMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelHasMultiColumnExternalConstraint.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelHasMultiColumnExternalConstraint.CreateModelHasMultiColumnExternalConstraint(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelHasMultiColumnExternalConstraint.CreateAndInitializeModelHasMultiColumnExternalConstraint(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ModelHasMultiColumnExternalConstraint.MultiColumnExternalConstraintCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ModelHasMultiColumnExternalConstraint.Model">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ModelHasMultiColumnExternalConstraint.ParentRolePlayer">
            <summary>
            Implements INamedElementDictionaryLink.ParentRolePlayer
            Returns Model.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ModelHasMultiColumnExternalConstraint.ChildRolePlayer">
            <summary>
            Implements INamedElementDictionaryLink.ChildRolePlayer
            Returns MultiColumnExternalConstraintCollection.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ModelHasMultiColumnExternalConstraintElementFactoryCreator">
            <summary>
            ModelHasMultiColumnExternalConstraint Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelHasMultiColumnExternalConstraintElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelHasMultiColumnExternalConstraintElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.FactTypeHasInternalConstraint">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeHasInternalConstraint.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeHasInternalConstraint.InternalConstraintCollectionMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeHasInternalConstraint.FactTypeMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeHasInternalConstraint.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeHasInternalConstraint.InternalConstraintCollectionMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeHasInternalConstraint.FactTypeMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeHasInternalConstraint.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeHasInternalConstraint.CreateFactTypeHasInternalConstraint(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeHasInternalConstraint.CreateAndInitializeFactTypeHasInternalConstraint(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeHasInternalConstraint.InternalConstraintCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeHasInternalConstraint.FactType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.FactTypeHasInternalConstraintElementFactoryCreator">
            <summary>
            FactTypeHasInternalConstraint Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeHasInternalConstraintElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeHasInternalConstraintElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintHasDuplicateNameError">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintHasDuplicateNameError.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintHasDuplicateNameError.DuplicateNameErrorMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintHasDuplicateNameError.SingleColumnExternalConstraintCollectionMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintHasDuplicateNameError.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintHasDuplicateNameError.DuplicateNameErrorMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintHasDuplicateNameError.SingleColumnExternalConstraintCollectionMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintHasDuplicateNameError.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintHasDuplicateNameError.CreateSingleColumnExternalConstraintHasDuplicateNameError(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintHasDuplicateNameError.CreateAndInitializeSingleColumnExternalConstraintHasDuplicateNameError(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintHasDuplicateNameError.DuplicateNameError">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintHasDuplicateNameError.SingleColumnExternalConstraintCollection">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintHasDuplicateNameErrorElementFactoryCreator">
            <summary>
            SingleColumnExternalConstraintHasDuplicateNameError Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintHasDuplicateNameErrorElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintHasDuplicateNameErrorElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasDuplicateNameError">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasDuplicateNameError.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasDuplicateNameError.DuplicateNameErrorMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasDuplicateNameError.MultiColumnExternalConstraintCollectionMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasDuplicateNameError.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasDuplicateNameError.DuplicateNameErrorMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasDuplicateNameError.MultiColumnExternalConstraintCollectionMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasDuplicateNameError.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasDuplicateNameError.CreateMultiColumnExternalConstraintHasDuplicateNameError(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasDuplicateNameError.CreateAndInitializeMultiColumnExternalConstraintHasDuplicateNameError(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasDuplicateNameError.DuplicateNameError">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasDuplicateNameError.MultiColumnExternalConstraintCollection">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasDuplicateNameErrorElementFactoryCreator">
            <summary>
            MultiColumnExternalConstraintHasDuplicateNameError Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasDuplicateNameErrorElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasDuplicateNameErrorElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.EntityTypeHasPreferredIdentifierElementFactoryCreator">
            <summary>
            EntityTypeHasPreferredIdentifier Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.EntityTypeHasPreferredIdentifierElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.EntityTypeHasPreferredIdentifierElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ReadingHasTooManyRolesError">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReadingHasTooManyRolesError.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReadingHasTooManyRolesError.TooManyRolesErrorMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReadingHasTooManyRolesError.ReadingMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReadingHasTooManyRolesError.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReadingHasTooManyRolesError.TooManyRolesErrorMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReadingHasTooManyRolesError.ReadingMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingHasTooManyRolesError.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingHasTooManyRolesError.CreateReadingHasTooManyRolesError(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingHasTooManyRolesError.CreateAndInitializeReadingHasTooManyRolesError(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingHasTooManyRolesError.TooManyRolesError">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingHasTooManyRolesError.Reading">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ReadingHasTooManyRolesErrorElementFactoryCreator">
            <summary>
            ReadingHasTooManyRolesError Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingHasTooManyRolesErrorElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingHasTooManyRolesErrorElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ReadingHasTooFewRolesError">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReadingHasTooFewRolesError.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReadingHasTooFewRolesError.TooFewRolesErrorMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReadingHasTooFewRolesError.ReadingMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReadingHasTooFewRolesError.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReadingHasTooFewRolesError.TooFewRolesErrorMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReadingHasTooFewRolesError.ReadingMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingHasTooFewRolesError.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingHasTooFewRolesError.CreateReadingHasTooFewRolesError(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingHasTooFewRolesError.CreateAndInitializeReadingHasTooFewRolesError(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingHasTooFewRolesError.TooFewRolesError">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReadingHasTooFewRolesError.Reading">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ReadingHasTooFewRolesErrorElementFactoryCreator">
            <summary>
            ReadingHasTooFewRolesError Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingHasTooFewRolesErrorElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReadingHasTooFewRolesErrorElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasExternalConstraintRoleSequenceArityMismatch">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasExternalConstraintRoleSequenceArityMismatch.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasExternalConstraintRoleSequenceArityMismatch.ArityMismatchErrorMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasExternalConstraintRoleSequenceArityMismatch.ConstraintMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasExternalConstraintRoleSequenceArityMismatch.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasExternalConstraintRoleSequenceArityMismatch.ArityMismatchErrorMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasExternalConstraintRoleSequenceArityMismatch.ConstraintMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasExternalConstraintRoleSequenceArityMismatch.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasExternalConstraintRoleSequenceArityMismatch.CreateMultiColumnExternalConstraintHasExternalConstraintRoleSequenceArityMismatch(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasExternalConstraintRoleSequenceArityMismatch.CreateAndInitializeMultiColumnExternalConstraintHasExternalConstraintRoleSequenceArityMismatch(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasExternalConstraintRoleSequenceArityMismatch.ArityMismatchError">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasExternalConstraintRoleSequenceArityMismatch.Constraint">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasExternalConstraintRoleSequenceArityMismatchElementFactoryCreator">
            <summary>
            MultiColumnExternalConstraintHasExternalConstraintRoleSequenceArityMismatch Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasExternalConstraintRoleSequenceArityMismatchElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasExternalConstraintRoleSequenceArityMismatchElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.FactTypeHasFactTypeRequiresReadingError">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeHasFactTypeRequiresReadingError.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeHasFactTypeRequiresReadingError.ReadingRequiredErrorMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeHasFactTypeRequiresReadingError.FactTypeMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeHasFactTypeRequiresReadingError.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeHasFactTypeRequiresReadingError.ReadingRequiredErrorMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeHasFactTypeRequiresReadingError.FactTypeMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeHasFactTypeRequiresReadingError.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeHasFactTypeRequiresReadingError.CreateFactTypeHasFactTypeRequiresReadingError(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeHasFactTypeRequiresReadingError.CreateAndInitializeFactTypeHasFactTypeRequiresReadingError(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeHasFactTypeRequiresReadingError.ReadingRequiredError">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeHasFactTypeRequiresReadingError.FactType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.FactTypeHasFactTypeRequiresReadingErrorElementFactoryCreator">
            <summary>
            FactTypeHasFactTypeRequiresReadingError Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeHasFactTypeRequiresReadingErrorElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeHasFactTypeRequiresReadingErrorElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ModelHasDataType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasDataType.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasDataType.DataTypeCollectionMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasDataType.ModelMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasDataType.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasDataType.DataTypeCollectionMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ModelHasDataType.ModelMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelHasDataType.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelHasDataType.CreateModelHasDataType(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelHasDataType.CreateAndInitializeModelHasDataType(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ModelHasDataType.DataTypeCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ModelHasDataType.Model">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ModelHasDataTypeElementFactoryCreator">
            <summary>
            ModelHasDataType Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelHasDataTypeElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ModelHasDataTypeElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.FactTypeHasFactTypeRequiresInternalUniquenessConstraintError">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeHasFactTypeRequiresInternalUniquenessConstraintError.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeHasFactTypeRequiresInternalUniquenessConstraintError.InternalUniquenessConstraintRequiredErrorMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeHasFactTypeRequiresInternalUniquenessConstraintError.FactTypeMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeHasFactTypeRequiresInternalUniquenessConstraintError.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeHasFactTypeRequiresInternalUniquenessConstraintError.InternalUniquenessConstraintRequiredErrorMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.FactTypeHasFactTypeRequiresInternalUniquenessConstraintError.FactTypeMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeHasFactTypeRequiresInternalUniquenessConstraintError.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeHasFactTypeRequiresInternalUniquenessConstraintError.CreateFactTypeHasFactTypeRequiresInternalUniquenessConstraintError(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeHasFactTypeRequiresInternalUniquenessConstraintError.CreateAndInitializeFactTypeHasFactTypeRequiresInternalUniquenessConstraintError(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeHasFactTypeRequiresInternalUniquenessConstraintError.InternalUniquenessConstraintRequiredError">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.FactTypeHasFactTypeRequiresInternalUniquenessConstraintError.FactType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.FactTypeHasFactTypeRequiresInternalUniquenessConstraintErrorElementFactoryCreator">
            <summary>
            FactTypeHasFactTypeRequiresInternalUniquenessConstraintError Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeHasFactTypeRequiresInternalUniquenessConstraintErrorElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.FactTypeHasFactTypeRequiresInternalUniquenessConstraintErrorElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ValueTypeHasValueRangeDefinition">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueTypeHasValueRangeDefinition.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueTypeHasValueRangeDefinition.ValueRangeDefinitionMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueTypeHasValueRangeDefinition.ValueTypeMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueTypeHasValueRangeDefinition.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueTypeHasValueRangeDefinition.ValueRangeDefinitionMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueTypeHasValueRangeDefinition.ValueTypeMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueTypeHasValueRangeDefinition.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueTypeHasValueRangeDefinition.CreateValueTypeHasValueRangeDefinition(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueTypeHasValueRangeDefinition.CreateAndInitializeValueTypeHasValueRangeDefinition(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueTypeHasValueRangeDefinition.ValueRangeDefinition">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueTypeHasValueRangeDefinition.ValueType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ValueTypeHasValueRangeDefinitionElementFactoryCreator">
            <summary>
            ValueTypeHasValueRangeDefinition Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueTypeHasValueRangeDefinitionElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueTypeHasValueRangeDefinitionElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.RoleHasValueRangeDefinition">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.RoleHasValueRangeDefinition.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.RoleHasValueRangeDefinition.ValueRangeDefinitionMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.RoleHasValueRangeDefinition.RoleMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.RoleHasValueRangeDefinition.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.RoleHasValueRangeDefinition.ValueRangeDefinitionMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.RoleHasValueRangeDefinition.RoleMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RoleHasValueRangeDefinition.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RoleHasValueRangeDefinition.CreateRoleHasValueRangeDefinition(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RoleHasValueRangeDefinition.CreateAndInitializeRoleHasValueRangeDefinition(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.RoleHasValueRangeDefinition.ValueRangeDefinition">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.RoleHasValueRangeDefinition.Role">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.RoleHasValueRangeDefinitionElementFactoryCreator">
            <summary>
            RoleHasValueRangeDefinition Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RoleHasValueRangeDefinitionElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.RoleHasValueRangeDefinitionElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ValueRangeDefinitionHasValueRange">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueRangeDefinitionHasValueRange.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueRangeDefinitionHasValueRange.ValueRangeCollectionMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueRangeDefinitionHasValueRange.ValueRangeDefinitionMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueRangeDefinitionHasValueRange.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueRangeDefinitionHasValueRange.ValueRangeCollectionMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueRangeDefinitionHasValueRange.ValueRangeDefinitionMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRangeDefinitionHasValueRange.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRangeDefinitionHasValueRange.CreateValueRangeDefinitionHasValueRange(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRangeDefinitionHasValueRange.CreateAndInitializeValueRangeDefinitionHasValueRange(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueRangeDefinitionHasValueRange.ValueRangeCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueRangeDefinitionHasValueRange.ValueRangeDefinition">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ValueRangeDefinitionHasValueRangeElementFactoryCreator">
            <summary>
            ValueRangeDefinitionHasValueRange Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRangeDefinitionHasValueRangeElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueRangeDefinitionHasValueRangeElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ValueTypeHasUnspecifiedDataTypeError">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueTypeHasUnspecifiedDataTypeError.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueTypeHasUnspecifiedDataTypeError.DataTypeNotSpecifiedErrorMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueTypeHasUnspecifiedDataTypeError.ValueTypeHasDataTypeMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueTypeHasUnspecifiedDataTypeError.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueTypeHasUnspecifiedDataTypeError.DataTypeNotSpecifiedErrorMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ValueTypeHasUnspecifiedDataTypeError.ValueTypeHasDataTypeMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueTypeHasUnspecifiedDataTypeError.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueTypeHasUnspecifiedDataTypeError.CreateValueTypeHasUnspecifiedDataTypeError(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueTypeHasUnspecifiedDataTypeError.CreateAndInitializeValueTypeHasUnspecifiedDataTypeError(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueTypeHasUnspecifiedDataTypeError.DataTypeNotSpecifiedError">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ValueTypeHasUnspecifiedDataTypeError.ValueTypeHasDataType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ValueTypeHasUnspecifiedDataTypeErrorElementFactoryCreator">
            <summary>
            ValueTypeHasUnspecifiedDataTypeError Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueTypeHasUnspecifiedDataTypeErrorElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ValueTypeHasUnspecifiedDataTypeErrorElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasCompatibleRolePlayerTypeError">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasCompatibleRolePlayerTypeError.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasCompatibleRolePlayerTypeError.CompatibleRolePlayerTypeErrorCollectionMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasCompatibleRolePlayerTypeError.MultiColumnExternalConstraintMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasCompatibleRolePlayerTypeError.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasCompatibleRolePlayerTypeError.CompatibleRolePlayerTypeErrorCollectionMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasCompatibleRolePlayerTypeError.MultiColumnExternalConstraintMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasCompatibleRolePlayerTypeError.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasCompatibleRolePlayerTypeError.CreateMultiColumnExternalConstraintHasCompatibleRolePlayerTypeError(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasCompatibleRolePlayerTypeError.CreateAndInitializeMultiColumnExternalConstraintHasCompatibleRolePlayerTypeError(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasCompatibleRolePlayerTypeError.CompatibleRolePlayerTypeErrorCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasCompatibleRolePlayerTypeError.MultiColumnExternalConstraint">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasCompatibleRolePlayerTypeErrorElementFactoryCreator">
            <summary>
            MultiColumnExternalConstraintHasCompatibleRolePlayerTypeError Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasCompatibleRolePlayerTypeErrorElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.MultiColumnExternalConstraintHasCompatibleRolePlayerTypeErrorElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintHasCompatibleRolePlayerTypeError">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintHasCompatibleRolePlayerTypeError.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintHasCompatibleRolePlayerTypeError.CompatibleRolePlayerTypeErrorMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintHasCompatibleRolePlayerTypeError.SingleColumnExternalConstraintMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintHasCompatibleRolePlayerTypeError.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintHasCompatibleRolePlayerTypeError.CompatibleRolePlayerTypeErrorMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintHasCompatibleRolePlayerTypeError.SingleColumnExternalConstraintMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintHasCompatibleRolePlayerTypeError.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintHasCompatibleRolePlayerTypeError.CreateSingleColumnExternalConstraintHasCompatibleRolePlayerTypeError(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintHasCompatibleRolePlayerTypeError.CreateAndInitializeSingleColumnExternalConstraintHasCompatibleRolePlayerTypeError(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintHasCompatibleRolePlayerTypeError.CompatibleRolePlayerTypeError">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintHasCompatibleRolePlayerTypeError.SingleColumnExternalConstraint">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintHasCompatibleRolePlayerTypeErrorElementFactoryCreator">
            <summary>
            SingleColumnExternalConstraintHasCompatibleRolePlayerTypeError Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintHasCompatibleRolePlayerTypeErrorElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.SingleColumnExternalConstraintHasCompatibleRolePlayerTypeErrorElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraintHasNMinusOneError">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraintHasNMinusOneError.MetaRelationshipGuidString">
            <summary>
            MetaRelationship Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraintHasNMinusOneError.NMinusOneErrorMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraintHasNMinusOneError.ConstraintMetaRoleGuidString">
            <summary>
            MetaRole Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraintHasNMinusOneError.MetaRelationshipGuid">
            <summary>
            MetaRelationship Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraintHasNMinusOneError.NMinusOneErrorMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraintHasNMinusOneError.ConstraintMetaRoleGuid">
            <summary>
            MetaRole Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraintHasNMinusOneError.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraintHasNMinusOneError.CreateInternalUniquenessConstraintHasNMinusOneError(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraintHasNMinusOneError.CreateAndInitializeInternalUniquenessConstraintHasNMinusOneError(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.RoleAssignment[],Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraintHasNMinusOneError.NMinusOneError">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraintHasNMinusOneError.Constraint">
            <summary>
            
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraintHasNMinusOneErrorElementFactoryCreator">
            <summary>
            InternalUniquenessConstraintHasNMinusOneError Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraintHasNMinusOneErrorElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.InternalUniquenessConstraintHasNMinusOneErrorElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.Editors.ReadingTextEditor">
            <summary>
            Type editor for use on ReadingText properties in the property grid.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Editors.ReadingTextEditor.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Editors.ReadingTextEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Changes the style of the editor.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Editors.ReadingTextEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Called when a value using this editor is modified.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Editors.ReadingTextEditor.ResolveUnderlyingFact(System.Object)">
            <summary>
            Selection context is often based on a wrapper shape, such
            as a NodeShape or a tree node in a model browser. Use this
            helper function to resolve known element containers to get to the
            backing element.
            </summary>
            <param name="instance">The selected object returned by ITypeDescriptorContext.Instance</param>
            <returns>A resolved object, or the starting instance if the item is not wrapped.</returns>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.PortableDataType">
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.PortableDataType.Unspecified">
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.PortableDataType.TextFixedLength">
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.PortableDataType.TextVariableLength">
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.PortableDataType.TextLargeLength">
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.PortableDataType.NumericSignedInteger">
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.PortableDataType.NumericUnsignedInteger">
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.PortableDataType.NumericAutoCounter">
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.PortableDataType.NumericFloatingPoint">
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.PortableDataType.NumericDecimal">
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.PortableDataType.NumericMoney">
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.PortableDataType.RawDataFixedLength">
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.PortableDataType.RawDataVariableLength">
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.PortableDataType.RawDataLargeLength">
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.PortableDataType.RawDataPicture">
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.PortableDataType.RawDataOleObject">
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.PortableDataType.TemporalAutoTimestamp">
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.PortableDataType.TemporalTime">
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.PortableDataType.TemporalDate">
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.PortableDataType.TemporalDateAndTime">
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.PortableDataType.LogicalTrueOrFalse">
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.PortableDataType.LogicalYesOrNo">
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.PortableDataType.OtherRowId">
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.PortableDataType.OtherObjectId">
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.PortableDataType.UserDefined">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.Shell.ORMDesignerPackage">
            <summary>
            Entry point for the ORMPackage package. An instance of this class is created by the VS
            shell whenever one of our services is required.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerPackage.myCommandSet">
            <summary>
            The commands supported by this package
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerPackage.#ctor">
            <summary>
            Class constructor.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerPackage.Initialize">
            <summary>
            This is called by the package base class when our package is loaded. When devenv is run
            with the "/setup" command line switch it is not able to do a lot of the normal things,
            such as creating output windows and tool windows. Under normal circumstances our package
            isn't loaded when run with this switch. However, our package will be loaded when items 
            are added to the toolbox, even when run with "/setup". To be safe we'll check for "setup"
            and we don't do anything interesting in MgdSetSite if we find it. 
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerPackage.Dispose(System.Boolean)">
            <summary>
            This is called by the package base class when our package gets unloaded.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMDesignerPackage.CommandSet">
            <summary>
            Gets the singleton command set create for this package.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMDesignerPackage.FontAndColorService">
            <summary>
            Gets the singleton font and color service for this package
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMDesignerPackage.UnitTestObjectName">
            <summary>
            Specifies the name of the DTE object used to bootstrap unit testing.  Derived classes
            should specify a unique name.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMDesignerPackage.Singleton">
            <summary>
            For use by unit tests. Also used by ModelElementLocator.
            Private to discourage use outside of unit testing,
            may only be accessed through reflection.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMDesignerPackage.BrowserWindow">
            <summary>
            Browser tool window.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMDesignerPackage.ReadingEditorWindow">
            <summary>
            Reading editor tool window.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMDesignerPackage.ReferenceModeEditorWindow">
            <summary>
            The reference mode editor window.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMDesignerPackage.FactEditorWindow">
            <summary>
            Fact editor tool window.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ICustomShapeFolding">
            <summary>
            Support custom connection points during shape folding. If this
            interface is not supported, then line routing will assume that
            the opposite connection points to the center of the shape.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ICustomShapeFolding.CalculateConnectionPoint(Microsoft.VisualStudio.Modeling.Diagrams.NodeShape)">
            <summary>
            Get the connection point corresponding to the opposite shape element.
            The value returned uses absolute coordinates.
            </summary>
            <param name="oppositeShape"></param>
            <returns></returns>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.GeometryUtility">
            <summary>
            Helper functions for custom shape folding
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.GeometryUtility.AdjustVectorEndPoint(Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
            <summary>
            Locate the opposite shape based on the given points and
            adjust the opposite the endpoint accordingly. The endpoint
            is also modified to represent an absolute value. Use VectorEndPointForBase
            to restore the vector endpoint to its natural value.
            CenterToCenter routing is assumed.
            </summary>
            <param name="geometryHost">IGeometryHost (passed from DoFoldToShape)</param>
            <param name="potentialPoint">PointD (passed from DoFoldToShape)</param>
            <param name="vectorEndPoint">PointD (passed from DoFoldToShape)</param>
            <returns>Absolute location of end point</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.GeometryUtility.AdjustVectorEndPoint(Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.NodeShape@)">
            <summary>
            Locate the opposite shape based on the given points and
            adjust the opposite the endpoint accordingly. The endpoint
            is also modified to represent an absolute value. Use VectorEndPointForBase
            to restore the vector endpoint to its natural value.
            CenterToCenter routing is assumed.
            </summary>
            <param name="geometryHost">IGeometryHost (passed from DoFoldToShape)</param>
            <param name="potentialPoint">PointD (passed from DoFoldToShape)</param>
            <param name="vectorEndPoint">PointD (passed from DoFoldToShape)</param>
            <param name="oppositeShape">The located opposite shape at this location</param>
            <returns>Absolute location of end point</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.GeometryUtility.VectorEndPointForBase(Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
            <summary>
            Adjust a vector end point retrieved from AdjustVectorEndPoint into
            the value in its original (very strange) coordinate system.
            </summary>
            <param name="potentialPoint">The potential end point passed to FoldToShape</param>
            <param name="vectorEndPoint">An adjusted vector end point</param>
            <returns>An unadjusted value</returns>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.CustomFoldEllipseShapeGeometry">
            <summary>
            Attach connection lines correctly to an ellipse border. Designed
            to work with CenterToCenter routing.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.CustomFoldEllipseShapeGeometry.ShapeGeometry">
            <summary>
            Singleton CustomFoldEllipseShapeGeometry instance
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.CustomFoldEllipseShapeGeometry.#ctor">
            <summary>
            Protected default constructor. The class should be used
            as a singleton instead of being publicly constructed.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.CustomFoldEllipseShapeGeometry.DoFoldToShape(Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
            <summary>
            Implement shape folding on the ellipse boundary
            </summary>
            <param name="geometryHost">The host view</param>
            <param name="potentialPoint">A point on the rectangular boundary of the shape</param>
            <param name="vectorEndPoint">A point on the opposite end of the connecting line</param>
            <returns>A point on the ellipse border</returns>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.CustomFoldCircleShapeGeometry">
            <summary>
            Attach connection lines correctly to circular border. Designed
            to work with CenterToCenter routing.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.CustomFoldCircleShapeGeometry.ShapeGeometry">
            <summary>
            Singleton CustomFoldEllipseShapeGeometry instance
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.CustomFoldCircleShapeGeometry.#ctor">
            <summary>
            Protected default constructor. The class should be used
            as a singleton instead of being publicly constructed.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.CustomFoldCircleShapeGeometry.DoFoldToShape(Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
            <summary>
            Implement shape folding on the ellipse boundary
            </summary>
            <param name="geometryHost">The host view</param>
            <param name="potentialPoint">A point on the rectangular boundary of the shape</param>
            <param name="vectorEndPoint">A point on the opposite end of the connecting line</param>
            <returns>A point on the ellipse border</returns>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.CustomFoldRectangleShapeGeometry">
            <summary>
            A geometry shape for custom shape folding on rectangles.
            Designed to work with CenterToCenter routing.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.CustomFoldRectangleShapeGeometry.ShapeGeometry">
            <summary>
            Singleton CustomFoldRectangleShapeGeometry instance
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.CustomFoldRectangleShapeGeometry.#ctor">
            <summary>
            Protected default constructor. The class should be used
            as a singleton instead of being publicly constructed.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.CustomFoldRectangleShapeGeometry.DoFoldToShape(Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
            <summary>
            Provide custom shape folding for rectangular fact types
            </summary>
            <param name="geometryHost"></param>
            <param name="potentialPoint"></param>
            <param name="vectorEndPoint"></param>
            <returns></returns>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.CustomFoldRoundedRectangleShapeGeometry">
            <summary>
            A geometry shape for custom shape folding on rectangles
            Designed to work with CenterToCenter routing.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.CustomFoldRoundedRectangleShapeGeometry.ShapeGeometry">
            <summary>
            Singleton CustomFoldRoundedRectangleShapeGeometry instance
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.CustomFoldRoundedRectangleShapeGeometry.#ctor">
            <summary>
            Protected default constructor. The class should be used
            as a singleton instead of being publicly constructed.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.CustomFoldRoundedRectangleShapeGeometry.DoFoldToShape(Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost,Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.PointD)">
            <summary>
            Provide custom shape folding for rectangular fact types
            </summary>
            <param name="geometryHost"></param>
            <param name="potentialPoint"></param>
            <param name="vectorEndPoint"></param>
            <returns></returns>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ValueRangeLink">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ValueRangeLink.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ValueRangeLink.InitializeResources(Microsoft.VisualStudio.Modeling.Diagrams.StyleSet)">
            <summary>
            Change the outline pen to a thin black line for all instances
            of this shape.
            </summary>
            <param name="classStyleSet">The style set to modify</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ValueRangeLink.ConfiguringAsChildOf(Northface.Tools.ORM.ShapeModel.ORMDiagram)">
            <summary>
            Configuring this link after it has been added to the diagram
            </summary>
            <param name="diagram">The parent diagram</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ValueRangeLink.ModifyLuminosity(System.Int32,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
            <summary>
            Redirect all luminosity modification to the ORMDiagram.ModifyLuminosity
            algorithm
            </summary>
            <param name="currentLuminosity">The luminosity to modify</param>
            <param name="view">The view containing this item</param>
            <returns>Modified luminosity value</returns>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ValueRangeLink.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ValueRangeLink.classStyleSet">
            <summary>
            Style Set
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ValueRangeLink.shapeFields">
            <summary>
            Shape Fields
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ValueRangeLink.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ValueRangeLink.CreateValueRangeLink(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ValueRangeLink.CreateAndInitializeValueRangeLink(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ValueRangeLink.DefaultRoutingStyle">
            <summary>
            Use a straight line routing style
            Use a center to center routing style
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ValueRangeLink.CanSelect">
            <summary>
            Selecting role player links gets in the way of selecting roleboxes, etc.
            It is best just to turn them off. This also eliminates a bunch of unnamed
            roles from the property grid element picker.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ValueRangeLink.OutlinePenId">
            <summary>
            Draw the connection lines as sticky along with the constraint
            and associated roles
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ValueRangeLink.CanManuallyRoute">
            <summary>
            Stop the user from manually routine link lines
            </summary>
            <value>false</value>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ValueRangeLink.AssociatedRangeDefinitionLink">
            <summary>
            Get the ObjectTypePlaysRole link associated with this link shape
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ValueRangeLink.ClassStyleSet">
            <summary>
            Style Set
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ValueRangeLink.ShapeFields">
            <summary>
            Shape Fields
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.Shell.ORMDesignerColor">
            <summary>
            Indexed color values in the 'ORM Designer' color category
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerColor.Constraint">
            <summary>
            The color used to draw all constraints
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerColor.ActiveConstraint">
            <summary>
            The colors used to draw an active constraint
            and its associated roles.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerColor.ConstraintError">
            <summary>
            The color used to display error conditions
            on internal constraints
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerColor.RolePicker">
            <summary>
            The colors used to draw selected constraints
            during a role picker mouse action
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.Shell.IORMFontAndColorService">
            <summary>
            Abstract 
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.IORMFontAndColorService.GetForeColor(Northface.Tools.ORM.Shell.ORMDesignerColor)">
            <summary>
            Retrieve forecolor information for the specified index
            </summary>
            <param name="colorIndex">Item to retrieve</param>
            <returns>Color</returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.IORMFontAndColorService.GetBackColor(Northface.Tools.ORM.Shell.ORMDesignerColor)">
            <summary>
            Retrieve background color information for the specified index
            </summary>
            <param name="colorIndex">Item to retrieve</param>
            <returns>Color</returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.IORMFontAndColorService.GetFont">
            <summary>
            Retrieve font information. A new Font object is generated
            on each call and must be disposed of properly by the caller.
            </summary>
            <returns>A new font object</returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.IORMFontAndColorService.GetFontFlags(Northface.Tools.ORM.Shell.ORMDesignerColor)">
            <summary>
            Retrieve font flag information for the specified index
            </summary>
            <param name="colorIndex">Item to retrieve</param>
            <returns>FONTFLAGS</returns>
        </member>
        <member name="T:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors">
            <summary>
            The class to create the ORM Designer category in the tools/options/environment/fonts and colors page
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.StandardPaletteBit">
            <summary>
            Bitwise or this value with a value from the COLORINDEX enum
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.SystemColorBit">
            <summary>
            Bitwise or this value with a system color value. Retrieve with
            the GetSysColor function.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.VsColorBit">
            <summary>
            Bitwise or this value with a system color value. Retrieve with
            the  IVsUIShell::GetVSSysColor function.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.TrackForegroundColorBit">
            <summary>
            The color refers to the forecolor of another indexed color in the same set
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.TrackBackgroundColorBit">
            <summary>
            The color refers to the back color of another indexed color in the same set
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.AllSpecialColorBits">
            <summary>
            A mask value for all special bits
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.ConstraintColorName">
            <summary>
            The unlocalized name for the constraint display item
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.ConstraintErrorColorName">
            <summary>
            The unlocalized name for the constraint error display item
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.ActiveConstraintColorName">
            <summary>
            The unlocalized name for the active constraint display item
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.RolePickerColorName">
            <summary>
            The unlocalized name for the role highlight display item
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.FontAndColorCategory">
            <summary>
            The guid for the font and color category used for this language service
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.TextEditorCategory">
            <summary>
            The guid for the TextEditor Category
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.myDefaultColorSettings">
            <summary>
            Default setting definition. Must be in the same order as
            the ORMDesignerColor enum
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.#ctor(System.IServiceProvider)">
            <summary>
            Create a new ORMDesignerFontsAndColors
            </summary>
            <param name="serviceProvider">Service provider</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.GetFont">
            <summary>
            Retrieve font information. A new Font object is generated
            on each call and must be disposed of properly by the caller.
            Implements IORMFontAndColorService.GetFont
            </summary>
            <returns>A new font object</returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.GetForeColor(Northface.Tools.ORM.Shell.ORMDesignerColor)">
            <summary>
            Retrieve forecolor information for the specified index.
            Implements IORMFontAndColorService.GetForeColor
            </summary>
            <param name="colorIndex">Item to retrieve</param>
            <returns>Color</returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.GetBackColor(Northface.Tools.ORM.Shell.ORMDesignerColor)">
            <summary>
            Retrieve background color information for the specified index.
            Implements IORMFontAndColorService.GetBackColor
            </summary>
            <param name="colorIndex">Item to retrieve</param>
            <returns>Color</returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.GetFontFlags(Northface.Tools.ORM.Shell.ORMDesignerColor)">
            <summary>
            Retrieve font flag information for the specified index.
            Implements IORMFontAndColorService.GetFontFlags
            </summary>
            <param name="colorIndex">Item to retrieve</param>
            <returns>FONTFLAGS</returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.NameFromItemIndex(Northface.Tools.ORM.Shell.ORMDesignerColor)">
            <summary>
            Get the name of an item from its index
            </summary>
            <param name="itemIndex">A valid item index</param>
            <returns>A name. Throws on an invalid index</returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.GetObject(System.Guid@,System.Object@)">
            <summary>
            Implements IVsFontAndColorDefaultsProvider.GetObject
            </summary>
            <param name="rguidCategory"></param>
            <param name="ppObj"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.GetBaseCategory(System.Guid@)">
            <summary>
            Implements IVsFontAndColorDefaults.GetBaseCategory
            </summary>
            <param name="pguidBase"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.GetCategoryName(System.String@)">
            <summary>
            Implements  IVsFontAndColorDefaults.GetCategoryName
            </summary>
            <param name="pbstrName"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.GetFlags(System.UInt32@)">
            <summary>
            Implements IVsFontAndColorDefaults.GetFlags
            </summary>
            <param name="dwFlags"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.GetFont(Microsoft.VisualStudio.Shell.Interop.FontInfo[])">
            <summary>
            Implements IVsFontAndColorDefaults.GetFont
            </summary>
            <param name="pInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.GetItem(System.Int32,Microsoft.VisualStudio.Shell.Interop.AllColorableItemInfo[])">
            <summary>
            Implements IVsFontAndColorDefaults.GetItem
            </summary>
            <param name="iItem"></param>
            <param name="pInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.GetItemByName(System.String,Microsoft.VisualStudio.Shell.Interop.AllColorableItemInfo[])">
            <summary>
            Implements IVsFontAndColorDefaults.GetItemByName
            </summary>
            <param name="szItem"></param>
            <param name="pInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.GetItemCount(System.Int32@)">
            <summary>
            Implements IVsFontAndColorDefaults.GetItemCount
            </summary>
            <param name="pcItems"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.GetPriority(System.UInt16@)">
            <summary>
            Implements IVsFontAndColorDefaults.GetPriority
            </summary>
            <param name="pPriority"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.OnApply">
            <summary>
            Implements IVsFontAndColorEvents.OnApply
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.ChangeDocumentFontAndColors(Northface.Tools.ORM.Shell.ORMDesignerDocData)">
            <summary>
            Callback function for modifying a document when font
            and color changes are applied.
            </summary>
            <param name="docData">Currently running docdata</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.OnFontChanged(System.Guid@,Microsoft.VisualStudio.Shell.Interop.FontInfo[],Microsoft.VisualStudio.Shell.Interop.LOGFONTW[],System.UInt32)">
            <summary>
            Implements IVsFontAndColorEvents.OnFontChanged
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.OnItemChanged(System.Guid@,System.String,System.Int32,Microsoft.VisualStudio.Shell.Interop.ColorableItemInfo[],System.UInt32,System.UInt32)">
            <summary>
            Implements IVsFontAndColorEvents.OnItemChanged
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.OnReset(System.Guid@)">
            <summary>
            Implements IVsFontAndColorEvents.OnReset
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.OnResetToBaseCategory(System.Guid@)">
            <summary>
            Implements IVsFontAndColorEvents.OnResetToBaseCategory
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.DefaultColorSetting">
            <summary>
            A helper structure for store default settings
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.ColorItem">
            <summary>
            Struct for caching values
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.ColorRetriever">
            <summary>
            Helper structure to retrieve color and font values
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.ColorRetriever.#ctor(System.IServiceProvider,System.Guid,Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.ColorRetriever.NameFromIndex)">
            <summary>
            Initialize a ColorRetriever structure
            </summary>
            <param name="serviceProvider"></param>
            <param name="categoryGuid"></param>
            <param name="indexConverter">Delegate to convert a name into an index</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.ColorRetriever.Close">
            <summary>
            Call from a finally to clean up correctly
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.ColorRetriever.GetColorItem(System.Int32)">
            <summary>
            Get the color information for a specific item
            </summary>
            <param name="itemIndex">The index of an item in the category
            used to create the ColorRetriever</param>
            <returns>ColorItem structure</returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.ColorRetriever.GetFont(Microsoft.VisualStudio.Shell.Interop.LOGFONTW@,Microsoft.VisualStudio.Shell.Interop.FontInfo@)">
            <summary>
            Retrieve font information for the current category
            </summary>
            <param name="logFont">LOGFONTW structure (out)</param>
            <param name="fontInfo">FontInfo structure (out)</param>
        </member>
        <member name="T:Northface.Tools.ORM.Shell.ORMDesignerFontsAndColors.ColorRetriever.NameFromIndex">
            <summary>
            A delegate to translate an item index into a name
            </summary>
            <param name="itemIndex">The item index</param>
            <returns>Item name string</returns>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.CompositeLinkDecorator">
            <summary>
            Draw a link decorator by deferring painting to a list
            of other decorators.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.CompositeLinkDecorator.#ctor">
            <summary>
            Create a new CompositeLinkDecorator.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.CompositeLinkDecorator.DoPaintShape(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD,Microsoft.VisualStudio.Modeling.Diagrams.IGeometryHost,Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs)">
            <summary>
            Paint the composite shape decorators. 
            </summary>
            <param name="bounds">Forwarded to composite decorators</param>
            <param name="shape">Forwarded to composite decorators</param>
            <param name="e">Forwarded to composite decorators</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.CompositeLinkDecorator.GetPath(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
            <summary>
            Return a null path. Not used.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.CompositeLinkDecorator.DecoratorCollection">
            <summary>
            Return a list of decorators to be drawn. The list will
            be drawn in reverse order, so the first specified decorator
            will be on top.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.IORMToolServices">
            <summary>
            An interface that should be implemented by any
            store that hosts ORM-derived object models. This
            can be implemented via pass-through to the host document,
            or directly on a store for non-VS loading and validation
            of the object model.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.IORMToolServices.TaskProvider">
            <summary>
            Retrieve the service for adding and removing tasks
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.IORMToolServices.FontAndColorService">
            <summary>
            Retrieve the service for getting current font and color information
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.IORMToolTaskItem">
            <summary>
            An item that can be added to a task provider. At design time,
            this item will appear in the VS task list. When the model is
            loaded outside the shell, task items will be routed through a
            different mechanism, such as build-time error output. An object
            implementing this interface can be retrieved via the CreateTask
            method on the IORMToolTaskProvider interface.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.IORMToolTaskItem.ElementLocator">
            <summary>
            Set this property to support jumping to an
            element that is associated with an error object.
            Generally, task list items are linked to objects that
            are related to the actual elements with the reported
            anomaly, so custom code is need to navigate from the
            error object to the object with the actual problem.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.IORMToolTaskItem.Text">
            <summary>
            The text for the displayed task item
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.IORMToolTaskProvider">
            <summary>
            A service interface used for creating, adding, and removing
            tasks.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.IORMToolTaskProvider.CreateTask">
            <summary>
            Create a new task. The task will not be added until
            AddTask is called explicitly. This gives the user the
            chance to initialize tasks before they are displayed
            </summary>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.IORMToolTaskProvider.AddTask(Northface.Tools.ORM.ObjectModel.IORMToolTaskItem)">
            <summary>
            Add a task to the task list. Added tasks must be created
            with the CreateTask method.
            </summary>
            <param name="task">A task created with CreateTask</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.IORMToolTaskProvider.RemoveTask(Northface.Tools.ORM.ObjectModel.IORMToolTaskItem)">
            <summary>
            Remove a task. The task should have been previously
            added with the AddTask method.
            </summary>
            <param name="task">A previously added task</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.IORMToolTaskProvider.RemoveAllTasks">
            <summary>
            Remove all task items
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.IORMToolTaskProvider.NavigateTo(Northface.Tools.ORM.ObjectModel.IORMToolTaskItem)">
            <summary>
            Navigate to the given task. Navigable tasks
            must have been created by CreateTask.
            </summary>
            <param name="task">The task to activate and locate</param>
            <returns>true if navigation successful</returns>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.CircleInCircleLinkDecorator">
            <summary>
            UNDONE: This is just a test to see if we can draw a filled circle contained inside
            a nested circle
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.CircleInCircleLinkDecorator.Decorator">
            <summary>
            Singleton instance of this decorator
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.CircleInCircleLinkDecorator.DecoratorCollection">
            <summary>
            Provides multiple paths for the composite decorator that are drawn in
            to produce the decorator.
            </summary>
            <value></value>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.RolePlayerLink">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.RolePlayerLink.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.RolePlayerLink.InitializeResources(Microsoft.VisualStudio.Modeling.Diagrams.StyleSet)">
            <summary>
            Change the outline pen to a thin black line for all instances
            of this shape.
            </summary>
            <param name="classStyleSet">The style set to modify</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.RolePlayerLink.ConfiguringAsChildOf(Northface.Tools.ORM.ShapeModel.ORMDiagram)">
            <summary>
            Configuring this link after it has been added to the diagram
            </summary>
            <param name="diagram">The parent diagram</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.RolePlayerLink.ModifyLuminosity(System.Int32,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
            <summary>
            Redirect all luminosity modification to the ORMDiagram.ModifyLuminosity
            algorithm
            </summary>
            <param name="currentLuminosity">The luminosity to modify</param>
            <param name="view">The view containing this item</param>
            <returns>Modified luminosity value</returns>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.RolePlayerLink.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.RolePlayerLink.classStyleSet">
            <summary>
            Style Set
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.RolePlayerLink.shapeFields">
            <summary>
            Shape Fields
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.RolePlayerLink.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.RolePlayerLink.CreateRolePlayerLink(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.RolePlayerLink.CreateAndInitializeRolePlayerLink(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.RolePlayerLink.DecoratorFrom">
            <summary>
            Draw the mandatory dot on the role box end, depending
            on the options settings
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.RolePlayerLink.DecoratorTo">
            <summary>
            Draw the mandatory dot on the object type end, depending
            on the options settings
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.RolePlayerLink.DrawMandatoryDot">
            <summary>
            Helper function to determine if we should draw a mandatory dot
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.RolePlayerLink.DefaultRoutingStyle">
            <summary>
            Use a straight line routing style
            Use a center to center routing style
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.RolePlayerLink.CanSelect">
            <summary>
            Selecting role player links gets in the way of selecting roleboxes, etc.
            It is best just to turn them off. This also eliminates a bunch of unnamed
            roles from the property grid element picker.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.RolePlayerLink.CanManuallyRoute">
            <summary>
            Stop the user from manually routine link lines
            </summary>
            <value>false</value>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.RolePlayerLink.AssociatedRolePlayerLink">
            <summary>
            Get the ObjectTypePlaysRole link associated with this link shape
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.RolePlayerLink.ClassStyleSet">
            <summary>
            Style Set
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.RolePlayerLink.ShapeFields">
            <summary>
            Shape Fields
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.RolePlayerLink.MandatoryDotDecorator">
            <summary>
            The link decorator used to draw the mandatory
            constraint dot on a link.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.RolePlayerLink.MandatoryDotDecorator.Decorator">
            <summary>
            Singleton instance of this decorator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.RolePlayerLink.MandatoryDotDecorator.GetPath(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD)">
            <summary>
            Return a circle slightly smaller than the standard decorator
            as the path
            </summary>
            <param name="bounds">A bounding rectangle for the decorator</param>
            <returns>A circle path</returns>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.RolePlayerLink.InternalConstraintRoleSequenceAdded">
            <summary>
            Update the link displays when a role sequence for a mandatory constraint is added
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.RolePlayerLink.InternalConstraintRoleSequenceRoleRemoved">
            <summary>
            Update the link display when a mandatory constraint role is removed
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.Shell.ORMReferenceModeEditorToolWindow">
            <summary>
            Tool window for editing refence modes.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMReferenceModeEditorToolWindow.#ctor(System.IServiceProvider)">
            <summary>
            Default constructor 
            </summary>
            <param name="serviceProvder">Service provider</param>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMReferenceModeEditorToolWindow.TreeControl">
            <summary>
            Get the tree control for this editor
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMReferenceModeEditorToolWindow.WindowTitle">
            <summary>
            Returns the localized Tital for the too window
            </summary>
            <value></value>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMReferenceModeEditorToolWindow.Window">
            <summary>
            Provides and interface to expose Win32 handles
            </summary>
            <value></value>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMReferenceModeEditorToolWindow.ReferenceModeViewForm.TreeControl">
            <summary>
            Get the tree control for this editor
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ReferenceModeKindsBranch">
            <summary>
            Branch for all the differnt Reference mode kinds
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKindsBranch.SetModel(Northface.Tools.ORM.ObjectModel.ORMModel)">
            <summary>
            Sets the reference modes displayed on the tree
            </summary>
            <param name="model"></param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKindsBranch.PrettyFormatString(System.String)">
            <summary>
            Replaces the {0} and {1} with entityTypeName and referenceModeName
            </summary>
            <param name="uglyFormatString"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKindsBranch.UglyFormatString(System.String)">
            <summary>
            Replaces the {0} and {1} with entityTypeName and referenceModeName
            </summary>
            <param name="prettyFormatString"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKindsBranch.ReferenceModeKindChangeEvent(System.Object,Microsoft.VisualStudio.Modeling.ElementAttributeChangedEventArgs)">
            <summary>
            An IMS event to track the shape element added to the associated
            diagram during this connect action.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKindsBranch.AddStoreEvents(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Add events to the store during connect action
            activation. The default implementation watches for
            new external constraints added to the diagram.
            </summary>
            <param name="store">Store</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeKindsBranch.RemoveStoreEvents(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Removed any events added during the AddStoreEvents methods
            </summary>
            <param name="store">Store</param>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.Editors.ReadingEditor">
            <summary>
            Generated code behind for ReadingEditor control.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.Editors.ReadingEditor.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Editors.ReadingEditor.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Editors.ReadingEditor.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Editors.ReadingEditor.IsParticipant(Northface.Tools.ORM.ObjectModel.ObjectType,Northface.Tools.ORM.ObjectModel.Role[])">
            <summary>
            Tests if the ObjectType is the RolePlayer for any of Roles
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Editors.ReadingEditor.IsParticipant(Northface.Tools.ORM.ObjectModel.ObjectType,Northface.Tools.ORM.ObjectModel.Role)">
            <summary>
            Tests if the ObjectType is the RolePlayer of the Role
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Editors.ReadingEditor.IsParticipant(Northface.Tools.ORM.ObjectModel.ObjectType,Northface.Tools.ORM.ObjectModel.ReadingOrder)">
            <summary>
            Tests if the ObjectType is the RolePlayer of any Role
            contained in the ReadingOrder
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Editors.ReadingEditor.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Editors.ReadingEditor.RefreshReadingList">
            <summary>
            Causes the control to reload the reading list and refresh the display.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Editors.ReadingEditor.SelectNode(Northface.Tools.ORM.ObjectModel.RoleMoveableCollection)">
            <summary>
            Looks for the tree node that has the same role sequence
            as the one passed in, if found it will then select it.
            </summary>
            <param name="readingOrderRoles">The role sequence to match against</param>
            <returns>true if a selection was made, false otherwise</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Editors.ReadingEditor.ActivateReading(Northface.Tools.ORM.ObjectModel.Reading)">
            <summary>
            Select the current reading in the window. The
            reading must be the child of the current fact.
            </summary>
            <param name="reading">Reading</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Editors.ReadingEditor.ActivateReading(Northface.Tools.ORM.ObjectModel.FactType)">
            <summary>
            Select the primary reading of the reading order
            matching the fact's role display order if one exists,
            if not selects the new entry for the role
            sequence matching the facts role display order.
            </summary>
            <param name="fact">FactType</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Editors.ReadingEditor.AttachEventHandlers(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Attaches the event handlers to the store so that the tool window
            contents can be updated to reflect any model changes.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Editors.ReadingEditor.DetachEventHandlers(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            removes the event handlers from the store that were placed to allow
            the tool window to keep in sync with the mdoel
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Editors.ReadingEditor.SetTextOnTreeNodes(Northface.Tools.ORM.ObjectModel.ObjectType,System.Windows.Forms.TreeNodeCollection)">
            <summary>
            Tests if any custom nodes that have values based on the changed ObjectType
            are in the tree and initiates a text change if they are. Uses recursion
            to handle child nodes. It returns true if the tree or one of its children
            had to update its text because it was dependent on the object for its value.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Editors.ReadingEditor.RemoveReadingOrderRelatedEntries(Northface.Tools.ORM.ObjectModel.ReadingOrder)">
            <summary>
            Removes any ReadingEntry items from the list that are related
            to the indicated ReadingOrder
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Editors.ReadingEditor.RemoveReadingEntry(Northface.Tools.ORM.ObjectModel.Reading)">
            <summary>
            Handles removing the ReadingEntry for the specified Reading
            object and handles the branch update as well.
            </summary>
            <returns>Returns the index of the reading that was removed, -1 if it wasn't found.</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Editors.ReadingEditor.IndexOfReadingEntry(Northface.Tools.ORM.ObjectModel.Reading)">
            <summary>
            Locate the index of the ReadingEntry that represents the specified Reading.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Editors.ReadingEditor.EditingFactType">
            <summary>
            The fact that is being edited in the control, or that needs to be edited.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Editors.ReadingEditor.ReadingEntry.InvalidateText">
            <summary>
            Notifies the class that the text to display for the underlying reading
            needs to be regenerated.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Editors.ReadingEditor.ReadingBranch.ItemUpdate(System.Int32,System.Int32)">
            <summary>
            Triggers the events notifying the tree that an item in the branch has been updated.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Editors.ReadingEditor.ReadingBranch.ItemAdded(System.Int32)">
            <summary>
            Tell the branch to update it contents because an item has been added.
            </summary>
            <param name="row">zero based index of where the new item was placed.</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Editors.ReadingEditor.ReadingBranch.ItemRemoved(System.Int32)">
            <summary>
            Triggers notification that an item has been removed from the branch.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Editors.ReadingEditor.ReadingBranch.IsAdding">
            <summary>
            Used to find out if the branch is in the process of adding a new entry from
            input into the branch.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.FactEditor.FactLineType">
            <summary>
            The type of fact. Currently this is unused. It could be used to determine
            if there is an error on the line, e.g. No objects exist in the fact. Another
            possible type could indicate if the fact is objectified
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.FactEditor.FactLineType.ContainsObject">
            <summary>
            The fact contains no object types
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.FactEditor.FactLineType.Invalid">
            <summary>
            The fact is in an invalid state
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.FactEditor.FactTokenType">
            <summary>
            Valid token types for a fact
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.FactEditor.FactTokenType.Unknown">
            <summary>
            Unknown token
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.FactEditor.FactTokenType.Error">
            <summary>
             Errors
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.FactEditor.FactTokenType.EntityType">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.FactEditor.FactTokenType.ValueType">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.FactEditor.FactTokenType.Predicate">
            <summary>
            Predicate reading
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.FactEditor.FactTokenType.ReferenceMode">
            <summary>
            Reference Mode
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.FactEditor.FactTokenType.Parenthesis">
            <summary>
            Parenthesis
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.FactEditor.FactTokenMark">
            <summary>
            a token to be marked
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.FactEditor.FactTokenMark.TokenType">
            <summary>
            What type of token it is, e.g. Object, Predicate
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.FactEditor.FactTokenMark.nStart">
            <summary>
            The starting index in the string for this token
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.FactEditor.FactTokenMark.nEnd">
            <summary>
            The ending index in the string for this token
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.Shell.ORMBrowserToolWindow">
            <summary>
            This is the concrete tool window class that the Object Model Browser uses
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMBrowserToolWindow.#ctor(System.IServiceProvider)">
            <summary>
            Constructor
            </summary>
            <param name="serviceProvider">Service Provider</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMBrowserToolWindow.CreateTreeContainer">
            <summary>
            Create TreeContainer
            </summary>
            <returns>ModelExplorerTreeContainer</returns>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMBrowserToolWindow.WindowTitle">
            <summary>
            Retrieve the localized text for the model browser tool window
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.Shell.ORMBrowserToolWindow.ORMModelExplorerTreeContainer">
            <summary>
            Summary description for ORMModelExplorerTreeContainer.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMBrowserToolWindow.ORMModelExplorerTreeContainer.#ctor(System.IServiceProvider)">
            <summary>
            Constructor
            </summary>
            <param name="serviceProvider">Service</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMBrowserToolWindow.ORMModelExplorerTreeContainer.CreateElementVisitor">
            <summary>
            Create IElementVisitor
            </summary>
            <returns>IElementVisitor</returns>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.CustomReferenceModesBranch">
            <summary>
            The Custom Reference Modes branch;
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CustomReferenceModesBranch.SetModel(Northface.Tools.ORM.ObjectModel.ORMModel)">
            <summary>
            Sets the custom refernce modes.
            </summary>
            <param name="model"></param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CustomReferenceModesBranch.Delete(System.Int32,System.Int32)">
            <summary>
            Deletes a specific row
            </summary>
            <param name="row"></param>
            <param name="col"></param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CustomReferenceModesBranch.PrettyFormatString(System.String)">
            <summary>
            Replaces the {0} and {1} with entityTypeName and referenceModeName
            </summary>
            <param name="uglyFormatString"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CustomReferenceModesBranch.UglyFormatString(System.String)">
            <summary>
            Replaces the {0} and {1} with entityTypeName and referenceModeName
            </summary>
            <param name="prettyFormatString"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CustomReferenceModesBranch.ReferenceModeKindChangeEvent(System.Object,Microsoft.VisualStudio.Modeling.ElementAttributeChangedEventArgs)">
            <summary>
            An IMS event to track the shape element added to the associated
            diagram during this connect action.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CustomReferenceModesBranch.AddStoreEvents(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Add events to the store during connect action
            activation. The default implementation watches for
            new external constraints added to the diagram.
            </summary>
            <param name="store">Store</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CustomReferenceModesBranch.RemoveStoreEvents(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Removed any events added during the AddStoreEvents methods
            </summary>
            <param name="store">Store</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CustomReferenceModesBranch.DelayActivateKindDropdown(System.Object,System.EventArgs)">
            <summary>
            Select the kind column, activate the edit control, and
            open the dropdown. Implemented as a delayed event so we
            can call it indirectly from CommitLabelEdit.
            </summary>
            <param name="sender">VirtualTreeControl</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.CustomSetStringPropertyDescriptor">
            <summary>
            A helper class to enable returning custom values from
            the ElementPropertyDescriptor.GetSetFieldString function.
            The values appear in the undo/redo dropdowns in the shell.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CustomSetStringPropertyDescriptor.#ctor(System.String,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.ModelElement,System.Attribute[])">
            <summary>
            Create a new CustomSetStringPropertyDescriptor
            </summary>
            <param name="setString">The set string value</param>
            <param name="modelElement">forwarded to base</param>
            <param name="metaAttributeInfo">forwarded to base</param>
            <param name="requestor">forwarded to base</param>
            <param name="attributes">forwarded to base</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.CustomSetStringPropertyDescriptor.GetSetFieldString(System.String)">
            <summary>
            Return the user provided value for the set string.
            This shows up as the transaction name in shell's
            undo/redo dropdowns
            </summary>
            <param name="caption">ignored</param>
            <returns>setSetring value from constructor</returns>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ValueRangeShape">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ValueRangeShape.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ValueRangeShape.ValueRangeTextMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ValueRangeShape.ValueRangeTextBrush">
            <summary>
            A brush used to draw the value range text
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ValueRangeShape.InitializeResources(Microsoft.VisualStudio.Modeling.Diagrams.StyleSet)">
            <summary>
            Initialize a pen and a brush for drawing the constraint
            outlines and contents.
            </summary>
            <param name="classStyleSet">StyleSet</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ValueRangeShape.OnBoundsFixup(Microsoft.VisualStudio.Modeling.Diagrams.BoundsFixupState,System.Int32)">
            <summary>
            Move the name label above the parent shape
            </summary>
            <param name="fixupState">BoundsFixupState</param>
            <param name="iteration">int</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ValueRangeShape.CreateAutoSizeTextField">
            <summary>
            Overrides default implemenation to instantiate an Reading specific one.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ValueRangeShape.InvalidateDisplayText">
            <summary>
            Notifies the shape that the currently cached display text may no longer
            be accurate, so it needs to be recreated.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ValueRangeShape.UpdatePresentationRolePlayers(Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Invalidate the display text on all presentation role players associated
            with the given ValueRangeDefinition.
            </summary>
            <param name="e">The ValueRangeDefinition to update.</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ValueRangeShape.ActivateModelError(Northface.Tools.ORM.ObjectModel.ModelError)">
            <summary>
            Implements IModelErrorActivation.ActivateModelError. Forwards errors to
            associated fact type
            </summary>
            <param name="error">Activated model error</param>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ValueRangeShape.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ValueRangeShape.classStyleSet">
            <summary>
            Style Set
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ValueRangeShape.shapeFields">
            <summary>
            Shape Fields
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ValueRangeShape.ValueRangeTextMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ValueRangeShape.valueRangeShapeValueRangeTextFieldHandler">
            <summary>
            FieldHandler for ValueRangeShape.ValueRangeText field
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ValueRangeShape.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ValueRangeShape.CreateValueRangeShape(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ValueRangeShape.CreateAndInitializeValueRangeShape(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ValueRangeShape.GetCustomSerializedChildElementInfo">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ValueRangeShape.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ValueRangeShape.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ValueRangeShape.MapChildElement(System.String,System.String,System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ValueRangeShape.MapAttribute(System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ValueRangeShape.AssociatedShapeMetaAttributeGuid">
            <summary>
            Associate the value range text with this shape
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ValueRangeShape.AssociatedModelMetaAttributeGuid">
            <summary>
            Associate to the value range's text attribute
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ValueRangeShape.TextShapeField">
            <summary>
            Store per-type value for the base class
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ValueRangeShape.AssociatedRangeDefinition">
            <summary>
            Get the ValueRangeDefinition associated with this shape
            </summary>s
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ValueRangeShape.ShapeGeometry">
            <summary>
            Return a shape geometry that handles center-to-center routing
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ValueRangeShape.ResizableSides">
            <summary>
            Changed to allow resizing of the label
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ValueRangeShape.DisplayText">
            <summary>
            Constructs how the value range text should be displayed.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ValueRangeShape.ClassStyleSet">
            <summary>
            Style Set
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ValueRangeShape.ShapeFields">
            <summary>
            Shape Fields
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ValueRangeShape.ValueRangeText">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ValueRangeShape.SupportedCustomSerializedOperations">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ValueRangeShape.CustomSerializedElementInfo">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ValueRangeShape.CustomSerializedChildRoleComparer">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ValueRangeShape.ValueTypeHasDataTypeAdded">
            <summary>
            Rule to update an associated ValueRangeShape when a DataType is added (or changed).
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ValueRangeShape.ValueRangeChanged">
            <summary>
            Rule to notice changes to ValueRange properties so that the
            value range shapes can have their display text invalidated.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ValueRangeShape.ValueRangeChanged.ElementAttributeChanged(Microsoft.VisualStudio.Modeling.ElementAttributeChangedEventArgs)">
            <summary>
            Notice when the Min or Max attributes are changed and invalidate
            display text of the ValueRangeShapes.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ValueRangeShape.ValueRangeDefinitionAdded">
            <summary>
            Rule to notice the addition of ValueRangeDefinitionHasValueRange links so that the
            value range shapes can have their display text invalidated.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ValueRangeShape.ValueRangeDefinitionAdded.ElementAdded(Microsoft.VisualStudio.Modeling.ElementAddedEventArgs)">
            <summary>
            Notice when the ValueRangeDefinitionHasValueRange link is added
            and invalidate display text of the ValueRangeShapes.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ValueRangeShape.ValueRangeShapeValueRangeTextFieldHandler">
            <summary>
            Implement the field handler for ValueRangeShape.ValueRangeText
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ValueRangeShape.ValueRangeShapeValueRangeTextFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ValueRangeShape.ValueRangeShapeValueRangeTextFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the ValueRangeShape.ValueRangeText field handler
            </summary>
            <value>ValueRangeShapeValueRangeTextFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ValueRangeShape.ValueRangeShapeValueRangeTextFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the ValueRangeShape.ValueRangeText field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ValueRangeAutoSizeTextField">
            <summary>
            Contains code to create a value range text field.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ValueRangeAutoSizeTextField.GetDisplayText(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
            <summary>
            Code that handles retrieval of the text to display in ValueRangeShape.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ValueRangeAutoSizeTextField.GetMultipleLine(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
            <summary>
            Changed to return true to get multiple line support.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.Editors.RolePlayerPicker">
            <summary>
            An element picker to select role players. Associated with the Role.RolePlayerDisplay property
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Editors.RolePlayerPicker.GetContentList(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>
            Returns a list of role player candidates for a fact type.
            The nesting type is filtered out of the list.
            </summary>
            <param name="context">ITypeDescriptorContext. Used to retrieve the selected instance</param>
            <param name="value">The current value</param>
            <returns>A list of candidates</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Editors.RolePlayerPicker.NullItemText">
            <summary>
            The text for the first 'null' item in the
            dropdown. Clicking this item is equivalent to
            setting the property value to null.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Editors.RolePlayerPicker.LastControlSize">
            <summary>
            Manage control size independently
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.Editors.NestingTypePicker">
            <summary>
            An element picker to select nesting types for a fact type.
            Associated with the FactType.NestingTypeDisplay property
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Editors.NestingTypePicker.GetContentList(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>
            Returns a list of entity types that can be used to nest
            a fact type. Types already in use as nesting types, as well
            as roleplayers of the current fact are filtered out of the list.
            </summary>
            <param name="context">ITypeDescriptorContext. Used to retrieve the selected instance</param>
            <param name="value">The current value</param>
            <returns>A list of candidates</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Editors.NestingTypePicker.NullItemText">
            <summary>
            The text for the first 'null' item in the
            dropdown. Clicking this item is equivalent to
            setting the property value to null.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Editors.NestingTypePicker.LastControlSize">
            <summary>
            Manage control size independently
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.Editors.NestedFactTypePicker">
            <summary>
            An element picker to select nested fact types for an entity type.
            Associated with the ObjectType.NestedFactTypeDisplay property
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Editors.NestedFactTypePicker.GetContentList(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>
            Returns a list of fact types that can be nested by an entity type.
            Currently nested fact types are filtered out, as well as fact types
            where the current object type is a role player.
            </summary>
            <param name="context">ITypeDescriptorContext. Used to retrieve the selected instance</param>
            <param name="value">The current value</param>
            <returns>A list of candidates</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Editors.NestedFactTypePicker.NullItemText">
            <summary>
            The text for the first 'null' item in the
            dropdown. Clicking this item is equivalent to
            setting the property value to null.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Editors.NestedFactTypePicker.LastControlSize">
            <summary>
            Manage control size independently
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.Editors.DataTypePicker">
            <summary>
            An element picker to select data types for a value type.
            Associated with the ObjectType.DataTypeDisplay property
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Editors.DataTypePicker.GetContentList(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>
            Returns a list of data types that can be used by a value type.
            </summary>
            <param name="context">ITypeDescriptorContext. Used to retrieve the selected instance</param>
            <param name="value">The current value</param>
            <returns>A list of candidates</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Editors.DataTypePicker.LastControlSize">
            <summary>
            Manage control size independently
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.Editors.ReferenceModeKindPicker">
            <summary>
            An element picker to select reference mode kinds. Associated with the ReferenceMode.KindDisplay property
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Editors.ReferenceModeKindPicker.GetContentList(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>
            Returns a list of role player candidates for a fact type.
            The nesting type is filtered out of the list.
            </summary>
            <param name="context">ITypeDescriptorContext. Used to retrieve the selected instance</param>
            <param name="value">The current value</param>
            <returns>A list of candidates</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Editors.ReferenceModeKindPicker.LastControlSize">
            <summary>
            Manage control size independently
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.Editors.ReferenceModePicker">
            <summary>
            An element picker to select the reference mode for an object type. Associated with the 
            ObjectType.ReferenceModeDisplay property
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Editors.ReferenceModePicker.GetContentList(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>
            Returns a list of role player candidates for a fact type.
            The nesting type is filtered out of the list.
            </summary>
            <param name="context">ITypeDescriptorContext. Used to retrieve the selected instance</param>
            <param name="value">The current value</param>
            <returns>A list of candidates</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Editors.ReferenceModePicker.TranslateFromDisplayObject(System.Int32,System.Object)">
            <summary>
             Translates the formatted string from the drop down list to the corresponding
             reference mode
            </summary>
            <param name="newIndex"></param>
            <param name="newObject"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.Editors.ReferenceModePicker.TranslateToDisplayObject(System.Object,System.Collections.IList)">
            <summary>
            Translates from the reference mode object in the drop down list to the corresponding
            formatted string
            </summary>
            <param name="initialObject"></param>
            <param name="contentList"></param>
            <returns></returns>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.Editors.ReferenceModePicker.LastControlSize">
            <summary>
            Manage control size independently
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.IntrinsicReferenceModesBranch">
            <summary>
            The Intrinsic Reference Modes Branch on the tree
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.IntrinsicReferenceModesBranch.SetModel(Northface.Tools.ORM.ObjectModel.ORMModel)">
            <summary>
            Sets the reference modes for the control
            </summary>
            <param name="model"></param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.IntrinsicReferenceModesBranch.PrettyFormatString(System.String)">
            <summary>
            Replaces the {0} and {1} with entityTypeName and referenceModeName
            </summary>
            <param name="uglyFormatString"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.IntrinsicReferenceModesBranch.ReferenceModeKindChangeEvent(System.Object,Microsoft.VisualStudio.Modeling.ElementAttributeChangedEventArgs)">
            <summary>
            An IMS event to track the shape element added to the associated
            diagram during this connect action.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.IntrinsicReferenceModesBranch.AddStoreEvents(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Add events to the store during connect action
            activation. The default implementation watches for
            new external constraints added to the diagram.
            </summary>
            <param name="store">Store</param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.IntrinsicReferenceModesBranch.RemoveStoreEvents(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Removed any events added during the AddStoreEvents methods
            </summary>
            <param name="store">Store</param>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ExternalConstraintLink">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ExternalConstraintLink.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintLink.InitializeResources(Microsoft.VisualStudio.Modeling.Diagrams.StyleSet)">
            <summary>
            Override the connection line pen with a dashed pen
            </summary>
            <param name="classStyleSet"></param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintLink.ConfiguringAsChildOf(Northface.Tools.ORM.ShapeModel.ORMDiagram)">
            <summary>
            Configuring this link after it has been added to the diagram
            </summary>
            <param name="diagram">The parent diagram</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintLink.ModifyLuminosity(System.Int32,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
            <summary>
            Redirect all luminosity modification to the ORMDiagram.ModifyLuminosity
            algorithm
            </summary>
            <param name="currentLuminosity">The luminosity to modify</param>
            <param name="view">The view containing this item</param>
            <returns>Modified luminosity value</returns>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ExternalConstraintLink.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ExternalConstraintLink.classStyleSet">
            <summary>
            Style Set
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ExternalConstraintLink.shapeFields">
            <summary>
            Shape Fields
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintLink.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintLink.CreateExternalConstraintLink(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintLink.CreateAndInitializeExternalConstraintLink(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ExternalConstraintLink.DefaultRoutingStyle">
            <summary>
            Use a center to center routing style
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ExternalConstraintLink.CanSelect">
            <summary>
            Selecting external constraint links gets in the way of selecting other primary
            objects. It is best just to turn them off. This also eliminates a bunch of unnamed
            constraint links from the property grid element picker.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ExternalConstraintLink.OutlinePenId">
            <summary>
            Draw the connection lines as sticky along with the constraint
            and associated roles
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ExternalConstraintLink.CanManuallyRoute">
            <summary>
            Stop the user from manually routine link lines
            </summary>
            <value>false</value>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ExternalConstraintLink.AssociatedFactConstraint">
            <summary>
            Get the FactConstraint link associated with this link shape. The
            fact constraint link can be used to get the associated roles.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ExternalConstraintLink.ClassStyleSet">
            <summary>
            Style Set
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ExternalConstraintLink.ShapeFields">
            <summary>
            Shape Fields
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ORMDeserializationFixupPhase">
            <summary>
            Fixup stages supported during ORM deserialization
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ORMDeserializationFixupPhase.AddIntrinsicElements">
            <summary>
            Add any intrinsic elements at this stage. Intrinsic elements
            are not serialized but are always present in the model. For example,
            intrinsic data types or intrinsic reference modes.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ORMDeserializationFixupPhase.AddImplicitElements">
            <summary>
            Add implicit elements at this stage. An implicit element is
            not serialized and is generally created by a rule once the model
            is loaded.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ORMDeserializationFixupPhase.ValidateErrors">
            <summary>
            Model errors are stored with the model, but are vulnerable
            to the Notepad effect, which can cause errors to be added
            or removed from the model. Validate errors after all other
            explicit, intrinsic, and implicit elements are in place.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ORMDeserializationFixupPhase.AddImplicitPresentationElements">
            <summary>
            Add any presentation elements that are implicit and not
            serialized with the model.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ORMDeserializationFixupPhase.RemoveOrphanedPresentationElements">
            <summary>
            Remove any orphaned presentation elements, meaning any
            PresentationElement where the ModelElement role property is null.
            Orphaned pels are currently not supported.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ORMShapeModel">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ORMShapeModel.MetaModelGuidString">
            <summary>
            MetaModel Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ORMShapeModel.ResourceBaseName">
            <summary>
            The base name of this models resources.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ORMShapeModel.MetaModelGuid">
            <summary>
            MetaModel Guid
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMShapeModel.#ctor(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ORMShapeModel.internalSyncObject">
            <summary>
            A internal object used for synchronization.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ORMShapeModel.copyClosureMember">
            <summary>
            CopyClosure cache
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ORMShapeModel.removeClosureMember">
            <summary>
            RemoveClosure cache
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMShapeModel.GetClosureFilter(Microsoft.VisualStudio.Modeling.ClosureType,System.Collections.ICollection)">
            <summary>
            Returns an IElementVisitorFilter that corresponds to the ClosureType.
            </summary>
            <param name="type">closure type</param>
            <param name="rootElements">collection of root elements</param>
            <returns>IElementVisitorFilter or null</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMShapeModel.GetCustomElementNamespaces">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMShapeModel.ShouldSerializeMetaClass(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.MetaClassInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMShapeModel.MapRootElement(System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMShapeModel.MapClassName(System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ORMShapeModel.ResourceManager">
            <summary>
            Returns the SubStore's ResourceManager. If the ResourceManager does not already exist, then it is created.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ORMShapeModel.InternalSyncObject">
            <summary>
            Gets the internal object used for synchronization.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ORMShapeModel.SingletonResourceManager">
            <summary>
            Gets the Singleton ResourceManager for this SubStore
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ORMShapeModel.CopyClosure">
            <summary>
            CopyClosure cache
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ORMShapeModel.RemoveClosure">
            <summary>
            RemoveClosure cache
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ORMShapeModel.DefaultElementPrefix">
             <summary>
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ORMShapeModelCopyClosure">
            <summary>
            Copy closure visitor filter
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ORMShapeModelCopyClosure.metaRolesMember">
            <summary>
            MetaRoles
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMShapeModelCopyClosure.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMShapeModelCopyClosure.ShouldVisitRelationship(Microsoft.VisualStudio.Modeling.ElementWalker,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.MetaRoleInfo,Microsoft.VisualStudio.Modeling.MetaRelationshipInfo,Microsoft.VisualStudio.Modeling.ElementLink)">
            <summary>
            Called to ask the filter if a particular relationship from a source element should be included in the traversal
            </summary>
            <param name="walker">ElementWalker traversing the model</param>
            <param name="sourceElement">Model Element playing the source role</param>
            <param name="sourceRoleInfo">MetaRoleInfo of the role that the source element is playing in the relationship</param>
            <param name="metaRelationshipInfo">MetaRelationshipInfo for the ElementLink in question</param>
            <param name="targetRelationship">Relationship in question</param>
            <returns>Yes if the relationship should be traversed</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMShapeModelCopyClosure.ShouldVisitRolePlayer(Microsoft.VisualStudio.Modeling.ElementWalker,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementLink,Microsoft.VisualStudio.Modeling.MetaRoleInfo,Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Called to ask the filter if a particular role player should be Visited during traversal
            </summary>
            <param name="walker">ElementWalker traversing the model</param>
            <param name="sourceElement">Model Element playing the source role</param>
            <param name="elementLink">Element Link that forms the relationship to the role player in question</param>
            <param name="targetRoleInfo">MetaRoleInfo of the target role</param>
            <param name="targetRolePlayer">Model Element that plays the target role in the relationship</param>
            <returns></returns>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ORMShapeModelCopyClosure.MetaRoles">
            <summary>
            MetaRoles
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ORMShapeModelRemoveClosure">
            <summary>
            Remove closure visitor filter
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ORMShapeModelRemoveClosure.metaRolesMember">
            <summary>
            MetaRoles
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMShapeModelRemoveClosure.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMShapeModelRemoveClosure.ShouldVisitRelationship(Microsoft.VisualStudio.Modeling.ElementWalker,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.MetaRoleInfo,Microsoft.VisualStudio.Modeling.MetaRelationshipInfo,Microsoft.VisualStudio.Modeling.ElementLink)">
            <summary>
            Called to ask the filter if a particular relationship from a source element should be included in the traversal
            </summary>
            <param name="walker">ElementWalker that is traversing the model</param>
            <param name="sourceElement">Model Element playing the source role</param>
            <param name="sourceRoleInfo">MetaRoleInfo of the role that the source element is playing in the relationship</param>
            <param name="metaRelationshipInfo">MetaRelationshipInfo for the ElementLink in question</param>
            <param name="targetRelationship">Relationship in question</param>
            <returns>Yes if the relationship should be traversed</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMShapeModelRemoveClosure.ShouldVisitRolePlayer(Microsoft.VisualStudio.Modeling.ElementWalker,Microsoft.VisualStudio.Modeling.ModelElement,Microsoft.VisualStudio.Modeling.ElementLink,Microsoft.VisualStudio.Modeling.MetaRoleInfo,Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Called to ask the filter if a particular role player should be Visited during traversal
            </summary>
            <param name="walker">ElementWalker that is traversing the model</param>
            <param name="sourceElement">Model Element playing the source role</param>
            <param name="elementLink">Element Link that forms the relationship to the role player in question</param>
            <param name="targetRoleInfo">MetaRoleInfo of the target role</param>
            <param name="targetRolePlayer">Model Element that plays the target role in the relationship</param>
            <returns></returns>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ORMShapeModelRemoveClosure.MetaRoles">
            <summary>
            MetaRoles
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ObjectTypeShape">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.ShapeNameMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.ReferenceModeNameMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.ExpandRefModeMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.classStyleSet">
            <summary>
            Style Set
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.shapeFields">
            <summary>
            Shape Fields
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.ShapeNameMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.objectTypeShapeShapeNameFieldHandler">
            <summary>
            FieldHandler for ObjectTypeShape.ShapeName field
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.ReferenceModeNameMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.objectTypeShapeReferenceModeNameFieldHandler">
            <summary>
            FieldHandler for ObjectTypeShape.ReferenceModeName field
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.ExpandRefModeMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.objectTypeShapeExpandRefModeFieldHandler">
            <summary>
            FieldHandler for ObjectTypeShape.ExpandRefMode field
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.CreateObjectTypeShape(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.CreateAndInitializeObjectTypeShape(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.GetCustomSerializedChildElementInfo">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.MapChildElement(System.String,System.String,System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.MapAttribute(System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.InitializeResources(Microsoft.VisualStudio.Modeling.Diagrams.StyleSet)">
            <summary>
            Add a dashed pen to the class resource set
            </summary>
            <param name="classStyleSet">Shared class styleset instance</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.AutoResize">
            <summary>
            Size to ContentSize plus some margin padding.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.InitializeShapeFields(Microsoft.VisualStudio.Modeling.Diagrams.ShapeFieldCollection)">
            <summary>
            Creates and adds shape fields to this shape type. Called once per type.
            </summary>
            <param name="shapeFields">The shape fields collection for this shape type.</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.ShouldAddShapeForElement(Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Add a shape element linked to this parent to display the value range
            </summary>
            <param name="element">ModelElement of type ObjectType</param>
            <returns>true</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.ChooseRelationship(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
            <summary>
            Makes a shape a relative child element.
            </summary>
            <param name="childShape">The ShapeElement to get the ReleationshipType for.</param>
            <returns>RelationshipType.Relative</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.ClassStyleSet">
            <summary>
            Style Set
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.ShapeFields">
            <summary>
            Shape Fields
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.ShapeName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.ReferenceModeName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.ExpandRefMode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.SupportedCustomSerializedOperations">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.CustomSerializedElementInfo">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.CustomSerializedChildRoleComparer">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.OutlinePenId">
            <summary>
            Switch between the standard solid pen and
            a dashed pen depending on the objectification settings
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.DefaultSize">
            <summary>
            Set the default size for this object. This value is basically
            ignored because the size is ultimately based on the contained
            text, but it needs to be set.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.ShapeGeometry">
            <summary>
            Get the shape of an object type. Controllable via the ORM Designer
            tab on the options page.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.ContentSize">
            <summary>
            Set the content size to the text size
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.TextShapeField">
            <summary>
            Retrieve the (singleton) shape field for the text
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.ReferenceModeShapeField">
            <summary>
            Retrieve the (singleton) shape field for the reference mode text
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.AssociatedObjectType">
            <summary>
            Get the ObjectTypeType associated with this shape
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.ObjectTypeShapeShapeNameFieldHandler">
            <summary>
            Implement the field handler for ObjectTypeShape.ShapeName
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.ObjectTypeShapeShapeNameFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.ObjectTypeShapeShapeNameFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the ObjectTypeShape.ShapeName field handler
            </summary>
            <value>ObjectTypeShapeShapeNameFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.ObjectTypeShapeShapeNameFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the ObjectTypeShape.ShapeName field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.ObjectTypeShapeReferenceModeNameFieldHandler">
            <summary>
            Implement the field handler for ObjectTypeShape.ReferenceModeName
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.ObjectTypeShapeReferenceModeNameFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.ObjectTypeShapeReferenceModeNameFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the ObjectTypeShape.ReferenceModeName field handler
            </summary>
            <value>ObjectTypeShapeReferenceModeNameFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.ObjectTypeShapeReferenceModeNameFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the ObjectTypeShape.ReferenceModeName field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.ObjectTypeShapeExpandRefModeFieldHandler">
            <summary>
            Implement the field handler for ObjectTypeShape.ExpandRefMode
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.ObjectTypeShapeExpandRefModeFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.ObjectTypeShapeExpandRefModeFieldHandler.GetValue(Northface.Tools.ORM.ShapeModel.ObjectTypeShape)">
            <summary>
            Gets the value of the attribute as it exists in the element
            </summary>
            <param name="element">the ObjectTypeShape</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.ObjectTypeShapeExpandRefModeFieldHandler.SetValue(Northface.Tools.ORM.ShapeModel.ObjectTypeShape,System.Boolean,Microsoft.VisualStudio.Modeling.CommandFactory,System.Boolean,System.Boolean@)">
            <summary>
            Sets the value into the element
            </summary>
            <param name="element">the element</param>
            <param name="value">new value</param>
            <param name="commandFactory">the command factory for this change</param>
            <param name="allowDuplicates">allow duplicate value to continue to fire rules and events</param>
            <param name="oldValue">the old value before the change</param>
            <returns>true if the value actually changed</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.ObjectTypeShapeExpandRefModeFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the ObjectTypeShape.ExpandRefMode field handler
            </summary>
            <value>ObjectTypeShapeExpandRefModeFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ObjectTypeShape.ObjectTypeShapeExpandRefModeFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the ObjectTypeShape.ExpandRefMode field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ObjectTypeShapeElementFactoryCreator">
            <summary>
            ObjectTypeShape Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ObjectTypeShapeElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ObjectTypeShapeElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.FactTypeShape">
            <summary>
            
            </summary>
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.FactTypeShape.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintDisplayPositionMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.FactTypeShape.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.FactTypeShape.classStyleSet">
            <summary>
            Style Set
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.FactTypeShape.shapeFields">
            <summary>
            Shape Fields
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintDisplayPositionMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.FactTypeShape.factTypeShapeConstraintDisplayPositionFieldHandler">
            <summary>
            FieldHandler for FactTypeShape.ConstraintDisplayPosition field
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.CreateFactTypeShape(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.CreateAndInitializeFactTypeShape(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.GetCustomSerializedChildElementInfo">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.MapChildElement(System.String,System.String,System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.MapAttribute(System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.FactTypeShape.PreDefinedConstraintBoxRoleActivities_FullySpanning">
            <summary>
            A ConstraintBoxRoleActivity[] for a fully-spanning uniqueness constraint.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.FactTypeShape.PreDefinedConstraintBoxRoleActivities_AntiSpanning">
            <summary>
            A ConstraintBoxRoleActivity[] for an undefined uniqueness constraint.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.FactTypeShape.PreDefinedConstraintBoxRoleActivities_BinaryLeft">
            <summary>
            A ConstraintBoxRoleActivity[] for an n-1 binary fact with the first role active.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.FactTypeShape.PreDefinedConstraintBoxRoleActivities_BinaryRight">
            <summary>
            A ConstraintBoxRoleActivity[] for an n-1 binary fact with the second role active.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.FactTypeShape.PreDefinedConstraintBoxRoleActivities_TernaryLeft">
            <summary>
            A ConstraintBoxRoleActivity[] for an n-1 ternary fact with the first and second roles active.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.FactTypeShape.PreDefinedConstraintBoxRoleActivities_TernaryCenter">
            <summary>
            A ConstraintBoxRoleActivity[] for an n-1 ternary fact with the first and third roles active.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.FactTypeShape.PreDefinedConstraintBoxRoleActivities_TernaryRight">
            <summary>
            A ConstraintBoxRoleActivity[] for an n-1 ternary fact with the second and third roles active.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.WalkConstraintBoxes(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Northface.Tools.ORM.ShapeModel.ConstraintDisplayPosition,Northface.Tools.ORM.ShapeModel.FactTypeShape.VisitConstraintBox)">
            <summary>
            Determines the bounding boxes of all the constraints associated with the FactType,
            then passes those bounding boxes into the delegate.  Specifically, it will pass in
            the bounding box, the number of roles in the box, a ConstraintRoleBoxActivity[] telling the method
            which roles are active for the constraint, and the constraint type.
            </summary>
            <param name="shapeField">The ShapeField whose bounds define the space that the ConstraintBoxes will be built in.</param>
            <param name="displayPosition">The position the constraint will be displayed in</param>
            <param name="boxUser">The VisitConstraintBox delegate that will use the ConstraintBoxes produced by WalkConstraintBoxes.</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.WalkConstraintBoxes(Microsoft.VisualStudio.Modeling.Diagrams.RectangleD,Northface.Tools.ORM.ShapeModel.ConstraintDisplayPosition,Northface.Tools.ORM.ShapeModel.FactTypeShape.VisitConstraintBox)">
            <summary>
            Determines the bounding boxes of all the constraints associated with the FactType,
            then passes those bounding boxes into the delegate.  Specifically, it will pass in
            the bouding box, the number of roles in the box, a boolean[] telling the method
            which roles are active for the constraint, and the constraint type.
            </summary>
            <param name="fullBounds">The bounds the rectangles need to fit in.  Pass RectangleD.Empty if unknown.</param>
            <param name="displayPosition">The position the constraint will be displayed in</param>
            <param name="boxUser">The VisitConstraintBox delegate that will use the ConstraintBoxes 
            produced by WalkConstraintBoxes.</param>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.FactTypeShape.RoleBoxResource">
            <summary>
            Pen to draw a role box outline
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.FactTypeShape.RolePickerForeground">
            <summary>
            Brush to draw the foreground text for a role picker  
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.FactTypeShape.InternalFactConstraintPen">
            <summary>
            Pen to draw the active part of an internal uniqueness constraint.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.GetSubFieldRepresentedElements(Microsoft.VisualStudio.Modeling.Diagrams.ShapeField,Microsoft.VisualStudio.Modeling.Diagrams.ShapeSubField)">
            <summary>
            Get the role corresponding to the given subField
            </summary>
            <param name="shapeField">The containing shape field (will always be the RolesShapeField)</param>
            <param name="subField">A RoleSubField</param>
            <returns>A Role element</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.DrawHighlight(System.Drawing.Graphics,System.Drawing.RectangleF,System.Boolean,System.Boolean)">
            <summary>
            Standard method to draw a consistent highlight within the FactTypeShape.
            </summary>
            <param name="g">The Graphics object to draw to.</param>
            <param name="bounds">The bounds of the highlight to draw.</param>
            <param name="isStuck">Bool indicating if the object to draw the highlight on
            is currently the "sticky" object.</param>
            <param name="isHighlighted">Bool indicating if object should be drawn highlighted.</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.InitializeResources(Microsoft.VisualStudio.Modeling.Diagrams.StyleSet)">
            <summary>
            Change the outline pen to a thin black line for all instances
            of this shape.
            </summary>
            <param name="classStyleSet">The style set to modify</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.InitializeShapeFields(Microsoft.VisualStudio.Modeling.Diagrams.ShapeFieldCollection)">
            <summary>
            Create our one placeholder shape field, which fills the whole shape
            and contains our role boxes.
            </summary>
            <param name="shapeFields">Per-class collection of shape fields</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.AutoResize">
            <summary>
            Size to ContentSize plus some margin padding if we're a nested fact type.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintSetChanged(Northface.Tools.ORM.ObjectModel.FactType,Northface.Tools.ORM.ObjectModel.IConstraint,System.Boolean)">
            <summary>
            Called during a transaction when a new constraint
            is added or removed that is associated with a fact.
            </summary>
            <param name="factType">The associated FactType</param>
            <param name="constraint">The newly added or removed constraint</param>
            <param name="roleChangeOnly">A role was added or removed</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.ShouldAddShapeForElement(Microsoft.VisualStudio.Modeling.ModelElement)">
            <summary>
            Add a shape element linked to this parent to display the name
            of the objectifying type
            </summary>
            <param name="element">ModelElement of type ObjectType</param>
            <returns>true</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.ChooseShape(Microsoft.VisualStudio.Modeling.ModelElement,System.Collections.IList)">
            <summary>
            An object type is displayed as an ObjectTypeShape unless it is
            objectified, in which case we display it as an ObjectifiedFactTypeNameShape
            </summary>
            <param name="element">The element to test. Expecting an ObjectType.</param>
            <param name="shapeTypes">The choice of shape types</param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.ChooseRelationship(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
            <summary>
            Makes an ObjectifiedFactTypeNameShape, ReadingShape, or ValueRangeShape a
            relative child element.
            </summary>
            <param name="childShape">The ShapeElement to get the ReleationshipType for.</param>
            <returns>RelationshipType.Relative</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.GetProperties(System.Attribute[])">
            <summary>
            Show selected properties from the nesting type and the
            fact type for an objectified type, as well as expandable
            nodes for each of the underlying instances.
            </summary>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.CalculateConnectionPoint(Microsoft.VisualStudio.Modeling.Diagrams.NodeShape)">
            <summary>
            Implements ICustomShapeFolding.CalculateConnectionPoint
            </summary>
            <param name="oppositeShape">The opposite shape we're connecting to</param>
            <returns>The point to connect to. May be internal to the object, or on the boundary.</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.ActivateModelError(Northface.Tools.ORM.ObjectModel.ModelError)">
            <summary>
            Implements IModelErrorActivation.ActivateModelError
            </summary>
            <param name="error">Activated model error</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.GetAbsoluteConstraintAttachPoint(Northface.Tools.ORM.ObjectModel.IConstraint)">
            <summary>
            Gets the attach point of the specific constraint within this shape.
            </summary>
            <param name="constraint">The constraint to find the location of.</param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.ShouldDrawConstraintPreferred(Northface.Tools.ORM.ObjectModel.IConstraint)">
            <summary>
            The core shape model only draws preferred constraints
            for the conceptual preferred identifier concept. This does
            not include concepts such as the relational multi-column primary
            key, so (for example), there is no way to make a spanning constraint
            primary in the core model. Override this function in a derived model
            to represented a primary identifier as a preferred constraint.
            </summary>
            <param name="constraint">Any constraint. In the core model, only uniqueness
            constraints will be preferred</param>
            <returns>true if the PreferredIdentifierFor property on the role is not null.</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FactTypeShape.ClassStyleSet">
            <summary>
            Style Set
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FactTypeShape.ShapeFields">
            <summary>
            Shape Fields
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintDisplayPosition">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FactTypeShape.SupportedCustomSerializedOperations">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FactTypeShape.CustomSerializedElementInfo">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FactTypeShape.CustomSerializedChildRoleComparer">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FactTypeShape.DefaultShapeField">
            <summary>
            The roles shape field is the default and only shape field inside
            a FactType shape.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintErrorForeColor">
            <summary>
            The color to use when drawing constraint errors.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FactTypeShape.HasSubFieldHighlighting">
            <summary>
            Set to true. Enables role highlighting
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FactTypeShape.DefaultSize">
            <summary>
            Set the default size for this object. This value is basically
            ignored because the size is ultimately based on the contained
            text, but it needs to be set.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FactTypeShape.OutlinePenId">
            <summary>
            Use the rolebox outline pen unless we're objectified
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FactTypeShape.RolesShape">
            <summary>
            The shape field used to display roles
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FactTypeShape.HasHighlighting">
            <summary>
            Highlight region surrounding the roles box if
            it is objectified
            </summary>
            <value>True if the fact type is nested</value>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FactTypeShape.HasOutline">
            <summary>
            Show an outline around the fact type only
            if it is objectified.
            </summary>
            <value>True if the fact type is nested</value>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FactTypeShape.ContentSize">
            <summary>
            Set the content size of the FactTypeShape
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FactTypeShape.ShapeGeometry">
            <summary>
            Return different shapes for objectified versus non-objectified fact types.
            The actual shape is controlled by the tools options page.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FactTypeShape.AssociatedFactType">
            <summary>
            Get the FactType associated with this shape
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FactTypeShape.IsObjectified">
            <summary>
            Return true if the associated fact type is an objectified fact
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FactTypeShape.ActiveExternalConstraintConnectAction">
            <summary>
            Static property set when an external constraint is being created. The active
            connection is used to track which roles are highlighted.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FactTypeShape.ActiveInternalUniquenessConstraintConnectAction">
            <summary>
            Static property set when an internal constraint is being created. The active
            connection is used to track which roles are highlighted.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.FactTypeShape.FactTypeShapeConstraintDisplayPositionFieldHandler">
            <summary>
            Implement the field handler for FactTypeShape.ConstraintDisplayPosition
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.FactTypeShapeConstraintDisplayPositionFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.FactTypeShapeConstraintDisplayPositionFieldHandler.GetValue(Northface.Tools.ORM.ShapeModel.FactTypeShape)">
            <summary>
            Gets the value of the attribute as it exists in the element
            </summary>
            <param name="element">the FactTypeShape</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.FactTypeShapeConstraintDisplayPositionFieldHandler.SetValue(Northface.Tools.ORM.ShapeModel.FactTypeShape,Northface.Tools.ORM.ShapeModel.ConstraintDisplayPosition,Microsoft.VisualStudio.Modeling.CommandFactory,System.Boolean,Northface.Tools.ORM.ShapeModel.ConstraintDisplayPosition@)">
            <summary>
            Sets the value into the element
            </summary>
            <param name="element">the element</param>
            <param name="value">new value</param>
            <param name="commandFactory">the command factory for this change</param>
            <param name="allowDuplicates">allow duplicate value to continue to fire rules and events</param>
            <param name="oldValue">the old value before the change</param>
            <returns>true if the value actually changed</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FactTypeShape.FactTypeShapeConstraintDisplayPositionFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the FactTypeShape.ConstraintDisplayPosition field handler
            </summary>
            <value>FactTypeShapeConstraintDisplayPositionFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FactTypeShape.FactTypeShapeConstraintDisplayPositionFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the FactTypeShape.ConstraintDisplayPosition field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintBoxRoleActivity">
            <summary>
            The activity of a role in a ConstraintBox
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintBoxRoleActivity.Inactive">
            <summary>
            The role is inactive
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintBoxRoleActivity.Active">
            <summary>
            The role is active
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintBoxRoleActivity.NotInBox">
            <summary>
            The role is, technically speaking, not supposed to be in this box.  Only used for binary fact internal constraint compression.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintBox">
            <summary>
            Defines a box to contain the constraint.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintBox.myBounds">
            <summary>
            The bounding box to use.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintBox.myConstraintType">
            <summary>
            The type of constraint contained is this box.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintBox.myActiveRoles">
            <summary>
            Roles relative to the current order of the roles
            on the facr for which this constraint applies.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintBox.myFactConstraint">
            <summary>
            The constraint object this box is for.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintBox.myIsHidden">
            <summary>
            True if the box is explicitly hidden 
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintBox.myRoleCollection">
            <summary>
            The cached role collection
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintBox.#ctor(Northface.Tools.ORM.ObjectModel.IFactConstraint,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="factConstraint">A reference to the original constraint that this ConstraintBox is based on.</param>
            <param name="factRoleCount">The number of roles for the context fact.</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintBox.#ctor(Northface.Tools.ORM.ObjectModel.IFactConstraint,Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintBoxRoleActivity[])">
            <summary>
            Constructor
            </summary>
            <param name="factConstraint">A reference to the original constraint that this ConstraintBox is based on.</param>
            <param name="roleActivity">A representation of the factConstraint's role activity within the fact.</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintBox.GroupConstraintBoxes(Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintBox[])">
            <summary>
            Order the constraint boxes into their respective groups,
            with internal followed by external. This allows for group
            analysis and hiding of individual boxes prior to a full sort.
            </summary>
            <param name="boxes"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintBox.OrderConstraintBoxes(Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintBox[],System.Int32)">
            <summary>
            Sort the constraint boxes and place non-displayed constraints
            at the end of the array. Return the number of boxes that
            actually need displaying.
            </summary>
            <param name="boxes">An existing array of constraint boxes
            created with the parametrized constructor</param>
            <param name="fullCount">The number of boxes to use. Elements with index >= fullCount
            are ignored.</param>
            <returns>The number of significant boxes</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintBox.RelativeSortPosition(Northface.Tools.ORM.ObjectModel.ConstraintType)">
            <summary>
            Helper function for Compare to determine
            the relative order of different constraint types.
            </summary>
            <param name="constraintType">ConstraintType value</param>
            <returns>Relative numbers (the exact values should not matter).</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintBox.IsConstraintTypeVisible(Northface.Tools.ORM.ObjectModel.ConstraintType)">
            <summary>
            Is the constraint type ever visible to the ConstraintBox walking
            algorithm? A true return here does not guarantee that a specific constraint
            instance of this type is visible, only that constraints of this type can
            be visible.
            </summary>
            <param name="constraintType">ConstraintType value</param>
            <returns>true if the constraint can be drawn visibly</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintBox.Bounds">
            <summary>
            The bounding box to use.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintBox.ConstraintType">
            <summary>
            The type of constraint contained is this box.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintBox.ActiveRoles">
            <summary>
            Roles relative to the current order of the roles
            on the fact for which this constraint applies.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintBox.FactConstraint">
            <summary>
            The constraint object this box is for.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintBox.RoleCollection">
            <summary>
            A (cached) reference to the fact constraint's role collection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintBox.IsSpanning">
            <summary>
            Tests if this constraint is a fully spanning constraint.
            </summary>
            <value>True if the constraint is fully spanning.</value>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintBox.IsAntiSpanning">
            <summary>
            Tests if this constraint is undefined (AntiSpanning).
            </summary>
            <value>True if the constraint is undefined.</value>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintBox.IsHidden">
            <summary>
            True if the box is explicitly hidden 
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintBox.IsValid">
            <summary>
            Tests if this constraint is valid in combination with the other existing constraints on the fact type.
            </summary>
            <value>True if the constraint is valid.</value>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.FactTypeShape.VisitConstraintBox">
            <summary>
            Do something within the bounds you're given.  This may include
            painting, hit testing, highlighting, etc.
            </summary>
            <param name="constraintBox">The constraint that is being described</param>
            <returns>bool</returns>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.FactTypeShape.SpacerShapeField">
            <summary>
            Creates a shape to properly align the other shapefields within the FactTypeShape.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.SpacerShapeField.#ctor">
            <summary>
            Construct a default SpacerShapeField
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.SpacerShapeField.GetMinimumWidth(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
            <summary>
            Width is that of NestedFactHorizontalMargin if parentShape is objectified; otherwise, zero.
            </summary>
            <returns>NestedFactHorizontalMargin if objectified; otherwise, 0.</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.SpacerShapeField.GetMinimumHeight(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
            <summary>
            Width is that of NestedFactVerticalMargin if parentShape is objectified; otherwise, zero.
            </summary>
            <returns>NestedFactVerticalMargin if objectified; otherwise, 0.</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintShapeField.DoHitTest(Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.DiagramHitTestInfo)">
            <summary>
            Find the constraint sub shape at this location
            </summary>
            <param name="point">The point being hit-tested.</param>
            <param name="parentShape">The current ShapeField that the mouse is over.</param>
            <param name="diagramHitTestInfo">The DiagramHitTestInfo to which the ConstraintSubShapField
            will be added if the mouse is over it.</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintShapeField.GetMinimumWidth(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
            <summary>
            Get the minimum width of the ConstraintShapeField.
            </summary>
            <param name="parentShape">The FactTypeShape that this ConstraintShapeField is associated with.</param>
            <returns>The width of the ConstraintShapeField.</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintShapeField.GetMinimumHeight(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
            <summary>
            Get the minimum height of the ConstraintShapeField.
            </summary>
            <param name="parentShape">The FactTypeShape that this ConstraintShapeField is associated with.</param>
            <returns>The height of the ConstraintShapeField.</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintShapeField.DoPaint(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
            <summary>
            Paints the contstraints.
            </summary>
            <param name="e">DiagramPaintEventArgs with the Graphics object to draw to.</param>
            <param name="parentShape">ConstraintShapeField to draw to.</param>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintShapeField.ForHitTest">
            <summary>
            Handles hit test of the constraint
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintShapeField.ForHitTest.TestForHit(Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintBox@)">
            <summary>
            Tests if a specific constraint is at this location.
            </summary>
            <param name="constraintBox">The constraint to look for</param>
            <returns>true</returns>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintShapeField.ForMinimumHeight">
            <summary>
            Helper class for GetMinimumHeight.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintShapeField.ForDrawing">
            <summary>
            Helper class for DoPaint().  Handles drawing of the constraint.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintShapeField.ForDrawing.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs,Northface.Tools.ORM.ShapeModel.FactTypeShape,Northface.Tools.ORM.ShapeModel.ConstraintDisplayPosition)">
            <summary>
            Constructor
            </summary>
            <param name="e">DiagramPaintEventArgs with the Graphics object to draw to.</param>
            <param name="parentShape">ConstraintShapeField to draw to.</param>
            <param name="position">The position of the constraint being drawn</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintShapeField.ForDrawing.DrawConstraint(Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintBox@)">
            <summary>
            Does the actual drawing of a constraint.
            </summary>
            <param name="constraintBox">The constraint to draw.</param>
            <returns>False if constraint is not an internal uniqueness constraint; otherwise, true.</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintShapeField.ForDrawing.DrawInternalConstraintLine(System.Drawing.Graphics,System.Drawing.Pen,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Draws a regular constraint line
            </summary>
            <param name="g">The graphics object to draw to</param>
            <param name="pen">The pen to use</param>
            <param name="startPos">The x-coordinate of the left edge to draw at.</param>
            <param name="endPos">The x-coordinate of the right edge to draw at.</param>
            <param name="verticalPos">The y-coordinate to draw at.</param>
            <param name="preferred">Whether or not to draw the constraint as preffered.</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintSubField.#ctor(Northface.Tools.ORM.ObjectModel.IConstraint)">
            <summary>
            Default constructor
            </summary>
            <param name="associatedConstraint">The Constraint that this ConstraintSubfield will represent.</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintSubField.SubFieldEquals(System.Object)">
            <summary>
            Returns true if the fields have the same associated role
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintSubField.GetSelectable(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField)">
            <summary>
            A role sub field is always selectable, return true regardless of parameters
            </summary>
            <returns>true</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintSubField.GetFocusable(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField)">
            <summary>
            A role sub field is always focusable, return true regardless of parameters
            </summary>
            <returns>true</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintSubField.GetBounds(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField)">
            <summary>
            Returns bounds based on the size of the parent shape
            and the RoleIndex of this shape
            </summary>
            <param name="parentShape">The containing FactTypeShape</param>
            <param name="parentField">The containing shape field</param>
            <returns>The vertical slice for this role</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintSubField.SubFieldHashCode">
            <summary>
            Returns the hash code for the associated role
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FactTypeShape.ConstraintSubField.AssociatedConstraint">
            <summary>
            Get the Constraint element associated with this sub field
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.RolesShapeField.#ctor">
            <summary>
            Construct a default RolesShapeField (Visible, but not selectable or focusable)
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.RolesShapeField.DoHitTest(Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.DiagramHitTestInfo)">
            <summary>
            Find the role sub shape at this location
            </summary>
            <param name="point"></param>
            <param name="parentShape"></param>
            <param name="diagramHitTestInfo"></param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.RolesShapeField.GetMinimumWidth(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
            <summary>
            Get the minimum width of this RolesShapeField.
            </summary>
            <param name="parentShape">The FactTypeShape associated with this RolesShapeField.</param>
            <returns>The width of this RolesShapeField.</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.RolesShapeField.GetMinimumHeight(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
            <summary>
            Get the minimum height of this RolesShapeField.
            </summary>
            <param name="parentShape">The FactTypeShape associated with this RolesShapeField.</param>
            <returns>The height of this RolesShapeField.</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.RolesShapeField.DoPaint(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPaintEventArgs,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
            <summary>
            Paint the RolesShapeField
            </summary>
            <param name="e">DiagramPaintEventArgs with the Graphics object to draw to.</param>
            <param name="parentShape">FactTypeShape to draw to.</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.RolesShapeField.DrawHighlight(System.Drawing.Graphics,Microsoft.VisualStudio.Modeling.Diagrams.StyleSet,System.Drawing.RectangleF,System.Boolean)">
            <summary>
            Draws a role highlight.
            </summary>
            <param name="g">The Graphics object to draw to.</param>
            <param name="styleSet">The StyleSet of the shape we are drawing to.</param>
            <param name="bounds">The bounds to draw as the highlight.</param>
            <param name="active">Boolean indicating whether or not to draw highlight as active (ex: the mouse is currently over this highlight).</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.RoleSubField.SubFieldEquals(System.Object)">
            <summary>
            Returns true if the fields have the same associated role
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.RoleSubField.GetSelectable(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField)">
            <summary>
            A role sub field is always selectable, return true regardless of parameters
            </summary>
            <returns>true</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.RoleSubField.GetFocusable(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField)">
            <summary>
            A role sub field is always focusable, return true regardless of parameters
            </summary>
            <returns>true</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.RoleSubField.GetBounds(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeField)">
            <summary>
            Returns bounds based on the size of the parent shape
            and the RoleIndex of this shape
            </summary>
            <param name="parentShape">The containing FactTypeShape</param>
            <param name="parentField">The containing shape field</param>
            <returns>The vertical slice for this role</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FactTypeShape.RoleSubField.SubFieldHashCode">
            <summary>
            Returns the hash code for the associated role
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FactTypeShape.RoleSubField.AssociatedRole">
            <summary>
            Get or set the Role element associated with this sub field
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FactTypeShape.RoleSubField.RoleIndex">
            <summary>
            Returns the index of the associated Role element in its
            containing collection.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.FactTypeShape.ExpandableStringConverter">
            <summary>
            A helper class to enable an object to be displayed as expandable,
            and have one string attribute specified as an editable string.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.ExpandableStringConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Allow conversion from a string
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="sourceType">Type</param>
            <returns>true for a string type</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.ExpandableStringConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Allow conversion to a string. Note that the base class
            handles the ConvertTo function for us.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="destinationType">Type</param>
            <returns>true for a stirng type</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.ExpandableStringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Convert from a string to the specified string
            meta attribute on the context element.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="culture">CultureInfo</param>
            <param name="value">New value for the attribute</param>
            <returns>context.Instance for a string value, defers to base otherwise</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.ExpandableStringConverter.ConvertContextToElement(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Override to retrieve the ModelElement to modify from the context
            information.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <returns>ModelElement</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FactTypeShape.ExpandableStringConverter.PrimaryStringAttributeId">
            <summary>
            Override to specify the string property to represent
            as the string value for the object. Defaults to
            NamedElement.NameMetaAttributeGuid.
            </summary>
            <value></value>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.FactTypeShape.HeaderDescriptor">
            <summary>
            A property descriptor implementation to
            use a ModelElement as an attribute
            in the property grid. Use with a realized
            ExpandableStringConverter instance to create
            an expandable property with an editable text field.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.HeaderDescriptor.#ctor(Microsoft.VisualStudio.Modeling.ModelElement,System.ComponentModel.TypeConverter)">
            <summary>
            Create a descriptor for the specified element and
            type converter.
            </summary>
            <param name="wrapElement">ModelElement</param>
            <param name="converter">TypeConverter (can be null)</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.HeaderDescriptor.CanResetValue(System.Object)">
            <summary>
            Disallow resetting the value
            </summary>
            <param name="component">object</param>
            <returns>false</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.HeaderDescriptor.GetValue(System.Object)">
            <summary>
            Return the wrapped element as the property value
            </summary>
            <param name="component">object (ignored)</param>
            <returns>wrapElement value specified in constructor</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.HeaderDescriptor.ShouldSerializeValue(System.Object)">
            <summary>
            Do not serialize
            </summary>
            <param name="component"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.HeaderDescriptor.ResetValue(System.Object)">
            <summary>
            Do not reset
            </summary>
            <param name="component"></param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.HeaderDescriptor.SetValue(System.Object,System.Object)">
            <summary>
            Do nothing. All value setting in this case
            is done by the type converter.
            </summary>
            <param name="component">object</param>
            <param name="value">object</param>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FactTypeShape.HeaderDescriptor.Converter">
            <summary>
            Return the converter specified in the constructor
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FactTypeShape.HeaderDescriptor.DisplayName">
            <summary>
            Use the underlying class name as the display name
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FactTypeShape.HeaderDescriptor.ComponentType">
            <summary>
            Return this object as the component type
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FactTypeShape.HeaderDescriptor.IsReadOnly">
            <summary>
            Returns false
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.FactTypeShape.HeaderDescriptor.PropertyType">
            <summary>
            Specify the type of the wrapped element
            as the PropertyType
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.FactTypeShape.ObjectifiedFactPropertyConverter">
            <summary>
            A type converter for showing the raw fact type
            as an expandable property in a nested fact type.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.ObjectifiedFactPropertyConverter.ConvertContextToElement(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Convert from a FactTypeShape to a FactType
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <returns></returns>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.FactTypeShape.ObjectifyingEntityTypePropertyConverter">
            <summary>
            A type converter for showing the nesting type
            as an expandable property in a nested fact type.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShape.ObjectifyingEntityTypePropertyConverter.ConvertContextToElement(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Convert from a FactTypeShape to the nesting EntityType
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <returns></returns>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.FactTypeShape.ExternalConstraintShapeChangeRule">
            <summary>
            Class to force the external constraint link bars to redraw and/or reposition
            when an external constraint shape is moved.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.FactTypeShapeElementFactoryCreator">
            <summary>
            FactTypeShape Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShapeElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FactTypeShapeElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ExternalConstraintShapeElementFactoryCreator">
            <summary>
            ExternalConstraintShape Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintShapeElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintShapeElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.FrequencyConstraintShapeElementFactoryCreator">
            <summary>
            FrequencyConstraintShape Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FrequencyConstraintShapeElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.FrequencyConstraintShapeElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ObjectifiedFactTypeNameShape">
            <summary>
            
            </summary>
             <summary>
            </summary>
            <summary>
            A specialized display of the nesting type as a relative
            child element of an objectified fact type
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ObjectifiedFactTypeNameShape.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ObjectifiedFactTypeNameShape.ObjectTypeNameMetaAttributeGuidString">
            <summary>
            MetaAttribute Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ObjectifiedFactTypeNameShape.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ObjectifiedFactTypeNameShape.classStyleSet">
            <summary>
            Style Set
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ObjectifiedFactTypeNameShape.shapeFields">
            <summary>
            Shape Fields
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ObjectifiedFactTypeNameShape.ObjectTypeNameMetaAttributeGuid">
            <summary>
            MetaAttribute Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ObjectifiedFactTypeNameShape.objectifiedFactTypeNameShapeObjectTypeNameFieldHandler">
            <summary>
            FieldHandler for ObjectifiedFactTypeNameShape.ObjectTypeName field
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ObjectifiedFactTypeNameShape.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ObjectifiedFactTypeNameShape.CreateObjectifiedFactTypeNameShape(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ObjectifiedFactTypeNameShape.CreateAndInitializeObjectifiedFactTypeNameShape(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ObjectifiedFactTypeNameShape.GetCustomSerializedChildElementInfo">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ObjectifiedFactTypeNameShape.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo,Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ObjectifiedFactTypeNameShape.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ObjectifiedFactTypeNameShape.MapChildElement(System.String,System.String,System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ObjectifiedFactTypeNameShape.MapAttribute(System.String,System.String)">
             <summary>
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ObjectifiedFactTypeNameShape.OnBoundsFixup(Microsoft.VisualStudio.Modeling.Diagrams.BoundsFixupState,System.Int32)">
            <summary>
            Move the name label above the parent fact type shape
            </summary>
            <param name="fixupState">BoundsFixupState</param>
            <param name="iteration">int</param>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ObjectifiedFactTypeNameShape.ClassStyleSet">
            <summary>
            Style Set
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ObjectifiedFactTypeNameShape.ShapeFields">
            <summary>
            Shape Fields
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ObjectifiedFactTypeNameShape.ObjectTypeName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ObjectifiedFactTypeNameShape.SupportedCustomSerializedOperations">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ObjectifiedFactTypeNameShape.CustomSerializedElementInfo">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ObjectifiedFactTypeNameShape.CustomSerializedChildRoleComparer">
             <summary>
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ObjectifiedFactTypeNameShape.AssociatedShapeMetaAttributeGuid">
            <summary>
            Associate the text box with the object type name
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ObjectifiedFactTypeNameShape.TextShapeField">
            <summary>
            Store per-type value for the base class
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ObjectifiedFactTypeNameShape.AssociatedObjectType">
            <summary>
            Get the ObjectType associated with this shape
            </summary>s
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ObjectifiedFactTypeNameShape.ObjectifiedFactTypeNameShapeObjectTypeNameFieldHandler">
            <summary>
            Implement the field handler for ObjectifiedFactTypeNameShape.ObjectTypeName
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ObjectifiedFactTypeNameShape.ObjectifiedFactTypeNameShapeObjectTypeNameFieldHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ObjectifiedFactTypeNameShape.ObjectifiedFactTypeNameShapeObjectTypeNameFieldHandler.Instance">
            <summary>
            Returns the singleton instance of the ObjectifiedFactTypeNameShape.ObjectTypeName field handler
            </summary>
            <value>ObjectifiedFactTypeNameShapeObjectTypeNameFieldHandler</value>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.ObjectifiedFactTypeNameShape.ObjectifiedFactTypeNameShapeObjectTypeNameFieldHandler.Id">
            <summary>
            Returns the meta attribute id for the ObjectifiedFactTypeNameShape.ObjectTypeName field handler
            </summary>
            <value>Guid</value>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ObjectifiedFactTypeNameShapeElementFactoryCreator">
            <summary>
            ObjectifiedFactTypeNameShape Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ObjectifiedFactTypeNameShapeElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ObjectifiedFactTypeNameShapeElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ReadingShapeElementFactoryCreator">
            <summary>
            ReadingShape Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ReadingShapeElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ReadingShapeElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ValueRangeShapeElementFactoryCreator">
            <summary>
            ValueRangeShape Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ValueRangeShapeElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ValueRangeShapeElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.RolePlayerLinkElementFactoryCreator">
            <summary>
            RolePlayerLink Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.RolePlayerLinkElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.RolePlayerLinkElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.SubtypeLink">
            <summary>
            
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.SubtypeLink.MetaClassGuidString">
            <summary>
            MetaClass Guid String
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.SubtypeLink.MetaClassGuid">
            <summary>
            MetaClass Guid
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.SubtypeLink.classStyleSet">
            <summary>
            Style Set
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.SubtypeLink.shapeFields">
            <summary>
            Shape Fields
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.SubtypeLink.#ctor(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.SubtypeLink.CreateSubtypeLink(Microsoft.VisualStudio.Modeling.Store)">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.SubtypeLink.CreateAndInitializeSubtypeLink(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.AttributeAssignment[])">
            <summary>
            Class Factory
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.SubtypeLink.InitializeResources(Microsoft.VisualStudio.Modeling.Diagrams.StyleSet)">
            <summary>
            Change the outline pen to a thin black line for all instances
            of this shape.
            </summary>
            <param name="classStyleSet">The style set to modify</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.SubtypeLink.GetComponentName">
            <summary>
            Display the name of the underlying element as the
            component name in the property grid.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.SubtypeLink.GetClassName">
            <summary>
            Display the class of the underlying element as the
            component name in the property grid.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.SubtypeLink.ConfiguringAsChildOf(Northface.Tools.ORM.ShapeModel.ORMDiagram)">
            <summary>
            Configuring this link after it has been added to the diagram
            </summary>
            <param name="diagram">The parent diagram</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.SubtypeLink.ModifyLuminosity(System.Int32,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
            <summary>
            Redirect all luminosity modification to the ORMDiagram.ModifyLuminosity
            algorithm
            </summary>
            <param name="currentLuminosity">The luminosity to modify</param>
            <param name="view">The view containing this item</param>
            <returns>Modified luminosity value</returns>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.SubtypeLink.ClassStyleSet">
            <summary>
            Style Set
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.SubtypeLink.ShapeFields">
            <summary>
            Shape Fields
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.SubtypeLink.DecoratorTo">
            <summary>
            Draw an arrow on the subtype end
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.SubtypeLink.DefaultRoutingStyle">
            <summary>
            Use a straight line routing style
            Use a center to center routing style
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.SubtypeLink.CanManuallyRoute">
            <summary>
            Stop the user from manually routing link lines
            </summary>
            <value>false</value>
        </member>
        <member name="P:Northface.Tools.ORM.ShapeModel.SubtypeLink.AssociatedSubtypeFact">
            <summary>
            Get the ObjectTypePlaysRole link associated with this link shape
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.SubtypeLinkElementFactoryCreator">
            <summary>
            SubtypeLink Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.SubtypeLinkElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.SubtypeLinkElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ExternalConstraintLinkElementFactoryCreator">
            <summary>
            ExternalConstraintLink Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintLinkElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ExternalConstraintLinkElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ValueRangeLinkElementFactoryCreator">
            <summary>
            ValueRangeLink Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ValueRangeLinkElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ValueRangeLinkElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ORMDiagramElementFactoryCreator">
            <summary>
            ORMDiagram Class Factory Creator
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagramElementFactoryCreator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ORMDiagramElementFactoryCreator.Create(Microsoft.VisualStudio.Modeling.Store,Microsoft.VisualStudio.Modeling.ModelDataBag)">
            <summary>
            Class Factory Create Method
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ReferenceModeHeaderBranch">
            <summary>
            Represents the Reference Mode Header Branch
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeHeaderBranch.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeHeaderBranch.SetModel(Northface.Tools.ORM.ObjectModel.ORMModel)">
            <summary>
            Sets the reference modes for the class
            </summary>
            <param name="model"></param>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeHeaderBranch.BeginLabelEdit(System.Int32,System.Int32,Microsoft.VisualStudio.VirtualTreeGrid.VirtualTreeLabelEditActivationStyles)">
            <summary>
            Implements IBranch.BeginLabelEdit
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeHeaderBranch.CommitLabelEdit(System.Int32,System.Int32,System.String)">
            <summary>
            Implements IBranch.CommitLabelEdit
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeHeaderBranch.GetAccessibilityData(System.Int32,System.Int32)">
            <summary>
            Implements IBranch.GetAccssibilityData
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeHeaderBranch.GetDisplayData(System.Int32,System.Int32,Microsoft.VisualStudio.VirtualTreeGrid.VirtualTreeDisplayDataMasks)">
            <summary>
            Implements IBranch.GetDisplayData
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeHeaderBranch.GetObject(System.Int32,System.Int32,Microsoft.VisualStudio.VirtualTreeGrid.ObjectStyle,System.Int32@)">
            <summary>
            Implements IBranch.GetObject
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeHeaderBranch.GetText(System.Int32,System.Int32)">
            <summary>
            Implements IBranch.GetText
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeHeaderBranch.GetTipText(System.Int32,System.Int32,Microsoft.VisualStudio.VirtualTreeGrid.ToolTipType)">
            <summary>
            Implements IBranch.GetTipText
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeHeaderBranch.IsExpandable(System.Int32,System.Int32)">
            <summary>
            Implements IBranch.IsExpandable
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeHeaderBranch.LocateObject(System.Object,Microsoft.VisualStudio.VirtualTreeGrid.ObjectStyle,System.Int32)">
            <summary>
            Implements IBranch.LocateObject
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeHeaderBranch.OnDragEvent(System.Object,System.Int32,System.Int32,Microsoft.VisualStudio.VirtualTreeGrid.DragEventType,System.Windows.Forms.DragEventArgs)">
            <summary>
            Implements IBranch.OnDragEvent
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeHeaderBranch.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs,System.Int32,System.Int32)">
            <summary>
            Implements IBranch.OnGiveFeedback
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeHeaderBranch.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs,System.Int32,System.Int32)">
            <summary>
            Implements IBranch.OnQueryContinueDrag
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeHeaderBranch.OnStartDrag(System.Object,System.Int32,System.Int32,Microsoft.VisualStudio.VirtualTreeGrid.DragReason)">
            <summary>
            Implements IBranch.OnStartDrag
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ObjectModel.ReferenceModeHeaderBranch.ToggleState(System.Int32,System.Int32)">
            <summary>
            Implements IBranch.ToggleState
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceModeHeaderBranch.Features">
            <summary>
            Implements IBranch.Features
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceModeHeaderBranch.UpdateCounter">
            <summary>
            Implements IBranch.UpdateCounter
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.ObjectModel.ReferenceModeHeaderBranch.VisibleItemCount">
            <summary>
            Implements IBranch.VisibleItemCount
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.Properties.Resources">
            <summary>
               A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Properties.Resources.ResourceManager">
            <summary>
               Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Properties.Resources.Culture">
            <summary>
               Overrides the current thread's CurrentUICulture property for all
               resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.Shell.ORMDesignerDocData">
            <summary>
            DocData object for the ORM Designer editor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocData.#ctor(System.IServiceProvider,Microsoft.VisualStudio.EnterpriseTools.Shell.EditorFactory)">
            <summary>
            Standard DocData constructor, called by the editor factory
            </summary>
            <param name="serviceProvider">IServiceProvider</param>
            <param name="editorFactory">EditorFactory</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocData.LoadDocData(System.String,System.Boolean)">
            <summary>
            UNDONE: Temporary code for load failure debugging. Remove.
            </summary>
            <param name="fileName"></param>
            <param name="isReload"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocData.GetSubStores(System.Object)">
            <summary>
            Return array of types of the substores used by the designer
            </summary>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocData.Load(System.String,System.Boolean)">
            <summary>
            Load a file
            </summary>
            <param name="fileName"></param>
            <param name="isReload"></param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocData.Save(System.String)">
            <summary>
            Saves the model in Store format
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocData.AddPostLoadModelingEventHandlers">
            <summary>
            Attach model events. Adds NamedElementDictionary handling
            to the document's primary store.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocData.AddPreLoadModelingEventHandlers">
            <summary>
            Attach event handlers to populate the task list
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocData.RemoveModelingEventHandlers">
            <summary>
            Detach model events. Adds NamedElementDictionary handling
            to the document's primary store.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocData.Dispose(System.Boolean)">
            <summary>
            Clear out the task provider
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocData.SupportsLogicalView(System.Guid)">
            <summary>
            Support the default/only (GUID_NULL) view
            </summary>
            <param name="logicalView">A view guid to test</param>
            <returns>true for an empty guid</returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocData.GetAutomationObject(System.String,EnvDTE.IExtensibleObjectSite,System.Object@)">
            <summary>
            Implements IExtensibleObject.GetAutomationObject. Returns the ORM2 stream for
            the "ORM2Stream" object name and the this object for everything else.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocData.CreateStore(System.Object)">
            <summary>
            Create a store that implements IORMToolServices by deferring
            all methods to this document.
            </summary>
            <param name="storeKey">The store to create. Expect PrimaryStoreKey</param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocData.CreateTaskProvider">
            <summary>
            Create a new task provider. Called once the first time the TaskProvider
            property is accessed.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMDesignerDocData.FormatList">
            <summary>
            Called to populate the Filter field in the Save As... dialog.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMDesignerDocData.DocumentScope">
            <summary>
            Set the document scope to ProjectScope for the element provider mechanism
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMDesignerDocData.DeserializationFixupPhaseType">
            <summary>
            Retrieve the phase enum to use with the
            deserialization manager.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMDesignerDocData.DeserializationFixupListeners">
            <summary>
            Return a set of listeners for deserialization fixup
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMDesignerDocData.TaskProvider">
            <summary>
            Retrieve the task provider for this document. Created
            on demand using the CreateTaskProvider method. Implements
            IORMToolServices.TaskProvider.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMDesignerDocData.FontAndColorService">
            <summary>
            Get the color service for this document Defers to
            the packages color service. Implements
            IORMToolServices.ColorService
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.Shell.ORMDesignerDocData.ORMStore">
            <summary>
            A store implementation that defers all services to the
            owning document.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocData.ORMStore.#ctor(Northface.Tools.ORM.ObjectModel.IORMToolServices,System.IServiceProvider)">
            <summary>
            Create a new store
            </summary>
            <param name="services">IORMToolServices to defer to</param>
            <param name="serviceProvider">Global service provider</param>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMDesignerDocData.ORMStore.TaskProvider">
            <summary>
            Defer to TaskProvider on the document. Implements
            IORMToolServices.TaskProvider
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMDesignerDocData.ORMStore.FontAndColorService">
            <summary>
            Defer to ColorService on the document. Implements
            IORMToolServices.ColorService
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.Shell.ORMDesignerDocData.ORMTaskProvider">
            <summary>
            Default implementation of a task provider
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocData.ORMTaskProvider.#ctor(Northface.Tools.ORM.Shell.ORMDesignerDocData)">
            <summary>
            Create a task provider for this document
            </summary>
            <param name="document"></param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocData.ORMTaskProvider.CreateTask">
            <summary>
            Implements IORMToolTaskProvider.CreateTask
            </summary>
            <returns>IORMToolTaskItem</returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocData.ORMTaskProvider.AddTask(Northface.Tools.ORM.ObjectModel.IORMToolTaskItem)">
            <summary>
            Implements IORMToolTaskProvider.AddTask
            </summary>
            <param name="task">IORMToolTaskItem created by CreateTask</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocData.ORMTaskProvider.RemoveTask(Northface.Tools.ORM.ObjectModel.IORMToolTaskItem)">
            <summary>
            Implements IORMToolTaskProvider.RemoveTask
            </summary>
            <param name="task">IORMToolTaskItem previously added by AddTask</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocData.ORMTaskProvider.RemoveAllTasks">
            <summary>
            Implements IORMToolTaskProvider.RemoveAllTasks
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocData.ORMTaskProvider.NavigateTo(Northface.Tools.ORM.ObjectModel.IORMToolTaskItem)">
            <summary>
            Implements IORMToolTaskProvider.NavigateTo;
            </summary>
            <param name="task"></param>
            <returns></returns>
        </member>
        <member name="T:Northface.Tools.ORM.Shell.ORMDesignerDocData.ORMTaskItem">
            <summary>
            Default implementation of a task item
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocData.ORMTaskItem.#ctor(Northface.Tools.ORM.ObjectModel.IORMToolTaskProvider)">
            <summary>
            Create a task item for the specified owning provider
            </summary>
            <param name="owner">IORMToolTaskProvider</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocData.ORMTaskItem.OnNavigate(System.EventArgs)">
            <summary>
            Navigate to the item associate with this task
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMDesignerDocData.ORMTaskItem.ElementLocator">
            <summary>
            Implements IORMToolTaskItem.ElementLocator property
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMDesignerDocData.ORMTaskItem.Text">
            <summary>
            Implements IORMToolTaskItem.Text property
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ReferenceModeAutoSizeTextField">
            <summary>
            Temporary class to fer refernce mode to show up.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ReferenceModeAutoSizeTextField.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ReferenceModeAutoSizeTextField.GetMinimumWidth(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
            <summary>
            Get the minimum width of the shape field for the current text.
            </summary>
            <param name="parentShape">ShapeElement</param>
            <returns>Width of current text</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ReferenceModeAutoSizeTextField.GetMinimumHeight(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
            <summary>
            Get the minimum height of the shape field for the current text.
            </summary>
            <param name="parentShape">ShapeElement</param>
            <returns>Width of current text</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ReferenceModeAutoSizeTextField.GetVisible(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
            <summary>
            Returns whether or not the text field is visible
            </summary>
            <param name="parentShape"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.ReferenceModeAutoSizeTextField.GetDisplayText(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
            <summary>
            Overrides the display text to add parenthesis
            </summary>
            <param name="parentShape"></param>
            <returns></returns>
        </member>
        <member name="T:Northface.Tools.ORM.ObjectModel.ReferenceModeType">
            <summary>
            Standard reference mode categories
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReferenceModeType.General">
            <summary>
            Used for custom refmode formats
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReferenceModeType.Popular">
            <summary>
            Standard popular reference mode
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ObjectModel.ReferenceModeType.UnitBased">
            <summary>
            Standard unit-based reference mode
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.Shell.FactGuidList">
            <summary>
            A collection of static GUIDs used in the IOleCommandTarget.Exec
            see FactTextViewFilter
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.FactGuidList.StandardCommandSet2K">
            <summary>
            The Standard command set
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.FactGuidList.CmdUIGuidTextEditor">
            <summary>
            The shell's text editor commands
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.FactGuidList.FactEditorToolWindowGuid">
            <summary>
            The guid for the FactEditor tool window
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.Shell.ORMReadingEditorToolWindow">
            <summary>
            Defines the tool window that is used to modify the readings associated with a fact.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMReadingEditorToolWindow.#ctor(System.IServiceProvider)">
            <summary>
            Creates a new instance of the reading editor tool window.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMReadingEditorToolWindow.ActivateReading(Northface.Tools.ORM.ObjectModel.Reading)">
            <summary>
            Select the current reading in the window. The
            reading must be the child of the current fact.
            </summary>
            <param name="reading">Reading</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMReadingEditorToolWindow.ActivateReading(Northface.Tools.ORM.ObjectModel.FactType)">
            <summary>
            Select the primary reading for the reading order
            matching the role order of the fact, if there
            isn't one activate the new entry for that order.
            </summary>
            <param name="fact">FactType</param>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMReadingEditorToolWindow.WindowTitle">
            <summary>
            Gets the title that will be displayed on the tool window.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMReadingEditorToolWindow.Window">
            <summary>
            Gets the window object that will be hosted by the tool window.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMReadingEditorToolWindow.EditingFactType">
            <summary>
            Controls which fact is being displayed by the tool window.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMReadingEditorToolWindow.ReadingsViewForm.ActivateReading(Northface.Tools.ORM.ObjectModel.Reading)">
            <summary>
            Select the current reading in the window. The
            reading must be the child of the current fact.
            </summary>
            <param name="reading">Reading</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMReadingEditorToolWindow.ReadingsViewForm.ActivateReading(Northface.Tools.ORM.ObjectModel.FactType)">
            <summary>
            Select the primary reading of the order matching
            the display order of the fact, if one doesn't
            exist select the new entry.
            </summary>
            <param name="fact"></param>
        </member>
        <member name="T:Northface.Tools.ORM.Shell.ORMDesignerCommands">
            <summary>
            Valid commands
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerCommands.None">
            <summary>
            Commands not set
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerCommands.DeleteObjectType">
            <summary>
            Deletion of one or more object types is enabled
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerCommands.DeleteFactType">
            <summary>
            Deletion of one or more fact types is enabled
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerCommands.DeleteConstraint">
            <summary>
            Deletion of one or more constraints is enabled
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerCommands.DisplayReadingsWindow">
            <summary>
            Display the readings toolwindow
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerCommands.DisplayCustomReferenceModeWindow">
            <summary>
            Display the Custom Reference Mode window
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerCommands.InsertRole">
            <summary>
            Insert a role before or after the current role
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerCommands.DeleteRole">
            <summary>
            Delete the current role
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerCommands.DisplayFactEditorWindow">
            <summary>
            Display the fact editor toolwindow
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerCommands.Delete">
            <summary>
            Mask field representing individual delete commands
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerCommands.ActivateRoleSequence">
            <summary>
            Activate editing for the RoleSequence
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerCommands.DeleteRoleSequence">
            <summary>
            Delete the RoleSequence
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerCommands.MoveRoleSequenceUp">
            <summary>
            Roll the RoleSequence up (lower number) in the active Constraint's RoleSequenceCollection
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerCommands.MoveRoleSequenceDown">
            <summary>
            Roll the RoleSequence down (higher number) in the active Constraint's RoleSequenceCollection
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerCommands.EditExternalConstraint">
            <summary>
            Activate editing for the ExternalConstraint
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerCommands.RoleSequenceActions">
            <summary>
            Mask field representing individual RoleSeqeuence edit commands
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.Shell.ORMDesignerDocView">
            <summary>
            DocView designed to contain a single ORM Diagram
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.#ctor(Microsoft.VisualStudio.EnterpriseTools.Shell.DocData,System.IServiceProvider)">
            <summary>
            Standard DocView constructor, called by the editor factory
            </summary>
            <param name="docData">DocData</param>
            <param name="serviceProvider">IServiceProvider</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.OnContextMenuRequested(Microsoft.VisualStudio.Modeling.Diagrams.DiagramPointEventArgs)">
            <summary>
            Handle right-clicks on the diagram
            </summary>
            <param name="mouseArgs"></param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.RefreshCommandStatus(Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView)">
            <summary>
            Call to refresh the command status for a client view.
            This is required when actions my update the currently
            enabled commands, but do not change the selection.
            </summary>
            <param name="clientView">The modified (presumably active) view</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.OnSelectionChanged(System.EventArgs)">
            <summary>
            Enable menu commands when the selection changes
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.SetCommandStatus(Microsoft.VisualStudio.Modeling.ModelElement,Northface.Tools.ORM.Shell.ORMDesignerCommands@,Northface.Tools.ORM.Shell.ORMDesignerCommands@)">
            <summary>
            Determine which commands are visible and enabled for the
            current state of an individual given element.
            </summary>
            <param name="element">A single model element. Should be a backing object, not a presentation element.</param>
            <param name="visibleCommands">(output) The set of visible commands</param>
            <param name="enabledCommands">(output) The set of enabled commands</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.OnStatusCommand(System.Object,Northface.Tools.ORM.Shell.ORMDesignerDocView,Northface.Tools.ORM.Shell.ORMDesignerCommands)">
            <summary>
            Check the current status of the requested command. This is called frequently, and is
            static to enable placing the null check inside this function.
            </summary>
            <param name="sender">A MenuCommand or OleMenuCommand</param>
            <param name="docView">The view to test</param>
            <param name="commandFlag">The command to check for enabled</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.SetDeleteCommandText(Microsoft.VisualStudio.Shell.OleMenuCommand)">
            <summary>
            Set the menu's text for the delete command
            </summary>
            <param name="command">OleMenuCommand</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.OnClose(System.UInt32@)">
            <summary>
            UNDONE: Temporary workaround for DSLTools SDK bug.
            OnClose is throwing when ModelingDocStore.CreateVSHost
            attempts to cast to the wrong class type.
            </summary>
            <param name="pgrfSaveOptions"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.InitializeView(Microsoft.VisualStudio.Modeling.Diagrams.Diagram,Northface.Tools.ORM.Shell.ORMDesignerDocData)">
            <summary>
            Called by ORMDesignerDocData during Load
            </summary>
            <param name="diagram">The diagram object. Passed to the base class.</param>
            <param name="document">ORMDesignerDocData</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.OnMenuDelete(System.String)">
            <summary>
            Execute the delete command
            </summary>
            <param name="commandText">The text from the command</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.OnMenuInsertRole(System.Boolean)">
            <summary>
            Execute the Insert Role menu commands
            </summary>
            <param name="insertAfter">true to insert the role after the
            selected role, false to insert it before the selected role</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.OnMenuEditExternalConstraint">
            <summary>
            Select the constraint as the ORDiagram's sticky object for editing.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.OnMenuActivateRoleSequence">
            <summary>
            Activate the RoleSequence for editing.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.OnMenuDeleteRoleSequence">
            <summary>
            Delete the RoleSequence from the ORMDiagram's StickyObject that contains the currently selected role.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.OnMenuMoveRoleSequenceUp">
            <summary>
            Move the RoleSequence of the ORMDiagram's StickyObject up in the collection.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.OnMenuMoveRoleSequenceDown">
            <summary>
            Move the RoleSequence of the ORMDiagram's StickyObject down in the collection.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.OnMenuBeginRoleSequenceOnExternalConstraint">
            <summary>
            Begin a new RoleSequence on an ExternalConstraint.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.CreateCommandSet(System.IServiceProvider)">
            <summary>
            Create a command set for this type of view. Should be called
            once when the package loads
            </summary>
            <param name="serviceProvider">IServiceProvider</param>
            <returns></returns>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMDesignerDocView.ContextMenuId">
            <summary>
            Get the default context menu for this view
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMDesignerDocView.DefaultToolboxTabName">
            <summary>
            String indicating the toolbox tab name that should be selected when this view gets focus.
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMDesignerDocView.ElementLocator">
            <summary>
            Get the element locator associate with this view.
            The locator is used to jump to a specific element.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandSet">
            <summary>
            Command objects for the ORMDesignerDocView
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandSet.myCommands">
            <summary>
            Commands
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandSet.#ctor(System.IServiceProvider)">
            <summary>
            ORMDesignerCommandSet constructor
            </summary>
            <param name="serviceProvider"></param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandSet.AddCommands(System.ComponentModel.Design.MenuCommand[])">
            <summary>
            Called to add a set of commands. This should be called
            by Initialize.
            </summary>
            <param name="commands">Commands to add</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandSet.RemoveCommands(System.ComponentModel.Design.MenuCommand[])">
            <summary>
            Called to remove a set of commands. This should be called
            by Dispose.
            </summary>
            <param name="commands">Commands to add</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandSet.Dispose">
            <summary>
            Cleanup code 
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandSet.OnMenuViewORMModelExplorer(System.Object,System.EventArgs)">
            <summary>
            Show the ORM Model Explorer
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandSet.OnMenuDebugViewStore(System.Object,System.EventArgs)">
            <summary>
            Show a debug window displaying the contents of the current store
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandSet.OnStatusDelete(System.Object,System.EventArgs)">
            <summary>
            Status callback
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandSet.OnMenuDelete(System.Object,System.EventArgs)">
            <summary>
            Menu handler
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandSet.OnStatusReadingsWindow(System.Object,System.EventArgs)">
            <summary>
            Status callback
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandSet.OnMenuReadingsWindow(System.Object,System.EventArgs)">
            <summary>
            Menu handler
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandSet.OnStatusInsertRole(System.Object,System.EventArgs)">
            <summary>
            Status callback
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandSet.OnMenuInsertRoleAfter(System.Object,System.EventArgs)">
            <summary>
            Menu handler
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandSet.OnMenuInsertRoleBefore(System.Object,System.EventArgs)">
            <summary>
            Menu handler
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandSet.OnMenuReferenceModesWindow(System.Object,System.EventArgs)">
            <summary>
            Menu handler
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandSet.OnStatusFactEditorWindow(System.Object,System.EventArgs)">
            <summary>
            Status callback
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandSet.OnMenuFactEditorWindow(System.Object,System.EventArgs)">
            <summary>
            Menu handler
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandSet.OnStatusEditExternalConstraint(System.Object,System.EventArgs)">
            <summary>
            Status callback
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandSet.OnStatusActivateRoleSequence(System.Object,System.EventArgs)">
            <summary>
            Status callback
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandSet.OnStatusDeleteRowSequence(System.Object,System.EventArgs)">
            <summary>
            Status callback
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandSet.OnStatusMoveRoleSequenceUp(System.Object,System.EventArgs)">
            <summary>
            Status callback
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandSet.OnStatusMoveRoleSequenceDown(System.Object,System.EventArgs)">
            <summary>
            Status callback
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandSet.OnMenuEditExternalConstraint(System.Object,System.EventArgs)">
            <summary>
            Menu handler
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandSet.OnMenuActivateRoleSequence(System.Object,System.EventArgs)">
            <summary>
            Menu handler
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandSet.OnMenuDeleteRowSequence(System.Object,System.EventArgs)">
            <summary>
            Menu handler
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandSet.OnMenuMoveRoleSequenceUp(System.Object,System.EventArgs)">
            <summary>
            Menu handler
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event args</param>
        </member>
        <member name="M:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandSet.OnMenuMoveRoleSequenceDown(System.Object,System.EventArgs)">
            <summary>
            Menu handler
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event args</param>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandSet.MenuService">
            <summary>
            Retrieve the menu service from the service provider
            specified in the constructor
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandSet.MonitorSelection">
            <summary>
            Load the monitor selection service
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandSet.ElementLocator">
            <summary>
            An element locator. Used to navigate to items.
            </summary>
            <value></value>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandSet.CurrentData">
            <summary>
            Currently focused document
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandSet.CurrentORMView">
            <summary>
            Currently focused ORM document view
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandIds">
            <summary>
            CommandIDs for the Application Designer package.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandIds.cmdIdDebugViewStore">
            <summary>
            A command to view the current store contents in debug mode
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandIds.cmdIdViewModelExplorer">
            <summary>
            The ORM Model Explorer item on the view menu
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandIds.cmdIdViewReadingEditor">
            <summary>
            The ORM Readings Window item on the fact type context menu
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandIds.cmdIdViewReferenceModeEditor">
            <summary>
            View the reference mode editor
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandIds.cmdIdInsertRoleAfter">
            <summary>
            Insert a role after the selected role
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandIds.cmdIdInsertRoleBefore">
            <summary>
            Insert a role before the selected role
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandIds.cmdIdViewFactEditor">
            <summary>
            The ORM Fact Editor Window item on the fact type context menu
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandIds.cmdIdActivateRoleSequence">
            <summary>
            Available on any role belonging to the active RoleSequence in the active MCEC or SCEC.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandIds.cmdIdDeleteRoleSequence">
            <summary>
            Available on any role belonging to any RoleSequence in the active MCEC.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandIds.cmdIdEditExternalConstraint">
            <summary>
            Available on any non-active external constraint.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandIds.cmdIdMoveRoleSequenceUp">
            <summary>
            Available on any role belonging to any RoleSequence in the active MCEC.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandIds.cmdIdMoveRoleSequenceDown">
            <summary>
            Available on any role belonging to any RoleSequence in the active MCEC.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandIds.menuIdContextMenu">
            <summary>
            The context menu for the diagram
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandIds.guidORMDesignerCommandSet">
            <summary>
            The global identifier for the command set used by the ORM designer.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandIds.DebugViewStore">
            <summary>
            A command to view the current store contents in debug mode
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandIds.ViewModelExplorer">
            <summary>
            The ORM Model Explorer item on the view menu
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandIds.ViewReadingEditor">
            <summary>
            The ORM Readings Window item on the fact type context menu
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandIds.InsertRoleAfter">
            <summary>
            Insert a role after the selected role
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandIds.InsertRoleBefore">
            <summary>
            Insert a role before the selected role
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandIds.ViewReferenceModeEditor">
            <summary>
            The Custom Reference Mode Editor Explorer item on the view menu
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandIds.ViewFactEditor">
            <summary>
            The ORM Fact Editor Window item on the fact type context menu
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandIds.ViewContextMenu">
            <summary>
            The context menu for the diagram
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandIds.ViewActivateRoleSequence">
            <summary>
            Available on any role belonging to the active RoleSequence in the active MCEC or SCEC.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandIds.ViewDeleteRoleSequence">
            <summary>
            Available on any role belonging to any RoleSequence in the active MCEC.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandIds.ViewEditExternalConstraint">
            <summary>
            Available on any non-active external constraint.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandIds.ViewMoveRoleSequenceUp">
            <summary>
            Available on any role belonging to any RoleSequence in the active MCEC.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.Shell.ORMDesignerDocView.ORMDesignerCommandIds.ViewMoveRoleSequenceDown">
            <summary>
            Available on any role belonging to any RoleSequence in the active MCEC.
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.ConstraintDisplayPosition">
            <summary>
            Determines where internal constraints are drawn
            on a facttype
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ConstraintDisplayPosition.Top">
            <summary>
            Draw the constraints above the role boxes
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.ConstraintDisplayPosition.Bottom">
            <summary>
            Draw the constraints below the role boxes
            </summary>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.RoleDragPendingAction">
            <summary>
            A class similar to the DragDropPendingAction class,
            except we don't touch the cursor, and we chain to
            the RoleConnectAction when dragging starts.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.RoleDragPendingAction.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.Diagram)">
            <summary>
            Create a new RoleDragDropPendingAction. Should be
            called once per diagram
            </summary>
            <param name="diagram">The owning diagram</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.RoleDragPendingAction.OnMouseMove(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
            <summary>
            If we've reached the dragging state, then
            chaing to the toolbox action.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.RoleConnectAction">
            <summary>
            A connect action for attaching a role to
            its role player.
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.RoleConnectAction.#ctor(Microsoft.VisualStudio.Modeling.Diagrams.Diagram)">
            <summary>
            Create a role connector action for the given diagram. One
            action per diagram should be sufficient.
            </summary>
            <param name="diagram">The hosting diagram</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.RoleConnectAction.GetConnectionTypes(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
            <summary>
            Retrieve all connect types associated with this connect action.
            Returns an empty array unless the sourceShapeElement is an ExternalConstraintShape
            </summary>
            <param name="sourceShapeElement">The source element</param>
            <param name="targetShapeElement">The target element. Currently ignored.</param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.RoleConnectAction.OnMouseActionDeactivated(Microsoft.VisualStudio.Modeling.Diagrams.DiagramEventArgs)">
            <summary>
            Reset the member variables
            </summary>
            <param name="e">DiagramEventArgs</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.RoleConnectAction.OnMouseActionCompleted(Microsoft.VisualStudio.Modeling.Diagrams.DiagramEventArgs)">
            <summary>
            Cancel if the last hit shape is the Diagram by not forwarding
            to the base class. Otherwise, complete the action.
            </summary>
            <param name="e">DiagramEventArgs</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.RoleConnectAction.OnClicked(Microsoft.VisualStudio.Modeling.Diagrams.MouseActionEventArgs)">
            <summary>
            Get the source object type or role after the
            base class sets the source shape
            </summary>
            <param name="e">MouseActionEventArgs</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.RoleConnectAction.OnMouseDown(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
            <summary>
            If the current item is a role, then cache it as the
            last mouse down hit role
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.RoleConnectAction.OnMouseMove(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
            <summary>
            If the current item is a role, then cache it as the
            last mouse mouse hit role
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.RoleConnectAction.OnMouseUp(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
            <summary>
            If we're emulating a drag (occurs when we're chained from RoleDragPendingAction),
            then complete the action on mouse up
            </summary>
            <param name="e">DiagramMouseEventArgs</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.RoleConnectAction.GetCursorFromCursorType(Microsoft.VisualStudio.Modeling.Diagrams.ConnectActionCursor)">
            <summary>
            Get a cursor from the cursor type. Returns the searching cursor for
            everything except the allowed action.
            </summary>
            <param name="connectActionCursor">The requrested cursor styl</param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.RoleConnectAction.ChainMouseAction(Microsoft.VisualStudio.Modeling.Diagrams.PointD,Microsoft.VisualStudio.Modeling.Diagrams.DiagramClientView,System.Boolean)">
            <summary>
            Set this mouse action as the active action on the
            diagram of the given shape, and activate its drag line
            centered on the shape.
            </summary>
            <param name="chainFromPoint">The point to begin the mouse action</param>
            <param name="clientView">The active DiagramClientView</param>
            <param name="emulateDrag">true if this should emulate a drag, meaning
            that the mouse up acts like a click.</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.RoleConnectAction.HitRole(Microsoft.VisualStudio.Modeling.Diagrams.DiagramMouseEventArgs)">
            <summary>
            Helper function to find the role represented
            at the given diagram position.
            </summary>
            <param name="e"></param>
            <returns>Hit role, or null</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.RoleConnectAction.ObjectTypeFromShape(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
            <summary>
            Get the underlying object type for a ShapeElement
            </summary>
            <param name="shape">A shape element.</param>
            <returns>An ObjectType, or null</returns>
        </member>
        <member name="T:Northface.Tools.ORM.ShapeModel.RoleConnectAction.RoleConnectionType">
            <summary>
            The ConnectionType used with this ConnectAction. The type
            is a singleton, holds all of the context-independent logic,
            and operates directly on shape elements.
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.RoleConnectAction.RoleConnectionType.Instance">
            <summary>
            The singleton RoleConnectionType instance
            </summary>
        </member>
        <member name="F:Northface.Tools.ORM.ShapeModel.RoleConnectAction.RoleConnectionType.InstanceArray">
            <summary>
            An array of one element containing the singleton RoleConnectionType instance
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.RoleConnectAction.RoleConnectionType.IsOfInterest(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
            <summary>
            Called as the pointer is moved over potential targets after a source is selected
            So should be pretty quick
            Gets called with a target of null when the cursor leaves the view.
            Can't find a use for this at present.
            </summary>
            <param name="sourceShapeElement">ShapeElement</param>
            <param name="targetShapeElement">ShapeElement</param>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.RoleConnectAction.RoleConnectionType.IsValidSourceAndTarget(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement)">
            <summary>
            Called as the pointer is moved over potential targets after a source is selected
            So should be pretty quick
            </summary>
            <remarks>
            The cursor can change dependant on CanCreateConnection when this returns true
            </remarks>
            <param name="sourceShapeElement">ShapeElement</param>
            <param name="targetShapeElement">ShapeElement</param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.RoleConnectAction.RoleConnectionType.CanCreateConnection(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,System.String@)">
            <summary>
            Called after IsValidSourceAndTarget allows the shapes through. Used for
            more in-depth checking before ConnectionType.CreateConnection is called, and
            to display warning messages on the design surface.
            </summary>
            <param name="sourceShapeElement">The source of the requested connection</param>
            <param name="targetShapeElement">The target of the requested connection</param>
            <param name="connectionWarning">A location to write the warning string</param>
            <returns>true if the connection can proceed</returns>
        </member>
        <member name="M:Northface.Tools.ORM.ShapeModel.RoleConnectAction.RoleConnectionType.CreateConnection(Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.ShapeElement,Microsoft.VisualStudio.Modeling.Diagrams.PaintFeedbackArgs)">
            <summary>
            Create a connection between an ExternalConstraintShape and a FactType. Roles
            used in the connection are stored with the currently active connect action.
            </summary>
            <param name="sourceShapeElement">The source of the requested connection</param>
            <param name="targetShapeElement">The target of the requested connection</param>
            <param name="paintFeedbackArgs">PaintFeedbackArgs</param>
        </member>
        <member name="T:Northface.Tools.ORM.FactEditor.IFactParser">
            <summary>
            Setup a Face Parser interface to ensure line markup
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.IFactParser.ParseLine(System.String)">
            <summary>
            Implement the parsing of line text
            </summary>
            <param name="factText">A string containing the original line text</param>
            <returns>HRESULT</returns>
        </member>
        <member name="T:Northface.Tools.ORM.FactEditor.FactLine">
            <summary>
            The FactLine class is used to organize markings within a line for
            colorization. We look for object types, predicates, and reference modes
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactLine.#ctor(System.String)">
            <summary>
            Create a new FactLine
            </summary>
            <param name="line">The source line text</param>
        </member>
        <member name="P:Northface.Tools.ORM.FactEditor.FactLine.LineText">
            <summary>
            The source text for this line
            </summary>
            <value></value>
        </member>
        <member name="P:Northface.Tools.ORM.FactEditor.FactLine.Marks">
            <summary>
            The markings on the line to indicate where different types of tokens are located
            </summary>
            <value></value>
        </member>
        <member name="P:Northface.Tools.ORM.FactEditor.FactLine.Error">
            <summary>
            An error that may have been found in setting the marks
            </summary>
            <value></value>
        </member>
        <member name="P:Northface.Tools.ORM.FactEditor.FactLine.HasError">
            <summary>
            Indicates whether the current FactLine state has an error
            </summary>
            <value></value>
        </member>
        <member name="T:Northface.Tools.ORM.FactEditor.FactParser">
            <summary>
            A parser which breaks down a string into marks representing object types, predicates, and reference modes
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactParser.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactParser.ParseLine(System.String)">
            <summary>
            Examines the line text marks object types, predicates, and reference modes
            </summary>
            <param name="factText">The source of the line text to examine</param>
            <returns>ParsedFact</returns>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactParser.ParseFactFromLine(System.String)">
            <summary>
            Parse the fact into a collection of objects with quantifiers
            </summary>
            <returns>A ParsedFact</returns>
        </member>
        <member name="T:Northface.Tools.ORM.FactEditor.ParsedFact">
            <summary>
            Created from fact text in the fact editor and contains
            properties for all the objects and colorization in the fact text
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.ParsedFact.#ctor(System.String)">
            <summary>
            Create a new ParsedFact from a structured fact in the fact editor
            </summary>
            <param name="originalFactText"></param>
        </member>
        <member name="P:Northface.Tools.ORM.FactEditor.ParsedFact.ReadingText">
            <summary>
            The reading text used for fact readings, e.g. {0} has {1}
            </summary>
            <value></value>
        </member>
        <member name="P:Northface.Tools.ORM.FactEditor.ParsedFact.FactObjects">
            <summary>
            All of the objects parsed out of the original fact text
            </summary>
            <value></value>
        </member>
        <member name="P:Northface.Tools.ORM.FactEditor.ParsedFact.ColorAttributes">
            <summary>
            An array of attributes for colorization
            </summary>
            <value></value>
        </member>
        <member name="P:Northface.Tools.ORM.FactEditor.ParsedFact.OriginalFactText">
            <summary>
            The original fact text
            </summary>
            <value></value>
        </member>
        <member name="T:Northface.Tools.ORM.FactEditor.FactObject">
            <summary>
            An object found in the Fact Editor's structured text
            which includes the object name, ref mode, quantifiers,
            and position in the fact
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactObject.#ctor">
            <summary>
            Construct a new FactObject. This initialized the RoleQuantifiers collection
            </summary>
        </member>
        <member name="P:Northface.Tools.ORM.FactEditor.FactObject.Name">
            <summary>
            The name of the object
            </summary>
            <value></value>
        </member>
        <member name="P:Northface.Tools.ORM.FactEditor.FactObject.RefMode">
            <summary>
            The object's reference mode
            </summary>
            <value></value>
        </member>
        <member name="P:Northface.Tools.ORM.FactEditor.FactObject.RefModeHasParenthesis">
            <summary>
            True if parenthesis were found in the fact (even if the
            reference mode is blank)
            </summary>
            <value></value>
        </member>
        <member name="P:Northface.Tools.ORM.FactEditor.FactObject.Position">
            <summary>
            The position of this object in the parsed fact
            </summary>
            <value></value>
        </member>
        <member name="T:Northface.Tools.ORM.FactEditor.FactObjectCollection">
            <summary>
            A collection of objects in a fact
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactObjectCollection.NewFactObject">
            <summary>
            Creates and adds a new FactObject to the collection
            </summary>
            <returns>The object created</returns>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactObjectCollection.AddRange(Northface.Tools.ORM.FactEditor.FactObjectCollection)">
            <summary>
            Adds a range of FactObjects to the collection
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactObjectCollection.IndexOf(Northface.Tools.ORM.FactEditor.FactObject)">
            <summary>
            Implements IList.IndexOf
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactObjectCollection.Insert(System.Int32,Northface.Tools.ORM.FactEditor.FactObject)">
            <summary>
            Implements IList.IndexOf
            </summary>
            <param name="index"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactObjectCollection.RemoveAt(System.Int32)">
            <summary>
            Implements IList.RemoveAt
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactObjectCollection.Add(Northface.Tools.ORM.FactEditor.FactObject)">
            <summary>
            Implements ICollection.Add
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactObjectCollection.Clear">
            <summary>
            Implements ICollection.Clear
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactObjectCollection.Contains(Northface.Tools.ORM.FactEditor.FactObject)">
            <summary>
            Implements ICollection.Contains
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactObjectCollection.CopyTo(Northface.Tools.ORM.FactEditor.FactObject[],System.Int32)">
            <summary>
            Implements CopyTo
            </summary>
            <param name="array"></param>
            <param name="arrayIndex"></param>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactObjectCollection.Remove(Northface.Tools.ORM.FactEditor.FactObject)">
            <summary>
            Implements ICollection.Remove
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactObjectCollection.GetEnumerator">
            <summary>
            Implements IEnumerable.GetEnumerator()
            </summary>
            <returns></returns>
        </member>
        <member name="P:Northface.Tools.ORM.FactEditor.FactObjectCollection.Item(System.Int32)">
            <summary>
            Implements indexer for IList
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Northface.Tools.ORM.FactEditor.FactObjectCollection.Count">
            <summary>
            Implements ICollection.Count
            </summary>
            <value></value>
        </member>
        <member name="P:Northface.Tools.ORM.FactEditor.FactObjectCollection.IsReadOnly">
            <summary>
            Implements ICollection.IsReadOnly
            </summary>
            <value></value>
        </member>
        <member name="T:Northface.Tools.ORM.FactEditor.FactColorizer">
            <summary>
            A class which handles applying color to marked tokens
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactColorizer.#ctor(Northface.Tools.ORM.FactEditor.FactParser,Microsoft.VisualStudio.TextManager.Interop.IVsTextLines)">
            <summary>
            Create a new colorizer object
            </summary>
            <param name="parser">The parser that knows how to parse the lines</param>
            <param name="textLines">The data source of lines to parse</param>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactColorizer.CloseColorizer">
            <summary>
            Implements IVsColorizer.CloseColorizer
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactColorizer.ColorizeLine(System.Int32,System.Int32,System.IntPtr,System.Int32,System.UInt32[])">
            <summary>
            Implements IVsColorizer.ColorizeLine
            </summary>
            <param name="iLine"></param>
            <param name="iLength"></param>
            <param name="pszText"></param>
            <param name="iState"></param>
            <param name="pAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactColorizer.GetStartState(System.Int32@)">
            <summary>
            Implements IVsColorizer.GetStartState
            </summary>
            <param name="piStartState"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactColorizer.GetStateAtEndOfLine(System.Int32,System.Int32,System.IntPtr,System.Int32)">
            <summary>
            Implements IVsColorizer.GetStateAtEndOfLine
            </summary>
            <param name="iLine"></param>
            <param name="iLength"></param>
            <param name="pText"></param>
            <param name="iState"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactColorizer.GetStateMaintenanceFlag(System.Int32@)">
            <summary>
            Implements IVsColorizer.GetStateMaintenanceFlag
            </summary>
            <param name="pfFlag"></param>
            <returns></returns>
        </member>
        <member name="T:Northface.Tools.ORM.FactEditor.FactCodeWindowManager">
            <summary>
            The host of the text editor
            </summary>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactCodeWindowManager.#ctor(Northface.Tools.ORM.Shell.ORMDesignerPackage,Microsoft.VisualStudio.TextManager.Interop.IVsCodeWindow)">
            <summary>
            Create a window manager
            </summary>
            <param name="package">That package on which to create text views</param>
            <param name="codeWindow">The source window for the facts being entered</param>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactCodeWindowManager.AddAdornments">
            <summary>
            Implements IVsCodeWindowManager.AddAdornments
            </summary>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactCodeWindowManager.OnNewView(Microsoft.VisualStudio.TextManager.Interop.IVsTextView)">
            <summary>
            Implements IVsCodeWindowManager.OnNewView
            </summary>
            <param name="view"></param>
            <returns></returns>
        </member>
        <member name="M:Northface.Tools.ORM.FactEditor.FactCodeWindowManager.RemoveAdornments">
            <summary>
            Implements IVsCodeWindowManager.RemoveAdornments
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
