<?xml version="1.0" encoding="utf-8"?>
<plx:root xmlns:plx="http://schemas.neumont.edu/CodeGeneration/PLiX">
	<plx:namespaceImport name="System" />
	<plx:namespaceImport name="System.Collections.Generic" />
	<plx:namespaceImport name="System.Collections.ObjectModel" />
	<plx:namespaceImport name="System.ComponentModel" />
	<plx:namespaceImport name="System.Xml" />
	<plx:namespace name="System">
		<plx:leadingInfo>
			<plx:pragma type="region" data="Global Support Classes" />
		</plx:leadingInfo>
		<plx:trailingInfo>
			<plx:pragma type="closeRegion" data="Global Support Classes" />
		</plx:trailingInfo>
		<plx:pragma type="region" data="Tuples" />
		<plx:class visibility="public" modifier="abstract" partial="true" name="Tuple">
			<plx:leadingInfo>
				<plx:pragma type="region" data="Tuple Support" />
			</plx:leadingInfo>
			<plx:trailingInfo>
				<plx:pragma type="closeRegion" data="Tuple Support" />
			</plx:trailingInfo>
			<plx:attribute dataTypeName="SerializableAttribute" dataTypeQualifier="System" />
			<plx:attribute dataTypeName="ImmutableObjectAttribute" dataTypeQualifier="System.ComponentModel">
				<plx:passParam>
					<plx:trueKeyword />
				</plx:passParam>
			</plx:attribute>
			<plx:attribute dataTypeName="StructLayoutAttribute" dataTypeQualifier="System.Runtime.InteropServices">
				<plx:passParam>
					<plx:callStatic type="field" name="Auto" dataTypeName="LayoutKind" dataTypeQualifier="System.Runtime.InteropServices" />
				</plx:passParam>
				<plx:passParam>
					<plx:binaryOperator type="assignNamed">
						<plx:left>
							<plx:nameRef type="namedParameter" name="CharSet" />
						</plx:left>
						<plx:right>
							<plx:callStatic type="field" name="Auto" dataTypeName="CharSet" dataTypeQualifier="System.Runtime.InteropServices" />
						</plx:right>
					</plx:binaryOperator>
				</plx:passParam>
			</plx:attribute>
			<plx:implementsInterface dataTypeName="IEquatable" dataTypeQualifier="System">
				<plx:passTypeParam dataTypeName="Tuple" />
			</plx:implementsInterface>
			<plx:function visibility="protected" name=".construct" />
			<plx:function visibility="protected" modifier="static" name="RotateRight">
				<plx:attribute dataTypeName="SuppressMessageAttribute" dataTypeQualifier="System.Diagnostics.CodeAnalysis">
					<plx:passParam>
						<plx:string data="Microsoft.Usage" />
					</plx:passParam>
					<plx:passParam>
						<plx:string data="CA2233:OperationsShouldNotOverflow" />
					</plx:passParam>
				</plx:attribute>
				<plx:param type="in" name="value" dataTypeName=".i4" />
				<plx:param type="in" name="places" dataTypeName=".i4" />
				<plx:returns dataTypeName=".i4" />
				<plx:return>
					<plx:cast type="primitiveUnchecked" dataTypeName=".i4">
						<plx:binaryOperator type="bitwiseOr">
							<plx:left>
								<plx:binaryOperator type="shiftRight">
									<plx:left>
										<plx:cast type="primitiveUnchecked" dataTypeName=".u4">
											<plx:nameRef type="parameter" name="value" />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:nameRef type="parameter" name="places" />
									</plx:right>
								</plx:binaryOperator>
							</plx:left>
							<plx:right>
								<plx:binaryOperator type="shiftLeft">
									<plx:left>
										<plx:cast type="primitiveUnchecked" dataTypeName=".u4">
											<plx:nameRef type="parameter" name="value" />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:binaryOperator type="subtract">
											<plx:left>
												<plx:value type="i4" data="32" />
											</plx:left>
											<plx:right>
												<plx:nameRef type="parameter" name="places" />
											</plx:right>
										</plx:binaryOperator>
									</plx:right>
								</plx:binaryOperator>
							</plx:right>
						</plx:binaryOperator>
					</plx:cast>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" modifier="abstractOverride" overload="true" name="Equals">
				<plx:param name="obj" dataTypeName=".object" />
				<plx:returns dataTypeName=".boolean" />
			</plx:function>
			<plx:function visibility="public" modifier="abstract" overload="true" name="Equals">
				<plx:interfaceMember memberName="Equals" dataTypeName="IEquatable" dataTypeQualifier="System">
					<plx:passTypeParam dataTypeName="Tuple" />
				</plx:interfaceMember>
				<plx:param name="other" dataTypeName="Tuple" />
				<plx:returns dataTypeName=".boolean" />
			</plx:function>
			<plx:function visibility="public" modifier="abstractOverride" name="GetHashCode">
				<plx:returns dataTypeName=".i4" />
			</plx:function>
			<plx:function visibility="public" modifier="abstractOverride" overload="true" name="ToString">
				<plx:returns dataTypeName=".string" />
			</plx:function>
			<plx:function visibility="public" modifier="abstract" overload="true" name="ToString">
				<plx:param name="provider" dataTypeName="IFormatProvider" dataTypeQualifier="System" />
				<plx:returns dataTypeName=".string" />
			</plx:function>
		</plx:class>
		<plx:pragma type="region" data="Binary (2-ary) Tuple" />
		<plx:class visibility="public" modifier="abstract" partial="true" name="Tuple">
			<plx:function visibility="public" modifier="static" overload="true" name="CreateTuple">
				<plx:typeParam name="T1" />
				<plx:typeParam name="T2" />
				<plx:param name="item1" dataTypeName="T1" />
				<plx:param name="item2" dataTypeName="T2" />
				<plx:returns dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
				</plx:returns>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="booleanOr">
							<plx:left>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:nameRef type="parameter" name="item1" />
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:left>
							<plx:right>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:nameRef type="parameter" name="item2" />
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:return>
						<plx:nullKeyword />
					</plx:return>
				</plx:branch>
				<plx:return>
					<plx:callNew dataTypeName="Tuple">
						<plx:passTypeParam dataTypeName="T1" />
						<plx:passTypeParam dataTypeName="T2" />
						<plx:passParam>
							<plx:nameRef type="parameter" name="item1" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item2" />
						</plx:passParam>
					</plx:callNew>
				</plx:return>
			</plx:function>
		</plx:class>
		<plx:class visibility="public" modifier="sealed" name="Tuple">
			<plx:attribute dataTypeName="SerializableAttribute" dataTypeQualifier="System" />
			<plx:attribute dataTypeName="StructLayoutAttribute" dataTypeQualifier="System.Runtime.InteropServices">
				<plx:passParam>
					<plx:callStatic type="field" name="Auto" dataTypeName="LayoutKind" dataTypeQualifier="System.Runtime.InteropServices" />
				</plx:passParam>
				<plx:passParam>
					<plx:binaryOperator type="assignNamed">
						<plx:left>
							<plx:nameRef type="namedParameter" name="CharSet" />
						</plx:left>
						<plx:right>
							<plx:callStatic type="field" name="Auto" dataTypeName="CharSet" dataTypeQualifier="System.Runtime.InteropServices" />
						</plx:right>
					</plx:binaryOperator>
				</plx:passParam>
			</plx:attribute>
			<plx:typeParam name="T1" />
			<plx:typeParam name="T2" />
			<plx:derivesFromClass dataTypeName="Tuple" />
			<plx:implementsInterface dataTypeName="IEquatable" dataTypeQualifier="System">
				<plx:passTypeParam dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
				</plx:passTypeParam>
			</plx:implementsInterface>
			<plx:field visibility="private" readOnly="true" name="_item1" dataTypeName="T1" />
			<plx:property visibility="public" name="Item1">
				<plx:returns dataTypeName="T1" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item1" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item2" dataTypeName="T2" />
			<plx:property visibility="public" name="Item2">
				<plx:returns dataTypeName="T2" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item2" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:function visibility="public" name=".construct">
				<plx:param name="item1" dataTypeName="T1" />
				<plx:param name="item2" dataTypeName="T2" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="booleanOr">
							<plx:left>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:nameRef type="parameter" name="item1" />
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:left>
							<plx:right>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:nameRef type="parameter" name="item2" />
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="ArgumentNullException" dataTypeQualifier="System" />
					</plx:throw>
				</plx:branch>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item1" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item1" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item2" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item2" />
					</plx:right>
				</plx:assign>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" overload="true" name="Equals">
				<plx:param name="obj" dataTypeName=".object" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:callThis accessor="this" type="methodCall" name="Equals">
						<plx:passParam>
							<plx:cast type="testCast" dataTypeName="Tuple">
								<plx:passTypeParam dataTypeName="T1" />
								<plx:passTypeParam dataTypeName="T2" />
								<plx:nameRef type="parameter" name="obj" />
							</plx:cast>
						</plx:passParam>
					</plx:callThis>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" overload="true" name="Equals">
				<plx:param name="other" dataTypeName="Tuple" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:callThis accessor="this" type="methodCall" name="Equals">
						<plx:passParam>
							<plx:cast type="testCast" dataTypeName="Tuple">
								<plx:passTypeParam dataTypeName="T1" />
								<plx:passTypeParam dataTypeName="T2" />
								<plx:nameRef type="parameter" name="other" />
							</plx:cast>
						</plx:passParam>
					</plx:callThis>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" overload="true" name="Equals">
				<plx:interfaceMember memberName="Equals" dataTypeName="IEquatable" dataTypeQualifier="System">
					<plx:passTypeParam dataTypeName="Tuple">
						<plx:passTypeParam dataTypeName="T1" />
						<plx:passTypeParam dataTypeName="T2" />
					</plx:passTypeParam>
				</plx:interfaceMember>
				<plx:param name="other" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:binaryOperator type="booleanOr">
						<plx:left>
							<plx:binaryOperator type="identityEquality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:thisKeyword />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="other" />
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:left>
						<plx:right>
							<plx:binaryOperator type="booleanAnd">
								<plx:left>
									<plx:binaryOperator type="identityInequality">
										<plx:left>
											<plx:cast type="exceptionCast" dataTypeName=".object">
												<plx:nameRef type="parameter" name="other" />
											</plx:cast>
										</plx:left>
										<plx:right>
											<plx:nullKeyword />
										</plx:right>
									</plx:binaryOperator>
								</plx:left>
								<plx:right>
									<plx:binaryOperator type="booleanOr">
										<plx:left>
											<plx:callInstance type="methodCall" name="Equals">
												<plx:callObject>
													<plx:callThis accessor="this" type="field" name="_item1" />
												</plx:callObject>
												<plx:passParam>
													<plx:callInstance type="field" name="_item1">
														<plx:callObject>
															<plx:nameRef type="parameter" name="other" />
														</plx:callObject>
													</plx:callInstance>
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callInstance type="methodCall" name="Equals">
												<plx:callObject>
													<plx:callThis accessor="this" type="field" name="_item2" />
												</plx:callObject>
												<plx:passParam>
													<plx:callInstance type="field" name="_item2">
														<plx:callObject>
															<plx:nameRef type="parameter" name="other" />
														</plx:callObject>
													</plx:callInstance>
												</plx:passParam>
											</plx:callInstance>
										</plx:right>
									</plx:binaryOperator>
								</plx:right>
							</plx:binaryOperator>
						</plx:right>
					</plx:binaryOperator>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" name="GetHashCode">
				<plx:returns dataTypeName=".i4" />
				<plx:return>
					<plx:binaryOperator type="bitwiseExclusiveOr">
						<plx:left>
							<plx:callInstance type="methodCall" name="GetHashCode">
								<plx:callObject>
									<plx:callThis accessor="this" type="field" name="_item1" />
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
								<plx:passParam>
									<plx:callInstance type="methodCall" name="GetHashCode">
										<plx:callObject>
											<plx:callThis accessor="this" type="field" name="_item2" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
								<plx:passParam>
									<plx:value type="i4" data="1" />
								</plx:passParam>
							</plx:callStatic>
						</plx:right>
					</plx:binaryOperator>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" overload="true" name="ToString">
				<plx:returns dataTypeName=".string" />
				<plx:return>
					<plx:callThis accessor="this" type="methodCall" name="ToString">
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callThis>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" overload="true" name="ToString">
				<plx:param name="provider" dataTypeName="IFormatProvider" dataTypeQualifier="System" />
				<plx:returns dataTypeName=".string" />
				<plx:return>
					<plx:callStatic type="methodCall" name="Format" dataTypeName=".string">
						<plx:passParam>
							<plx:nameRef type="parameter" name="provider" />
						</plx:passParam>
						<plx:passParam>
							<plx:string>({1}, {2})</plx:string>
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item1" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item2" />
						</plx:passParam>
					</plx:callStatic>
				</plx:return>
			</plx:function>
			<plx:operatorFunction type="equality">
				<plx:param type="in" name="tuple1" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
				</plx:param>
				<plx:param type="in" name="tuple2" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:binaryOperator type="booleanOr">
						<plx:left>
							<plx:binaryOperator type="identityEquality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="tuple1" />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="tuple2" />
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:left>
						<plx:right>
							<plx:binaryOperator type="booleanAnd">
								<plx:left>
									<plx:binaryOperator type="identityEquality">
										<plx:left>
											<plx:cast type="exceptionCast" dataTypeName=".object">
												<plx:nameRef type="parameter" name="tuple1" />
											</plx:cast>
										</plx:left>
										<plx:right>
											<plx:nullKeyword />
										</plx:right>
									</plx:binaryOperator>
								</plx:left>
								<plx:right>
									<plx:callInstance type="methodCall" name="Equals">
										<plx:callObject>
											<plx:nameRef type="parameter" name="tuple1" />
										</plx:callObject>
										<plx:passParam>
											<plx:nameRef type="parameter" name="tuple2" />
										</plx:passParam>
									</plx:callInstance>
								</plx:right>
							</plx:binaryOperator>
						</plx:right>
					</plx:binaryOperator>
				</plx:return>
			</plx:operatorFunction>
			<plx:operatorFunction type="inequality">
				<plx:param type="in" name="tuple1" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
				</plx:param>
				<plx:param type="in" name="tuple2" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:unaryOperator type="booleanNot">
						<plx:binaryOperator type="equality">
							<plx:left>
								<plx:nameRef type="parameter" name="tuple1" />
							</plx:left>
							<plx:right>
								<plx:nameRef type="parameter" name="tuple2" />
							</plx:right>
						</plx:binaryOperator>
					</plx:unaryOperator>
				</plx:return>
			</plx:operatorFunction>
			<plx:operatorFunction overload="true" type="castWiden">
				<plx:param name="tuple" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
				</plx:param>
				<plx:returns dataTypeName="KeyValuePair" dataTypeQualifier="System.Collections.Generic">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
				</plx:returns>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="tuple" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:return>
						<plx:defaultValueOf dataTypeName="KeyValuePair" dataTypeQualifier="System.Collections.Generic">
							<plx:passTypeParam dataTypeName="T1" />
							<plx:passTypeParam dataTypeName="T2" />
						</plx:defaultValueOf>
					</plx:return>
				</plx:branch>
				<plx:fallbackBranch>
					<plx:return>
						<plx:callNew dataTypeName="KeyValuePair" dataTypeQualifier="System.Collections.Generic">
							<plx:passTypeParam dataTypeName="T1" />
							<plx:passTypeParam dataTypeName="T2" />
							<plx:passParam>
								<plx:callInstance type="field" name="_item1">
									<plx:callObject>
										<plx:nameRef type="parameter" name="tuple" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:callInstance type="field" name="_item2">
									<plx:callObject>
										<plx:nameRef type="parameter" name="tuple" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
						</plx:callNew>
					</plx:return>
				</plx:fallbackBranch>
			</plx:operatorFunction>
			<plx:operatorFunction overload="true" type="castNarrow">
				<plx:param name="keyValuePair" dataTypeName="KeyValuePair" dataTypeQualifier="System.Collections.Generic">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
				</plx:param>
				<plx:returns dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
				</plx:returns>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="booleanOr">
							<plx:left>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:callInstance type="property" name="Key">
											<plx:callObject>
												<plx:nameRef type="parameter" name="keyValuePair" />
											</plx:callObject>
										</plx:callInstance>
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:left>
							<plx:right>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:callInstance type="property" name="Value">
											<plx:callObject>
												<plx:nameRef type="parameter" name="keyValuePair" />
											</plx:callObject>
										</plx:callInstance>
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="InvalidCastException" dataTypeQualifier="System" />
					</plx:throw>
				</plx:branch>
				<plx:fallbackBranch>
					<plx:return>
						<plx:callNew dataTypeName="Tuple">
							<plx:passTypeParam dataTypeName="T1" />
							<plx:passTypeParam dataTypeName="T2" />
							<plx:passParam>
								<plx:callInstance type="property" name="Key">
									<plx:callObject>
										<plx:nameRef type="parameter" name="keyValuePair" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:callInstance type="property" name="Value">
									<plx:callObject>
										<plx:nameRef type="parameter" name="keyValuePair" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
						</plx:callNew>
					</plx:return>
				</plx:fallbackBranch>
			</plx:operatorFunction>
			<plx:operatorFunction overload="true" type="castWiden">
				<plx:param name="tuple" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
				</plx:param>
				<plx:returns dataTypeName="DictionaryEntry" dataTypeQualifier="System.Collections" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="tuple" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:return>
						<plx:defaultValueOf dataTypeName="DictionaryEntry" dataTypeQualifier="System.Collections" />
					</plx:return>
				</plx:branch>
				<plx:fallbackBranch>
					<plx:return>
						<plx:callNew dataTypeName="DictionaryEntry" dataTypeQualifier="System.Collections">
							<plx:passParam>
								<plx:callInstance type="field" name="_item1">
									<plx:callObject>
										<plx:nameRef type="parameter" name="tuple" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:callInstance type="field" name="_item2">
									<plx:callObject>
										<plx:nameRef type="parameter" name="tuple" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
						</plx:callNew>
					</plx:return>
				</plx:fallbackBranch>
			</plx:operatorFunction>
			<plx:operatorFunction overload="true" type="castNarrow">
				<plx:param name="dictionaryEntry" dataTypeName="DictionaryEntry" dataTypeQualifier="System.Collections" />
				<plx:returns dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
				</plx:returns>
				<plx:local name="key" dataTypeName=".object">
					<plx:initialize>
						<plx:callInstance type="property" name="Key">
							<plx:callObject>
								<plx:nameRef type="parameter" name="dictionaryEntry" />
							</plx:callObject>
						</plx:callInstance>
					</plx:initialize>
				</plx:local>
				<plx:local name="value" dataTypeName=".object">
					<plx:initialize>
						<plx:callInstance type="property" name="Value">
							<plx:callObject>
								<plx:nameRef type="parameter" name="dictionaryEntry" />
							</plx:callObject>
						</plx:callInstance>
					</plx:initialize>
				</plx:local>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="booleanOr">
							<plx:left>
								<plx:binaryOperator type="booleanOr">
									<plx:left>
										<plx:binaryOperator type="identityEquality">
											<plx:left>
												<plx:nameRef type="local" name="key" />
											</plx:left>
											<plx:right>
												<plx:nullKeyword />
											</plx:right>
										</plx:binaryOperator>
									</plx:left>
									<plx:right>
										<plx:binaryOperator type="identityEquality">
											<plx:left>
												<plx:nameRef type="local" name="value" />
											</plx:left>
											<plx:right>
												<plx:nullKeyword />
											</plx:right>
										</plx:binaryOperator>
									</plx:right>
								</plx:binaryOperator>
							</plx:left>
							<plx:right>
								<plx:unaryOperator type="booleanNot">
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:binaryOperator type="typeEquality">
												<plx:left>
													<plx:nameRef type="local" name="key" />
												</plx:left>
												<plx:right>
													<plx:directTypeReference dataTypeName="T1" />
												</plx:right>
											</plx:binaryOperator>
										</plx:left>
										<plx:right>
											<plx:binaryOperator type="typeEquality">
												<plx:left>
													<plx:nameRef type="local" name="value" />
												</plx:left>
												<plx:right>
													<plx:directTypeReference dataTypeName="T2" />
												</plx:right>
											</plx:binaryOperator>
										</plx:right>
									</plx:binaryOperator>
								</plx:unaryOperator>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="InvalidCastException" dataTypeQualifier="System" />
					</plx:throw>
				</plx:branch>
				<plx:fallbackBranch>
					<plx:return>
						<plx:callNew dataTypeName="Tuple">
							<plx:passTypeParam dataTypeName="T1" />
							<plx:passTypeParam dataTypeName="T2" />
							<plx:passParam>
								<plx:cast type="exceptionCast" dataTypeName="T1">
									<plx:nameRef type="local" name="key" />
								</plx:cast>
							</plx:passParam>
							<plx:passParam>
								<plx:cast type="exceptionCast" dataTypeName="T2">
									<plx:nameRef type="local" name="value" />
								</plx:cast>
							</plx:passParam>
						</plx:callNew>
					</plx:return>
				</plx:fallbackBranch>
			</plx:operatorFunction>
		</plx:class>
		<plx:pragma type="closeRegion" data="Binary (2-ary) Tuple" />
		<plx:pragma type="region" data="Ternary (3-ary) Tuple" />
		<plx:class visibility="public" modifier="abstract" partial="true" name="Tuple">
			<plx:function visibility="public" modifier="static" overload="true" name="CreateTuple">
				<plx:typeParam name="T1" />
				<plx:typeParam name="T2" />
				<plx:typeParam name="T3" />
				<plx:param name="item1" dataTypeName="T1" />
				<plx:param name="item2" dataTypeName="T2" />
				<plx:param name="item3" dataTypeName="T3" />
				<plx:returns dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
				</plx:returns>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="booleanOr">
							<plx:left>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:nameRef type="parameter" name="item1" />
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:left>
							<plx:right>
								<plx:binaryOperator type="booleanOr">
									<plx:left>
										<plx:binaryOperator type="identityEquality">
											<plx:left>
												<plx:nameRef type="parameter" name="item2" />
											</plx:left>
											<plx:right>
												<plx:nullKeyword />
											</plx:right>
										</plx:binaryOperator>
									</plx:left>
									<plx:right>
										<plx:binaryOperator type="identityEquality">
											<plx:left>
												<plx:nameRef type="parameter" name="item3" />
											</plx:left>
											<plx:right>
												<plx:nullKeyword />
											</plx:right>
										</plx:binaryOperator>
									</plx:right>
								</plx:binaryOperator>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:return>
						<plx:nullKeyword />
					</plx:return>
				</plx:branch>
				<plx:return>
					<plx:callNew dataTypeName="Tuple">
						<plx:passTypeParam dataTypeName="T1" />
						<plx:passTypeParam dataTypeName="T2" />
						<plx:passTypeParam dataTypeName="T3" />
						<plx:passParam>
							<plx:nameRef type="parameter" name="item1" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item2" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item3" />
						</plx:passParam>
					</plx:callNew>
				</plx:return>
			</plx:function>
		</plx:class>
		<plx:class visibility="public" modifier="sealed" name="Tuple">
			<plx:attribute dataTypeName="SerializableAttribute" dataTypeQualifier="System" />
			<plx:attribute dataTypeName="SuppressMessageAttribute" dataTypeQualifier="System.Diagnostics.CodeAnalysis">
				<plx:passParam>
					<plx:string data="Microsoft.Design" />
				</plx:passParam>
				<plx:passParam>
					<plx:string data="CA1005:AvoidExcessiveParametersOnGenericTypes" />
				</plx:passParam>
			</plx:attribute>
			<plx:attribute dataTypeName="StructLayoutAttribute" dataTypeQualifier="System.Runtime.InteropServices">
				<plx:passParam>
					<plx:callStatic type="field" name="Auto" dataTypeName="LayoutKind" dataTypeQualifier="System.Runtime.InteropServices" />
				</plx:passParam>
				<plx:passParam>
					<plx:binaryOperator type="assignNamed">
						<plx:left>
							<plx:nameRef type="namedParameter" name="CharSet" />
						</plx:left>
						<plx:right>
							<plx:callStatic type="field" name="Auto" dataTypeName="CharSet" dataTypeQualifier="System.Runtime.InteropServices" />
						</plx:right>
					</plx:binaryOperator>
				</plx:passParam>
			</plx:attribute>
			<plx:typeParam name="T1" />
			<plx:typeParam name="T2" />
			<plx:typeParam name="T3" />
			<plx:derivesFromClass dataTypeName="Tuple" />
			<plx:implementsInterface dataTypeName="IEquatable" dataTypeQualifier="System">
				<plx:passTypeParam dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
				</plx:passTypeParam>
			</plx:implementsInterface>
			<plx:field visibility="private" readOnly="true" name="_item1" dataTypeName="T1" />
			<plx:property visibility="public" name="Item1">
				<plx:returns dataTypeName="T1" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item1" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item2" dataTypeName="T2" />
			<plx:property visibility="public" name="Item2">
				<plx:returns dataTypeName="T2" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item2" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item3" dataTypeName="T3" />
			<plx:property visibility="public" name="Item3">
				<plx:returns dataTypeName="T3" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item3" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:function visibility="public" name=".construct">
				<plx:param name="item1" dataTypeName="T1" />
				<plx:param name="item2" dataTypeName="T2" />
				<plx:param name="item3" dataTypeName="T3" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="booleanOr">
							<plx:left>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:nameRef type="parameter" name="item1" />
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:left>
							<plx:right>
								<plx:binaryOperator type="booleanOr">
									<plx:left>
										<plx:binaryOperator type="identityEquality">
											<plx:left>
												<plx:nameRef type="parameter" name="item2" />
											</plx:left>
											<plx:right>
												<plx:nullKeyword />
											</plx:right>
										</plx:binaryOperator>
									</plx:left>
									<plx:right>
										<plx:binaryOperator type="identityEquality">
											<plx:left>
												<plx:nameRef type="parameter" name="item3" />
											</plx:left>
											<plx:right>
												<plx:nullKeyword />
											</plx:right>
										</plx:binaryOperator>
									</plx:right>
								</plx:binaryOperator>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="ArgumentNullException" dataTypeQualifier="System" />
					</plx:throw>
				</plx:branch>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item1" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item1" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item2" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item2" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item3" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item3" />
					</plx:right>
				</plx:assign>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" overload="true" name="Equals">
				<plx:param name="obj" dataTypeName=".object" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:callThis accessor="this" type="methodCall" name="Equals">
						<plx:passParam>
							<plx:cast type="testCast" dataTypeName="Tuple">
								<plx:passTypeParam dataTypeName="T1" />
								<plx:passTypeParam dataTypeName="T2" />
								<plx:passTypeParam dataTypeName="T3" />
								<plx:nameRef type="parameter" name="obj" />
							</plx:cast>
						</plx:passParam>
					</plx:callThis>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" overload="true" name="Equals">
				<plx:param name="other" dataTypeName="Tuple" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:callThis accessor="this" type="methodCall" name="Equals">
						<plx:passParam>
							<plx:cast type="testCast" dataTypeName="Tuple">
								<plx:passTypeParam dataTypeName="T1" />
								<plx:passTypeParam dataTypeName="T2" />
								<plx:passTypeParam dataTypeName="T3" />
								<plx:nameRef type="parameter" name="other" />
							</plx:cast>
						</plx:passParam>
					</plx:callThis>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" overload="true" name="Equals">
				<plx:interfaceMember memberName="Equals" dataTypeName="IEquatable" dataTypeQualifier="System">
					<plx:passTypeParam dataTypeName="Tuple">
						<plx:passTypeParam dataTypeName="T1" />
						<plx:passTypeParam dataTypeName="T2" />
						<plx:passTypeParam dataTypeName="T3" />
					</plx:passTypeParam>
				</plx:interfaceMember>
				<plx:param name="other" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:binaryOperator type="booleanOr">
						<plx:left>
							<plx:binaryOperator type="identityEquality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:thisKeyword />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="other" />
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:left>
						<plx:right>
							<plx:binaryOperator type="booleanAnd">
								<plx:left>
									<plx:binaryOperator type="identityInequality">
										<plx:left>
											<plx:cast type="exceptionCast" dataTypeName=".object">
												<plx:nameRef type="parameter" name="other" />
											</plx:cast>
										</plx:left>
										<plx:right>
											<plx:nullKeyword />
										</plx:right>
									</plx:binaryOperator>
								</plx:left>
								<plx:right>
									<plx:binaryOperator type="booleanOr">
										<plx:left>
											<plx:callInstance type="methodCall" name="Equals">
												<plx:callObject>
													<plx:callThis accessor="this" type="field" name="_item1" />
												</plx:callObject>
												<plx:passParam>
													<plx:callInstance type="field" name="_item1">
														<plx:callObject>
															<plx:nameRef type="parameter" name="other" />
														</plx:callObject>
													</plx:callInstance>
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:binaryOperator type="booleanOr">
												<plx:left>
													<plx:callInstance type="methodCall" name="Equals">
														<plx:callObject>
															<plx:callThis accessor="this" type="field" name="_item2" />
														</plx:callObject>
														<plx:passParam>
															<plx:callInstance type="field" name="_item2">
																<plx:callObject>
																	<plx:nameRef type="parameter" name="other" />
																</plx:callObject>
															</plx:callInstance>
														</plx:passParam>
													</plx:callInstance>
												</plx:left>
												<plx:right>
													<plx:callInstance type="methodCall" name="Equals">
														<plx:callObject>
															<plx:callThis accessor="this" type="field" name="_item3" />
														</plx:callObject>
														<plx:passParam>
															<plx:callInstance type="field" name="_item3">
																<plx:callObject>
																	<plx:nameRef type="parameter" name="other" />
																</plx:callObject>
															</plx:callInstance>
														</plx:passParam>
													</plx:callInstance>
												</plx:right>
											</plx:binaryOperator>
										</plx:right>
									</plx:binaryOperator>
								</plx:right>
							</plx:binaryOperator>
						</plx:right>
					</plx:binaryOperator>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" name="GetHashCode">
				<plx:returns dataTypeName=".i4" />
				<plx:return>
					<plx:binaryOperator type="bitwiseExclusiveOr">
						<plx:left>
							<plx:callInstance type="methodCall" name="GetHashCode">
								<plx:callObject>
									<plx:callThis accessor="this" type="field" name="_item1" />
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:binaryOperator type="bitwiseExclusiveOr">
								<plx:left>
									<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
										<plx:passParam>
											<plx:callInstance type="methodCall" name="GetHashCode">
												<plx:callObject>
													<plx:callThis accessor="this" type="field" name="_item2" />
												</plx:callObject>
											</plx:callInstance>
										</plx:passParam>
										<plx:passParam>
											<plx:value type="i4" data="1" />
										</plx:passParam>
									</plx:callStatic>
								</plx:left>
								<plx:right>
									<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
										<plx:passParam>
											<plx:callInstance type="methodCall" name="GetHashCode">
												<plx:callObject>
													<plx:callThis accessor="this" type="field" name="_item3" />
												</plx:callObject>
											</plx:callInstance>
										</plx:passParam>
										<plx:passParam>
											<plx:value type="i4" data="2" />
										</plx:passParam>
									</plx:callStatic>
								</plx:right>
							</plx:binaryOperator>
						</plx:right>
					</plx:binaryOperator>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" overload="true" name="ToString">
				<plx:returns dataTypeName=".string" />
				<plx:return>
					<plx:callThis accessor="this" type="methodCall" name="ToString">
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callThis>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" overload="true" name="ToString">
				<plx:param name="provider" dataTypeName="IFormatProvider" dataTypeQualifier="System" />
				<plx:returns dataTypeName=".string" />
				<plx:return>
					<plx:callStatic type="methodCall" name="Format" dataTypeName=".string">
						<plx:passParam>
							<plx:nameRef type="parameter" name="provider" />
						</plx:passParam>
						<plx:passParam>
							<plx:string>({1}, {2}, {3})</plx:string>
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item1" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item2" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item3" />
						</plx:passParam>
					</plx:callStatic>
				</plx:return>
			</plx:function>
			<plx:operatorFunction type="equality">
				<plx:param type="in" name="tuple1" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
				</plx:param>
				<plx:param type="in" name="tuple2" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:binaryOperator type="booleanOr">
						<plx:left>
							<plx:binaryOperator type="identityEquality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="tuple1" />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="tuple2" />
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:left>
						<plx:right>
							<plx:binaryOperator type="booleanAnd">
								<plx:left>
									<plx:binaryOperator type="identityEquality">
										<plx:left>
											<plx:cast type="exceptionCast" dataTypeName=".object">
												<plx:nameRef type="parameter" name="tuple1" />
											</plx:cast>
										</plx:left>
										<plx:right>
											<plx:nullKeyword />
										</plx:right>
									</plx:binaryOperator>
								</plx:left>
								<plx:right>
									<plx:callInstance type="methodCall" name="Equals">
										<plx:callObject>
											<plx:nameRef type="parameter" name="tuple1" />
										</plx:callObject>
										<plx:passParam>
											<plx:nameRef type="parameter" name="tuple2" />
										</plx:passParam>
									</plx:callInstance>
								</plx:right>
							</plx:binaryOperator>
						</plx:right>
					</plx:binaryOperator>
				</plx:return>
			</plx:operatorFunction>
			<plx:operatorFunction type="inequality">
				<plx:param type="in" name="tuple1" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
				</plx:param>
				<plx:param type="in" name="tuple2" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:unaryOperator type="booleanNot">
						<plx:binaryOperator type="equality">
							<plx:left>
								<plx:nameRef type="parameter" name="tuple1" />
							</plx:left>
							<plx:right>
								<plx:nameRef type="parameter" name="tuple2" />
							</plx:right>
						</plx:binaryOperator>
					</plx:unaryOperator>
				</plx:return>
			</plx:operatorFunction>
		</plx:class>
		<plx:pragma type="closeRegion" data="Ternary (3-ary) Tuple" />
		<plx:pragma type="region" data="Quaternary (4-ary) Tuple" />
		<plx:class visibility="public" modifier="abstract" partial="true" name="Tuple">
			<plx:function visibility="public" modifier="static" overload="true" name="CreateTuple">
				<plx:typeParam name="T1" />
				<plx:typeParam name="T2" />
				<plx:typeParam name="T3" />
				<plx:typeParam name="T4" />
				<plx:param name="item1" dataTypeName="T1" />
				<plx:param name="item2" dataTypeName="T2" />
				<plx:param name="item3" dataTypeName="T3" />
				<plx:param name="item4" dataTypeName="T4" />
				<plx:returns dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
				</plx:returns>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="booleanOr">
							<plx:left>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:nameRef type="parameter" name="item1" />
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:left>
							<plx:right>
								<plx:binaryOperator type="booleanOr">
									<plx:left>
										<plx:binaryOperator type="identityEquality">
											<plx:left>
												<plx:nameRef type="parameter" name="item2" />
											</plx:left>
											<plx:right>
												<plx:nullKeyword />
											</plx:right>
										</plx:binaryOperator>
									</plx:left>
									<plx:right>
										<plx:binaryOperator type="booleanOr">
											<plx:left>
												<plx:binaryOperator type="identityEquality">
													<plx:left>
														<plx:nameRef type="parameter" name="item3" />
													</plx:left>
													<plx:right>
														<plx:nullKeyword />
													</plx:right>
												</plx:binaryOperator>
											</plx:left>
											<plx:right>
												<plx:binaryOperator type="identityEquality">
													<plx:left>
														<plx:nameRef type="parameter" name="item4" />
													</plx:left>
													<plx:right>
														<plx:nullKeyword />
													</plx:right>
												</plx:binaryOperator>
											</plx:right>
										</plx:binaryOperator>
									</plx:right>
								</plx:binaryOperator>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:return>
						<plx:nullKeyword />
					</plx:return>
				</plx:branch>
				<plx:return>
					<plx:callNew dataTypeName="Tuple">
						<plx:passTypeParam dataTypeName="T1" />
						<plx:passTypeParam dataTypeName="T2" />
						<plx:passTypeParam dataTypeName="T3" />
						<plx:passTypeParam dataTypeName="T4" />
						<plx:passParam>
							<plx:nameRef type="parameter" name="item1" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item2" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item3" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item4" />
						</plx:passParam>
					</plx:callNew>
				</plx:return>
			</plx:function>
		</plx:class>
		<plx:class visibility="public" modifier="sealed" name="Tuple">
			<plx:attribute dataTypeName="SerializableAttribute" dataTypeQualifier="System" />
			<plx:attribute dataTypeName="SuppressMessageAttribute" dataTypeQualifier="System.Diagnostics.CodeAnalysis">
				<plx:passParam>
					<plx:string data="Microsoft.Design" />
				</plx:passParam>
				<plx:passParam>
					<plx:string data="CA1005:AvoidExcessiveParametersOnGenericTypes" />
				</plx:passParam>
			</plx:attribute>
			<plx:attribute dataTypeName="StructLayoutAttribute" dataTypeQualifier="System.Runtime.InteropServices">
				<plx:passParam>
					<plx:callStatic type="field" name="Auto" dataTypeName="LayoutKind" dataTypeQualifier="System.Runtime.InteropServices" />
				</plx:passParam>
				<plx:passParam>
					<plx:binaryOperator type="assignNamed">
						<plx:left>
							<plx:nameRef type="namedParameter" name="CharSet" />
						</plx:left>
						<plx:right>
							<plx:callStatic type="field" name="Auto" dataTypeName="CharSet" dataTypeQualifier="System.Runtime.InteropServices" />
						</plx:right>
					</plx:binaryOperator>
				</plx:passParam>
			</plx:attribute>
			<plx:typeParam name="T1" />
			<plx:typeParam name="T2" />
			<plx:typeParam name="T3" />
			<plx:typeParam name="T4" />
			<plx:derivesFromClass dataTypeName="Tuple" />
			<plx:implementsInterface dataTypeName="IEquatable" dataTypeQualifier="System">
				<plx:passTypeParam dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
				</plx:passTypeParam>
			</plx:implementsInterface>
			<plx:field visibility="private" readOnly="true" name="_item1" dataTypeName="T1" />
			<plx:property visibility="public" name="Item1">
				<plx:returns dataTypeName="T1" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item1" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item2" dataTypeName="T2" />
			<plx:property visibility="public" name="Item2">
				<plx:returns dataTypeName="T2" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item2" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item3" dataTypeName="T3" />
			<plx:property visibility="public" name="Item3">
				<plx:returns dataTypeName="T3" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item3" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item4" dataTypeName="T4" />
			<plx:property visibility="public" name="Item4">
				<plx:returns dataTypeName="T4" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item4" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:function visibility="public" name=".construct">
				<plx:param name="item1" dataTypeName="T1" />
				<plx:param name="item2" dataTypeName="T2" />
				<plx:param name="item3" dataTypeName="T3" />
				<plx:param name="item4" dataTypeName="T4" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="booleanOr">
							<plx:left>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:nameRef type="parameter" name="item1" />
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:left>
							<plx:right>
								<plx:binaryOperator type="booleanOr">
									<plx:left>
										<plx:binaryOperator type="identityEquality">
											<plx:left>
												<plx:nameRef type="parameter" name="item2" />
											</plx:left>
											<plx:right>
												<plx:nullKeyword />
											</plx:right>
										</plx:binaryOperator>
									</plx:left>
									<plx:right>
										<plx:binaryOperator type="booleanOr">
											<plx:left>
												<plx:binaryOperator type="identityEquality">
													<plx:left>
														<plx:nameRef type="parameter" name="item3" />
													</plx:left>
													<plx:right>
														<plx:nullKeyword />
													</plx:right>
												</plx:binaryOperator>
											</plx:left>
											<plx:right>
												<plx:binaryOperator type="identityEquality">
													<plx:left>
														<plx:nameRef type="parameter" name="item4" />
													</plx:left>
													<plx:right>
														<plx:nullKeyword />
													</plx:right>
												</plx:binaryOperator>
											</plx:right>
										</plx:binaryOperator>
									</plx:right>
								</plx:binaryOperator>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="ArgumentNullException" dataTypeQualifier="System" />
					</plx:throw>
				</plx:branch>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item1" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item1" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item2" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item2" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item3" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item3" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item4" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item4" />
					</plx:right>
				</plx:assign>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" overload="true" name="Equals">
				<plx:param name="obj" dataTypeName=".object" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:callThis accessor="this" type="methodCall" name="Equals">
						<plx:passParam>
							<plx:cast type="testCast" dataTypeName="Tuple">
								<plx:passTypeParam dataTypeName="T1" />
								<plx:passTypeParam dataTypeName="T2" />
								<plx:passTypeParam dataTypeName="T3" />
								<plx:passTypeParam dataTypeName="T4" />
								<plx:nameRef type="parameter" name="obj" />
							</plx:cast>
						</plx:passParam>
					</plx:callThis>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" overload="true" name="Equals">
				<plx:param name="other" dataTypeName="Tuple" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:callThis accessor="this" type="methodCall" name="Equals">
						<plx:passParam>
							<plx:cast type="testCast" dataTypeName="Tuple">
								<plx:passTypeParam dataTypeName="T1" />
								<plx:passTypeParam dataTypeName="T2" />
								<plx:passTypeParam dataTypeName="T3" />
								<plx:passTypeParam dataTypeName="T4" />
								<plx:nameRef type="parameter" name="other" />
							</plx:cast>
						</plx:passParam>
					</plx:callThis>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" overload="true" name="Equals">
				<plx:interfaceMember memberName="Equals" dataTypeName="IEquatable" dataTypeQualifier="System">
					<plx:passTypeParam dataTypeName="Tuple">
						<plx:passTypeParam dataTypeName="T1" />
						<plx:passTypeParam dataTypeName="T2" />
						<plx:passTypeParam dataTypeName="T3" />
						<plx:passTypeParam dataTypeName="T4" />
					</plx:passTypeParam>
				</plx:interfaceMember>
				<plx:param name="other" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:binaryOperator type="booleanOr">
						<plx:left>
							<plx:binaryOperator type="identityEquality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:thisKeyword />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="other" />
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:left>
						<plx:right>
							<plx:binaryOperator type="booleanAnd">
								<plx:left>
									<plx:binaryOperator type="identityInequality">
										<plx:left>
											<plx:cast type="exceptionCast" dataTypeName=".object">
												<plx:nameRef type="parameter" name="other" />
											</plx:cast>
										</plx:left>
										<plx:right>
											<plx:nullKeyword />
										</plx:right>
									</plx:binaryOperator>
								</plx:left>
								<plx:right>
									<plx:binaryOperator type="booleanOr">
										<plx:left>
											<plx:callInstance type="methodCall" name="Equals">
												<plx:callObject>
													<plx:callThis accessor="this" type="field" name="_item1" />
												</plx:callObject>
												<plx:passParam>
													<plx:callInstance type="field" name="_item1">
														<plx:callObject>
															<plx:nameRef type="parameter" name="other" />
														</plx:callObject>
													</plx:callInstance>
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:binaryOperator type="booleanOr">
												<plx:left>
													<plx:callInstance type="methodCall" name="Equals">
														<plx:callObject>
															<plx:callThis accessor="this" type="field" name="_item2" />
														</plx:callObject>
														<plx:passParam>
															<plx:callInstance type="field" name="_item2">
																<plx:callObject>
																	<plx:nameRef type="parameter" name="other" />
																</plx:callObject>
															</plx:callInstance>
														</plx:passParam>
													</plx:callInstance>
												</plx:left>
												<plx:right>
													<plx:binaryOperator type="booleanOr">
														<plx:left>
															<plx:callInstance type="methodCall" name="Equals">
																<plx:callObject>
																	<plx:callThis accessor="this" type="field" name="_item3" />
																</plx:callObject>
																<plx:passParam>
																	<plx:callInstance type="field" name="_item3">
																		<plx:callObject>
																			<plx:nameRef type="parameter" name="other" />
																		</plx:callObject>
																	</plx:callInstance>
																</plx:passParam>
															</plx:callInstance>
														</plx:left>
														<plx:right>
															<plx:callInstance type="methodCall" name="Equals">
																<plx:callObject>
																	<plx:callThis accessor="this" type="field" name="_item4" />
																</plx:callObject>
																<plx:passParam>
																	<plx:callInstance type="field" name="_item4">
																		<plx:callObject>
																			<plx:nameRef type="parameter" name="other" />
																		</plx:callObject>
																	</plx:callInstance>
																</plx:passParam>
															</plx:callInstance>
														</plx:right>
													</plx:binaryOperator>
												</plx:right>
											</plx:binaryOperator>
										</plx:right>
									</plx:binaryOperator>
								</plx:right>
							</plx:binaryOperator>
						</plx:right>
					</plx:binaryOperator>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" name="GetHashCode">
				<plx:returns dataTypeName=".i4" />
				<plx:return>
					<plx:binaryOperator type="bitwiseExclusiveOr">
						<plx:left>
							<plx:callInstance type="methodCall" name="GetHashCode">
								<plx:callObject>
									<plx:callThis accessor="this" type="field" name="_item1" />
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:binaryOperator type="bitwiseExclusiveOr">
								<plx:left>
									<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
										<plx:passParam>
											<plx:callInstance type="methodCall" name="GetHashCode">
												<plx:callObject>
													<plx:callThis accessor="this" type="field" name="_item2" />
												</plx:callObject>
											</plx:callInstance>
										</plx:passParam>
										<plx:passParam>
											<plx:value type="i4" data="1" />
										</plx:passParam>
									</plx:callStatic>
								</plx:left>
								<plx:right>
									<plx:binaryOperator type="bitwiseExclusiveOr">
										<plx:left>
											<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
												<plx:passParam>
													<plx:callInstance type="methodCall" name="GetHashCode">
														<plx:callObject>
															<plx:callThis accessor="this" type="field" name="_item3" />
														</plx:callObject>
													</plx:callInstance>
												</plx:passParam>
												<plx:passParam>
													<plx:value type="i4" data="2" />
												</plx:passParam>
											</plx:callStatic>
										</plx:left>
										<plx:right>
											<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
												<plx:passParam>
													<plx:callInstance type="methodCall" name="GetHashCode">
														<plx:callObject>
															<plx:callThis accessor="this" type="field" name="_item4" />
														</plx:callObject>
													</plx:callInstance>
												</plx:passParam>
												<plx:passParam>
													<plx:value type="i4" data="3" />
												</plx:passParam>
											</plx:callStatic>
										</plx:right>
									</plx:binaryOperator>
								</plx:right>
							</plx:binaryOperator>
						</plx:right>
					</plx:binaryOperator>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" overload="true" name="ToString">
				<plx:returns dataTypeName=".string" />
				<plx:return>
					<plx:callThis accessor="this" type="methodCall" name="ToString">
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callThis>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" overload="true" name="ToString">
				<plx:param name="provider" dataTypeName="IFormatProvider" dataTypeQualifier="System" />
				<plx:returns dataTypeName=".string" />
				<plx:return>
					<plx:callStatic type="methodCall" name="Format" dataTypeName=".string">
						<plx:passParam>
							<plx:nameRef type="parameter" name="provider" />
						</plx:passParam>
						<plx:passParam>
							<plx:string>({1}, {2}, {3}, {4})</plx:string>
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item1" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item2" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item3" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item4" />
						</plx:passParam>
					</plx:callStatic>
				</plx:return>
			</plx:function>
			<plx:operatorFunction type="equality">
				<plx:param type="in" name="tuple1" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
				</plx:param>
				<plx:param type="in" name="tuple2" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:binaryOperator type="booleanOr">
						<plx:left>
							<plx:binaryOperator type="identityEquality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="tuple1" />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="tuple2" />
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:left>
						<plx:right>
							<plx:binaryOperator type="booleanAnd">
								<plx:left>
									<plx:binaryOperator type="identityEquality">
										<plx:left>
											<plx:cast type="exceptionCast" dataTypeName=".object">
												<plx:nameRef type="parameter" name="tuple1" />
											</plx:cast>
										</plx:left>
										<plx:right>
											<plx:nullKeyword />
										</plx:right>
									</plx:binaryOperator>
								</plx:left>
								<plx:right>
									<plx:callInstance type="methodCall" name="Equals">
										<plx:callObject>
											<plx:nameRef type="parameter" name="tuple1" />
										</plx:callObject>
										<plx:passParam>
											<plx:nameRef type="parameter" name="tuple2" />
										</plx:passParam>
									</plx:callInstance>
								</plx:right>
							</plx:binaryOperator>
						</plx:right>
					</plx:binaryOperator>
				</plx:return>
			</plx:operatorFunction>
			<plx:operatorFunction type="inequality">
				<plx:param type="in" name="tuple1" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
				</plx:param>
				<plx:param type="in" name="tuple2" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:unaryOperator type="booleanNot">
						<plx:binaryOperator type="equality">
							<plx:left>
								<plx:nameRef type="parameter" name="tuple1" />
							</plx:left>
							<plx:right>
								<plx:nameRef type="parameter" name="tuple2" />
							</plx:right>
						</plx:binaryOperator>
					</plx:unaryOperator>
				</plx:return>
			</plx:operatorFunction>
		</plx:class>
		<plx:pragma type="closeRegion" data="Quaternary (4-ary) Tuple" />
		<plx:pragma type="region" data="Quinary (5-ary) Tuple" />
		<plx:class visibility="public" modifier="abstract" partial="true" name="Tuple">
			<plx:function visibility="public" modifier="static" overload="true" name="CreateTuple">
				<plx:typeParam name="T1" />
				<plx:typeParam name="T2" />
				<plx:typeParam name="T3" />
				<plx:typeParam name="T4" />
				<plx:typeParam name="T5" />
				<plx:param name="item1" dataTypeName="T1" />
				<plx:param name="item2" dataTypeName="T2" />
				<plx:param name="item3" dataTypeName="T3" />
				<plx:param name="item4" dataTypeName="T4" />
				<plx:param name="item5" dataTypeName="T5" />
				<plx:returns dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
					<plx:passTypeParam dataTypeName="T5" />
				</plx:returns>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="booleanOr">
							<plx:left>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:nameRef type="parameter" name="item1" />
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:left>
							<plx:right>
								<plx:binaryOperator type="booleanOr">
									<plx:left>
										<plx:binaryOperator type="identityEquality">
											<plx:left>
												<plx:nameRef type="parameter" name="item2" />
											</plx:left>
											<plx:right>
												<plx:nullKeyword />
											</plx:right>
										</plx:binaryOperator>
									</plx:left>
									<plx:right>
										<plx:binaryOperator type="booleanOr">
											<plx:left>
												<plx:binaryOperator type="identityEquality">
													<plx:left>
														<plx:nameRef type="parameter" name="item3" />
													</plx:left>
													<plx:right>
														<plx:nullKeyword />
													</plx:right>
												</plx:binaryOperator>
											</plx:left>
											<plx:right>
												<plx:binaryOperator type="booleanOr">
													<plx:left>
														<plx:binaryOperator type="identityEquality">
															<plx:left>
																<plx:nameRef type="parameter" name="item4" />
															</plx:left>
															<plx:right>
																<plx:nullKeyword />
															</plx:right>
														</plx:binaryOperator>
													</plx:left>
													<plx:right>
														<plx:binaryOperator type="identityEquality">
															<plx:left>
																<plx:nameRef type="parameter" name="item5" />
															</plx:left>
															<plx:right>
																<plx:nullKeyword />
															</plx:right>
														</plx:binaryOperator>
													</plx:right>
												</plx:binaryOperator>
											</plx:right>
										</plx:binaryOperator>
									</plx:right>
								</plx:binaryOperator>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:return>
						<plx:nullKeyword />
					</plx:return>
				</plx:branch>
				<plx:return>
					<plx:callNew dataTypeName="Tuple">
						<plx:passTypeParam dataTypeName="T1" />
						<plx:passTypeParam dataTypeName="T2" />
						<plx:passTypeParam dataTypeName="T3" />
						<plx:passTypeParam dataTypeName="T4" />
						<plx:passTypeParam dataTypeName="T5" />
						<plx:passParam>
							<plx:nameRef type="parameter" name="item1" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item2" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item3" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item4" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item5" />
						</plx:passParam>
					</plx:callNew>
				</plx:return>
			</plx:function>
		</plx:class>
		<plx:class visibility="public" modifier="sealed" name="Tuple">
			<plx:attribute dataTypeName="SerializableAttribute" dataTypeQualifier="System" />
			<plx:attribute dataTypeName="SuppressMessageAttribute" dataTypeQualifier="System.Diagnostics.CodeAnalysis">
				<plx:passParam>
					<plx:string data="Microsoft.Design" />
				</plx:passParam>
				<plx:passParam>
					<plx:string data="CA1005:AvoidExcessiveParametersOnGenericTypes" />
				</plx:passParam>
			</plx:attribute>
			<plx:attribute dataTypeName="StructLayoutAttribute" dataTypeQualifier="System.Runtime.InteropServices">
				<plx:passParam>
					<plx:callStatic type="field" name="Auto" dataTypeName="LayoutKind" dataTypeQualifier="System.Runtime.InteropServices" />
				</plx:passParam>
				<plx:passParam>
					<plx:binaryOperator type="assignNamed">
						<plx:left>
							<plx:nameRef type="namedParameter" name="CharSet" />
						</plx:left>
						<plx:right>
							<plx:callStatic type="field" name="Auto" dataTypeName="CharSet" dataTypeQualifier="System.Runtime.InteropServices" />
						</plx:right>
					</plx:binaryOperator>
				</plx:passParam>
			</plx:attribute>
			<plx:typeParam name="T1" />
			<plx:typeParam name="T2" />
			<plx:typeParam name="T3" />
			<plx:typeParam name="T4" />
			<plx:typeParam name="T5" />
			<plx:derivesFromClass dataTypeName="Tuple" />
			<plx:implementsInterface dataTypeName="IEquatable" dataTypeQualifier="System">
				<plx:passTypeParam dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
					<plx:passTypeParam dataTypeName="T5" />
				</plx:passTypeParam>
			</plx:implementsInterface>
			<plx:field visibility="private" readOnly="true" name="_item1" dataTypeName="T1" />
			<plx:property visibility="public" name="Item1">
				<plx:returns dataTypeName="T1" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item1" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item2" dataTypeName="T2" />
			<plx:property visibility="public" name="Item2">
				<plx:returns dataTypeName="T2" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item2" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item3" dataTypeName="T3" />
			<plx:property visibility="public" name="Item3">
				<plx:returns dataTypeName="T3" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item3" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item4" dataTypeName="T4" />
			<plx:property visibility="public" name="Item4">
				<plx:returns dataTypeName="T4" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item4" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item5" dataTypeName="T5" />
			<plx:property visibility="public" name="Item5">
				<plx:returns dataTypeName="T5" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item5" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:function visibility="public" name=".construct">
				<plx:param name="item1" dataTypeName="T1" />
				<plx:param name="item2" dataTypeName="T2" />
				<plx:param name="item3" dataTypeName="T3" />
				<plx:param name="item4" dataTypeName="T4" />
				<plx:param name="item5" dataTypeName="T5" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="booleanOr">
							<plx:left>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:nameRef type="parameter" name="item1" />
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:left>
							<plx:right>
								<plx:binaryOperator type="booleanOr">
									<plx:left>
										<plx:binaryOperator type="identityEquality">
											<plx:left>
												<plx:nameRef type="parameter" name="item2" />
											</plx:left>
											<plx:right>
												<plx:nullKeyword />
											</plx:right>
										</plx:binaryOperator>
									</plx:left>
									<plx:right>
										<plx:binaryOperator type="booleanOr">
											<plx:left>
												<plx:binaryOperator type="identityEquality">
													<plx:left>
														<plx:nameRef type="parameter" name="item3" />
													</plx:left>
													<plx:right>
														<plx:nullKeyword />
													</plx:right>
												</plx:binaryOperator>
											</plx:left>
											<plx:right>
												<plx:binaryOperator type="booleanOr">
													<plx:left>
														<plx:binaryOperator type="identityEquality">
															<plx:left>
																<plx:nameRef type="parameter" name="item4" />
															</plx:left>
															<plx:right>
																<plx:nullKeyword />
															</plx:right>
														</plx:binaryOperator>
													</plx:left>
													<plx:right>
														<plx:binaryOperator type="identityEquality">
															<plx:left>
																<plx:nameRef type="parameter" name="item5" />
															</plx:left>
															<plx:right>
																<plx:nullKeyword />
															</plx:right>
														</plx:binaryOperator>
													</plx:right>
												</plx:binaryOperator>
											</plx:right>
										</plx:binaryOperator>
									</plx:right>
								</plx:binaryOperator>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="ArgumentNullException" dataTypeQualifier="System" />
					</plx:throw>
				</plx:branch>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item1" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item1" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item2" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item2" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item3" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item3" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item4" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item4" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item5" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item5" />
					</plx:right>
				</plx:assign>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" overload="true" name="Equals">
				<plx:param name="obj" dataTypeName=".object" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:callThis accessor="this" type="methodCall" name="Equals">
						<plx:passParam>
							<plx:cast type="testCast" dataTypeName="Tuple">
								<plx:passTypeParam dataTypeName="T1" />
								<plx:passTypeParam dataTypeName="T2" />
								<plx:passTypeParam dataTypeName="T3" />
								<plx:passTypeParam dataTypeName="T4" />
								<plx:passTypeParam dataTypeName="T5" />
								<plx:nameRef type="parameter" name="obj" />
							</plx:cast>
						</plx:passParam>
					</plx:callThis>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" overload="true" name="Equals">
				<plx:param name="other" dataTypeName="Tuple" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:callThis accessor="this" type="methodCall" name="Equals">
						<plx:passParam>
							<plx:cast type="testCast" dataTypeName="Tuple">
								<plx:passTypeParam dataTypeName="T1" />
								<plx:passTypeParam dataTypeName="T2" />
								<plx:passTypeParam dataTypeName="T3" />
								<plx:passTypeParam dataTypeName="T4" />
								<plx:passTypeParam dataTypeName="T5" />
								<plx:nameRef type="parameter" name="other" />
							</plx:cast>
						</plx:passParam>
					</plx:callThis>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" overload="true" name="Equals">
				<plx:interfaceMember memberName="Equals" dataTypeName="IEquatable" dataTypeQualifier="System">
					<plx:passTypeParam dataTypeName="Tuple">
						<plx:passTypeParam dataTypeName="T1" />
						<plx:passTypeParam dataTypeName="T2" />
						<plx:passTypeParam dataTypeName="T3" />
						<plx:passTypeParam dataTypeName="T4" />
						<plx:passTypeParam dataTypeName="T5" />
					</plx:passTypeParam>
				</plx:interfaceMember>
				<plx:param name="other" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
					<plx:passTypeParam dataTypeName="T5" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:binaryOperator type="booleanOr">
						<plx:left>
							<plx:binaryOperator type="identityEquality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:thisKeyword />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="other" />
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:left>
						<plx:right>
							<plx:binaryOperator type="booleanAnd">
								<plx:left>
									<plx:binaryOperator type="identityInequality">
										<plx:left>
											<plx:cast type="exceptionCast" dataTypeName=".object">
												<plx:nameRef type="parameter" name="other" />
											</plx:cast>
										</plx:left>
										<plx:right>
											<plx:nullKeyword />
										</plx:right>
									</plx:binaryOperator>
								</plx:left>
								<plx:right>
									<plx:binaryOperator type="booleanOr">
										<plx:left>
											<plx:callInstance type="methodCall" name="Equals">
												<plx:callObject>
													<plx:callThis accessor="this" type="field" name="_item1" />
												</plx:callObject>
												<plx:passParam>
													<plx:callInstance type="field" name="_item1">
														<plx:callObject>
															<plx:nameRef type="parameter" name="other" />
														</plx:callObject>
													</plx:callInstance>
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:binaryOperator type="booleanOr">
												<plx:left>
													<plx:callInstance type="methodCall" name="Equals">
														<plx:callObject>
															<plx:callThis accessor="this" type="field" name="_item2" />
														</plx:callObject>
														<plx:passParam>
															<plx:callInstance type="field" name="_item2">
																<plx:callObject>
																	<plx:nameRef type="parameter" name="other" />
																</plx:callObject>
															</plx:callInstance>
														</plx:passParam>
													</plx:callInstance>
												</plx:left>
												<plx:right>
													<plx:binaryOperator type="booleanOr">
														<plx:left>
															<plx:callInstance type="methodCall" name="Equals">
																<plx:callObject>
																	<plx:callThis accessor="this" type="field" name="_item3" />
																</plx:callObject>
																<plx:passParam>
																	<plx:callInstance type="field" name="_item3">
																		<plx:callObject>
																			<plx:nameRef type="parameter" name="other" />
																		</plx:callObject>
																	</plx:callInstance>
																</plx:passParam>
															</plx:callInstance>
														</plx:left>
														<plx:right>
															<plx:binaryOperator type="booleanOr">
																<plx:left>
																	<plx:callInstance type="methodCall" name="Equals">
																		<plx:callObject>
																			<plx:callThis accessor="this" type="field" name="_item4" />
																		</plx:callObject>
																		<plx:passParam>
																			<plx:callInstance type="field" name="_item4">
																				<plx:callObject>
																					<plx:nameRef type="parameter" name="other" />
																				</plx:callObject>
																			</plx:callInstance>
																		</plx:passParam>
																	</plx:callInstance>
																</plx:left>
																<plx:right>
																	<plx:callInstance type="methodCall" name="Equals">
																		<plx:callObject>
																			<plx:callThis accessor="this" type="field" name="_item5" />
																		</plx:callObject>
																		<plx:passParam>
																			<plx:callInstance type="field" name="_item5">
																				<plx:callObject>
																					<plx:nameRef type="parameter" name="other" />
																				</plx:callObject>
																			</plx:callInstance>
																		</plx:passParam>
																	</plx:callInstance>
																</plx:right>
															</plx:binaryOperator>
														</plx:right>
													</plx:binaryOperator>
												</plx:right>
											</plx:binaryOperator>
										</plx:right>
									</plx:binaryOperator>
								</plx:right>
							</plx:binaryOperator>
						</plx:right>
					</plx:binaryOperator>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" name="GetHashCode">
				<plx:returns dataTypeName=".i4" />
				<plx:return>
					<plx:binaryOperator type="bitwiseExclusiveOr">
						<plx:left>
							<plx:callInstance type="methodCall" name="GetHashCode">
								<plx:callObject>
									<plx:callThis accessor="this" type="field" name="_item1" />
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:binaryOperator type="bitwiseExclusiveOr">
								<plx:left>
									<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
										<plx:passParam>
											<plx:callInstance type="methodCall" name="GetHashCode">
												<plx:callObject>
													<plx:callThis accessor="this" type="field" name="_item2" />
												</plx:callObject>
											</plx:callInstance>
										</plx:passParam>
										<plx:passParam>
											<plx:value type="i4" data="1" />
										</plx:passParam>
									</plx:callStatic>
								</plx:left>
								<plx:right>
									<plx:binaryOperator type="bitwiseExclusiveOr">
										<plx:left>
											<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
												<plx:passParam>
													<plx:callInstance type="methodCall" name="GetHashCode">
														<plx:callObject>
															<plx:callThis accessor="this" type="field" name="_item3" />
														</plx:callObject>
													</plx:callInstance>
												</plx:passParam>
												<plx:passParam>
													<plx:value type="i4" data="2" />
												</plx:passParam>
											</plx:callStatic>
										</plx:left>
										<plx:right>
											<plx:binaryOperator type="bitwiseExclusiveOr">
												<plx:left>
													<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
														<plx:passParam>
															<plx:callInstance type="methodCall" name="GetHashCode">
																<plx:callObject>
																	<plx:callThis accessor="this" type="field" name="_item4" />
																</plx:callObject>
															</plx:callInstance>
														</plx:passParam>
														<plx:passParam>
															<plx:value type="i4" data="3" />
														</plx:passParam>
													</plx:callStatic>
												</plx:left>
												<plx:right>
													<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
														<plx:passParam>
															<plx:callInstance type="methodCall" name="GetHashCode">
																<plx:callObject>
																	<plx:callThis accessor="this" type="field" name="_item5" />
																</plx:callObject>
															</plx:callInstance>
														</plx:passParam>
														<plx:passParam>
															<plx:value type="i4" data="4" />
														</plx:passParam>
													</plx:callStatic>
												</plx:right>
											</plx:binaryOperator>
										</plx:right>
									</plx:binaryOperator>
								</plx:right>
							</plx:binaryOperator>
						</plx:right>
					</plx:binaryOperator>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" overload="true" name="ToString">
				<plx:returns dataTypeName=".string" />
				<plx:return>
					<plx:callThis accessor="this" type="methodCall" name="ToString">
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callThis>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" overload="true" name="ToString">
				<plx:param name="provider" dataTypeName="IFormatProvider" dataTypeQualifier="System" />
				<plx:returns dataTypeName=".string" />
				<plx:return>
					<plx:callStatic type="methodCall" name="Format" dataTypeName=".string">
						<plx:passParam>
							<plx:nameRef type="parameter" name="provider" />
						</plx:passParam>
						<plx:passParam>
							<plx:string>({1}, {2}, {3}, {4}, {5})</plx:string>
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item1" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item2" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item3" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item4" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item5" />
						</plx:passParam>
					</plx:callStatic>
				</plx:return>
			</plx:function>
			<plx:operatorFunction type="equality">
				<plx:param type="in" name="tuple1" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
					<plx:passTypeParam dataTypeName="T5" />
				</plx:param>
				<plx:param type="in" name="tuple2" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
					<plx:passTypeParam dataTypeName="T5" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:binaryOperator type="booleanOr">
						<plx:left>
							<plx:binaryOperator type="identityEquality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="tuple1" />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="tuple2" />
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:left>
						<plx:right>
							<plx:binaryOperator type="booleanAnd">
								<plx:left>
									<plx:binaryOperator type="identityEquality">
										<plx:left>
											<plx:cast type="exceptionCast" dataTypeName=".object">
												<plx:nameRef type="parameter" name="tuple1" />
											</plx:cast>
										</plx:left>
										<plx:right>
											<plx:nullKeyword />
										</plx:right>
									</plx:binaryOperator>
								</plx:left>
								<plx:right>
									<plx:callInstance type="methodCall" name="Equals">
										<plx:callObject>
											<plx:nameRef type="parameter" name="tuple1" />
										</plx:callObject>
										<plx:passParam>
											<plx:nameRef type="parameter" name="tuple2" />
										</plx:passParam>
									</plx:callInstance>
								</plx:right>
							</plx:binaryOperator>
						</plx:right>
					</plx:binaryOperator>
				</plx:return>
			</plx:operatorFunction>
			<plx:operatorFunction type="inequality">
				<plx:param type="in" name="tuple1" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
					<plx:passTypeParam dataTypeName="T5" />
				</plx:param>
				<plx:param type="in" name="tuple2" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
					<plx:passTypeParam dataTypeName="T5" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:unaryOperator type="booleanNot">
						<plx:binaryOperator type="equality">
							<plx:left>
								<plx:nameRef type="parameter" name="tuple1" />
							</plx:left>
							<plx:right>
								<plx:nameRef type="parameter" name="tuple2" />
							</plx:right>
						</plx:binaryOperator>
					</plx:unaryOperator>
				</plx:return>
			</plx:operatorFunction>
		</plx:class>
		<plx:pragma type="closeRegion" data="Quinary (5-ary) Tuple" />
		<plx:pragma type="region" data="Senary (6-ary) Tuple" />
		<plx:class visibility="public" modifier="abstract" partial="true" name="Tuple">
			<plx:function visibility="public" modifier="static" overload="true" name="CreateTuple">
				<plx:typeParam name="T1" />
				<plx:typeParam name="T2" />
				<plx:typeParam name="T3" />
				<plx:typeParam name="T4" />
				<plx:typeParam name="T5" />
				<plx:typeParam name="T6" />
				<plx:param name="item1" dataTypeName="T1" />
				<plx:param name="item2" dataTypeName="T2" />
				<plx:param name="item3" dataTypeName="T3" />
				<plx:param name="item4" dataTypeName="T4" />
				<plx:param name="item5" dataTypeName="T5" />
				<plx:param name="item6" dataTypeName="T6" />
				<plx:returns dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
					<plx:passTypeParam dataTypeName="T5" />
					<plx:passTypeParam dataTypeName="T6" />
				</plx:returns>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="booleanOr">
							<plx:left>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:nameRef type="parameter" name="item1" />
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:left>
							<plx:right>
								<plx:binaryOperator type="booleanOr">
									<plx:left>
										<plx:binaryOperator type="identityEquality">
											<plx:left>
												<plx:nameRef type="parameter" name="item2" />
											</plx:left>
											<plx:right>
												<plx:nullKeyword />
											</plx:right>
										</plx:binaryOperator>
									</plx:left>
									<plx:right>
										<plx:binaryOperator type="booleanOr">
											<plx:left>
												<plx:binaryOperator type="identityEquality">
													<plx:left>
														<plx:nameRef type="parameter" name="item3" />
													</plx:left>
													<plx:right>
														<plx:nullKeyword />
													</plx:right>
												</plx:binaryOperator>
											</plx:left>
											<plx:right>
												<plx:binaryOperator type="booleanOr">
													<plx:left>
														<plx:binaryOperator type="identityEquality">
															<plx:left>
																<plx:nameRef type="parameter" name="item4" />
															</plx:left>
															<plx:right>
																<plx:nullKeyword />
															</plx:right>
														</plx:binaryOperator>
													</plx:left>
													<plx:right>
														<plx:binaryOperator type="booleanOr">
															<plx:left>
																<plx:binaryOperator type="identityEquality">
																	<plx:left>
																		<plx:nameRef type="parameter" name="item5" />
																	</plx:left>
																	<plx:right>
																		<plx:nullKeyword />
																	</plx:right>
																</plx:binaryOperator>
															</plx:left>
															<plx:right>
																<plx:binaryOperator type="identityEquality">
																	<plx:left>
																		<plx:nameRef type="parameter" name="item6" />
																	</plx:left>
																	<plx:right>
																		<plx:nullKeyword />
																	</plx:right>
																</plx:binaryOperator>
															</plx:right>
														</plx:binaryOperator>
													</plx:right>
												</plx:binaryOperator>
											</plx:right>
										</plx:binaryOperator>
									</plx:right>
								</plx:binaryOperator>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:return>
						<plx:nullKeyword />
					</plx:return>
				</plx:branch>
				<plx:return>
					<plx:callNew dataTypeName="Tuple">
						<plx:passTypeParam dataTypeName="T1" />
						<plx:passTypeParam dataTypeName="T2" />
						<plx:passTypeParam dataTypeName="T3" />
						<plx:passTypeParam dataTypeName="T4" />
						<plx:passTypeParam dataTypeName="T5" />
						<plx:passTypeParam dataTypeName="T6" />
						<plx:passParam>
							<plx:nameRef type="parameter" name="item1" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item2" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item3" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item4" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item5" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item6" />
						</plx:passParam>
					</plx:callNew>
				</plx:return>
			</plx:function>
		</plx:class>
		<plx:class visibility="public" modifier="sealed" name="Tuple">
			<plx:attribute dataTypeName="SerializableAttribute" dataTypeQualifier="System" />
			<plx:attribute dataTypeName="SuppressMessageAttribute" dataTypeQualifier="System.Diagnostics.CodeAnalysis">
				<plx:passParam>
					<plx:string data="Microsoft.Design" />
				</plx:passParam>
				<plx:passParam>
					<plx:string data="CA1005:AvoidExcessiveParametersOnGenericTypes" />
				</plx:passParam>
			</plx:attribute>
			<plx:attribute dataTypeName="StructLayoutAttribute" dataTypeQualifier="System.Runtime.InteropServices">
				<plx:passParam>
					<plx:callStatic type="field" name="Auto" dataTypeName="LayoutKind" dataTypeQualifier="System.Runtime.InteropServices" />
				</plx:passParam>
				<plx:passParam>
					<plx:binaryOperator type="assignNamed">
						<plx:left>
							<plx:nameRef type="namedParameter" name="CharSet" />
						</plx:left>
						<plx:right>
							<plx:callStatic type="field" name="Auto" dataTypeName="CharSet" dataTypeQualifier="System.Runtime.InteropServices" />
						</plx:right>
					</plx:binaryOperator>
				</plx:passParam>
			</plx:attribute>
			<plx:typeParam name="T1" />
			<plx:typeParam name="T2" />
			<plx:typeParam name="T3" />
			<plx:typeParam name="T4" />
			<plx:typeParam name="T5" />
			<plx:typeParam name="T6" />
			<plx:derivesFromClass dataTypeName="Tuple" />
			<plx:implementsInterface dataTypeName="IEquatable" dataTypeQualifier="System">
				<plx:passTypeParam dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
					<plx:passTypeParam dataTypeName="T5" />
					<plx:passTypeParam dataTypeName="T6" />
				</plx:passTypeParam>
			</plx:implementsInterface>
			<plx:field visibility="private" readOnly="true" name="_item1" dataTypeName="T1" />
			<plx:property visibility="public" name="Item1">
				<plx:returns dataTypeName="T1" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item1" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item2" dataTypeName="T2" />
			<plx:property visibility="public" name="Item2">
				<plx:returns dataTypeName="T2" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item2" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item3" dataTypeName="T3" />
			<plx:property visibility="public" name="Item3">
				<plx:returns dataTypeName="T3" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item3" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item4" dataTypeName="T4" />
			<plx:property visibility="public" name="Item4">
				<plx:returns dataTypeName="T4" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item4" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item5" dataTypeName="T5" />
			<plx:property visibility="public" name="Item5">
				<plx:returns dataTypeName="T5" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item5" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item6" dataTypeName="T6" />
			<plx:property visibility="public" name="Item6">
				<plx:returns dataTypeName="T6" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item6" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:function visibility="public" name=".construct">
				<plx:param name="item1" dataTypeName="T1" />
				<plx:param name="item2" dataTypeName="T2" />
				<plx:param name="item3" dataTypeName="T3" />
				<plx:param name="item4" dataTypeName="T4" />
				<plx:param name="item5" dataTypeName="T5" />
				<plx:param name="item6" dataTypeName="T6" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="booleanOr">
							<plx:left>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:nameRef type="parameter" name="item1" />
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:left>
							<plx:right>
								<plx:binaryOperator type="booleanOr">
									<plx:left>
										<plx:binaryOperator type="identityEquality">
											<plx:left>
												<plx:nameRef type="parameter" name="item2" />
											</plx:left>
											<plx:right>
												<plx:nullKeyword />
											</plx:right>
										</plx:binaryOperator>
									</plx:left>
									<plx:right>
										<plx:binaryOperator type="booleanOr">
											<plx:left>
												<plx:binaryOperator type="identityEquality">
													<plx:left>
														<plx:nameRef type="parameter" name="item3" />
													</plx:left>
													<plx:right>
														<plx:nullKeyword />
													</plx:right>
												</plx:binaryOperator>
											</plx:left>
											<plx:right>
												<plx:binaryOperator type="booleanOr">
													<plx:left>
														<plx:binaryOperator type="identityEquality">
															<plx:left>
																<plx:nameRef type="parameter" name="item4" />
															</plx:left>
															<plx:right>
																<plx:nullKeyword />
															</plx:right>
														</plx:binaryOperator>
													</plx:left>
													<plx:right>
														<plx:binaryOperator type="booleanOr">
															<plx:left>
																<plx:binaryOperator type="identityEquality">
																	<plx:left>
																		<plx:nameRef type="parameter" name="item5" />
																	</plx:left>
																	<plx:right>
																		<plx:nullKeyword />
																	</plx:right>
																</plx:binaryOperator>
															</plx:left>
															<plx:right>
																<plx:binaryOperator type="identityEquality">
																	<plx:left>
																		<plx:nameRef type="parameter" name="item6" />
																	</plx:left>
																	<plx:right>
																		<plx:nullKeyword />
																	</plx:right>
																</plx:binaryOperator>
															</plx:right>
														</plx:binaryOperator>
													</plx:right>
												</plx:binaryOperator>
											</plx:right>
										</plx:binaryOperator>
									</plx:right>
								</plx:binaryOperator>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="ArgumentNullException" dataTypeQualifier="System" />
					</plx:throw>
				</plx:branch>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item1" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item1" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item2" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item2" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item3" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item3" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item4" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item4" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item5" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item5" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item6" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item6" />
					</plx:right>
				</plx:assign>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" overload="true" name="Equals">
				<plx:param name="obj" dataTypeName=".object" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:callThis accessor="this" type="methodCall" name="Equals">
						<plx:passParam>
							<plx:cast type="testCast" dataTypeName="Tuple">
								<plx:passTypeParam dataTypeName="T1" />
								<plx:passTypeParam dataTypeName="T2" />
								<plx:passTypeParam dataTypeName="T3" />
								<plx:passTypeParam dataTypeName="T4" />
								<plx:passTypeParam dataTypeName="T5" />
								<plx:passTypeParam dataTypeName="T6" />
								<plx:nameRef type="parameter" name="obj" />
							</plx:cast>
						</plx:passParam>
					</plx:callThis>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" overload="true" name="Equals">
				<plx:param name="other" dataTypeName="Tuple" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:callThis accessor="this" type="methodCall" name="Equals">
						<plx:passParam>
							<plx:cast type="testCast" dataTypeName="Tuple">
								<plx:passTypeParam dataTypeName="T1" />
								<plx:passTypeParam dataTypeName="T2" />
								<plx:passTypeParam dataTypeName="T3" />
								<plx:passTypeParam dataTypeName="T4" />
								<plx:passTypeParam dataTypeName="T5" />
								<plx:passTypeParam dataTypeName="T6" />
								<plx:nameRef type="parameter" name="other" />
							</plx:cast>
						</plx:passParam>
					</plx:callThis>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" overload="true" name="Equals">
				<plx:interfaceMember memberName="Equals" dataTypeName="IEquatable" dataTypeQualifier="System">
					<plx:passTypeParam dataTypeName="Tuple">
						<plx:passTypeParam dataTypeName="T1" />
						<plx:passTypeParam dataTypeName="T2" />
						<plx:passTypeParam dataTypeName="T3" />
						<plx:passTypeParam dataTypeName="T4" />
						<plx:passTypeParam dataTypeName="T5" />
						<plx:passTypeParam dataTypeName="T6" />
					</plx:passTypeParam>
				</plx:interfaceMember>
				<plx:param name="other" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
					<plx:passTypeParam dataTypeName="T5" />
					<plx:passTypeParam dataTypeName="T6" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:binaryOperator type="booleanOr">
						<plx:left>
							<plx:binaryOperator type="identityEquality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:thisKeyword />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="other" />
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:left>
						<plx:right>
							<plx:binaryOperator type="booleanAnd">
								<plx:left>
									<plx:binaryOperator type="identityInequality">
										<plx:left>
											<plx:cast type="exceptionCast" dataTypeName=".object">
												<plx:nameRef type="parameter" name="other" />
											</plx:cast>
										</plx:left>
										<plx:right>
											<plx:nullKeyword />
										</plx:right>
									</plx:binaryOperator>
								</plx:left>
								<plx:right>
									<plx:binaryOperator type="booleanOr">
										<plx:left>
											<plx:callInstance type="methodCall" name="Equals">
												<plx:callObject>
													<plx:callThis accessor="this" type="field" name="_item1" />
												</plx:callObject>
												<plx:passParam>
													<plx:callInstance type="field" name="_item1">
														<plx:callObject>
															<plx:nameRef type="parameter" name="other" />
														</plx:callObject>
													</plx:callInstance>
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:binaryOperator type="booleanOr">
												<plx:left>
													<plx:callInstance type="methodCall" name="Equals">
														<plx:callObject>
															<plx:callThis accessor="this" type="field" name="_item2" />
														</plx:callObject>
														<plx:passParam>
															<plx:callInstance type="field" name="_item2">
																<plx:callObject>
																	<plx:nameRef type="parameter" name="other" />
																</plx:callObject>
															</plx:callInstance>
														</plx:passParam>
													</plx:callInstance>
												</plx:left>
												<plx:right>
													<plx:binaryOperator type="booleanOr">
														<plx:left>
															<plx:callInstance type="methodCall" name="Equals">
																<plx:callObject>
																	<plx:callThis accessor="this" type="field" name="_item3" />
																</plx:callObject>
																<plx:passParam>
																	<plx:callInstance type="field" name="_item3">
																		<plx:callObject>
																			<plx:nameRef type="parameter" name="other" />
																		</plx:callObject>
																	</plx:callInstance>
																</plx:passParam>
															</plx:callInstance>
														</plx:left>
														<plx:right>
															<plx:binaryOperator type="booleanOr">
																<plx:left>
																	<plx:callInstance type="methodCall" name="Equals">
																		<plx:callObject>
																			<plx:callThis accessor="this" type="field" name="_item4" />
																		</plx:callObject>
																		<plx:passParam>
																			<plx:callInstance type="field" name="_item4">
																				<plx:callObject>
																					<plx:nameRef type="parameter" name="other" />
																				</plx:callObject>
																			</plx:callInstance>
																		</plx:passParam>
																	</plx:callInstance>
																</plx:left>
																<plx:right>
																	<plx:binaryOperator type="booleanOr">
																		<plx:left>
																			<plx:callInstance type="methodCall" name="Equals">
																				<plx:callObject>
																					<plx:callThis accessor="this" type="field" name="_item5" />
																				</plx:callObject>
																				<plx:passParam>
																					<plx:callInstance type="field" name="_item5">
																						<plx:callObject>
																							<plx:nameRef type="parameter" name="other" />
																						</plx:callObject>
																					</plx:callInstance>
																				</plx:passParam>
																			</plx:callInstance>
																		</plx:left>
																		<plx:right>
																			<plx:callInstance type="methodCall" name="Equals">
																				<plx:callObject>
																					<plx:callThis accessor="this" type="field" name="_item6" />
																				</plx:callObject>
																				<plx:passParam>
																					<plx:callInstance type="field" name="_item6">
																						<plx:callObject>
																							<plx:nameRef type="parameter" name="other" />
																						</plx:callObject>
																					</plx:callInstance>
																				</plx:passParam>
																			</plx:callInstance>
																		</plx:right>
																	</plx:binaryOperator>
																</plx:right>
															</plx:binaryOperator>
														</plx:right>
													</plx:binaryOperator>
												</plx:right>
											</plx:binaryOperator>
										</plx:right>
									</plx:binaryOperator>
								</plx:right>
							</plx:binaryOperator>
						</plx:right>
					</plx:binaryOperator>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" name="GetHashCode">
				<plx:returns dataTypeName=".i4" />
				<plx:return>
					<plx:binaryOperator type="bitwiseExclusiveOr">
						<plx:left>
							<plx:callInstance type="methodCall" name="GetHashCode">
								<plx:callObject>
									<plx:callThis accessor="this" type="field" name="_item1" />
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:binaryOperator type="bitwiseExclusiveOr">
								<plx:left>
									<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
										<plx:passParam>
											<plx:callInstance type="methodCall" name="GetHashCode">
												<plx:callObject>
													<plx:callThis accessor="this" type="field" name="_item2" />
												</plx:callObject>
											</plx:callInstance>
										</plx:passParam>
										<plx:passParam>
											<plx:value type="i4" data="1" />
										</plx:passParam>
									</plx:callStatic>
								</plx:left>
								<plx:right>
									<plx:binaryOperator type="bitwiseExclusiveOr">
										<plx:left>
											<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
												<plx:passParam>
													<plx:callInstance type="methodCall" name="GetHashCode">
														<plx:callObject>
															<plx:callThis accessor="this" type="field" name="_item3" />
														</plx:callObject>
													</plx:callInstance>
												</plx:passParam>
												<plx:passParam>
													<plx:value type="i4" data="2" />
												</plx:passParam>
											</plx:callStatic>
										</plx:left>
										<plx:right>
											<plx:binaryOperator type="bitwiseExclusiveOr">
												<plx:left>
													<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
														<plx:passParam>
															<plx:callInstance type="methodCall" name="GetHashCode">
																<plx:callObject>
																	<plx:callThis accessor="this" type="field" name="_item4" />
																</plx:callObject>
															</plx:callInstance>
														</plx:passParam>
														<plx:passParam>
															<plx:value type="i4" data="3" />
														</plx:passParam>
													</plx:callStatic>
												</plx:left>
												<plx:right>
													<plx:binaryOperator type="bitwiseExclusiveOr">
														<plx:left>
															<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
																<plx:passParam>
																	<plx:callInstance type="methodCall" name="GetHashCode">
																		<plx:callObject>
																			<plx:callThis accessor="this" type="field" name="_item5" />
																		</plx:callObject>
																	</plx:callInstance>
																</plx:passParam>
																<plx:passParam>
																	<plx:value type="i4" data="4" />
																</plx:passParam>
															</plx:callStatic>
														</plx:left>
														<plx:right>
															<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
																<plx:passParam>
																	<plx:callInstance type="methodCall" name="GetHashCode">
																		<plx:callObject>
																			<plx:callThis accessor="this" type="field" name="_item6" />
																		</plx:callObject>
																	</plx:callInstance>
																</plx:passParam>
																<plx:passParam>
																	<plx:value type="i4" data="5" />
																</plx:passParam>
															</plx:callStatic>
														</plx:right>
													</plx:binaryOperator>
												</plx:right>
											</plx:binaryOperator>
										</plx:right>
									</plx:binaryOperator>
								</plx:right>
							</plx:binaryOperator>
						</plx:right>
					</plx:binaryOperator>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" overload="true" name="ToString">
				<plx:returns dataTypeName=".string" />
				<plx:return>
					<plx:callThis accessor="this" type="methodCall" name="ToString">
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callThis>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" overload="true" name="ToString">
				<plx:param name="provider" dataTypeName="IFormatProvider" dataTypeQualifier="System" />
				<plx:returns dataTypeName=".string" />
				<plx:return>
					<plx:callStatic type="methodCall" name="Format" dataTypeName=".string">
						<plx:passParam>
							<plx:nameRef type="parameter" name="provider" />
						</plx:passParam>
						<plx:passParam>
							<plx:string>({1}, {2}, {3}, {4}, {5}, {6})</plx:string>
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item1" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item2" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item3" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item4" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item5" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item6" />
						</plx:passParam>
					</plx:callStatic>
				</plx:return>
			</plx:function>
			<plx:operatorFunction type="equality">
				<plx:param type="in" name="tuple1" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
					<plx:passTypeParam dataTypeName="T5" />
					<plx:passTypeParam dataTypeName="T6" />
				</plx:param>
				<plx:param type="in" name="tuple2" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
					<plx:passTypeParam dataTypeName="T5" />
					<plx:passTypeParam dataTypeName="T6" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:binaryOperator type="booleanOr">
						<plx:left>
							<plx:binaryOperator type="identityEquality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="tuple1" />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="tuple2" />
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:left>
						<plx:right>
							<plx:binaryOperator type="booleanAnd">
								<plx:left>
									<plx:binaryOperator type="identityEquality">
										<plx:left>
											<plx:cast type="exceptionCast" dataTypeName=".object">
												<plx:nameRef type="parameter" name="tuple1" />
											</plx:cast>
										</plx:left>
										<plx:right>
											<plx:nullKeyword />
										</plx:right>
									</plx:binaryOperator>
								</plx:left>
								<plx:right>
									<plx:callInstance type="methodCall" name="Equals">
										<plx:callObject>
											<plx:nameRef type="parameter" name="tuple1" />
										</plx:callObject>
										<plx:passParam>
											<plx:nameRef type="parameter" name="tuple2" />
										</plx:passParam>
									</plx:callInstance>
								</plx:right>
							</plx:binaryOperator>
						</plx:right>
					</plx:binaryOperator>
				</plx:return>
			</plx:operatorFunction>
			<plx:operatorFunction type="inequality">
				<plx:param type="in" name="tuple1" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
					<plx:passTypeParam dataTypeName="T5" />
					<plx:passTypeParam dataTypeName="T6" />
				</plx:param>
				<plx:param type="in" name="tuple2" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
					<plx:passTypeParam dataTypeName="T5" />
					<plx:passTypeParam dataTypeName="T6" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:unaryOperator type="booleanNot">
						<plx:binaryOperator type="equality">
							<plx:left>
								<plx:nameRef type="parameter" name="tuple1" />
							</plx:left>
							<plx:right>
								<plx:nameRef type="parameter" name="tuple2" />
							</plx:right>
						</plx:binaryOperator>
					</plx:unaryOperator>
				</plx:return>
			</plx:operatorFunction>
		</plx:class>
		<plx:pragma type="closeRegion" data="Senary (6-ary) Tuple" />
		<plx:pragma type="region" data="Septenary (7-ary) Tuple" />
		<plx:class visibility="public" modifier="abstract" partial="true" name="Tuple">
			<plx:function visibility="public" modifier="static" overload="true" name="CreateTuple">
				<plx:typeParam name="T1" />
				<plx:typeParam name="T2" />
				<plx:typeParam name="T3" />
				<plx:typeParam name="T4" />
				<plx:typeParam name="T5" />
				<plx:typeParam name="T6" />
				<plx:typeParam name="T7" />
				<plx:param name="item1" dataTypeName="T1" />
				<plx:param name="item2" dataTypeName="T2" />
				<plx:param name="item3" dataTypeName="T3" />
				<plx:param name="item4" dataTypeName="T4" />
				<plx:param name="item5" dataTypeName="T5" />
				<plx:param name="item6" dataTypeName="T6" />
				<plx:param name="item7" dataTypeName="T7" />
				<plx:returns dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
					<plx:passTypeParam dataTypeName="T5" />
					<plx:passTypeParam dataTypeName="T6" />
					<plx:passTypeParam dataTypeName="T7" />
				</plx:returns>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="booleanOr">
							<plx:left>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:nameRef type="parameter" name="item1" />
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:left>
							<plx:right>
								<plx:binaryOperator type="booleanOr">
									<plx:left>
										<plx:binaryOperator type="identityEquality">
											<plx:left>
												<plx:nameRef type="parameter" name="item2" />
											</plx:left>
											<plx:right>
												<plx:nullKeyword />
											</plx:right>
										</plx:binaryOperator>
									</plx:left>
									<plx:right>
										<plx:binaryOperator type="booleanOr">
											<plx:left>
												<plx:binaryOperator type="identityEquality">
													<plx:left>
														<plx:nameRef type="parameter" name="item3" />
													</plx:left>
													<plx:right>
														<plx:nullKeyword />
													</plx:right>
												</plx:binaryOperator>
											</plx:left>
											<plx:right>
												<plx:binaryOperator type="booleanOr">
													<plx:left>
														<plx:binaryOperator type="identityEquality">
															<plx:left>
																<plx:nameRef type="parameter" name="item4" />
															</plx:left>
															<plx:right>
																<plx:nullKeyword />
															</plx:right>
														</plx:binaryOperator>
													</plx:left>
													<plx:right>
														<plx:binaryOperator type="booleanOr">
															<plx:left>
																<plx:binaryOperator type="identityEquality">
																	<plx:left>
																		<plx:nameRef type="parameter" name="item5" />
																	</plx:left>
																	<plx:right>
																		<plx:nullKeyword />
																	</plx:right>
																</plx:binaryOperator>
															</plx:left>
															<plx:right>
																<plx:binaryOperator type="booleanOr">
																	<plx:left>
																		<plx:binaryOperator type="identityEquality">
																			<plx:left>
																				<plx:nameRef type="parameter" name="item6" />
																			</plx:left>
																			<plx:right>
																				<plx:nullKeyword />
																			</plx:right>
																		</plx:binaryOperator>
																	</plx:left>
																	<plx:right>
																		<plx:binaryOperator type="identityEquality">
																			<plx:left>
																				<plx:nameRef type="parameter" name="item7" />
																			</plx:left>
																			<plx:right>
																				<plx:nullKeyword />
																			</plx:right>
																		</plx:binaryOperator>
																	</plx:right>
																</plx:binaryOperator>
															</plx:right>
														</plx:binaryOperator>
													</plx:right>
												</plx:binaryOperator>
											</plx:right>
										</plx:binaryOperator>
									</plx:right>
								</plx:binaryOperator>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:return>
						<plx:nullKeyword />
					</plx:return>
				</plx:branch>
				<plx:return>
					<plx:callNew dataTypeName="Tuple">
						<plx:passTypeParam dataTypeName="T1" />
						<plx:passTypeParam dataTypeName="T2" />
						<plx:passTypeParam dataTypeName="T3" />
						<plx:passTypeParam dataTypeName="T4" />
						<plx:passTypeParam dataTypeName="T5" />
						<plx:passTypeParam dataTypeName="T6" />
						<plx:passTypeParam dataTypeName="T7" />
						<plx:passParam>
							<plx:nameRef type="parameter" name="item1" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item2" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item3" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item4" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item5" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item6" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item7" />
						</plx:passParam>
					</plx:callNew>
				</plx:return>
			</plx:function>
		</plx:class>
		<plx:class visibility="public" modifier="sealed" name="Tuple">
			<plx:attribute dataTypeName="SerializableAttribute" dataTypeQualifier="System" />
			<plx:attribute dataTypeName="SuppressMessageAttribute" dataTypeQualifier="System.Diagnostics.CodeAnalysis">
				<plx:passParam>
					<plx:string data="Microsoft.Design" />
				</plx:passParam>
				<plx:passParam>
					<plx:string data="CA1005:AvoidExcessiveParametersOnGenericTypes" />
				</plx:passParam>
			</plx:attribute>
			<plx:attribute dataTypeName="StructLayoutAttribute" dataTypeQualifier="System.Runtime.InteropServices">
				<plx:passParam>
					<plx:callStatic type="field" name="Auto" dataTypeName="LayoutKind" dataTypeQualifier="System.Runtime.InteropServices" />
				</plx:passParam>
				<plx:passParam>
					<plx:binaryOperator type="assignNamed">
						<plx:left>
							<plx:nameRef type="namedParameter" name="CharSet" />
						</plx:left>
						<plx:right>
							<plx:callStatic type="field" name="Auto" dataTypeName="CharSet" dataTypeQualifier="System.Runtime.InteropServices" />
						</plx:right>
					</plx:binaryOperator>
				</plx:passParam>
			</plx:attribute>
			<plx:typeParam name="T1" />
			<plx:typeParam name="T2" />
			<plx:typeParam name="T3" />
			<plx:typeParam name="T4" />
			<plx:typeParam name="T5" />
			<plx:typeParam name="T6" />
			<plx:typeParam name="T7" />
			<plx:derivesFromClass dataTypeName="Tuple" />
			<plx:implementsInterface dataTypeName="IEquatable" dataTypeQualifier="System">
				<plx:passTypeParam dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
					<plx:passTypeParam dataTypeName="T5" />
					<plx:passTypeParam dataTypeName="T6" />
					<plx:passTypeParam dataTypeName="T7" />
				</plx:passTypeParam>
			</plx:implementsInterface>
			<plx:field visibility="private" readOnly="true" name="_item1" dataTypeName="T1" />
			<plx:property visibility="public" name="Item1">
				<plx:returns dataTypeName="T1" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item1" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item2" dataTypeName="T2" />
			<plx:property visibility="public" name="Item2">
				<plx:returns dataTypeName="T2" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item2" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item3" dataTypeName="T3" />
			<plx:property visibility="public" name="Item3">
				<plx:returns dataTypeName="T3" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item3" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item4" dataTypeName="T4" />
			<plx:property visibility="public" name="Item4">
				<plx:returns dataTypeName="T4" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item4" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item5" dataTypeName="T5" />
			<plx:property visibility="public" name="Item5">
				<plx:returns dataTypeName="T5" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item5" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item6" dataTypeName="T6" />
			<plx:property visibility="public" name="Item6">
				<plx:returns dataTypeName="T6" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item6" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item7" dataTypeName="T7" />
			<plx:property visibility="public" name="Item7">
				<plx:returns dataTypeName="T7" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item7" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:function visibility="public" name=".construct">
				<plx:param name="item1" dataTypeName="T1" />
				<plx:param name="item2" dataTypeName="T2" />
				<plx:param name="item3" dataTypeName="T3" />
				<plx:param name="item4" dataTypeName="T4" />
				<plx:param name="item5" dataTypeName="T5" />
				<plx:param name="item6" dataTypeName="T6" />
				<plx:param name="item7" dataTypeName="T7" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="booleanOr">
							<plx:left>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:nameRef type="parameter" name="item1" />
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:left>
							<plx:right>
								<plx:binaryOperator type="booleanOr">
									<plx:left>
										<plx:binaryOperator type="identityEquality">
											<plx:left>
												<plx:nameRef type="parameter" name="item2" />
											</plx:left>
											<plx:right>
												<plx:nullKeyword />
											</plx:right>
										</plx:binaryOperator>
									</plx:left>
									<plx:right>
										<plx:binaryOperator type="booleanOr">
											<plx:left>
												<plx:binaryOperator type="identityEquality">
													<plx:left>
														<plx:nameRef type="parameter" name="item3" />
													</plx:left>
													<plx:right>
														<plx:nullKeyword />
													</plx:right>
												</plx:binaryOperator>
											</plx:left>
											<plx:right>
												<plx:binaryOperator type="booleanOr">
													<plx:left>
														<plx:binaryOperator type="identityEquality">
															<plx:left>
																<plx:nameRef type="parameter" name="item4" />
															</plx:left>
															<plx:right>
																<plx:nullKeyword />
															</plx:right>
														</plx:binaryOperator>
													</plx:left>
													<plx:right>
														<plx:binaryOperator type="booleanOr">
															<plx:left>
																<plx:binaryOperator type="identityEquality">
																	<plx:left>
																		<plx:nameRef type="parameter" name="item5" />
																	</plx:left>
																	<plx:right>
																		<plx:nullKeyword />
																	</plx:right>
																</plx:binaryOperator>
															</plx:left>
															<plx:right>
																<plx:binaryOperator type="booleanOr">
																	<plx:left>
																		<plx:binaryOperator type="identityEquality">
																			<plx:left>
																				<plx:nameRef type="parameter" name="item6" />
																			</plx:left>
																			<plx:right>
																				<plx:nullKeyword />
																			</plx:right>
																		</plx:binaryOperator>
																	</plx:left>
																	<plx:right>
																		<plx:binaryOperator type="identityEquality">
																			<plx:left>
																				<plx:nameRef type="parameter" name="item7" />
																			</plx:left>
																			<plx:right>
																				<plx:nullKeyword />
																			</plx:right>
																		</plx:binaryOperator>
																	</plx:right>
																</plx:binaryOperator>
															</plx:right>
														</plx:binaryOperator>
													</plx:right>
												</plx:binaryOperator>
											</plx:right>
										</plx:binaryOperator>
									</plx:right>
								</plx:binaryOperator>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="ArgumentNullException" dataTypeQualifier="System" />
					</plx:throw>
				</plx:branch>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item1" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item1" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item2" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item2" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item3" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item3" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item4" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item4" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item5" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item5" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item6" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item6" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item7" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item7" />
					</plx:right>
				</plx:assign>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" overload="true" name="Equals">
				<plx:param name="obj" dataTypeName=".object" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:callThis accessor="this" type="methodCall" name="Equals">
						<plx:passParam>
							<plx:cast type="testCast" dataTypeName="Tuple">
								<plx:passTypeParam dataTypeName="T1" />
								<plx:passTypeParam dataTypeName="T2" />
								<plx:passTypeParam dataTypeName="T3" />
								<plx:passTypeParam dataTypeName="T4" />
								<plx:passTypeParam dataTypeName="T5" />
								<plx:passTypeParam dataTypeName="T6" />
								<plx:passTypeParam dataTypeName="T7" />
								<plx:nameRef type="parameter" name="obj" />
							</plx:cast>
						</plx:passParam>
					</plx:callThis>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" overload="true" name="Equals">
				<plx:param name="other" dataTypeName="Tuple" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:callThis accessor="this" type="methodCall" name="Equals">
						<plx:passParam>
							<plx:cast type="testCast" dataTypeName="Tuple">
								<plx:passTypeParam dataTypeName="T1" />
								<plx:passTypeParam dataTypeName="T2" />
								<plx:passTypeParam dataTypeName="T3" />
								<plx:passTypeParam dataTypeName="T4" />
								<plx:passTypeParam dataTypeName="T5" />
								<plx:passTypeParam dataTypeName="T6" />
								<plx:passTypeParam dataTypeName="T7" />
								<plx:nameRef type="parameter" name="other" />
							</plx:cast>
						</plx:passParam>
					</plx:callThis>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" overload="true" name="Equals">
				<plx:interfaceMember memberName="Equals" dataTypeName="IEquatable" dataTypeQualifier="System">
					<plx:passTypeParam dataTypeName="Tuple">
						<plx:passTypeParam dataTypeName="T1" />
						<plx:passTypeParam dataTypeName="T2" />
						<plx:passTypeParam dataTypeName="T3" />
						<plx:passTypeParam dataTypeName="T4" />
						<plx:passTypeParam dataTypeName="T5" />
						<plx:passTypeParam dataTypeName="T6" />
						<plx:passTypeParam dataTypeName="T7" />
					</plx:passTypeParam>
				</plx:interfaceMember>
				<plx:param name="other" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
					<plx:passTypeParam dataTypeName="T5" />
					<plx:passTypeParam dataTypeName="T6" />
					<plx:passTypeParam dataTypeName="T7" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:binaryOperator type="booleanOr">
						<plx:left>
							<plx:binaryOperator type="identityEquality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:thisKeyword />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="other" />
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:left>
						<plx:right>
							<plx:binaryOperator type="booleanAnd">
								<plx:left>
									<plx:binaryOperator type="identityInequality">
										<plx:left>
											<plx:cast type="exceptionCast" dataTypeName=".object">
												<plx:nameRef type="parameter" name="other" />
											</plx:cast>
										</plx:left>
										<plx:right>
											<plx:nullKeyword />
										</plx:right>
									</plx:binaryOperator>
								</plx:left>
								<plx:right>
									<plx:binaryOperator type="booleanOr">
										<plx:left>
											<plx:callInstance type="methodCall" name="Equals">
												<plx:callObject>
													<plx:callThis accessor="this" type="field" name="_item1" />
												</plx:callObject>
												<plx:passParam>
													<plx:callInstance type="field" name="_item1">
														<plx:callObject>
															<plx:nameRef type="parameter" name="other" />
														</plx:callObject>
													</plx:callInstance>
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:binaryOperator type="booleanOr">
												<plx:left>
													<plx:callInstance type="methodCall" name="Equals">
														<plx:callObject>
															<plx:callThis accessor="this" type="field" name="_item2" />
														</plx:callObject>
														<plx:passParam>
															<plx:callInstance type="field" name="_item2">
																<plx:callObject>
																	<plx:nameRef type="parameter" name="other" />
																</plx:callObject>
															</plx:callInstance>
														</plx:passParam>
													</plx:callInstance>
												</plx:left>
												<plx:right>
													<plx:binaryOperator type="booleanOr">
														<plx:left>
															<plx:callInstance type="methodCall" name="Equals">
																<plx:callObject>
																	<plx:callThis accessor="this" type="field" name="_item3" />
																</plx:callObject>
																<plx:passParam>
																	<plx:callInstance type="field" name="_item3">
																		<plx:callObject>
																			<plx:nameRef type="parameter" name="other" />
																		</plx:callObject>
																	</plx:callInstance>
																</plx:passParam>
															</plx:callInstance>
														</plx:left>
														<plx:right>
															<plx:binaryOperator type="booleanOr">
																<plx:left>
																	<plx:callInstance type="methodCall" name="Equals">
																		<plx:callObject>
																			<plx:callThis accessor="this" type="field" name="_item4" />
																		</plx:callObject>
																		<plx:passParam>
																			<plx:callInstance type="field" name="_item4">
																				<plx:callObject>
																					<plx:nameRef type="parameter" name="other" />
																				</plx:callObject>
																			</plx:callInstance>
																		</plx:passParam>
																	</plx:callInstance>
																</plx:left>
																<plx:right>
																	<plx:binaryOperator type="booleanOr">
																		<plx:left>
																			<plx:callInstance type="methodCall" name="Equals">
																				<plx:callObject>
																					<plx:callThis accessor="this" type="field" name="_item5" />
																				</plx:callObject>
																				<plx:passParam>
																					<plx:callInstance type="field" name="_item5">
																						<plx:callObject>
																							<plx:nameRef type="parameter" name="other" />
																						</plx:callObject>
																					</plx:callInstance>
																				</plx:passParam>
																			</plx:callInstance>
																		</plx:left>
																		<plx:right>
																			<plx:binaryOperator type="booleanOr">
																				<plx:left>
																					<plx:callInstance type="methodCall" name="Equals">
																						<plx:callObject>
																							<plx:callThis accessor="this" type="field" name="_item6" />
																						</plx:callObject>
																						<plx:passParam>
																							<plx:callInstance type="field" name="_item6">
																								<plx:callObject>
																									<plx:nameRef type="parameter" name="other" />
																								</plx:callObject>
																							</plx:callInstance>
																						</plx:passParam>
																					</plx:callInstance>
																				</plx:left>
																				<plx:right>
																					<plx:callInstance type="methodCall" name="Equals">
																						<plx:callObject>
																							<plx:callThis accessor="this" type="field" name="_item7" />
																						</plx:callObject>
																						<plx:passParam>
																							<plx:callInstance type="field" name="_item7">
																								<plx:callObject>
																									<plx:nameRef type="parameter" name="other" />
																								</plx:callObject>
																							</plx:callInstance>
																						</plx:passParam>
																					</plx:callInstance>
																				</plx:right>
																			</plx:binaryOperator>
																		</plx:right>
																	</plx:binaryOperator>
																</plx:right>
															</plx:binaryOperator>
														</plx:right>
													</plx:binaryOperator>
												</plx:right>
											</plx:binaryOperator>
										</plx:right>
									</plx:binaryOperator>
								</plx:right>
							</plx:binaryOperator>
						</plx:right>
					</plx:binaryOperator>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" name="GetHashCode">
				<plx:returns dataTypeName=".i4" />
				<plx:return>
					<plx:binaryOperator type="bitwiseExclusiveOr">
						<plx:left>
							<plx:callInstance type="methodCall" name="GetHashCode">
								<plx:callObject>
									<plx:callThis accessor="this" type="field" name="_item1" />
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:binaryOperator type="bitwiseExclusiveOr">
								<plx:left>
									<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
										<plx:passParam>
											<plx:callInstance type="methodCall" name="GetHashCode">
												<plx:callObject>
													<plx:callThis accessor="this" type="field" name="_item2" />
												</plx:callObject>
											</plx:callInstance>
										</plx:passParam>
										<plx:passParam>
											<plx:value type="i4" data="1" />
										</plx:passParam>
									</plx:callStatic>
								</plx:left>
								<plx:right>
									<plx:binaryOperator type="bitwiseExclusiveOr">
										<plx:left>
											<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
												<plx:passParam>
													<plx:callInstance type="methodCall" name="GetHashCode">
														<plx:callObject>
															<plx:callThis accessor="this" type="field" name="_item3" />
														</plx:callObject>
													</plx:callInstance>
												</plx:passParam>
												<plx:passParam>
													<plx:value type="i4" data="2" />
												</plx:passParam>
											</plx:callStatic>
										</plx:left>
										<plx:right>
											<plx:binaryOperator type="bitwiseExclusiveOr">
												<plx:left>
													<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
														<plx:passParam>
															<plx:callInstance type="methodCall" name="GetHashCode">
																<plx:callObject>
																	<plx:callThis accessor="this" type="field" name="_item4" />
																</plx:callObject>
															</plx:callInstance>
														</plx:passParam>
														<plx:passParam>
															<plx:value type="i4" data="3" />
														</plx:passParam>
													</plx:callStatic>
												</plx:left>
												<plx:right>
													<plx:binaryOperator type="bitwiseExclusiveOr">
														<plx:left>
															<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
																<plx:passParam>
																	<plx:callInstance type="methodCall" name="GetHashCode">
																		<plx:callObject>
																			<plx:callThis accessor="this" type="field" name="_item5" />
																		</plx:callObject>
																	</plx:callInstance>
																</plx:passParam>
																<plx:passParam>
																	<plx:value type="i4" data="4" />
																</plx:passParam>
															</plx:callStatic>
														</plx:left>
														<plx:right>
															<plx:binaryOperator type="bitwiseExclusiveOr">
																<plx:left>
																	<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
																		<plx:passParam>
																			<plx:callInstance type="methodCall" name="GetHashCode">
																				<plx:callObject>
																					<plx:callThis accessor="this" type="field" name="_item6" />
																				</plx:callObject>
																			</plx:callInstance>
																		</plx:passParam>
																		<plx:passParam>
																			<plx:value type="i4" data="5" />
																		</plx:passParam>
																	</plx:callStatic>
																</plx:left>
																<plx:right>
																	<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
																		<plx:passParam>
																			<plx:callInstance type="methodCall" name="GetHashCode">
																				<plx:callObject>
																					<plx:callThis accessor="this" type="field" name="_item7" />
																				</plx:callObject>
																			</plx:callInstance>
																		</plx:passParam>
																		<plx:passParam>
																			<plx:value type="i4" data="6" />
																		</plx:passParam>
																	</plx:callStatic>
																</plx:right>
															</plx:binaryOperator>
														</plx:right>
													</plx:binaryOperator>
												</plx:right>
											</plx:binaryOperator>
										</plx:right>
									</plx:binaryOperator>
								</plx:right>
							</plx:binaryOperator>
						</plx:right>
					</plx:binaryOperator>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" overload="true" name="ToString">
				<plx:returns dataTypeName=".string" />
				<plx:return>
					<plx:callThis accessor="this" type="methodCall" name="ToString">
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callThis>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" overload="true" name="ToString">
				<plx:param name="provider" dataTypeName="IFormatProvider" dataTypeQualifier="System" />
				<plx:returns dataTypeName=".string" />
				<plx:return>
					<plx:callStatic type="methodCall" name="Format" dataTypeName=".string">
						<plx:passParam>
							<plx:nameRef type="parameter" name="provider" />
						</plx:passParam>
						<plx:passParam>
							<plx:string>({1}, {2}, {3}, {4}, {5}, {6}, {7})</plx:string>
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item1" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item2" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item3" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item4" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item5" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item6" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item7" />
						</plx:passParam>
					</plx:callStatic>
				</plx:return>
			</plx:function>
			<plx:operatorFunction type="equality">
				<plx:param type="in" name="tuple1" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
					<plx:passTypeParam dataTypeName="T5" />
					<plx:passTypeParam dataTypeName="T6" />
					<plx:passTypeParam dataTypeName="T7" />
				</plx:param>
				<plx:param type="in" name="tuple2" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
					<plx:passTypeParam dataTypeName="T5" />
					<plx:passTypeParam dataTypeName="T6" />
					<plx:passTypeParam dataTypeName="T7" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:binaryOperator type="booleanOr">
						<plx:left>
							<plx:binaryOperator type="identityEquality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="tuple1" />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="tuple2" />
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:left>
						<plx:right>
							<plx:binaryOperator type="booleanAnd">
								<plx:left>
									<plx:binaryOperator type="identityEquality">
										<plx:left>
											<plx:cast type="exceptionCast" dataTypeName=".object">
												<plx:nameRef type="parameter" name="tuple1" />
											</plx:cast>
										</plx:left>
										<plx:right>
											<plx:nullKeyword />
										</plx:right>
									</plx:binaryOperator>
								</plx:left>
								<plx:right>
									<plx:callInstance type="methodCall" name="Equals">
										<plx:callObject>
											<plx:nameRef type="parameter" name="tuple1" />
										</plx:callObject>
										<plx:passParam>
											<plx:nameRef type="parameter" name="tuple2" />
										</plx:passParam>
									</plx:callInstance>
								</plx:right>
							</plx:binaryOperator>
						</plx:right>
					</plx:binaryOperator>
				</plx:return>
			</plx:operatorFunction>
			<plx:operatorFunction type="inequality">
				<plx:param type="in" name="tuple1" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
					<plx:passTypeParam dataTypeName="T5" />
					<plx:passTypeParam dataTypeName="T6" />
					<plx:passTypeParam dataTypeName="T7" />
				</plx:param>
				<plx:param type="in" name="tuple2" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
					<plx:passTypeParam dataTypeName="T5" />
					<plx:passTypeParam dataTypeName="T6" />
					<plx:passTypeParam dataTypeName="T7" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:unaryOperator type="booleanNot">
						<plx:binaryOperator type="equality">
							<plx:left>
								<plx:nameRef type="parameter" name="tuple1" />
							</plx:left>
							<plx:right>
								<plx:nameRef type="parameter" name="tuple2" />
							</plx:right>
						</plx:binaryOperator>
					</plx:unaryOperator>
				</plx:return>
			</plx:operatorFunction>
		</plx:class>
		<plx:pragma type="closeRegion" data="Septenary (7-ary) Tuple" />
		<plx:pragma type="region" data="Octonary (8-ary) Tuple" />
		<plx:class visibility="public" modifier="abstract" partial="true" name="Tuple">
			<plx:function visibility="public" modifier="static" overload="true" name="CreateTuple">
				<plx:typeParam name="T1" />
				<plx:typeParam name="T2" />
				<plx:typeParam name="T3" />
				<plx:typeParam name="T4" />
				<plx:typeParam name="T5" />
				<plx:typeParam name="T6" />
				<plx:typeParam name="T7" />
				<plx:typeParam name="T8" />
				<plx:param name="item1" dataTypeName="T1" />
				<plx:param name="item2" dataTypeName="T2" />
				<plx:param name="item3" dataTypeName="T3" />
				<plx:param name="item4" dataTypeName="T4" />
				<plx:param name="item5" dataTypeName="T5" />
				<plx:param name="item6" dataTypeName="T6" />
				<plx:param name="item7" dataTypeName="T7" />
				<plx:param name="item8" dataTypeName="T8" />
				<plx:returns dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
					<plx:passTypeParam dataTypeName="T5" />
					<plx:passTypeParam dataTypeName="T6" />
					<plx:passTypeParam dataTypeName="T7" />
					<plx:passTypeParam dataTypeName="T8" />
				</plx:returns>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="booleanOr">
							<plx:left>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:nameRef type="parameter" name="item1" />
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:left>
							<plx:right>
								<plx:binaryOperator type="booleanOr">
									<plx:left>
										<plx:binaryOperator type="identityEquality">
											<plx:left>
												<plx:nameRef type="parameter" name="item2" />
											</plx:left>
											<plx:right>
												<plx:nullKeyword />
											</plx:right>
										</plx:binaryOperator>
									</plx:left>
									<plx:right>
										<plx:binaryOperator type="booleanOr">
											<plx:left>
												<plx:binaryOperator type="identityEquality">
													<plx:left>
														<plx:nameRef type="parameter" name="item3" />
													</plx:left>
													<plx:right>
														<plx:nullKeyword />
													</plx:right>
												</plx:binaryOperator>
											</plx:left>
											<plx:right>
												<plx:binaryOperator type="booleanOr">
													<plx:left>
														<plx:binaryOperator type="identityEquality">
															<plx:left>
																<plx:nameRef type="parameter" name="item4" />
															</plx:left>
															<plx:right>
																<plx:nullKeyword />
															</plx:right>
														</plx:binaryOperator>
													</plx:left>
													<plx:right>
														<plx:binaryOperator type="booleanOr">
															<plx:left>
																<plx:binaryOperator type="identityEquality">
																	<plx:left>
																		<plx:nameRef type="parameter" name="item5" />
																	</plx:left>
																	<plx:right>
																		<plx:nullKeyword />
																	</plx:right>
																</plx:binaryOperator>
															</plx:left>
															<plx:right>
																<plx:binaryOperator type="booleanOr">
																	<plx:left>
																		<plx:binaryOperator type="identityEquality">
																			<plx:left>
																				<plx:nameRef type="parameter" name="item6" />
																			</plx:left>
																			<plx:right>
																				<plx:nullKeyword />
																			</plx:right>
																		</plx:binaryOperator>
																	</plx:left>
																	<plx:right>
																		<plx:binaryOperator type="booleanOr">
																			<plx:left>
																				<plx:binaryOperator type="identityEquality">
																					<plx:left>
																						<plx:nameRef type="parameter" name="item7" />
																					</plx:left>
																					<plx:right>
																						<plx:nullKeyword />
																					</plx:right>
																				</plx:binaryOperator>
																			</plx:left>
																			<plx:right>
																				<plx:binaryOperator type="identityEquality">
																					<plx:left>
																						<plx:nameRef type="parameter" name="item8" />
																					</plx:left>
																					<plx:right>
																						<plx:nullKeyword />
																					</plx:right>
																				</plx:binaryOperator>
																			</plx:right>
																		</plx:binaryOperator>
																	</plx:right>
																</plx:binaryOperator>
															</plx:right>
														</plx:binaryOperator>
													</plx:right>
												</plx:binaryOperator>
											</plx:right>
										</plx:binaryOperator>
									</plx:right>
								</plx:binaryOperator>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:return>
						<plx:nullKeyword />
					</plx:return>
				</plx:branch>
				<plx:return>
					<plx:callNew dataTypeName="Tuple">
						<plx:passTypeParam dataTypeName="T1" />
						<plx:passTypeParam dataTypeName="T2" />
						<plx:passTypeParam dataTypeName="T3" />
						<plx:passTypeParam dataTypeName="T4" />
						<plx:passTypeParam dataTypeName="T5" />
						<plx:passTypeParam dataTypeName="T6" />
						<plx:passTypeParam dataTypeName="T7" />
						<plx:passTypeParam dataTypeName="T8" />
						<plx:passParam>
							<plx:nameRef type="parameter" name="item1" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item2" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item3" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item4" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item5" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item6" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item7" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item8" />
						</plx:passParam>
					</plx:callNew>
				</plx:return>
			</plx:function>
		</plx:class>
		<plx:class visibility="public" modifier="sealed" name="Tuple">
			<plx:attribute dataTypeName="SerializableAttribute" dataTypeQualifier="System" />
			<plx:attribute dataTypeName="SuppressMessageAttribute" dataTypeQualifier="System.Diagnostics.CodeAnalysis">
				<plx:passParam>
					<plx:string data="Microsoft.Design" />
				</plx:passParam>
				<plx:passParam>
					<plx:string data="CA1005:AvoidExcessiveParametersOnGenericTypes" />
				</plx:passParam>
			</plx:attribute>
			<plx:attribute dataTypeName="StructLayoutAttribute" dataTypeQualifier="System.Runtime.InteropServices">
				<plx:passParam>
					<plx:callStatic type="field" name="Auto" dataTypeName="LayoutKind" dataTypeQualifier="System.Runtime.InteropServices" />
				</plx:passParam>
				<plx:passParam>
					<plx:binaryOperator type="assignNamed">
						<plx:left>
							<plx:nameRef type="namedParameter" name="CharSet" />
						</plx:left>
						<plx:right>
							<plx:callStatic type="field" name="Auto" dataTypeName="CharSet" dataTypeQualifier="System.Runtime.InteropServices" />
						</plx:right>
					</plx:binaryOperator>
				</plx:passParam>
			</plx:attribute>
			<plx:typeParam name="T1" />
			<plx:typeParam name="T2" />
			<plx:typeParam name="T3" />
			<plx:typeParam name="T4" />
			<plx:typeParam name="T5" />
			<plx:typeParam name="T6" />
			<plx:typeParam name="T7" />
			<plx:typeParam name="T8" />
			<plx:derivesFromClass dataTypeName="Tuple" />
			<plx:implementsInterface dataTypeName="IEquatable" dataTypeQualifier="System">
				<plx:passTypeParam dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
					<plx:passTypeParam dataTypeName="T5" />
					<plx:passTypeParam dataTypeName="T6" />
					<plx:passTypeParam dataTypeName="T7" />
					<plx:passTypeParam dataTypeName="T8" />
				</plx:passTypeParam>
			</plx:implementsInterface>
			<plx:field visibility="private" readOnly="true" name="_item1" dataTypeName="T1" />
			<plx:property visibility="public" name="Item1">
				<plx:returns dataTypeName="T1" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item1" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item2" dataTypeName="T2" />
			<plx:property visibility="public" name="Item2">
				<plx:returns dataTypeName="T2" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item2" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item3" dataTypeName="T3" />
			<plx:property visibility="public" name="Item3">
				<plx:returns dataTypeName="T3" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item3" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item4" dataTypeName="T4" />
			<plx:property visibility="public" name="Item4">
				<plx:returns dataTypeName="T4" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item4" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item5" dataTypeName="T5" />
			<plx:property visibility="public" name="Item5">
				<plx:returns dataTypeName="T5" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item5" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item6" dataTypeName="T6" />
			<plx:property visibility="public" name="Item6">
				<plx:returns dataTypeName="T6" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item6" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item7" dataTypeName="T7" />
			<plx:property visibility="public" name="Item7">
				<plx:returns dataTypeName="T7" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item7" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item8" dataTypeName="T8" />
			<plx:property visibility="public" name="Item8">
				<plx:returns dataTypeName="T8" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item8" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:function visibility="public" name=".construct">
				<plx:param name="item1" dataTypeName="T1" />
				<plx:param name="item2" dataTypeName="T2" />
				<plx:param name="item3" dataTypeName="T3" />
				<plx:param name="item4" dataTypeName="T4" />
				<plx:param name="item5" dataTypeName="T5" />
				<plx:param name="item6" dataTypeName="T6" />
				<plx:param name="item7" dataTypeName="T7" />
				<plx:param name="item8" dataTypeName="T8" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="booleanOr">
							<plx:left>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:nameRef type="parameter" name="item1" />
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:left>
							<plx:right>
								<plx:binaryOperator type="booleanOr">
									<plx:left>
										<plx:binaryOperator type="identityEquality">
											<plx:left>
												<plx:nameRef type="parameter" name="item2" />
											</plx:left>
											<plx:right>
												<plx:nullKeyword />
											</plx:right>
										</plx:binaryOperator>
									</plx:left>
									<plx:right>
										<plx:binaryOperator type="booleanOr">
											<plx:left>
												<plx:binaryOperator type="identityEquality">
													<plx:left>
														<plx:nameRef type="parameter" name="item3" />
													</plx:left>
													<plx:right>
														<plx:nullKeyword />
													</plx:right>
												</plx:binaryOperator>
											</plx:left>
											<plx:right>
												<plx:binaryOperator type="booleanOr">
													<plx:left>
														<plx:binaryOperator type="identityEquality">
															<plx:left>
																<plx:nameRef type="parameter" name="item4" />
															</plx:left>
															<plx:right>
																<plx:nullKeyword />
															</plx:right>
														</plx:binaryOperator>
													</plx:left>
													<plx:right>
														<plx:binaryOperator type="booleanOr">
															<plx:left>
																<plx:binaryOperator type="identityEquality">
																	<plx:left>
																		<plx:nameRef type="parameter" name="item5" />
																	</plx:left>
																	<plx:right>
																		<plx:nullKeyword />
																	</plx:right>
																</plx:binaryOperator>
															</plx:left>
															<plx:right>
																<plx:binaryOperator type="booleanOr">
																	<plx:left>
																		<plx:binaryOperator type="identityEquality">
																			<plx:left>
																				<plx:nameRef type="parameter" name="item6" />
																			</plx:left>
																			<plx:right>
																				<plx:nullKeyword />
																			</plx:right>
																		</plx:binaryOperator>
																	</plx:left>
																	<plx:right>
																		<plx:binaryOperator type="booleanOr">
																			<plx:left>
																				<plx:binaryOperator type="identityEquality">
																					<plx:left>
																						<plx:nameRef type="parameter" name="item7" />
																					</plx:left>
																					<plx:right>
																						<plx:nullKeyword />
																					</plx:right>
																				</plx:binaryOperator>
																			</plx:left>
																			<plx:right>
																				<plx:binaryOperator type="identityEquality">
																					<plx:left>
																						<plx:nameRef type="parameter" name="item8" />
																					</plx:left>
																					<plx:right>
																						<plx:nullKeyword />
																					</plx:right>
																				</plx:binaryOperator>
																			</plx:right>
																		</plx:binaryOperator>
																	</plx:right>
																</plx:binaryOperator>
															</plx:right>
														</plx:binaryOperator>
													</plx:right>
												</plx:binaryOperator>
											</plx:right>
										</plx:binaryOperator>
									</plx:right>
								</plx:binaryOperator>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="ArgumentNullException" dataTypeQualifier="System" />
					</plx:throw>
				</plx:branch>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item1" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item1" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item2" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item2" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item3" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item3" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item4" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item4" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item5" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item5" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item6" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item6" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item7" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item7" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item8" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item8" />
					</plx:right>
				</plx:assign>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" overload="true" name="Equals">
				<plx:param name="obj" dataTypeName=".object" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:callThis accessor="this" type="methodCall" name="Equals">
						<plx:passParam>
							<plx:cast type="testCast" dataTypeName="Tuple">
								<plx:passTypeParam dataTypeName="T1" />
								<plx:passTypeParam dataTypeName="T2" />
								<plx:passTypeParam dataTypeName="T3" />
								<plx:passTypeParam dataTypeName="T4" />
								<plx:passTypeParam dataTypeName="T5" />
								<plx:passTypeParam dataTypeName="T6" />
								<plx:passTypeParam dataTypeName="T7" />
								<plx:passTypeParam dataTypeName="T8" />
								<plx:nameRef type="parameter" name="obj" />
							</plx:cast>
						</plx:passParam>
					</plx:callThis>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" overload="true" name="Equals">
				<plx:param name="other" dataTypeName="Tuple" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:callThis accessor="this" type="methodCall" name="Equals">
						<plx:passParam>
							<plx:cast type="testCast" dataTypeName="Tuple">
								<plx:passTypeParam dataTypeName="T1" />
								<plx:passTypeParam dataTypeName="T2" />
								<plx:passTypeParam dataTypeName="T3" />
								<plx:passTypeParam dataTypeName="T4" />
								<plx:passTypeParam dataTypeName="T5" />
								<plx:passTypeParam dataTypeName="T6" />
								<plx:passTypeParam dataTypeName="T7" />
								<plx:passTypeParam dataTypeName="T8" />
								<plx:nameRef type="parameter" name="other" />
							</plx:cast>
						</plx:passParam>
					</plx:callThis>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" overload="true" name="Equals">
				<plx:interfaceMember memberName="Equals" dataTypeName="IEquatable" dataTypeQualifier="System">
					<plx:passTypeParam dataTypeName="Tuple">
						<plx:passTypeParam dataTypeName="T1" />
						<plx:passTypeParam dataTypeName="T2" />
						<plx:passTypeParam dataTypeName="T3" />
						<plx:passTypeParam dataTypeName="T4" />
						<plx:passTypeParam dataTypeName="T5" />
						<plx:passTypeParam dataTypeName="T6" />
						<plx:passTypeParam dataTypeName="T7" />
						<plx:passTypeParam dataTypeName="T8" />
					</plx:passTypeParam>
				</plx:interfaceMember>
				<plx:param name="other" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
					<plx:passTypeParam dataTypeName="T5" />
					<plx:passTypeParam dataTypeName="T6" />
					<plx:passTypeParam dataTypeName="T7" />
					<plx:passTypeParam dataTypeName="T8" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:binaryOperator type="booleanOr">
						<plx:left>
							<plx:binaryOperator type="identityEquality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:thisKeyword />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="other" />
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:left>
						<plx:right>
							<plx:binaryOperator type="booleanAnd">
								<plx:left>
									<plx:binaryOperator type="identityInequality">
										<plx:left>
											<plx:cast type="exceptionCast" dataTypeName=".object">
												<plx:nameRef type="parameter" name="other" />
											</plx:cast>
										</plx:left>
										<plx:right>
											<plx:nullKeyword />
										</plx:right>
									</plx:binaryOperator>
								</plx:left>
								<plx:right>
									<plx:binaryOperator type="booleanOr">
										<plx:left>
											<plx:callInstance type="methodCall" name="Equals">
												<plx:callObject>
													<plx:callThis accessor="this" type="field" name="_item1" />
												</plx:callObject>
												<plx:passParam>
													<plx:callInstance type="field" name="_item1">
														<plx:callObject>
															<plx:nameRef type="parameter" name="other" />
														</plx:callObject>
													</plx:callInstance>
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:binaryOperator type="booleanOr">
												<plx:left>
													<plx:callInstance type="methodCall" name="Equals">
														<plx:callObject>
															<plx:callThis accessor="this" type="field" name="_item2" />
														</plx:callObject>
														<plx:passParam>
															<plx:callInstance type="field" name="_item2">
																<plx:callObject>
																	<plx:nameRef type="parameter" name="other" />
																</plx:callObject>
															</plx:callInstance>
														</plx:passParam>
													</plx:callInstance>
												</plx:left>
												<plx:right>
													<plx:binaryOperator type="booleanOr">
														<plx:left>
															<plx:callInstance type="methodCall" name="Equals">
																<plx:callObject>
																	<plx:callThis accessor="this" type="field" name="_item3" />
																</plx:callObject>
																<plx:passParam>
																	<plx:callInstance type="field" name="_item3">
																		<plx:callObject>
																			<plx:nameRef type="parameter" name="other" />
																		</plx:callObject>
																	</plx:callInstance>
																</plx:passParam>
															</plx:callInstance>
														</plx:left>
														<plx:right>
															<plx:binaryOperator type="booleanOr">
																<plx:left>
																	<plx:callInstance type="methodCall" name="Equals">
																		<plx:callObject>
																			<plx:callThis accessor="this" type="field" name="_item4" />
																		</plx:callObject>
																		<plx:passParam>
																			<plx:callInstance type="field" name="_item4">
																				<plx:callObject>
																					<plx:nameRef type="parameter" name="other" />
																				</plx:callObject>
																			</plx:callInstance>
																		</plx:passParam>
																	</plx:callInstance>
																</plx:left>
																<plx:right>
																	<plx:binaryOperator type="booleanOr">
																		<plx:left>
																			<plx:callInstance type="methodCall" name="Equals">
																				<plx:callObject>
																					<plx:callThis accessor="this" type="field" name="_item5" />
																				</plx:callObject>
																				<plx:passParam>
																					<plx:callInstance type="field" name="_item5">
																						<plx:callObject>
																							<plx:nameRef type="parameter" name="other" />
																						</plx:callObject>
																					</plx:callInstance>
																				</plx:passParam>
																			</plx:callInstance>
																		</plx:left>
																		<plx:right>
																			<plx:binaryOperator type="booleanOr">
																				<plx:left>
																					<plx:callInstance type="methodCall" name="Equals">
																						<plx:callObject>
																							<plx:callThis accessor="this" type="field" name="_item6" />
																						</plx:callObject>
																						<plx:passParam>
																							<plx:callInstance type="field" name="_item6">
																								<plx:callObject>
																									<plx:nameRef type="parameter" name="other" />
																								</plx:callObject>
																							</plx:callInstance>
																						</plx:passParam>
																					</plx:callInstance>
																				</plx:left>
																				<plx:right>
																					<plx:binaryOperator type="booleanOr">
																						<plx:left>
																							<plx:callInstance type="methodCall" name="Equals">
																								<plx:callObject>
																									<plx:callThis accessor="this" type="field" name="_item7" />
																								</plx:callObject>
																								<plx:passParam>
																									<plx:callInstance type="field" name="_item7">
																										<plx:callObject>
																											<plx:nameRef type="parameter" name="other" />
																										</plx:callObject>
																									</plx:callInstance>
																								</plx:passParam>
																							</plx:callInstance>
																						</plx:left>
																						<plx:right>
																							<plx:callInstance type="methodCall" name="Equals">
																								<plx:callObject>
																									<plx:callThis accessor="this" type="field" name="_item8" />
																								</plx:callObject>
																								<plx:passParam>
																									<plx:callInstance type="field" name="_item8">
																										<plx:callObject>
																											<plx:nameRef type="parameter" name="other" />
																										</plx:callObject>
																									</plx:callInstance>
																								</plx:passParam>
																							</plx:callInstance>
																						</plx:right>
																					</plx:binaryOperator>
																				</plx:right>
																			</plx:binaryOperator>
																		</plx:right>
																	</plx:binaryOperator>
																</plx:right>
															</plx:binaryOperator>
														</plx:right>
													</plx:binaryOperator>
												</plx:right>
											</plx:binaryOperator>
										</plx:right>
									</plx:binaryOperator>
								</plx:right>
							</plx:binaryOperator>
						</plx:right>
					</plx:binaryOperator>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" name="GetHashCode">
				<plx:returns dataTypeName=".i4" />
				<plx:return>
					<plx:binaryOperator type="bitwiseExclusiveOr">
						<plx:left>
							<plx:callInstance type="methodCall" name="GetHashCode">
								<plx:callObject>
									<plx:callThis accessor="this" type="field" name="_item1" />
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:binaryOperator type="bitwiseExclusiveOr">
								<plx:left>
									<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
										<plx:passParam>
											<plx:callInstance type="methodCall" name="GetHashCode">
												<plx:callObject>
													<plx:callThis accessor="this" type="field" name="_item2" />
												</plx:callObject>
											</plx:callInstance>
										</plx:passParam>
										<plx:passParam>
											<plx:value type="i4" data="1" />
										</plx:passParam>
									</plx:callStatic>
								</plx:left>
								<plx:right>
									<plx:binaryOperator type="bitwiseExclusiveOr">
										<plx:left>
											<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
												<plx:passParam>
													<plx:callInstance type="methodCall" name="GetHashCode">
														<plx:callObject>
															<plx:callThis accessor="this" type="field" name="_item3" />
														</plx:callObject>
													</plx:callInstance>
												</plx:passParam>
												<plx:passParam>
													<plx:value type="i4" data="2" />
												</plx:passParam>
											</plx:callStatic>
										</plx:left>
										<plx:right>
											<plx:binaryOperator type="bitwiseExclusiveOr">
												<plx:left>
													<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
														<plx:passParam>
															<plx:callInstance type="methodCall" name="GetHashCode">
																<plx:callObject>
																	<plx:callThis accessor="this" type="field" name="_item4" />
																</plx:callObject>
															</plx:callInstance>
														</plx:passParam>
														<plx:passParam>
															<plx:value type="i4" data="3" />
														</plx:passParam>
													</plx:callStatic>
												</plx:left>
												<plx:right>
													<plx:binaryOperator type="bitwiseExclusiveOr">
														<plx:left>
															<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
																<plx:passParam>
																	<plx:callInstance type="methodCall" name="GetHashCode">
																		<plx:callObject>
																			<plx:callThis accessor="this" type="field" name="_item5" />
																		</plx:callObject>
																	</plx:callInstance>
																</plx:passParam>
																<plx:passParam>
																	<plx:value type="i4" data="4" />
																</plx:passParam>
															</plx:callStatic>
														</plx:left>
														<plx:right>
															<plx:binaryOperator type="bitwiseExclusiveOr">
																<plx:left>
																	<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
																		<plx:passParam>
																			<plx:callInstance type="methodCall" name="GetHashCode">
																				<plx:callObject>
																					<plx:callThis accessor="this" type="field" name="_item6" />
																				</plx:callObject>
																			</plx:callInstance>
																		</plx:passParam>
																		<plx:passParam>
																			<plx:value type="i4" data="5" />
																		</plx:passParam>
																	</plx:callStatic>
																</plx:left>
																<plx:right>
																	<plx:binaryOperator type="bitwiseExclusiveOr">
																		<plx:left>
																			<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
																				<plx:passParam>
																					<plx:callInstance type="methodCall" name="GetHashCode">
																						<plx:callObject>
																							<plx:callThis accessor="this" type="field" name="_item7" />
																						</plx:callObject>
																					</plx:callInstance>
																				</plx:passParam>
																				<plx:passParam>
																					<plx:value type="i4" data="6" />
																				</plx:passParam>
																			</plx:callStatic>
																		</plx:left>
																		<plx:right>
																			<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
																				<plx:passParam>
																					<plx:callInstance type="methodCall" name="GetHashCode">
																						<plx:callObject>
																							<plx:callThis accessor="this" type="field" name="_item8" />
																						</plx:callObject>
																					</plx:callInstance>
																				</plx:passParam>
																				<plx:passParam>
																					<plx:value type="i4" data="7" />
																				</plx:passParam>
																			</plx:callStatic>
																		</plx:right>
																	</plx:binaryOperator>
																</plx:right>
															</plx:binaryOperator>
														</plx:right>
													</plx:binaryOperator>
												</plx:right>
											</plx:binaryOperator>
										</plx:right>
									</plx:binaryOperator>
								</plx:right>
							</plx:binaryOperator>
						</plx:right>
					</plx:binaryOperator>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" overload="true" name="ToString">
				<plx:returns dataTypeName=".string" />
				<plx:return>
					<plx:callThis accessor="this" type="methodCall" name="ToString">
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callThis>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" overload="true" name="ToString">
				<plx:param name="provider" dataTypeName="IFormatProvider" dataTypeQualifier="System" />
				<plx:returns dataTypeName=".string" />
				<plx:return>
					<plx:callStatic type="methodCall" name="Format" dataTypeName=".string">
						<plx:passParam>
							<plx:nameRef type="parameter" name="provider" />
						</plx:passParam>
						<plx:passParam>
							<plx:string>({1}, {2}, {3}, {4}, {5}, {6}, {7}, {8})</plx:string>
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item1" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item2" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item3" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item4" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item5" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item6" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item7" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item8" />
						</plx:passParam>
					</plx:callStatic>
				</plx:return>
			</plx:function>
			<plx:operatorFunction type="equality">
				<plx:param type="in" name="tuple1" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
					<plx:passTypeParam dataTypeName="T5" />
					<plx:passTypeParam dataTypeName="T6" />
					<plx:passTypeParam dataTypeName="T7" />
					<plx:passTypeParam dataTypeName="T8" />
				</plx:param>
				<plx:param type="in" name="tuple2" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
					<plx:passTypeParam dataTypeName="T5" />
					<plx:passTypeParam dataTypeName="T6" />
					<plx:passTypeParam dataTypeName="T7" />
					<plx:passTypeParam dataTypeName="T8" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:binaryOperator type="booleanOr">
						<plx:left>
							<plx:binaryOperator type="identityEquality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="tuple1" />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="tuple2" />
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:left>
						<plx:right>
							<plx:binaryOperator type="booleanAnd">
								<plx:left>
									<plx:binaryOperator type="identityEquality">
										<plx:left>
											<plx:cast type="exceptionCast" dataTypeName=".object">
												<plx:nameRef type="parameter" name="tuple1" />
											</plx:cast>
										</plx:left>
										<plx:right>
											<plx:nullKeyword />
										</plx:right>
									</plx:binaryOperator>
								</plx:left>
								<plx:right>
									<plx:callInstance type="methodCall" name="Equals">
										<plx:callObject>
											<plx:nameRef type="parameter" name="tuple1" />
										</plx:callObject>
										<plx:passParam>
											<plx:nameRef type="parameter" name="tuple2" />
										</plx:passParam>
									</plx:callInstance>
								</plx:right>
							</plx:binaryOperator>
						</plx:right>
					</plx:binaryOperator>
				</plx:return>
			</plx:operatorFunction>
			<plx:operatorFunction type="inequality">
				<plx:param type="in" name="tuple1" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
					<plx:passTypeParam dataTypeName="T5" />
					<plx:passTypeParam dataTypeName="T6" />
					<plx:passTypeParam dataTypeName="T7" />
					<plx:passTypeParam dataTypeName="T8" />
				</plx:param>
				<plx:param type="in" name="tuple2" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
					<plx:passTypeParam dataTypeName="T5" />
					<plx:passTypeParam dataTypeName="T6" />
					<plx:passTypeParam dataTypeName="T7" />
					<plx:passTypeParam dataTypeName="T8" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:unaryOperator type="booleanNot">
						<plx:binaryOperator type="equality">
							<plx:left>
								<plx:nameRef type="parameter" name="tuple1" />
							</plx:left>
							<plx:right>
								<plx:nameRef type="parameter" name="tuple2" />
							</plx:right>
						</plx:binaryOperator>
					</plx:unaryOperator>
				</plx:return>
			</plx:operatorFunction>
		</plx:class>
		<plx:pragma type="closeRegion" data="Octonary (8-ary) Tuple" />
		<plx:pragma type="region" data="Nonary (9-ary) Tuple" />
		<plx:class visibility="public" modifier="abstract" partial="true" name="Tuple">
			<plx:function visibility="public" modifier="static" overload="true" name="CreateTuple">
				<plx:typeParam name="T1" />
				<plx:typeParam name="T2" />
				<plx:typeParam name="T3" />
				<plx:typeParam name="T4" />
				<plx:typeParam name="T5" />
				<plx:typeParam name="T6" />
				<plx:typeParam name="T7" />
				<plx:typeParam name="T8" />
				<plx:typeParam name="T9" />
				<plx:param name="item1" dataTypeName="T1" />
				<plx:param name="item2" dataTypeName="T2" />
				<plx:param name="item3" dataTypeName="T3" />
				<plx:param name="item4" dataTypeName="T4" />
				<plx:param name="item5" dataTypeName="T5" />
				<plx:param name="item6" dataTypeName="T6" />
				<plx:param name="item7" dataTypeName="T7" />
				<plx:param name="item8" dataTypeName="T8" />
				<plx:param name="item9" dataTypeName="T9" />
				<plx:returns dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
					<plx:passTypeParam dataTypeName="T5" />
					<plx:passTypeParam dataTypeName="T6" />
					<plx:passTypeParam dataTypeName="T7" />
					<plx:passTypeParam dataTypeName="T8" />
					<plx:passTypeParam dataTypeName="T9" />
				</plx:returns>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="booleanOr">
							<plx:left>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:nameRef type="parameter" name="item1" />
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:left>
							<plx:right>
								<plx:binaryOperator type="booleanOr">
									<plx:left>
										<plx:binaryOperator type="identityEquality">
											<plx:left>
												<plx:nameRef type="parameter" name="item2" />
											</plx:left>
											<plx:right>
												<plx:nullKeyword />
											</plx:right>
										</plx:binaryOperator>
									</plx:left>
									<plx:right>
										<plx:binaryOperator type="booleanOr">
											<plx:left>
												<plx:binaryOperator type="identityEquality">
													<plx:left>
														<plx:nameRef type="parameter" name="item3" />
													</plx:left>
													<plx:right>
														<plx:nullKeyword />
													</plx:right>
												</plx:binaryOperator>
											</plx:left>
											<plx:right>
												<plx:binaryOperator type="booleanOr">
													<plx:left>
														<plx:binaryOperator type="identityEquality">
															<plx:left>
																<plx:nameRef type="parameter" name="item4" />
															</plx:left>
															<plx:right>
																<plx:nullKeyword />
															</plx:right>
														</plx:binaryOperator>
													</plx:left>
													<plx:right>
														<plx:binaryOperator type="booleanOr">
															<plx:left>
																<plx:binaryOperator type="identityEquality">
																	<plx:left>
																		<plx:nameRef type="parameter" name="item5" />
																	</plx:left>
																	<plx:right>
																		<plx:nullKeyword />
																	</plx:right>
																</plx:binaryOperator>
															</plx:left>
															<plx:right>
																<plx:binaryOperator type="booleanOr">
																	<plx:left>
																		<plx:binaryOperator type="identityEquality">
																			<plx:left>
																				<plx:nameRef type="parameter" name="item6" />
																			</plx:left>
																			<plx:right>
																				<plx:nullKeyword />
																			</plx:right>
																		</plx:binaryOperator>
																	</plx:left>
																	<plx:right>
																		<plx:binaryOperator type="booleanOr">
																			<plx:left>
																				<plx:binaryOperator type="identityEquality">
																					<plx:left>
																						<plx:nameRef type="parameter" name="item7" />
																					</plx:left>
																					<plx:right>
																						<plx:nullKeyword />
																					</plx:right>
																				</plx:binaryOperator>
																			</plx:left>
																			<plx:right>
																				<plx:binaryOperator type="booleanOr">
																					<plx:left>
																						<plx:binaryOperator type="identityEquality">
																							<plx:left>
																								<plx:nameRef type="parameter" name="item8" />
																							</plx:left>
																							<plx:right>
																								<plx:nullKeyword />
																							</plx:right>
																						</plx:binaryOperator>
																					</plx:left>
																					<plx:right>
																						<plx:binaryOperator type="identityEquality">
																							<plx:left>
																								<plx:nameRef type="parameter" name="item9" />
																							</plx:left>
																							<plx:right>
																								<plx:nullKeyword />
																							</plx:right>
																						</plx:binaryOperator>
																					</plx:right>
																				</plx:binaryOperator>
																			</plx:right>
																		</plx:binaryOperator>
																	</plx:right>
																</plx:binaryOperator>
															</plx:right>
														</plx:binaryOperator>
													</plx:right>
												</plx:binaryOperator>
											</plx:right>
										</plx:binaryOperator>
									</plx:right>
								</plx:binaryOperator>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:return>
						<plx:nullKeyword />
					</plx:return>
				</plx:branch>
				<plx:return>
					<plx:callNew dataTypeName="Tuple">
						<plx:passTypeParam dataTypeName="T1" />
						<plx:passTypeParam dataTypeName="T2" />
						<plx:passTypeParam dataTypeName="T3" />
						<plx:passTypeParam dataTypeName="T4" />
						<plx:passTypeParam dataTypeName="T5" />
						<plx:passTypeParam dataTypeName="T6" />
						<plx:passTypeParam dataTypeName="T7" />
						<plx:passTypeParam dataTypeName="T8" />
						<plx:passTypeParam dataTypeName="T9" />
						<plx:passParam>
							<plx:nameRef type="parameter" name="item1" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item2" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item3" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item4" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item5" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item6" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item7" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item8" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item9" />
						</plx:passParam>
					</plx:callNew>
				</plx:return>
			</plx:function>
		</plx:class>
		<plx:class visibility="public" modifier="sealed" name="Tuple">
			<plx:attribute dataTypeName="SerializableAttribute" dataTypeQualifier="System" />
			<plx:attribute dataTypeName="SuppressMessageAttribute" dataTypeQualifier="System.Diagnostics.CodeAnalysis">
				<plx:passParam>
					<plx:string data="Microsoft.Design" />
				</plx:passParam>
				<plx:passParam>
					<plx:string data="CA1005:AvoidExcessiveParametersOnGenericTypes" />
				</plx:passParam>
			</plx:attribute>
			<plx:attribute dataTypeName="StructLayoutAttribute" dataTypeQualifier="System.Runtime.InteropServices">
				<plx:passParam>
					<plx:callStatic type="field" name="Auto" dataTypeName="LayoutKind" dataTypeQualifier="System.Runtime.InteropServices" />
				</plx:passParam>
				<plx:passParam>
					<plx:binaryOperator type="assignNamed">
						<plx:left>
							<plx:nameRef type="namedParameter" name="CharSet" />
						</plx:left>
						<plx:right>
							<plx:callStatic type="field" name="Auto" dataTypeName="CharSet" dataTypeQualifier="System.Runtime.InteropServices" />
						</plx:right>
					</plx:binaryOperator>
				</plx:passParam>
			</plx:attribute>
			<plx:typeParam name="T1" />
			<plx:typeParam name="T2" />
			<plx:typeParam name="T3" />
			<plx:typeParam name="T4" />
			<plx:typeParam name="T5" />
			<plx:typeParam name="T6" />
			<plx:typeParam name="T7" />
			<plx:typeParam name="T8" />
			<plx:typeParam name="T9" />
			<plx:derivesFromClass dataTypeName="Tuple" />
			<plx:implementsInterface dataTypeName="IEquatable" dataTypeQualifier="System">
				<plx:passTypeParam dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
					<plx:passTypeParam dataTypeName="T5" />
					<plx:passTypeParam dataTypeName="T6" />
					<plx:passTypeParam dataTypeName="T7" />
					<plx:passTypeParam dataTypeName="T8" />
					<plx:passTypeParam dataTypeName="T9" />
				</plx:passTypeParam>
			</plx:implementsInterface>
			<plx:field visibility="private" readOnly="true" name="_item1" dataTypeName="T1" />
			<plx:property visibility="public" name="Item1">
				<plx:returns dataTypeName="T1" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item1" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item2" dataTypeName="T2" />
			<plx:property visibility="public" name="Item2">
				<plx:returns dataTypeName="T2" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item2" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item3" dataTypeName="T3" />
			<plx:property visibility="public" name="Item3">
				<plx:returns dataTypeName="T3" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item3" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item4" dataTypeName="T4" />
			<plx:property visibility="public" name="Item4">
				<plx:returns dataTypeName="T4" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item4" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item5" dataTypeName="T5" />
			<plx:property visibility="public" name="Item5">
				<plx:returns dataTypeName="T5" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item5" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item6" dataTypeName="T6" />
			<plx:property visibility="public" name="Item6">
				<plx:returns dataTypeName="T6" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item6" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item7" dataTypeName="T7" />
			<plx:property visibility="public" name="Item7">
				<plx:returns dataTypeName="T7" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item7" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item8" dataTypeName="T8" />
			<plx:property visibility="public" name="Item8">
				<plx:returns dataTypeName="T8" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item8" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item9" dataTypeName="T9" />
			<plx:property visibility="public" name="Item9">
				<plx:returns dataTypeName="T9" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item9" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:function visibility="public" name=".construct">
				<plx:param name="item1" dataTypeName="T1" />
				<plx:param name="item2" dataTypeName="T2" />
				<plx:param name="item3" dataTypeName="T3" />
				<plx:param name="item4" dataTypeName="T4" />
				<plx:param name="item5" dataTypeName="T5" />
				<plx:param name="item6" dataTypeName="T6" />
				<plx:param name="item7" dataTypeName="T7" />
				<plx:param name="item8" dataTypeName="T8" />
				<plx:param name="item9" dataTypeName="T9" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="booleanOr">
							<plx:left>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:nameRef type="parameter" name="item1" />
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:left>
							<plx:right>
								<plx:binaryOperator type="booleanOr">
									<plx:left>
										<plx:binaryOperator type="identityEquality">
											<plx:left>
												<plx:nameRef type="parameter" name="item2" />
											</plx:left>
											<plx:right>
												<plx:nullKeyword />
											</plx:right>
										</plx:binaryOperator>
									</plx:left>
									<plx:right>
										<plx:binaryOperator type="booleanOr">
											<plx:left>
												<plx:binaryOperator type="identityEquality">
													<plx:left>
														<plx:nameRef type="parameter" name="item3" />
													</plx:left>
													<plx:right>
														<plx:nullKeyword />
													</plx:right>
												</plx:binaryOperator>
											</plx:left>
											<plx:right>
												<plx:binaryOperator type="booleanOr">
													<plx:left>
														<plx:binaryOperator type="identityEquality">
															<plx:left>
																<plx:nameRef type="parameter" name="item4" />
															</plx:left>
															<plx:right>
																<plx:nullKeyword />
															</plx:right>
														</plx:binaryOperator>
													</plx:left>
													<plx:right>
														<plx:binaryOperator type="booleanOr">
															<plx:left>
																<plx:binaryOperator type="identityEquality">
																	<plx:left>
																		<plx:nameRef type="parameter" name="item5" />
																	</plx:left>
																	<plx:right>
																		<plx:nullKeyword />
																	</plx:right>
																</plx:binaryOperator>
															</plx:left>
															<plx:right>
																<plx:binaryOperator type="booleanOr">
																	<plx:left>
																		<plx:binaryOperator type="identityEquality">
																			<plx:left>
																				<plx:nameRef type="parameter" name="item6" />
																			</plx:left>
																			<plx:right>
																				<plx:nullKeyword />
																			</plx:right>
																		</plx:binaryOperator>
																	</plx:left>
																	<plx:right>
																		<plx:binaryOperator type="booleanOr">
																			<plx:left>
																				<plx:binaryOperator type="identityEquality">
																					<plx:left>
																						<plx:nameRef type="parameter" name="item7" />
																					</plx:left>
																					<plx:right>
																						<plx:nullKeyword />
																					</plx:right>
																				</plx:binaryOperator>
																			</plx:left>
																			<plx:right>
																				<plx:binaryOperator type="booleanOr">
																					<plx:left>
																						<plx:binaryOperator type="identityEquality">
																							<plx:left>
																								<plx:nameRef type="parameter" name="item8" />
																							</plx:left>
																							<plx:right>
																								<plx:nullKeyword />
																							</plx:right>
																						</plx:binaryOperator>
																					</plx:left>
																					<plx:right>
																						<plx:binaryOperator type="identityEquality">
																							<plx:left>
																								<plx:nameRef type="parameter" name="item9" />
																							</plx:left>
																							<plx:right>
																								<plx:nullKeyword />
																							</plx:right>
																						</plx:binaryOperator>
																					</plx:right>
																				</plx:binaryOperator>
																			</plx:right>
																		</plx:binaryOperator>
																	</plx:right>
																</plx:binaryOperator>
															</plx:right>
														</plx:binaryOperator>
													</plx:right>
												</plx:binaryOperator>
											</plx:right>
										</plx:binaryOperator>
									</plx:right>
								</plx:binaryOperator>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="ArgumentNullException" dataTypeQualifier="System" />
					</plx:throw>
				</plx:branch>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item1" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item1" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item2" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item2" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item3" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item3" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item4" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item4" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item5" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item5" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item6" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item6" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item7" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item7" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item8" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item8" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item9" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item9" />
					</plx:right>
				</plx:assign>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" overload="true" name="Equals">
				<plx:param name="obj" dataTypeName=".object" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:callThis accessor="this" type="methodCall" name="Equals">
						<plx:passParam>
							<plx:cast type="testCast" dataTypeName="Tuple">
								<plx:passTypeParam dataTypeName="T1" />
								<plx:passTypeParam dataTypeName="T2" />
								<plx:passTypeParam dataTypeName="T3" />
								<plx:passTypeParam dataTypeName="T4" />
								<plx:passTypeParam dataTypeName="T5" />
								<plx:passTypeParam dataTypeName="T6" />
								<plx:passTypeParam dataTypeName="T7" />
								<plx:passTypeParam dataTypeName="T8" />
								<plx:passTypeParam dataTypeName="T9" />
								<plx:nameRef type="parameter" name="obj" />
							</plx:cast>
						</plx:passParam>
					</plx:callThis>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" overload="true" name="Equals">
				<plx:param name="other" dataTypeName="Tuple" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:callThis accessor="this" type="methodCall" name="Equals">
						<plx:passParam>
							<plx:cast type="testCast" dataTypeName="Tuple">
								<plx:passTypeParam dataTypeName="T1" />
								<plx:passTypeParam dataTypeName="T2" />
								<plx:passTypeParam dataTypeName="T3" />
								<plx:passTypeParam dataTypeName="T4" />
								<plx:passTypeParam dataTypeName="T5" />
								<plx:passTypeParam dataTypeName="T6" />
								<plx:passTypeParam dataTypeName="T7" />
								<plx:passTypeParam dataTypeName="T8" />
								<plx:passTypeParam dataTypeName="T9" />
								<plx:nameRef type="parameter" name="other" />
							</plx:cast>
						</plx:passParam>
					</plx:callThis>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" overload="true" name="Equals">
				<plx:interfaceMember memberName="Equals" dataTypeName="IEquatable" dataTypeQualifier="System">
					<plx:passTypeParam dataTypeName="Tuple">
						<plx:passTypeParam dataTypeName="T1" />
						<plx:passTypeParam dataTypeName="T2" />
						<plx:passTypeParam dataTypeName="T3" />
						<plx:passTypeParam dataTypeName="T4" />
						<plx:passTypeParam dataTypeName="T5" />
						<plx:passTypeParam dataTypeName="T6" />
						<plx:passTypeParam dataTypeName="T7" />
						<plx:passTypeParam dataTypeName="T8" />
						<plx:passTypeParam dataTypeName="T9" />
					</plx:passTypeParam>
				</plx:interfaceMember>
				<plx:param name="other" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
					<plx:passTypeParam dataTypeName="T5" />
					<plx:passTypeParam dataTypeName="T6" />
					<plx:passTypeParam dataTypeName="T7" />
					<plx:passTypeParam dataTypeName="T8" />
					<plx:passTypeParam dataTypeName="T9" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:binaryOperator type="booleanOr">
						<plx:left>
							<plx:binaryOperator type="identityEquality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:thisKeyword />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="other" />
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:left>
						<plx:right>
							<plx:binaryOperator type="booleanAnd">
								<plx:left>
									<plx:binaryOperator type="identityInequality">
										<plx:left>
											<plx:cast type="exceptionCast" dataTypeName=".object">
												<plx:nameRef type="parameter" name="other" />
											</plx:cast>
										</plx:left>
										<plx:right>
											<plx:nullKeyword />
										</plx:right>
									</plx:binaryOperator>
								</plx:left>
								<plx:right>
									<plx:binaryOperator type="booleanOr">
										<plx:left>
											<plx:callInstance type="methodCall" name="Equals">
												<plx:callObject>
													<plx:callThis accessor="this" type="field" name="_item1" />
												</plx:callObject>
												<plx:passParam>
													<plx:callInstance type="field" name="_item1">
														<plx:callObject>
															<plx:nameRef type="parameter" name="other" />
														</plx:callObject>
													</plx:callInstance>
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:binaryOperator type="booleanOr">
												<plx:left>
													<plx:callInstance type="methodCall" name="Equals">
														<plx:callObject>
															<plx:callThis accessor="this" type="field" name="_item2" />
														</plx:callObject>
														<plx:passParam>
															<plx:callInstance type="field" name="_item2">
																<plx:callObject>
																	<plx:nameRef type="parameter" name="other" />
																</plx:callObject>
															</plx:callInstance>
														</plx:passParam>
													</plx:callInstance>
												</plx:left>
												<plx:right>
													<plx:binaryOperator type="booleanOr">
														<plx:left>
															<plx:callInstance type="methodCall" name="Equals">
																<plx:callObject>
																	<plx:callThis accessor="this" type="field" name="_item3" />
																</plx:callObject>
																<plx:passParam>
																	<plx:callInstance type="field" name="_item3">
																		<plx:callObject>
																			<plx:nameRef type="parameter" name="other" />
																		</plx:callObject>
																	</plx:callInstance>
																</plx:passParam>
															</plx:callInstance>
														</plx:left>
														<plx:right>
															<plx:binaryOperator type="booleanOr">
																<plx:left>
																	<plx:callInstance type="methodCall" name="Equals">
																		<plx:callObject>
																			<plx:callThis accessor="this" type="field" name="_item4" />
																		</plx:callObject>
																		<plx:passParam>
																			<plx:callInstance type="field" name="_item4">
																				<plx:callObject>
																					<plx:nameRef type="parameter" name="other" />
																				</plx:callObject>
																			</plx:callInstance>
																		</plx:passParam>
																	</plx:callInstance>
																</plx:left>
																<plx:right>
																	<plx:binaryOperator type="booleanOr">
																		<plx:left>
																			<plx:callInstance type="methodCall" name="Equals">
																				<plx:callObject>
																					<plx:callThis accessor="this" type="field" name="_item5" />
																				</plx:callObject>
																				<plx:passParam>
																					<plx:callInstance type="field" name="_item5">
																						<plx:callObject>
																							<plx:nameRef type="parameter" name="other" />
																						</plx:callObject>
																					</plx:callInstance>
																				</plx:passParam>
																			</plx:callInstance>
																		</plx:left>
																		<plx:right>
																			<plx:binaryOperator type="booleanOr">
																				<plx:left>
																					<plx:callInstance type="methodCall" name="Equals">
																						<plx:callObject>
																							<plx:callThis accessor="this" type="field" name="_item6" />
																						</plx:callObject>
																						<plx:passParam>
																							<plx:callInstance type="field" name="_item6">
																								<plx:callObject>
																									<plx:nameRef type="parameter" name="other" />
																								</plx:callObject>
																							</plx:callInstance>
																						</plx:passParam>
																					</plx:callInstance>
																				</plx:left>
																				<plx:right>
																					<plx:binaryOperator type="booleanOr">
																						<plx:left>
																							<plx:callInstance type="methodCall" name="Equals">
																								<plx:callObject>
																									<plx:callThis accessor="this" type="field" name="_item7" />
																								</plx:callObject>
																								<plx:passParam>
																									<plx:callInstance type="field" name="_item7">
																										<plx:callObject>
																											<plx:nameRef type="parameter" name="other" />
																										</plx:callObject>
																									</plx:callInstance>
																								</plx:passParam>
																							</plx:callInstance>
																						</plx:left>
																						<plx:right>
																							<plx:binaryOperator type="booleanOr">
																								<plx:left>
																									<plx:callInstance type="methodCall" name="Equals">
																										<plx:callObject>
																											<plx:callThis accessor="this" type="field" name="_item8" />
																										</plx:callObject>
																										<plx:passParam>
																											<plx:callInstance type="field" name="_item8">
																												<plx:callObject>
																													<plx:nameRef type="parameter" name="other" />
																												</plx:callObject>
																											</plx:callInstance>
																										</plx:passParam>
																									</plx:callInstance>
																								</plx:left>
																								<plx:right>
																									<plx:callInstance type="methodCall" name="Equals">
																										<plx:callObject>
																											<plx:callThis accessor="this" type="field" name="_item9" />
																										</plx:callObject>
																										<plx:passParam>
																											<plx:callInstance type="field" name="_item9">
																												<plx:callObject>
																													<plx:nameRef type="parameter" name="other" />
																												</plx:callObject>
																											</plx:callInstance>
																										</plx:passParam>
																									</plx:callInstance>
																								</plx:right>
																							</plx:binaryOperator>
																						</plx:right>
																					</plx:binaryOperator>
																				</plx:right>
																			</plx:binaryOperator>
																		</plx:right>
																	</plx:binaryOperator>
																</plx:right>
															</plx:binaryOperator>
														</plx:right>
													</plx:binaryOperator>
												</plx:right>
											</plx:binaryOperator>
										</plx:right>
									</plx:binaryOperator>
								</plx:right>
							</plx:binaryOperator>
						</plx:right>
					</plx:binaryOperator>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" name="GetHashCode">
				<plx:returns dataTypeName=".i4" />
				<plx:return>
					<plx:binaryOperator type="bitwiseExclusiveOr">
						<plx:left>
							<plx:callInstance type="methodCall" name="GetHashCode">
								<plx:callObject>
									<plx:callThis accessor="this" type="field" name="_item1" />
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:binaryOperator type="bitwiseExclusiveOr">
								<plx:left>
									<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
										<plx:passParam>
											<plx:callInstance type="methodCall" name="GetHashCode">
												<plx:callObject>
													<plx:callThis accessor="this" type="field" name="_item2" />
												</plx:callObject>
											</plx:callInstance>
										</plx:passParam>
										<plx:passParam>
											<plx:value type="i4" data="1" />
										</plx:passParam>
									</plx:callStatic>
								</plx:left>
								<plx:right>
									<plx:binaryOperator type="bitwiseExclusiveOr">
										<plx:left>
											<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
												<plx:passParam>
													<plx:callInstance type="methodCall" name="GetHashCode">
														<plx:callObject>
															<plx:callThis accessor="this" type="field" name="_item3" />
														</plx:callObject>
													</plx:callInstance>
												</plx:passParam>
												<plx:passParam>
													<plx:value type="i4" data="2" />
												</plx:passParam>
											</plx:callStatic>
										</plx:left>
										<plx:right>
											<plx:binaryOperator type="bitwiseExclusiveOr">
												<plx:left>
													<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
														<plx:passParam>
															<plx:callInstance type="methodCall" name="GetHashCode">
																<plx:callObject>
																	<plx:callThis accessor="this" type="field" name="_item4" />
																</plx:callObject>
															</plx:callInstance>
														</plx:passParam>
														<plx:passParam>
															<plx:value type="i4" data="3" />
														</plx:passParam>
													</plx:callStatic>
												</plx:left>
												<plx:right>
													<plx:binaryOperator type="bitwiseExclusiveOr">
														<plx:left>
															<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
																<plx:passParam>
																	<plx:callInstance type="methodCall" name="GetHashCode">
																		<plx:callObject>
																			<plx:callThis accessor="this" type="field" name="_item5" />
																		</plx:callObject>
																	</plx:callInstance>
																</plx:passParam>
																<plx:passParam>
																	<plx:value type="i4" data="4" />
																</plx:passParam>
															</plx:callStatic>
														</plx:left>
														<plx:right>
															<plx:binaryOperator type="bitwiseExclusiveOr">
																<plx:left>
																	<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
																		<plx:passParam>
																			<plx:callInstance type="methodCall" name="GetHashCode">
																				<plx:callObject>
																					<plx:callThis accessor="this" type="field" name="_item6" />
																				</plx:callObject>
																			</plx:callInstance>
																		</plx:passParam>
																		<plx:passParam>
																			<plx:value type="i4" data="5" />
																		</plx:passParam>
																	</plx:callStatic>
																</plx:left>
																<plx:right>
																	<plx:binaryOperator type="bitwiseExclusiveOr">
																		<plx:left>
																			<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
																				<plx:passParam>
																					<plx:callInstance type="methodCall" name="GetHashCode">
																						<plx:callObject>
																							<plx:callThis accessor="this" type="field" name="_item7" />
																						</plx:callObject>
																					</plx:callInstance>
																				</plx:passParam>
																				<plx:passParam>
																					<plx:value type="i4" data="6" />
																				</plx:passParam>
																			</plx:callStatic>
																		</plx:left>
																		<plx:right>
																			<plx:binaryOperator type="bitwiseExclusiveOr">
																				<plx:left>
																					<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
																						<plx:passParam>
																							<plx:callInstance type="methodCall" name="GetHashCode">
																								<plx:callObject>
																									<plx:callThis accessor="this" type="field" name="_item8" />
																								</plx:callObject>
																							</plx:callInstance>
																						</plx:passParam>
																						<plx:passParam>
																							<plx:value type="i4" data="7" />
																						</plx:passParam>
																					</plx:callStatic>
																				</plx:left>
																				<plx:right>
																					<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
																						<plx:passParam>
																							<plx:callInstance type="methodCall" name="GetHashCode">
																								<plx:callObject>
																									<plx:callThis accessor="this" type="field" name="_item9" />
																								</plx:callObject>
																							</plx:callInstance>
																						</plx:passParam>
																						<plx:passParam>
																							<plx:value type="i4" data="8" />
																						</plx:passParam>
																					</plx:callStatic>
																				</plx:right>
																			</plx:binaryOperator>
																		</plx:right>
																	</plx:binaryOperator>
																</plx:right>
															</plx:binaryOperator>
														</plx:right>
													</plx:binaryOperator>
												</plx:right>
											</plx:binaryOperator>
										</plx:right>
									</plx:binaryOperator>
								</plx:right>
							</plx:binaryOperator>
						</plx:right>
					</plx:binaryOperator>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" overload="true" name="ToString">
				<plx:returns dataTypeName=".string" />
				<plx:return>
					<plx:callThis accessor="this" type="methodCall" name="ToString">
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callThis>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" overload="true" name="ToString">
				<plx:param name="provider" dataTypeName="IFormatProvider" dataTypeQualifier="System" />
				<plx:returns dataTypeName=".string" />
				<plx:return>
					<plx:callStatic type="methodCall" name="Format" dataTypeName=".string">
						<plx:passParam>
							<plx:nameRef type="parameter" name="provider" />
						</plx:passParam>
						<plx:passParam>
							<plx:string>({1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {9})</plx:string>
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item1" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item2" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item3" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item4" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item5" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item6" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item7" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item8" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item9" />
						</plx:passParam>
					</plx:callStatic>
				</plx:return>
			</plx:function>
			<plx:operatorFunction type="equality">
				<plx:param type="in" name="tuple1" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
					<plx:passTypeParam dataTypeName="T5" />
					<plx:passTypeParam dataTypeName="T6" />
					<plx:passTypeParam dataTypeName="T7" />
					<plx:passTypeParam dataTypeName="T8" />
					<plx:passTypeParam dataTypeName="T9" />
				</plx:param>
				<plx:param type="in" name="tuple2" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
					<plx:passTypeParam dataTypeName="T5" />
					<plx:passTypeParam dataTypeName="T6" />
					<plx:passTypeParam dataTypeName="T7" />
					<plx:passTypeParam dataTypeName="T8" />
					<plx:passTypeParam dataTypeName="T9" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:binaryOperator type="booleanOr">
						<plx:left>
							<plx:binaryOperator type="identityEquality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="tuple1" />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="tuple2" />
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:left>
						<plx:right>
							<plx:binaryOperator type="booleanAnd">
								<plx:left>
									<plx:binaryOperator type="identityEquality">
										<plx:left>
											<plx:cast type="exceptionCast" dataTypeName=".object">
												<plx:nameRef type="parameter" name="tuple1" />
											</plx:cast>
										</plx:left>
										<plx:right>
											<plx:nullKeyword />
										</plx:right>
									</plx:binaryOperator>
								</plx:left>
								<plx:right>
									<plx:callInstance type="methodCall" name="Equals">
										<plx:callObject>
											<plx:nameRef type="parameter" name="tuple1" />
										</plx:callObject>
										<plx:passParam>
											<plx:nameRef type="parameter" name="tuple2" />
										</plx:passParam>
									</plx:callInstance>
								</plx:right>
							</plx:binaryOperator>
						</plx:right>
					</plx:binaryOperator>
				</plx:return>
			</plx:operatorFunction>
			<plx:operatorFunction type="inequality">
				<plx:param type="in" name="tuple1" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
					<plx:passTypeParam dataTypeName="T5" />
					<plx:passTypeParam dataTypeName="T6" />
					<plx:passTypeParam dataTypeName="T7" />
					<plx:passTypeParam dataTypeName="T8" />
					<plx:passTypeParam dataTypeName="T9" />
				</plx:param>
				<plx:param type="in" name="tuple2" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
					<plx:passTypeParam dataTypeName="T5" />
					<plx:passTypeParam dataTypeName="T6" />
					<plx:passTypeParam dataTypeName="T7" />
					<plx:passTypeParam dataTypeName="T8" />
					<plx:passTypeParam dataTypeName="T9" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:unaryOperator type="booleanNot">
						<plx:binaryOperator type="equality">
							<plx:left>
								<plx:nameRef type="parameter" name="tuple1" />
							</plx:left>
							<plx:right>
								<plx:nameRef type="parameter" name="tuple2" />
							</plx:right>
						</plx:binaryOperator>
					</plx:unaryOperator>
				</plx:return>
			</plx:operatorFunction>
		</plx:class>
		<plx:pragma type="closeRegion" data="Nonary (9-ary) Tuple" />
		<plx:pragma type="region" data="Denary (10-ary) Tuple" />
		<plx:class visibility="public" modifier="abstract" partial="true" name="Tuple">
			<plx:function visibility="public" modifier="static" overload="true" name="CreateTuple">
				<plx:typeParam name="T1" />
				<plx:typeParam name="T2" />
				<plx:typeParam name="T3" />
				<plx:typeParam name="T4" />
				<plx:typeParam name="T5" />
				<plx:typeParam name="T6" />
				<plx:typeParam name="T7" />
				<plx:typeParam name="T8" />
				<plx:typeParam name="T9" />
				<plx:typeParam name="T10" />
				<plx:param name="item1" dataTypeName="T1" />
				<plx:param name="item2" dataTypeName="T2" />
				<plx:param name="item3" dataTypeName="T3" />
				<plx:param name="item4" dataTypeName="T4" />
				<plx:param name="item5" dataTypeName="T5" />
				<plx:param name="item6" dataTypeName="T6" />
				<plx:param name="item7" dataTypeName="T7" />
				<plx:param name="item8" dataTypeName="T8" />
				<plx:param name="item9" dataTypeName="T9" />
				<plx:param name="item10" dataTypeName="T10" />
				<plx:returns dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
					<plx:passTypeParam dataTypeName="T5" />
					<plx:passTypeParam dataTypeName="T6" />
					<plx:passTypeParam dataTypeName="T7" />
					<plx:passTypeParam dataTypeName="T8" />
					<plx:passTypeParam dataTypeName="T9" />
					<plx:passTypeParam dataTypeName="T10" />
				</plx:returns>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="booleanOr">
							<plx:left>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:nameRef type="parameter" name="item1" />
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:left>
							<plx:right>
								<plx:binaryOperator type="booleanOr">
									<plx:left>
										<plx:binaryOperator type="identityEquality">
											<plx:left>
												<plx:nameRef type="parameter" name="item2" />
											</plx:left>
											<plx:right>
												<plx:nullKeyword />
											</plx:right>
										</plx:binaryOperator>
									</plx:left>
									<plx:right>
										<plx:binaryOperator type="booleanOr">
											<plx:left>
												<plx:binaryOperator type="identityEquality">
													<plx:left>
														<plx:nameRef type="parameter" name="item3" />
													</plx:left>
													<plx:right>
														<plx:nullKeyword />
													</plx:right>
												</plx:binaryOperator>
											</plx:left>
											<plx:right>
												<plx:binaryOperator type="booleanOr">
													<plx:left>
														<plx:binaryOperator type="identityEquality">
															<plx:left>
																<plx:nameRef type="parameter" name="item4" />
															</plx:left>
															<plx:right>
																<plx:nullKeyword />
															</plx:right>
														</plx:binaryOperator>
													</plx:left>
													<plx:right>
														<plx:binaryOperator type="booleanOr">
															<plx:left>
																<plx:binaryOperator type="identityEquality">
																	<plx:left>
																		<plx:nameRef type="parameter" name="item5" />
																	</plx:left>
																	<plx:right>
																		<plx:nullKeyword />
																	</plx:right>
																</plx:binaryOperator>
															</plx:left>
															<plx:right>
																<plx:binaryOperator type="booleanOr">
																	<plx:left>
																		<plx:binaryOperator type="identityEquality">
																			<plx:left>
																				<plx:nameRef type="parameter" name="item6" />
																			</plx:left>
																			<plx:right>
																				<plx:nullKeyword />
																			</plx:right>
																		</plx:binaryOperator>
																	</plx:left>
																	<plx:right>
																		<plx:binaryOperator type="booleanOr">
																			<plx:left>
																				<plx:binaryOperator type="identityEquality">
																					<plx:left>
																						<plx:nameRef type="parameter" name="item7" />
																					</plx:left>
																					<plx:right>
																						<plx:nullKeyword />
																					</plx:right>
																				</plx:binaryOperator>
																			</plx:left>
																			<plx:right>
																				<plx:binaryOperator type="booleanOr">
																					<plx:left>
																						<plx:binaryOperator type="identityEquality">
																							<plx:left>
																								<plx:nameRef type="parameter" name="item8" />
																							</plx:left>
																							<plx:right>
																								<plx:nullKeyword />
																							</plx:right>
																						</plx:binaryOperator>
																					</plx:left>
																					<plx:right>
																						<plx:binaryOperator type="booleanOr">
																							<plx:left>
																								<plx:binaryOperator type="identityEquality">
																									<plx:left>
																										<plx:nameRef type="parameter" name="item9" />
																									</plx:left>
																									<plx:right>
																										<plx:nullKeyword />
																									</plx:right>
																								</plx:binaryOperator>
																							</plx:left>
																							<plx:right>
																								<plx:binaryOperator type="identityEquality">
																									<plx:left>
																										<plx:nameRef type="parameter" name="item10" />
																									</plx:left>
																									<plx:right>
																										<plx:nullKeyword />
																									</plx:right>
																								</plx:binaryOperator>
																							</plx:right>
																						</plx:binaryOperator>
																					</plx:right>
																				</plx:binaryOperator>
																			</plx:right>
																		</plx:binaryOperator>
																	</plx:right>
																</plx:binaryOperator>
															</plx:right>
														</plx:binaryOperator>
													</plx:right>
												</plx:binaryOperator>
											</plx:right>
										</plx:binaryOperator>
									</plx:right>
								</plx:binaryOperator>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:return>
						<plx:nullKeyword />
					</plx:return>
				</plx:branch>
				<plx:return>
					<plx:callNew dataTypeName="Tuple">
						<plx:passTypeParam dataTypeName="T1" />
						<plx:passTypeParam dataTypeName="T2" />
						<plx:passTypeParam dataTypeName="T3" />
						<plx:passTypeParam dataTypeName="T4" />
						<plx:passTypeParam dataTypeName="T5" />
						<plx:passTypeParam dataTypeName="T6" />
						<plx:passTypeParam dataTypeName="T7" />
						<plx:passTypeParam dataTypeName="T8" />
						<plx:passTypeParam dataTypeName="T9" />
						<plx:passTypeParam dataTypeName="T10" />
						<plx:passParam>
							<plx:nameRef type="parameter" name="item1" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item2" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item3" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item4" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item5" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item6" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item7" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item8" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item9" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="item10" />
						</plx:passParam>
					</plx:callNew>
				</plx:return>
			</plx:function>
		</plx:class>
		<plx:class visibility="public" modifier="sealed" name="Tuple">
			<plx:attribute dataTypeName="SerializableAttribute" dataTypeQualifier="System" />
			<plx:attribute dataTypeName="SuppressMessageAttribute" dataTypeQualifier="System.Diagnostics.CodeAnalysis">
				<plx:passParam>
					<plx:string data="Microsoft.Design" />
				</plx:passParam>
				<plx:passParam>
					<plx:string data="CA1005:AvoidExcessiveParametersOnGenericTypes" />
				</plx:passParam>
			</plx:attribute>
			<plx:attribute dataTypeName="StructLayoutAttribute" dataTypeQualifier="System.Runtime.InteropServices">
				<plx:passParam>
					<plx:callStatic type="field" name="Auto" dataTypeName="LayoutKind" dataTypeQualifier="System.Runtime.InteropServices" />
				</plx:passParam>
				<plx:passParam>
					<plx:binaryOperator type="assignNamed">
						<plx:left>
							<plx:nameRef type="namedParameter" name="CharSet" />
						</plx:left>
						<plx:right>
							<plx:callStatic type="field" name="Auto" dataTypeName="CharSet" dataTypeQualifier="System.Runtime.InteropServices" />
						</plx:right>
					</plx:binaryOperator>
				</plx:passParam>
			</plx:attribute>
			<plx:typeParam name="T1" />
			<plx:typeParam name="T2" />
			<plx:typeParam name="T3" />
			<plx:typeParam name="T4" />
			<plx:typeParam name="T5" />
			<plx:typeParam name="T6" />
			<plx:typeParam name="T7" />
			<plx:typeParam name="T8" />
			<plx:typeParam name="T9" />
			<plx:typeParam name="T10" />
			<plx:derivesFromClass dataTypeName="Tuple" />
			<plx:implementsInterface dataTypeName="IEquatable" dataTypeQualifier="System">
				<plx:passTypeParam dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
					<plx:passTypeParam dataTypeName="T5" />
					<plx:passTypeParam dataTypeName="T6" />
					<plx:passTypeParam dataTypeName="T7" />
					<plx:passTypeParam dataTypeName="T8" />
					<plx:passTypeParam dataTypeName="T9" />
					<plx:passTypeParam dataTypeName="T10" />
				</plx:passTypeParam>
			</plx:implementsInterface>
			<plx:field visibility="private" readOnly="true" name="_item1" dataTypeName="T1" />
			<plx:property visibility="public" name="Item1">
				<plx:returns dataTypeName="T1" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item1" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item2" dataTypeName="T2" />
			<plx:property visibility="public" name="Item2">
				<plx:returns dataTypeName="T2" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item2" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item3" dataTypeName="T3" />
			<plx:property visibility="public" name="Item3">
				<plx:returns dataTypeName="T3" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item3" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item4" dataTypeName="T4" />
			<plx:property visibility="public" name="Item4">
				<plx:returns dataTypeName="T4" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item4" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item5" dataTypeName="T5" />
			<plx:property visibility="public" name="Item5">
				<plx:returns dataTypeName="T5" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item5" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item6" dataTypeName="T6" />
			<plx:property visibility="public" name="Item6">
				<plx:returns dataTypeName="T6" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item6" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item7" dataTypeName="T7" />
			<plx:property visibility="public" name="Item7">
				<plx:returns dataTypeName="T7" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item7" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item8" dataTypeName="T8" />
			<plx:property visibility="public" name="Item8">
				<plx:returns dataTypeName="T8" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item8" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item9" dataTypeName="T9" />
			<plx:property visibility="public" name="Item9">
				<plx:returns dataTypeName="T9" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item9" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:field visibility="private" readOnly="true" name="_item10" dataTypeName="T10" />
			<plx:property visibility="public" name="Item10">
				<plx:returns dataTypeName="T10" />
				<plx:get>
					<plx:return>
						<plx:callThis accessor="this" type="field" name="_item10" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:function visibility="public" name=".construct">
				<plx:param name="item1" dataTypeName="T1" />
				<plx:param name="item2" dataTypeName="T2" />
				<plx:param name="item3" dataTypeName="T3" />
				<plx:param name="item4" dataTypeName="T4" />
				<plx:param name="item5" dataTypeName="T5" />
				<plx:param name="item6" dataTypeName="T6" />
				<plx:param name="item7" dataTypeName="T7" />
				<plx:param name="item8" dataTypeName="T8" />
				<plx:param name="item9" dataTypeName="T9" />
				<plx:param name="item10" dataTypeName="T10" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="booleanOr">
							<plx:left>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:nameRef type="parameter" name="item1" />
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:left>
							<plx:right>
								<plx:binaryOperator type="booleanOr">
									<plx:left>
										<plx:binaryOperator type="identityEquality">
											<plx:left>
												<plx:nameRef type="parameter" name="item2" />
											</plx:left>
											<plx:right>
												<plx:nullKeyword />
											</plx:right>
										</plx:binaryOperator>
									</plx:left>
									<plx:right>
										<plx:binaryOperator type="booleanOr">
											<plx:left>
												<plx:binaryOperator type="identityEquality">
													<plx:left>
														<plx:nameRef type="parameter" name="item3" />
													</plx:left>
													<plx:right>
														<plx:nullKeyword />
													</plx:right>
												</plx:binaryOperator>
											</plx:left>
											<plx:right>
												<plx:binaryOperator type="booleanOr">
													<plx:left>
														<plx:binaryOperator type="identityEquality">
															<plx:left>
																<plx:nameRef type="parameter" name="item4" />
															</plx:left>
															<plx:right>
																<plx:nullKeyword />
															</plx:right>
														</plx:binaryOperator>
													</plx:left>
													<plx:right>
														<plx:binaryOperator type="booleanOr">
															<plx:left>
																<plx:binaryOperator type="identityEquality">
																	<plx:left>
																		<plx:nameRef type="parameter" name="item5" />
																	</plx:left>
																	<plx:right>
																		<plx:nullKeyword />
																	</plx:right>
																</plx:binaryOperator>
															</plx:left>
															<plx:right>
																<plx:binaryOperator type="booleanOr">
																	<plx:left>
																		<plx:binaryOperator type="identityEquality">
																			<plx:left>
																				<plx:nameRef type="parameter" name="item6" />
																			</plx:left>
																			<plx:right>
																				<plx:nullKeyword />
																			</plx:right>
																		</plx:binaryOperator>
																	</plx:left>
																	<plx:right>
																		<plx:binaryOperator type="booleanOr">
																			<plx:left>
																				<plx:binaryOperator type="identityEquality">
																					<plx:left>
																						<plx:nameRef type="parameter" name="item7" />
																					</plx:left>
																					<plx:right>
																						<plx:nullKeyword />
																					</plx:right>
																				</plx:binaryOperator>
																			</plx:left>
																			<plx:right>
																				<plx:binaryOperator type="booleanOr">
																					<plx:left>
																						<plx:binaryOperator type="identityEquality">
																							<plx:left>
																								<plx:nameRef type="parameter" name="item8" />
																							</plx:left>
																							<plx:right>
																								<plx:nullKeyword />
																							</plx:right>
																						</plx:binaryOperator>
																					</plx:left>
																					<plx:right>
																						<plx:binaryOperator type="booleanOr">
																							<plx:left>
																								<plx:binaryOperator type="identityEquality">
																									<plx:left>
																										<plx:nameRef type="parameter" name="item9" />
																									</plx:left>
																									<plx:right>
																										<plx:nullKeyword />
																									</plx:right>
																								</plx:binaryOperator>
																							</plx:left>
																							<plx:right>
																								<plx:binaryOperator type="identityEquality">
																									<plx:left>
																										<plx:nameRef type="parameter" name="item10" />
																									</plx:left>
																									<plx:right>
																										<plx:nullKeyword />
																									</plx:right>
																								</plx:binaryOperator>
																							</plx:right>
																						</plx:binaryOperator>
																					</plx:right>
																				</plx:binaryOperator>
																			</plx:right>
																		</plx:binaryOperator>
																	</plx:right>
																</plx:binaryOperator>
															</plx:right>
														</plx:binaryOperator>
													</plx:right>
												</plx:binaryOperator>
											</plx:right>
										</plx:binaryOperator>
									</plx:right>
								</plx:binaryOperator>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="ArgumentNullException" dataTypeQualifier="System" />
					</plx:throw>
				</plx:branch>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item1" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item1" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item2" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item2" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item3" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item3" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item4" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item4" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item5" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item5" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item6" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item6" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item7" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item7" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item8" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item8" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item9" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item9" />
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis accessor="this" type="field" name="_item10" />
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="item10" />
					</plx:right>
				</plx:assign>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" overload="true" name="Equals">
				<plx:param name="obj" dataTypeName=".object" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:callThis accessor="this" type="methodCall" name="Equals">
						<plx:passParam>
							<plx:cast type="testCast" dataTypeName="Tuple">
								<plx:passTypeParam dataTypeName="T1" />
								<plx:passTypeParam dataTypeName="T2" />
								<plx:passTypeParam dataTypeName="T3" />
								<plx:passTypeParam dataTypeName="T4" />
								<plx:passTypeParam dataTypeName="T5" />
								<plx:passTypeParam dataTypeName="T6" />
								<plx:passTypeParam dataTypeName="T7" />
								<plx:passTypeParam dataTypeName="T8" />
								<plx:passTypeParam dataTypeName="T9" />
								<plx:passTypeParam dataTypeName="T10" />
								<plx:nameRef type="parameter" name="obj" />
							</plx:cast>
						</plx:passParam>
					</plx:callThis>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" overload="true" name="Equals">
				<plx:param name="other" dataTypeName="Tuple" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:callThis accessor="this" type="methodCall" name="Equals">
						<plx:passParam>
							<plx:cast type="testCast" dataTypeName="Tuple">
								<plx:passTypeParam dataTypeName="T1" />
								<plx:passTypeParam dataTypeName="T2" />
								<plx:passTypeParam dataTypeName="T3" />
								<plx:passTypeParam dataTypeName="T4" />
								<plx:passTypeParam dataTypeName="T5" />
								<plx:passTypeParam dataTypeName="T6" />
								<plx:passTypeParam dataTypeName="T7" />
								<plx:passTypeParam dataTypeName="T8" />
								<plx:passTypeParam dataTypeName="T9" />
								<plx:passTypeParam dataTypeName="T10" />
								<plx:nameRef type="parameter" name="other" />
							</plx:cast>
						</plx:passParam>
					</plx:callThis>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" overload="true" name="Equals">
				<plx:interfaceMember memberName="Equals" dataTypeName="IEquatable" dataTypeQualifier="System">
					<plx:passTypeParam dataTypeName="Tuple">
						<plx:passTypeParam dataTypeName="T1" />
						<plx:passTypeParam dataTypeName="T2" />
						<plx:passTypeParam dataTypeName="T3" />
						<plx:passTypeParam dataTypeName="T4" />
						<plx:passTypeParam dataTypeName="T5" />
						<plx:passTypeParam dataTypeName="T6" />
						<plx:passTypeParam dataTypeName="T7" />
						<plx:passTypeParam dataTypeName="T8" />
						<plx:passTypeParam dataTypeName="T9" />
						<plx:passTypeParam dataTypeName="T10" />
					</plx:passTypeParam>
				</plx:interfaceMember>
				<plx:param name="other" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
					<plx:passTypeParam dataTypeName="T5" />
					<plx:passTypeParam dataTypeName="T6" />
					<plx:passTypeParam dataTypeName="T7" />
					<plx:passTypeParam dataTypeName="T8" />
					<plx:passTypeParam dataTypeName="T9" />
					<plx:passTypeParam dataTypeName="T10" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:binaryOperator type="booleanOr">
						<plx:left>
							<plx:binaryOperator type="identityEquality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:thisKeyword />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="other" />
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:left>
						<plx:right>
							<plx:binaryOperator type="booleanAnd">
								<plx:left>
									<plx:binaryOperator type="identityInequality">
										<plx:left>
											<plx:cast type="exceptionCast" dataTypeName=".object">
												<plx:nameRef type="parameter" name="other" />
											</plx:cast>
										</plx:left>
										<plx:right>
											<plx:nullKeyword />
										</plx:right>
									</plx:binaryOperator>
								</plx:left>
								<plx:right>
									<plx:binaryOperator type="booleanOr">
										<plx:left>
											<plx:callInstance type="methodCall" name="Equals">
												<plx:callObject>
													<plx:callThis accessor="this" type="field" name="_item1" />
												</plx:callObject>
												<plx:passParam>
													<plx:callInstance type="field" name="_item1">
														<plx:callObject>
															<plx:nameRef type="parameter" name="other" />
														</plx:callObject>
													</plx:callInstance>
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:binaryOperator type="booleanOr">
												<plx:left>
													<plx:callInstance type="methodCall" name="Equals">
														<plx:callObject>
															<plx:callThis accessor="this" type="field" name="_item2" />
														</plx:callObject>
														<plx:passParam>
															<plx:callInstance type="field" name="_item2">
																<plx:callObject>
																	<plx:nameRef type="parameter" name="other" />
																</plx:callObject>
															</plx:callInstance>
														</plx:passParam>
													</plx:callInstance>
												</plx:left>
												<plx:right>
													<plx:binaryOperator type="booleanOr">
														<plx:left>
															<plx:callInstance type="methodCall" name="Equals">
																<plx:callObject>
																	<plx:callThis accessor="this" type="field" name="_item3" />
																</plx:callObject>
																<plx:passParam>
																	<plx:callInstance type="field" name="_item3">
																		<plx:callObject>
																			<plx:nameRef type="parameter" name="other" />
																		</plx:callObject>
																	</plx:callInstance>
																</plx:passParam>
															</plx:callInstance>
														</plx:left>
														<plx:right>
															<plx:binaryOperator type="booleanOr">
																<plx:left>
																	<plx:callInstance type="methodCall" name="Equals">
																		<plx:callObject>
																			<plx:callThis accessor="this" type="field" name="_item4" />
																		</plx:callObject>
																		<plx:passParam>
																			<plx:callInstance type="field" name="_item4">
																				<plx:callObject>
																					<plx:nameRef type="parameter" name="other" />
																				</plx:callObject>
																			</plx:callInstance>
																		</plx:passParam>
																	</plx:callInstance>
																</plx:left>
																<plx:right>
																	<plx:binaryOperator type="booleanOr">
																		<plx:left>
																			<plx:callInstance type="methodCall" name="Equals">
																				<plx:callObject>
																					<plx:callThis accessor="this" type="field" name="_item5" />
																				</plx:callObject>
																				<plx:passParam>
																					<plx:callInstance type="field" name="_item5">
																						<plx:callObject>
																							<plx:nameRef type="parameter" name="other" />
																						</plx:callObject>
																					</plx:callInstance>
																				</plx:passParam>
																			</plx:callInstance>
																		</plx:left>
																		<plx:right>
																			<plx:binaryOperator type="booleanOr">
																				<plx:left>
																					<plx:callInstance type="methodCall" name="Equals">
																						<plx:callObject>
																							<plx:callThis accessor="this" type="field" name="_item6" />
																						</plx:callObject>
																						<plx:passParam>
																							<plx:callInstance type="field" name="_item6">
																								<plx:callObject>
																									<plx:nameRef type="parameter" name="other" />
																								</plx:callObject>
																							</plx:callInstance>
																						</plx:passParam>
																					</plx:callInstance>
																				</plx:left>
																				<plx:right>
																					<plx:binaryOperator type="booleanOr">
																						<plx:left>
																							<plx:callInstance type="methodCall" name="Equals">
																								<plx:callObject>
																									<plx:callThis accessor="this" type="field" name="_item7" />
																								</plx:callObject>
																								<plx:passParam>
																									<plx:callInstance type="field" name="_item7">
																										<plx:callObject>
																											<plx:nameRef type="parameter" name="other" />
																										</plx:callObject>
																									</plx:callInstance>
																								</plx:passParam>
																							</plx:callInstance>
																						</plx:left>
																						<plx:right>
																							<plx:binaryOperator type="booleanOr">
																								<plx:left>
																									<plx:callInstance type="methodCall" name="Equals">
																										<plx:callObject>
																											<plx:callThis accessor="this" type="field" name="_item8" />
																										</plx:callObject>
																										<plx:passParam>
																											<plx:callInstance type="field" name="_item8">
																												<plx:callObject>
																													<plx:nameRef type="parameter" name="other" />
																												</plx:callObject>
																											</plx:callInstance>
																										</plx:passParam>
																									</plx:callInstance>
																								</plx:left>
																								<plx:right>
																									<plx:binaryOperator type="booleanOr">
																										<plx:left>
																											<plx:callInstance type="methodCall" name="Equals">
																												<plx:callObject>
																													<plx:callThis accessor="this" type="field" name="_item9" />
																												</plx:callObject>
																												<plx:passParam>
																													<plx:callInstance type="field" name="_item9">
																														<plx:callObject>
																															<plx:nameRef type="parameter" name="other" />
																														</plx:callObject>
																													</plx:callInstance>
																												</plx:passParam>
																											</plx:callInstance>
																										</plx:left>
																										<plx:right>
																											<plx:callInstance type="methodCall" name="Equals">
																												<plx:callObject>
																													<plx:callThis accessor="this" type="field" name="_item10" />
																												</plx:callObject>
																												<plx:passParam>
																													<plx:callInstance type="field" name="_item10">
																														<plx:callObject>
																															<plx:nameRef type="parameter" name="other" />
																														</plx:callObject>
																													</plx:callInstance>
																												</plx:passParam>
																											</plx:callInstance>
																										</plx:right>
																									</plx:binaryOperator>
																								</plx:right>
																							</plx:binaryOperator>
																						</plx:right>
																					</plx:binaryOperator>
																				</plx:right>
																			</plx:binaryOperator>
																		</plx:right>
																	</plx:binaryOperator>
																</plx:right>
															</plx:binaryOperator>
														</plx:right>
													</plx:binaryOperator>
												</plx:right>
											</plx:binaryOperator>
										</plx:right>
									</plx:binaryOperator>
								</plx:right>
							</plx:binaryOperator>
						</plx:right>
					</plx:binaryOperator>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" name="GetHashCode">
				<plx:returns dataTypeName=".i4" />
				<plx:return>
					<plx:binaryOperator type="bitwiseExclusiveOr">
						<plx:left>
							<plx:callInstance type="methodCall" name="GetHashCode">
								<plx:callObject>
									<plx:callThis accessor="this" type="field" name="_item1" />
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:binaryOperator type="bitwiseExclusiveOr">
								<plx:left>
									<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
										<plx:passParam>
											<plx:callInstance type="methodCall" name="GetHashCode">
												<plx:callObject>
													<plx:callThis accessor="this" type="field" name="_item2" />
												</plx:callObject>
											</plx:callInstance>
										</plx:passParam>
										<plx:passParam>
											<plx:value type="i4" data="1" />
										</plx:passParam>
									</plx:callStatic>
								</plx:left>
								<plx:right>
									<plx:binaryOperator type="bitwiseExclusiveOr">
										<plx:left>
											<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
												<plx:passParam>
													<plx:callInstance type="methodCall" name="GetHashCode">
														<plx:callObject>
															<plx:callThis accessor="this" type="field" name="_item3" />
														</plx:callObject>
													</plx:callInstance>
												</plx:passParam>
												<plx:passParam>
													<plx:value type="i4" data="2" />
												</plx:passParam>
											</plx:callStatic>
										</plx:left>
										<plx:right>
											<plx:binaryOperator type="bitwiseExclusiveOr">
												<plx:left>
													<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
														<plx:passParam>
															<plx:callInstance type="methodCall" name="GetHashCode">
																<plx:callObject>
																	<plx:callThis accessor="this" type="field" name="_item4" />
																</plx:callObject>
															</plx:callInstance>
														</plx:passParam>
														<plx:passParam>
															<plx:value type="i4" data="3" />
														</plx:passParam>
													</plx:callStatic>
												</plx:left>
												<plx:right>
													<plx:binaryOperator type="bitwiseExclusiveOr">
														<plx:left>
															<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
																<plx:passParam>
																	<plx:callInstance type="methodCall" name="GetHashCode">
																		<plx:callObject>
																			<plx:callThis accessor="this" type="field" name="_item5" />
																		</plx:callObject>
																	</plx:callInstance>
																</plx:passParam>
																<plx:passParam>
																	<plx:value type="i4" data="4" />
																</plx:passParam>
															</plx:callStatic>
														</plx:left>
														<plx:right>
															<plx:binaryOperator type="bitwiseExclusiveOr">
																<plx:left>
																	<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
																		<plx:passParam>
																			<plx:callInstance type="methodCall" name="GetHashCode">
																				<plx:callObject>
																					<plx:callThis accessor="this" type="field" name="_item6" />
																				</plx:callObject>
																			</plx:callInstance>
																		</plx:passParam>
																		<plx:passParam>
																			<plx:value type="i4" data="5" />
																		</plx:passParam>
																	</plx:callStatic>
																</plx:left>
																<plx:right>
																	<plx:binaryOperator type="bitwiseExclusiveOr">
																		<plx:left>
																			<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
																				<plx:passParam>
																					<plx:callInstance type="methodCall" name="GetHashCode">
																						<plx:callObject>
																							<plx:callThis accessor="this" type="field" name="_item7" />
																						</plx:callObject>
																					</plx:callInstance>
																				</plx:passParam>
																				<plx:passParam>
																					<plx:value type="i4" data="6" />
																				</plx:passParam>
																			</plx:callStatic>
																		</plx:left>
																		<plx:right>
																			<plx:binaryOperator type="bitwiseExclusiveOr">
																				<plx:left>
																					<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
																						<plx:passParam>
																							<plx:callInstance type="methodCall" name="GetHashCode">
																								<plx:callObject>
																									<plx:callThis accessor="this" type="field" name="_item8" />
																								</plx:callObject>
																							</plx:callInstance>
																						</plx:passParam>
																						<plx:passParam>
																							<plx:value type="i4" data="7" />
																						</plx:passParam>
																					</plx:callStatic>
																				</plx:left>
																				<plx:right>
																					<plx:binaryOperator type="bitwiseExclusiveOr">
																						<plx:left>
																							<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
																								<plx:passParam>
																									<plx:callInstance type="methodCall" name="GetHashCode">
																										<plx:callObject>
																											<plx:callThis accessor="this" type="field" name="_item9" />
																										</plx:callObject>
																									</plx:callInstance>
																								</plx:passParam>
																								<plx:passParam>
																									<plx:value type="i4" data="8" />
																								</plx:passParam>
																							</plx:callStatic>
																						</plx:left>
																						<plx:right>
																							<plx:callStatic type="methodCall" name="RotateRight" dataTypeName="Tuple">
																								<plx:passParam>
																									<plx:callInstance type="methodCall" name="GetHashCode">
																										<plx:callObject>
																											<plx:callThis accessor="this" type="field" name="_item10" />
																										</plx:callObject>
																									</plx:callInstance>
																								</plx:passParam>
																								<plx:passParam>
																									<plx:value type="i4" data="9" />
																								</plx:passParam>
																							</plx:callStatic>
																						</plx:right>
																					</plx:binaryOperator>
																				</plx:right>
																			</plx:binaryOperator>
																		</plx:right>
																	</plx:binaryOperator>
																</plx:right>
															</plx:binaryOperator>
														</plx:right>
													</plx:binaryOperator>
												</plx:right>
											</plx:binaryOperator>
										</plx:right>
									</plx:binaryOperator>
								</plx:right>
							</plx:binaryOperator>
						</plx:right>
					</plx:binaryOperator>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" overload="true" name="ToString">
				<plx:returns dataTypeName=".string" />
				<plx:return>
					<plx:callThis accessor="this" type="methodCall" name="ToString">
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callThis>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" modifier="sealedOverride" overload="true" name="ToString">
				<plx:param name="provider" dataTypeName="IFormatProvider" dataTypeQualifier="System" />
				<plx:returns dataTypeName=".string" />
				<plx:return>
					<plx:callStatic type="methodCall" name="Format" dataTypeName=".string">
						<plx:passParam>
							<plx:nameRef type="parameter" name="provider" />
						</plx:passParam>
						<plx:passParam>
							<plx:string>({1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {10})</plx:string>
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item1" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item2" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item3" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item4" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item5" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item6" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item7" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item8" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item9" />
						</plx:passParam>
						<plx:passParam>
							<plx:callThis accessor="this" type="field" name="_item10" />
						</plx:passParam>
					</plx:callStatic>
				</plx:return>
			</plx:function>
			<plx:operatorFunction type="equality">
				<plx:param type="in" name="tuple1" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
					<plx:passTypeParam dataTypeName="T5" />
					<plx:passTypeParam dataTypeName="T6" />
					<plx:passTypeParam dataTypeName="T7" />
					<plx:passTypeParam dataTypeName="T8" />
					<plx:passTypeParam dataTypeName="T9" />
					<plx:passTypeParam dataTypeName="T10" />
				</plx:param>
				<plx:param type="in" name="tuple2" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
					<plx:passTypeParam dataTypeName="T5" />
					<plx:passTypeParam dataTypeName="T6" />
					<plx:passTypeParam dataTypeName="T7" />
					<plx:passTypeParam dataTypeName="T8" />
					<plx:passTypeParam dataTypeName="T9" />
					<plx:passTypeParam dataTypeName="T10" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:binaryOperator type="booleanOr">
						<plx:left>
							<plx:binaryOperator type="identityEquality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="tuple1" />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="tuple2" />
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:left>
						<plx:right>
							<plx:binaryOperator type="booleanAnd">
								<plx:left>
									<plx:binaryOperator type="identityEquality">
										<plx:left>
											<plx:cast type="exceptionCast" dataTypeName=".object">
												<plx:nameRef type="parameter" name="tuple1" />
											</plx:cast>
										</plx:left>
										<plx:right>
											<plx:nullKeyword />
										</plx:right>
									</plx:binaryOperator>
								</plx:left>
								<plx:right>
									<plx:callInstance type="methodCall" name="Equals">
										<plx:callObject>
											<plx:nameRef type="parameter" name="tuple1" />
										</plx:callObject>
										<plx:passParam>
											<plx:nameRef type="parameter" name="tuple2" />
										</plx:passParam>
									</plx:callInstance>
								</plx:right>
							</plx:binaryOperator>
						</plx:right>
					</plx:binaryOperator>
				</plx:return>
			</plx:operatorFunction>
			<plx:operatorFunction type="inequality">
				<plx:param type="in" name="tuple1" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
					<plx:passTypeParam dataTypeName="T5" />
					<plx:passTypeParam dataTypeName="T6" />
					<plx:passTypeParam dataTypeName="T7" />
					<plx:passTypeParam dataTypeName="T8" />
					<plx:passTypeParam dataTypeName="T9" />
					<plx:passTypeParam dataTypeName="T10" />
				</plx:param>
				<plx:param type="in" name="tuple2" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="T1" />
					<plx:passTypeParam dataTypeName="T2" />
					<plx:passTypeParam dataTypeName="T3" />
					<plx:passTypeParam dataTypeName="T4" />
					<plx:passTypeParam dataTypeName="T5" />
					<plx:passTypeParam dataTypeName="T6" />
					<plx:passTypeParam dataTypeName="T7" />
					<plx:passTypeParam dataTypeName="T8" />
					<plx:passTypeParam dataTypeName="T9" />
					<plx:passTypeParam dataTypeName="T10" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:unaryOperator type="booleanNot">
						<plx:binaryOperator type="equality">
							<plx:left>
								<plx:nameRef type="parameter" name="tuple1" />
							</plx:left>
							<plx:right>
								<plx:nameRef type="parameter" name="tuple2" />
							</plx:right>
						</plx:binaryOperator>
					</plx:unaryOperator>
				</plx:return>
			</plx:operatorFunction>
		</plx:class>
		<plx:pragma type="closeRegion" data="Denary (10-ary) Tuple" />
		<plx:pragma type="closeRegion" data="Tuples" />
		<plx:namespace name="ComponentModel">
			<plx:leadingInfo>
				<plx:pragma type="region" data="Property Change Event Support" />
			</plx:leadingInfo>
			<plx:trailingInfo>
				<plx:pragma type="closeRegion" data="Property Change Event Support" />
			</plx:trailingInfo>
			<plx:class visibility="public" modifier="static" name="EventHandlerUtility">
				<plx:attribute dataTypeName="HostProtectionAttribute" dataTypeQualifier="System.Security.Permissions">
					<plx:passParam>
						<plx:callStatic type="field" name="LinkDemand" dataTypeName="SecurityAction" dataTypeQualifier="System.Security.Permissions" />
					</plx:passParam>
					<plx:passParam>
						<plx:binaryOperator type="assignNamed">
							<plx:left>
								<plx:nameRef type="namedParameter" name="SharedState" />
							</plx:left>
							<plx:right>
								<plx:trueKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:passParam>
				</plx:attribute>
				<plx:function visibility="public" modifier="static" name="InvokeCancelableEventHandler">
					<plx:typeParam name="TEventArgs">
						<plx:typeConstraint dataTypeName="CancelEventArgs" />
					</plx:typeParam>
					<plx:param name="cancelableEventHandler" dataTypeName="EventHandler">
						<plx:passTypeParam dataTypeName="TEventArgs" />
					</plx:param>
					<plx:param name="sender" dataTypeName=".object" />
					<plx:param name="e" dataTypeName="TEventArgs" />
					<plx:returns dataTypeName=".boolean" />
					<plx:branch>
						<plx:condition>
							<plx:binaryOperator type="identityEquality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="cancelableEventHandler" />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:nullKeyword />
								</plx:right>
							</plx:binaryOperator>
						</plx:condition>
						<plx:throw>
							<plx:callNew dataTypeName="ArgumentNullException">
								<plx:passParam>
									<plx:string data="cancelableEventHandler" />
								</plx:passParam>
							</plx:callNew>
						</plx:throw>
					</plx:branch>
					<plx:branch>
						<plx:condition>
							<plx:binaryOperator type="identityEquality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="e" />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:nullKeyword />
								</plx:right>
							</plx:binaryOperator>
						</plx:condition>
						<plx:throw>
							<plx:callNew dataTypeName="ArgumentNullException">
								<plx:passParam>
									<plx:string data="e" />
								</plx:passParam>
							</plx:callNew>
						</plx:throw>
					</plx:branch>
					<plx:local name="invocationList" dataTypeName="Delegate" dataTypeQualifier="System" dataTypeIsSimpleArray="true">
						<plx:initialize>
							<plx:callInstance name="GetInvocationList">
								<plx:callObject>
									<plx:nameRef type="parameter" name="cancelableEventHandler" />
								</plx:callObject>
							</plx:callInstance>
						</plx:initialize>
					</plx:local>
					<plx:loop checkCondition="before">
						<plx:initializeLoop>
							<plx:local name="i" dataTypeName=".i4">
								<plx:initialize>
									<plx:value type="i4" data="0" />
								</plx:initialize>
							</plx:local>
						</plx:initializeLoop>
						<plx:condition>
							<plx:binaryOperator type="booleanAnd">
								<plx:left>
									<plx:binaryOperator type="lessThan">
										<plx:left>
											<plx:nameRef type="local" name="i" />
										</plx:left>
										<plx:right>
											<plx:callInstance type="property" name="Length">
												<plx:callObject>
													<plx:nameRef type="local" name="invocationList" />
												</plx:callObject>
											</plx:callInstance>
										</plx:right>
									</plx:binaryOperator>
								</plx:left>
								<plx:right>
									<plx:unaryOperator type="booleanNot">
										<plx:callInstance type="property" name="Cancel">
											<plx:callObject>
												<plx:nameRef type="parameter" name="e" />
											</plx:callObject>
										</plx:callInstance>
									</plx:unaryOperator>
								</plx:right>
							</plx:binaryOperator>
						</plx:condition>
						<plx:beforeLoop>
							<plx:increment type="post">
								<plx:nameRef type="local" name="i" />
							</plx:increment>
						</plx:beforeLoop>
						<plx:callInstance type="methodCall" name="Invoke">
							<plx:callObject>
								<plx:cast type="exceptionCast" dataTypeName="EventHandler">
									<plx:passTypeParam dataTypeName="TEventArgs" />
									<plx:callInstance type="arrayIndexer" name=".implied">
										<plx:callObject>
											<plx:nameRef type="local" name="invocationList" />
										</plx:callObject>
										<plx:passParam>
											<plx:nameRef type="local" name="i" />
										</plx:passParam>
									</plx:callInstance>
								</plx:cast>
							</plx:callObject>
							<plx:passParam>
								<plx:nameRef type="parameter" name="sender" />
							</plx:passParam>
							<plx:passParam>
								<plx:nameRef type="parameter" name="e" />
							</plx:passParam>
						</plx:callInstance>
					</plx:loop>
					<plx:return>
						<plx:unaryOperator type="booleanNot">
							<plx:callInstance type="property" name="Cancel">
								<plx:callObject>
									<plx:nameRef type="parameter" name="e" />
								</plx:callObject>
							</plx:callInstance>
						</plx:unaryOperator>
					</plx:return>
				</plx:function>
				<plx:function visibility="public" modifier="static" name="InvokeEventHandlerAsync">
					<plx:typeParam name="TEventArgs">
						<plx:typeConstraint dataTypeName="EventArgs" />
					</plx:typeParam>
					<plx:param name="eventHandler" dataTypeName="EventHandler">
						<plx:passTypeParam dataTypeName="TEventArgs" />
					</plx:param>
					<plx:param name="sender" dataTypeName=".object" />
					<plx:param name="e" dataTypeName="TEventArgs" />
					<plx:branch>
						<plx:condition>
							<plx:binaryOperator type="identityEquality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="eventHandler" />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:nullKeyword />
								</plx:right>
							</plx:binaryOperator>
						</plx:condition>
						<plx:throw>
							<plx:callNew dataTypeName="ArgumentNullException">
								<plx:passParam>
									<plx:string data="eventHandler" />
								</plx:passParam>
							</plx:callNew>
						</plx:throw>
					</plx:branch>
					<plx:local name="invocationList" dataTypeName="Delegate" dataTypeQualifier="System" dataTypeIsSimpleArray="true">
						<plx:initialize>
							<plx:callInstance type="methodCall" name="GetInvocationList">
								<plx:callObject>
									<plx:nameRef type="parameter" name="eventHandler" />
								</plx:callObject>
							</plx:callInstance>
						</plx:initialize>
					</plx:local>
					<plx:loop checkCondition="before">
						<plx:initializeLoop>
							<plx:local name="i" dataTypeName=".i4">
								<plx:initialize>
									<plx:value type="i4" data="0" />
								</plx:initialize>
							</plx:local>
						</plx:initializeLoop>
						<plx:condition>
							<plx:binaryOperator type="lessThan">
								<plx:left>
									<plx:nameRef type="local" name="i" />
								</plx:left>
								<plx:right>
									<plx:callInstance type="property" name="Length">
										<plx:callObject>
											<plx:nameRef type="local" name="invocationList" />
										</plx:callObject>
									</plx:callInstance>
								</plx:right>
							</plx:binaryOperator>
						</plx:condition>
						<plx:beforeLoop>
							<plx:increment type="post">
								<plx:nameRef type="local" name="i" />
							</plx:increment>
						</plx:beforeLoop>
						<plx:local name="currentEventHandler" dataTypeName="EventHandler">
							<plx:passTypeParam dataTypeName="TEventArgs" />
							<plx:initialize>
								<plx:cast type="exceptionCast" dataTypeName="EventHandler">
									<plx:passTypeParam dataTypeName="TEventArgs" />
									<plx:callInstance type="arrayIndexer" name=".implied">
										<plx:callObject>
											<plx:nameRef type="local" name="invocationList" />
										</plx:callObject>
										<plx:passParam>
											<plx:nameRef type="local" name="i" />
										</plx:passParam>
									</plx:callInstance>
								</plx:cast>
							</plx:initialize>
						</plx:local>
						<plx:callInstance type="methodCall" name="BeginInvoke">
							<plx:callObject>
								<plx:nameRef type="local" name="currentEventHandler" />
							</plx:callObject>
							<plx:passParam>
								<plx:nameRef type="parameter" name="sender" />
							</plx:passParam>
							<plx:passParam>
								<plx:nameRef type="parameter" name="e" />
							</plx:passParam>
							<plx:passParam>
								<plx:callNew dataTypeName="AsyncCallback">
									<plx:passParam>
										<plx:callInstance type="methodReference" name="EndInvoke">
											<plx:callObject>
												<plx:nameRef type="local" name="currentEventHandler" />
											</plx:callObject>
										</plx:callInstance>
									</plx:passParam>
								</plx:callNew>
							</plx:passParam>
							<plx:passParam>
								<plx:nullKeyword />
							</plx:passParam>
						</plx:callInstance>
					</plx:loop>
				</plx:function>
				<plx:function visibility="public" modifier="static" name="InvokeEventHandlerAsync">
					<plx:typeParam name="TEventArgs">
						<plx:typeConstraint dataTypeName="PropertyChangedEventArgs" />
					</plx:typeParam>
					<plx:param name="eventHandler" dataTypeName="EventHandler">
						<plx:passTypeParam dataTypeName="TEventArgs" />
					</plx:param>
					<plx:param name="sender" dataTypeName=".object" />
					<plx:param name="e" dataTypeName="TEventArgs" />
					<plx:param name="secondaryHandler" dataTypeName="PropertyChangedEventHandler" />
					<plx:callStatic type="methodCall" name="InvokeEventHandlerAsync" dataTypeName="EventHandlerUtility">
						<plx:passMemberTypeParam dataTypeName="TEventArgs" />
						<plx:passParam>
							<plx:nameRef type="parameter" name="eventHandler" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="sender" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="e" />
						</plx:passParam>
					</plx:callStatic>
					<plx:branch>
						<plx:condition>
							<plx:binaryOperator type="identityInequality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="secondaryHandler" />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:nullKeyword />
								</plx:right>
							</plx:binaryOperator>
						</plx:condition>
						<plx:callStatic type="methodCall" name="InvokeEventHandlerAsync" dataTypeName="EventHandlerUtility">
							<plx:passParam>
								<plx:nameRef type="parameter" name="secondaryHandler" />
							</plx:passParam>
							<plx:passParam>
								<plx:nameRef type="parameter" name="sender" />
							</plx:passParam>
							<plx:passParam>
								<plx:nameRef type="parameter" name="e" />
							</plx:passParam>
						</plx:callStatic>
					</plx:branch>
				</plx:function>
				<plx:function visibility="public" modifier="static" name="InvokeEventHandlerAsync">
					<plx:param name="eventHandler" dataTypeName="PropertyChangedEventHandler" />
					<plx:param name="sender" dataTypeName=".object" />
					<plx:param name="e" dataTypeName="PropertyChangedEventArgs" />
					<plx:branch>
						<plx:condition>
							<plx:binaryOperator type="identityEquality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="eventHandler" />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:nullKeyword />
								</plx:right>
							</plx:binaryOperator>
						</plx:condition>
						<plx:throw>
							<plx:callNew dataTypeName="ArgumentNullException">
								<plx:passParam>
									<plx:string data="eventHandler" />
								</plx:passParam>
							</plx:callNew>
						</plx:throw>
					</plx:branch>
					<plx:local name="invocationList" dataTypeName="Delegate" dataTypeQualifier="System" dataTypeIsSimpleArray="true">
						<plx:initialize>
							<plx:callInstance type="methodCall" name="GetInvocationList">
								<plx:callObject>
									<plx:nameRef type="parameter" name="eventHandler" />
								</plx:callObject>
							</plx:callInstance>
						</plx:initialize>
					</plx:local>
					<plx:loop checkCondition="before">
						<plx:initializeLoop>
							<plx:local name="i" dataTypeName=".i4">
								<plx:initialize>
									<plx:value type="i4" data="0" />
								</plx:initialize>
							</plx:local>
						</plx:initializeLoop>
						<plx:condition>
							<plx:binaryOperator type="lessThan">
								<plx:left>
									<plx:nameRef type="local" name="i" />
								</plx:left>
								<plx:right>
									<plx:callInstance type="property" name="Length">
										<plx:callObject>
											<plx:nameRef type="local" name="invocationList" />
										</plx:callObject>
									</plx:callInstance>
								</plx:right>
							</plx:binaryOperator>
						</plx:condition>
						<plx:beforeLoop>
							<plx:increment type="post">
								<plx:nameRef type="local" name="i" />
							</plx:increment>
						</plx:beforeLoop>
						<plx:local name="currentEventHandler" dataTypeName="PropertyChangedEventHandler">
							<plx:initialize>
								<plx:cast type="exceptionCast" dataTypeName="PropertyChangedEventHandler">
									<plx:callInstance type="arrayIndexer" name=".implied">
										<plx:callObject>
											<plx:nameRef type="local" name="invocationList" />
										</plx:callObject>
										<plx:passParam>
											<plx:nameRef type="local" name="i" />
										</plx:passParam>
									</plx:callInstance>
								</plx:cast>
							</plx:initialize>
						</plx:local>
						<plx:callInstance type="methodCall" name="BeginInvoke">
							<plx:callObject>
								<plx:nameRef type="local" name="currentEventHandler" />
							</plx:callObject>
							<plx:passParam>
								<plx:nameRef type="parameter" name="sender" />
							</plx:passParam>
							<plx:passParam>
								<plx:nameRef type="parameter" name="e" />
							</plx:passParam>
							<plx:passParam>
								<plx:callNew dataTypeName="AsyncCallback">
									<plx:passParam>
										<plx:callInstance type="methodReference" name="EndInvoke">
											<plx:callObject>
												<plx:nameRef type="local" name="currentEventHandler" />
											</plx:callObject>
										</plx:callInstance>
									</plx:passParam>
								</plx:callNew>
							</plx:passParam>
							<plx:passParam>
								<plx:nullKeyword />
							</plx:passParam>
						</plx:callInstance>
					</plx:loop>
				</plx:function>
			</plx:class>
			<plx:interface visibility="public" name="IPropertyChangeEventArgs">
				<plx:attribute dataTypeName="SuppressMessageAttribute" dataTypeQualifier="System.Diagnostics.CodeAnalysis">
					<plx:passParam>
						<plx:string data="Microsoft.Naming" />
					</plx:passParam>
					<plx:passParam>
						<plx:string data="CA1711:IdentifiersShouldNotHaveIncorrectSuffix" />
					</plx:passParam>
				</plx:attribute>
				<plx:typeParam name="TClass" />
				<plx:typeParam name="TProperty" />
				<plx:property visibility="public" modifier="abstract" name="Instance">
					<plx:returns dataTypeName="TClass" />
					<plx:get />
				</plx:property>
				<plx:property visibility="public" modifier="abstract" name="PropertyName">
					<plx:returns dataTypeName=".string" />
					<plx:get />
				</plx:property>
				<plx:property visibility="public" modifier="abstract" name="OldValue">
					<plx:returns dataTypeName="TProperty" />
					<plx:get />
				</plx:property>
				<plx:property visibility="public" modifier="abstract" name="NewValue">
					<plx:returns dataTypeName="TProperty" />
					<plx:get />
				</plx:property>
			</plx:interface>
			<plx:class visibility="public" name="PropertyChangingEventArgs">
				<plx:attribute dataTypeName="SerializableAttribute" />
				<plx:attribute dataTypeName="HostProtectionAttribute" dataTypeQualifier="System.Security.Permissions">
					<plx:passParam>
						<plx:callStatic type="field" name="LinkDemand" dataTypeName="SecurityAction" dataTypeQualifier="System.Security.Permissions" />
					</plx:passParam>
					<plx:passParam>
						<plx:binaryOperator type="assignNamed">
							<plx:left>
								<plx:nameRef type="namedParameter" name="SharedState" />
							</plx:left>
							<plx:right>
								<plx:trueKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:passParam>
				</plx:attribute>
				<plx:attribute dataTypeName="StructLayoutAttribute" dataTypeQualifier="System.Runtime.InteropServices">
					<plx:passParam>
						<plx:callStatic type="field" name="Auto" dataTypeName="LayoutKind" dataTypeQualifier="System.Runtime.InteropServices" />
					</plx:passParam>
					<plx:passParam>
						<plx:binaryOperator type="assignNamed">
							<plx:left>
								<plx:nameRef type="namedParameter" name="CharSet" />
							</plx:left>
							<plx:right>
								<plx:callStatic type="field" name="Auto" dataTypeName="CharSet" dataTypeQualifier="System.Runtime.InteropServices" />
							</plx:right>
						</plx:binaryOperator>
					</plx:passParam>
				</plx:attribute>
				<plx:typeParam name="TClass" />
				<plx:typeParam name="TProperty" />
				<plx:derivesFromClass dataTypeName="CancelEventArgs" />
				<plx:implementsInterface dataTypeName="IPropertyChangeEventArgs">
					<plx:passTypeParam dataTypeName="TClass" />
					<plx:passTypeParam dataTypeName="TProperty" />
				</plx:implementsInterface>
				<plx:field visibility="private" readOnly="true" name="_instance" dataTypeName="TClass" />
				<plx:field visibility="private" readOnly="true" name="_propertyName" dataTypeName=".string" />
				<plx:field visibility="private" readOnly="true" name="_oldValue" dataTypeName="TProperty" />
				<plx:field visibility="private" readOnly="true" name="_newValue" dataTypeName="TProperty" />
				<plx:function visibility="public" name=".construct">
					<plx:param name="instance" dataTypeName="TClass" />
					<plx:param name="propertyName" dataTypeName=".string" />
					<plx:param name="oldValue" dataTypeName="TProperty" />
					<plx:param name="newValue" dataTypeName="TProperty" />
					<plx:branch>
						<plx:condition>
							<plx:binaryOperator type="identityEquality">
								<plx:left>
									<plx:nameRef type="parameter" name="instance" />
								</plx:left>
								<plx:right>
									<plx:nullKeyword />
								</plx:right>
							</plx:binaryOperator>
						</plx:condition>
						<plx:throw>
							<plx:callNew dataTypeName="ArgumentNullException">
								<plx:passParam>
									<plx:string data="instance" />
								</plx:passParam>
							</plx:callNew>
						</plx:throw>
					</plx:branch>
					<plx:branch>
						<plx:condition>
							<plx:callStatic type="methodCall" name="IsNullOrEmpty" dataTypeName=".string">
								<plx:passParam>
									<plx:nameRef type="parameter" name="propertyName" />
								</plx:passParam>
							</plx:callStatic>
						</plx:condition>
						<plx:throw>
							<plx:callNew dataTypeName="ArgumentNullException">
								<plx:passParam>
									<plx:string data="propertyName" />
								</plx:passParam>
							</plx:callNew>
						</plx:throw>
					</plx:branch>
					<plx:assign>
						<plx:left>
							<plx:callThis accessor="this" type="field" name="_instance" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="instance" />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis accessor="this" type="field" name="_propertyName" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="propertyName" />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis accessor="this" type="field" name="_oldValue" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="oldValue" />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis accessor="this" type="field" name="_newValue" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="newValue" />
						</plx:right>
					</plx:assign>
				</plx:function>
				<plx:property visibility="public" name="Instance">
					<plx:interfaceMember memberName="Instance" dataTypeName="IPropertyChangeEventArgs">
						<plx:passTypeParam dataTypeName="TClass" />
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:interfaceMember>
					<plx:returns dataTypeName="TClass" />
					<plx:get>
						<plx:return>
							<plx:callThis accessor="this" type="field" name="_instance" />
						</plx:return>
					</plx:get>
				</plx:property>
				<plx:property visibility="public" name="PropertyName">
					<plx:interfaceMember memberName="PropertyName" dataTypeName="IPropertyChangeEventArgs">
						<plx:passTypeParam dataTypeName="TClass" />
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:interfaceMember>
					<plx:returns dataTypeName=".string" />
					<plx:get>
						<plx:return>
							<plx:callThis accessor="this" type="field" name="_propertyName" />
						</plx:return>
					</plx:get>
				</plx:property>
				<plx:property visibility="public" name="OldValue">
					<plx:interfaceMember memberName="OldValue" dataTypeName="IPropertyChangeEventArgs">
						<plx:passTypeParam dataTypeName="TClass" />
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:interfaceMember>
					<plx:returns dataTypeName="TProperty" />
					<plx:get>
						<plx:return>
							<plx:callThis accessor="this" type="field" name="_oldValue" />
						</plx:return>
					</plx:get>
				</plx:property>
				<plx:property visibility="public" name="NewValue">
					<plx:interfaceMember memberName="NewValue" dataTypeName="IPropertyChangeEventArgs">
						<plx:passTypeParam dataTypeName="TClass" />
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:interfaceMember>
					<plx:returns dataTypeName="TProperty" />
					<plx:get>
						<plx:return>
							<plx:callThis accessor="this" type="field" name="_newValue" />
						</plx:return>
					</plx:get>
				</plx:property>
			</plx:class>
			<plx:class visibility="public" name="PropertyChangedEventArgs">
				<plx:attribute dataTypeName="SerializableAttribute" />
				<plx:attribute dataTypeName="HostProtectionAttribute" dataTypeQualifier="System.Security.Permissions">
					<plx:passParam>
						<plx:callStatic type="field" name="LinkDemand" dataTypeName="SecurityAction" dataTypeQualifier="System.Security.Permissions" />
					</plx:passParam>
					<plx:passParam>
						<plx:binaryOperator type="assignNamed">
							<plx:left>
								<plx:nameRef type="namedParameter" name="SharedState" />
							</plx:left>
							<plx:right>
								<plx:trueKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:passParam>
				</plx:attribute>
				<plx:attribute dataTypeName="StructLayoutAttribute" dataTypeQualifier="System.Runtime.InteropServices">
					<plx:passParam>
						<plx:callStatic type="field" name="Auto" dataTypeName="LayoutKind" dataTypeQualifier="System.Runtime.InteropServices" />
					</plx:passParam>
					<plx:passParam>
						<plx:binaryOperator type="assignNamed">
							<plx:left>
								<plx:nameRef type="namedParameter" name="CharSet" />
							</plx:left>
							<plx:right>
								<plx:callStatic type="field" name="Auto" dataTypeName="CharSet" dataTypeQualifier="System.Runtime.InteropServices" />
							</plx:right>
						</plx:binaryOperator>
					</plx:passParam>
				</plx:attribute>
				<plx:typeParam name="TClass" />
				<plx:typeParam name="TProperty" />
				<plx:derivesFromClass dataTypeName="PropertyChangedEventArgs" />
				<plx:implementsInterface dataTypeName="IPropertyChangeEventArgs">
					<plx:passTypeParam dataTypeName="TClass" />
					<plx:passTypeParam dataTypeName="TProperty" />
				</plx:implementsInterface>
				<plx:field visibility="private" readOnly="true" name="_instance" dataTypeName="TClass" />
				<plx:field visibility="private" readOnly="true" name="_oldValue" dataTypeName="TProperty" />
				<plx:field visibility="private" readOnly="true" name="_newValue" dataTypeName="TProperty" />
				<plx:function visibility="public" name=".construct">
					<plx:param name="instance" dataTypeName="TClass" />
					<plx:param name="propertyName" dataTypeName=".string" />
					<plx:param name="oldValue" dataTypeName="TProperty" />
					<plx:param name="newValue" dataTypeName="TProperty" />
					<plx:initialize>
						<plx:callThis accessor="base" type="methodCall" name=".implied">
							<plx:passParam>
								<plx:nameRef type="parameter" name="propertyName" />
							</plx:passParam>
						</plx:callThis>
					</plx:initialize>
					<plx:branch>
						<plx:condition>
							<plx:binaryOperator type="identityEquality">
								<plx:left>
									<plx:nameRef type="parameter" name="instance" />
								</plx:left>
								<plx:right>
									<plx:nullKeyword />
								</plx:right>
							</plx:binaryOperator>
						</plx:condition>
						<plx:throw>
							<plx:callNew dataTypeName="ArgumentNullException">
								<plx:passParam>
									<plx:string data="instance" />
								</plx:passParam>
							</plx:callNew>
						</plx:throw>
					</plx:branch>
					<plx:branch>
						<plx:condition>
							<plx:callStatic type="methodCall" name="IsNullOrEmpty" dataTypeName=".string">
								<plx:passParam>
									<plx:nameRef type="parameter" name="propertyName" />
								</plx:passParam>
							</plx:callStatic>
						</plx:condition>
						<plx:throw>
							<plx:callNew dataTypeName="ArgumentNullException">
								<plx:passParam>
									<plx:string data="propertyName" />
								</plx:passParam>
							</plx:callNew>
						</plx:throw>
					</plx:branch>
					<plx:assign>
						<plx:left>
							<plx:callThis accessor="this" type="field" name="_instance" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="instance" />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis accessor="this" type="field" name="_oldValue" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="oldValue" />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis accessor="this" type="field" name="_newValue" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="newValue" />
						</plx:right>
					</plx:assign>
				</plx:function>
				<plx:property visibility="public" name="Instance">
					<plx:interfaceMember memberName="Instance" dataTypeName="IPropertyChangeEventArgs">
						<plx:passTypeParam dataTypeName="TClass" />
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:interfaceMember>
					<plx:returns dataTypeName="TClass" />
					<plx:get>
						<plx:return>
							<plx:callThis accessor="this" type="field" name="_instance" />
						</plx:return>
					</plx:get>
				</plx:property>
				<plx:property visibility="public" modifier="sealedOverride" name="PropertyName">
					<plx:interfaceMember memberName="PropertyName" dataTypeName="IPropertyChangeEventArgs">
						<plx:passTypeParam dataTypeName="TClass" />
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:interfaceMember>
					<plx:returns dataTypeName=".string" />
					<plx:get>
						<plx:return>
							<plx:callThis accessor="base" type="property" name="PropertyName" />
						</plx:return>
					</plx:get>
				</plx:property>
				<plx:property visibility="public" name="OldValue">
					<plx:interfaceMember memberName="OldValue" dataTypeName="IPropertyChangeEventArgs">
						<plx:passTypeParam dataTypeName="TClass" />
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:interfaceMember>
					<plx:returns dataTypeName="TProperty" />
					<plx:get>
						<plx:return>
							<plx:callThis accessor="this" type="field" name="_oldValue" />
						</plx:return>
					</plx:get>
				</plx:property>
				<plx:property visibility="public" name="NewValue">
					<plx:interfaceMember memberName="NewValue" dataTypeName="IPropertyChangeEventArgs">
						<plx:passTypeParam dataTypeName="TClass" />
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:interfaceMember>
					<plx:returns dataTypeName="TProperty" />
					<plx:get>
						<plx:return>
							<plx:callThis accessor="this" type="field" name="_newValue" />
						</plx:return>
					</plx:get>
				</plx:property>
			</plx:class>
		</plx:namespace>
	</plx:namespace>
</plx:root>