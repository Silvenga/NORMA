<?xml version="1.0" encoding="utf-8"?>
<xs:schema
	targetNamespace="http://schemas.neumont.edu/ORM/2006-01/OIALModel"
	xmlns="http://schemas.neumont.edu/ORM/2006-01/OIALModel"
	xmlns:ORM2="http://schemas.neumont.edu/ORM/2006-04/ORMCore"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	elementFormDefault="qualified"
	attributeFormDefault="unqualified"
	version="1.0">
	<xs:annotation>
		<xs:appinfo source="zlib/libpng License Copyright Notice">
			Copyright Â© Neumont University. All rights reserved.

			This software is provided 'as-is', without any express or implied warranty. In no event will the authors be held liable for any damages arising from the use of this software.
			Permission is granted to anyone to use this software for any purpose, including commercial applications, and to alter it and redistribute it freely, subject to the following restrictions:
			1. The origin of this software must not be misrepresented; you must not claim that you wrote the original software. If you use this software in a product, an acknowledgment in the product documentation would be appreciated but is not required.
			2. Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software.
			3. This notice may not be removed or altered from any source distribution.
		</xs:appinfo>
	</xs:annotation>
	<xs:annotation>
		<xs:documentation>WARNING: This schema is temporary, and will eventually be replaced with the http://schemas.orm.net/OIAL schema.</xs:documentation>
	</xs:annotation>

	<xs:import namespace="http://schemas.neumont.edu/ORM/2006-04/ORMCore" />

	<xs:element name="Model" type="ModelType" />

	<xs:complexType name="ModelType">
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:element name="ORMModel" type="RefType" />
			<xs:element minOccurs="0" name="ChildSequenceConstraints" type="ChildSequenceConstraintsType" />
			<xs:element minOccurs="0" name="InformationTypeFormats" type="InformationTypeFormatsType" />
			<xs:element minOccurs="0" name="ConceptTypes" type="ConceptTypesType" />
		</xs:sequence>
		<xs:attributeGroup ref="Id_Name_Group" />
	</xs:complexType>

	<xs:complexType name="ChildSequenceConstraintsType">
		<!-- TODO: Add more constraint types here once we have accounted for them in the Live OIAL model. -->
		<xs:choice maxOccurs="unbounded">
			<xs:element name="ChildSequenceUniquenessConstraint" type="ChildSequenceUniquenessConstraintType" />
			<xs:element name="RingConstraint" type="MinTwoChildrenChildSequenceConstraintType" />
			<xs:element name="ChildSequenceFrequencyConstraint" type="MinTwoChildrenChildSequenceConstraintType" />
			<xs:element name="DisjunctiveMandatoryConstraint" type="MinTwoChildrenChildSequenceConstraintType" />
			<xs:element name="SubsetConstraint" type="SubsetConstraintType" />
			<xs:element name="ExclusionConstraint" type="ExclusionConstraintType" />
			<xs:element name="EqualityConstraint" type="EqualityConstraintType" />
		</xs:choice>
	</xs:complexType>

	<xs:complexType name="MinTwoChildrenChildSequenceConstraintType">
		<xs:sequence>
			<xs:element name="ChildSequence" type="ChildSequenceType" />
		</xs:sequence>
		<xs:attributeGroup ref="Id_Name_Group" />
		<xs:attribute name="Modality" type="ORM2:ConstraintModality" />
	</xs:complexType>
	
	<xs:complexType name="ChildSequenceUniquenessConstraintType">
		<xs:complexContent>
			<xs:extension base="MinTwoChildrenChildSequenceConstraintType">
				<xs:attribute name="IsPreferred" type="xs:boolean" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="SubsetConstraintType">
		<xs:sequence>
			<xs:element name="SubChildSequence" type="TwoOrMoreChildSequenceType" />
			<xs:element name="SuperChildSequence" type="TwoOrMoreChildSequenceType" />
		</xs:sequence>
		<xs:attributeGroup ref="Id_Name_Group" />
		<xs:attribute name="Modality" type="ORM2:ConstraintModality" />
	</xs:complexType>

	<xs:complexType name="ExclusionConstraintType">
		<xs:sequence>
			<xs:element name ="ChildSequence" type="TwoOrMoreChildSequenceType" />
		</xs:sequence>
		<xs:attributeGroup ref="Id_Name_Group" />
		<xs:attribute name="Modality" type="ORM2:ConstraintModality" />
	</xs:complexType>

	<xs:complexType name="EqualityConstraintType">
		<xs:sequence>
			<xs:element name ="ChildSequence" type="TwoOrMoreChildSequenceType" />
		</xs:sequence>
		<xs:attributeGroup ref="Id_Name_Group" />
		<xs:attribute name="Modality" type="ORM2:ConstraintModality" />
	</xs:complexType>

	<xs:complexType name="TwoOrMoreChildSequenceType">
		<xs:sequence maxOccurs="unbounded">
			<xs:element name="ChildSequence" type="ChildSequenceHasChildSequenceType" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="ChildSequenceHasChildSequenceType">
		<xs:sequence maxOccurs="unbounded">
			<xs:element name="ConceptTypeChild" type="RefType" />
		</xs:sequence>
		<xs:attributeGroup ref="Id_Name_Group" />
	</xs:complexType>

	<xs:complexType name="ChildSequenceType">
		<xs:sequence>
			<xs:element name="MinTwoChildrenChildSequence" type="MinTwoChildrenChildSequenceType" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="MinTwoChildrenChildSequenceType">
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<!-- TODO: Change this back to RefType once serialization is more solid -->
			<xs:element name="ConceptTypeChild" type="RefType" />
		</xs:sequence>
		<xs:attributeGroup ref="Id_Name_Group" />
	</xs:complexType>
	
	<xs:complexType name="InformationTypeFormatsType">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="InformationTypeFormat" type="InformationTypeFormatType" />
		</xs:choice>
	</xs:complexType>

	<xs:complexType name="InformationTypeFormatType">
		<xs:sequence>
			<xs:sequence>
				<xs:element minOccurs="0" name="ValueType" type="RefType" />
			</xs:sequence>
		</xs:sequence>
		<xs:attributeGroup ref="Id_Name_Group" />
	</xs:complexType>

	<xs:complexType name="ConceptTypesType">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="ConceptType" type="ConceptTypeType" />
		</xs:choice>
	</xs:complexType>

	<xs:complexType name="ConceptTypeType">
		<xs:all>
			<xs:element name="ObjectType" type="RefType" />
			<xs:element minOccurs="0" name="ContainedTypes" type="ContainedTypesType" />
			<xs:element minOccurs="0" name="ConceptTypeLink" type="ConceptTypeLinkType" />
		</xs:all>
		<xs:attributeGroup ref="Id_Name_Group" />
	</xs:complexType>

	<xs:complexType name="ContainedTypesType">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="InformationType" type="ConceptTypeChildType" />
			<xs:element name="ReferencedConceptType" type="ReferencedConceptTypeType" />
			<xs:element name="ConceptType" type="ConceptTypeType" />
		</xs:choice>
		<xs:attributeGroup ref="Id_Name_Group" />
	</xs:complexType>

	<xs:complexType name="ConceptTypeChildType">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="SingleChildConstraints" type="SingleChildConstraintsType" />
			<xs:element name="PathRoles" type="ORM2:PlayedRoles" />
		</xs:choice>
		<xs:attribute name="id" type="xs:ID" />
		<xs:attribute name="ref" type="xs:IDREF" />
		<xs:attribute name="Mandatory" type="ORM2:ConstraintModality" />
		<xs:attribute name="Name" type="xs:string" />
	</xs:complexType>

	<xs:complexType name="ReferencedConceptTypeType">
		<xs:complexContent>
			<xs:extension base="ConceptTypeChildType">
				<xs:attribute name="OppositeName" type="xs:string" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="ConceptTypeLinkType">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="PathRoles" type="ORM2:PlayedRoles" />
		</xs:choice>
		<xs:attributeGroup ref="Id_Name_Group" />
	</xs:complexType>

	<!--<xs:complexType name="InformationTypeType">
		<xs:all>
			<xs:element name="InformationTypeFormat" type="RefType" />
			<xs:element name="InformationTypeLink" type="InformationTypeLinkType" />
		</xs:all>
		<xs:attributeGroup ref="Id_Name_Group" />
	</xs:complexType>-->

	<xs:complexType name="InformationTypeLinkType">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="SingleChildConstraints" type="SingleChildConstraintsType" />
			<xs:element name="PathRoles" type="ORM2:PlayedRoles" />
		</xs:choice>
		<xs:attribute name="id" type="xs:ID" />
		<xs:attribute name="ref" type="xs:IDREF" />
		<xs:attribute name="Mandatory" type="ORM2:ConstraintModality" />
	</xs:complexType>

	<xs:complexType name="SingleChildConstraintsType">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="SingleChildUniquenessConstraint" type="SingleChildUniquenessConstraintType" />
			<xs:element name="SingleChildFrequencyConstraint" type="SingleChildConstraintType" />
			<xs:element name="ValueConstraint" type="SingleChildConstraintType"/>
		</xs:choice>
	</xs:complexType>

	<xs:complexType name="SingleChildConstraintType">
		<xs:attributeGroup ref="Id_Name_Group" />
		<xs:attribute name="Modality" type="ORM2:ConstraintModality" />
	</xs:complexType>
	
	<xs:complexType name="SingleChildUniquenessConstraintType">
		<xs:complexContent>
			<xs:extension base="SingleChildConstraintType">
				<xs:attribute name="IsPreferred" type="xs:boolean" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="RefType">
		<xs:attribute name="ref" type="xs:IDREF" />
	</xs:complexType>

	<xs:attributeGroup name="Id_Name_Group">
		<xs:attribute name="id" type="xs:ID" />
		<xs:attribute name="Name" type="xs:string" />
	</xs:attributeGroup>

</xs:schema>