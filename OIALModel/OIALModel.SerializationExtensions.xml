<?xml version="1.0" encoding="utf-8"?>
<se:CustomSerializedElements
	xmlns:se="http://schemas.neumont.edu/ORM/SDK/SerializationExtensions"
	xmlns:plx="http://schemas.neumont.edu/CodeGeneration/PLiX">
	<se:Copyright name="Common Public License Copyright Notice">
		<se:CopyrightLine>/**************************************************************************\</se:CopyrightLine>
		<se:CopyrightLine>* Neumont Object-Role Modeling Architect for Visual Studio                 *</se:CopyrightLine>
		<se:CopyrightLine>*                                                                          *</se:CopyrightLine>
		<se:CopyrightLine>* Copyright © Neumont University. All rights reserved.                     *</se:CopyrightLine>
		<se:CopyrightLine>*                                                                          *</se:CopyrightLine>
		<se:CopyrightLine>* The use and distribution terms for this software are covered by the      *</se:CopyrightLine>
		<se:CopyrightLine>* Common Public License 1.0 (http://opensource.org/licenses/cpl) which     *</se:CopyrightLine>
		<se:CopyrightLine>* can be found in the file CPL.txt at the root of this distribution.       *</se:CopyrightLine>
		<se:CopyrightLine>* By using this software in any fashion, you are agreeing to be bound by   *</se:CopyrightLine>
		<se:CopyrightLine>* the terms of this license.                                               *</se:CopyrightLine>
		<se:CopyrightLine>*                                                                          *</se:CopyrightLine>
		<se:CopyrightLine>* You must not remove this notice, or any other, from this software.       *</se:CopyrightLine>
		<se:CopyrightLine>\**************************************************************************/</se:CopyrightLine>
	</se:Copyright>
	<se:DomainModel Class="OIALDomainModel">
		<se:Namespaces>
			<se:Namespace Prefix="oial" URI="http://schemas.neumont.edu/ORM/2006-01/OIALModel" SchemaFile="OIALModel.xsd" DefaultPrefix="true"/>
		</se:Namespaces>
		<se:RootElements>
			<se:RootElement Class="OIALModel" Name="Model"/>
		</se:RootElements>
		<se:OmittedDomainElements>
			<se:OmitRelationship Class="ChildSequenceConstraintHasChildSequence"/>
		</se:OmittedDomainElements>
	</se:DomainModel>
	<!-- OIALModel -->
	<se:Element Class="OIALModel" Name="Model" Override="false" SortChildElements="true">
		<se:Link Name="ORMModel" RelationshipName="OIALModelHasORMModel" RoleName="ORMModel"/>
		<se:ChildElement Name="ChildSequenceConstraints">
			<se:Link RelationshipName="OIALModelHasChildSequenceConstraint" RoleName="ChildSequenceConstraint"/>
		</se:ChildElement>
		<se:ChildElement Name="InformationTypeFormats">
			<se:Link RelationshipName="OIALHasInformationTypeFormat" RoleName="InformationTypeFormat"/>
		</se:ChildElement>
		<se:ChildElement Name="ConceptTypes">
			<se:Link RelationshipName="OIALModelHasConceptType" RoleName="ConceptType"/>
		</se:ChildElement>
	</se:Element>
	<!-- ChildSequenceConstraints and ChildSequences -->
	<se:Element Class="ChildSequenceConstraint">
		<se:Link RelationshipName="ChildHasSingleChildConstraint" RoleName="ConceptTypeChild" WriteStyle="NotWritten"/>
		<se:ChildElement Name="ChildSequence">
			<se:Link RelationshipName="SingleChildSequenceConstraintHasMinTwoChildrenChildSequence" RoleName="ChildSequence"/>
		</se:ChildElement>
	</se:Element>
	<se:Element Class="ChildSequence">
		<se:Link Name="ConceptTypeChild" RelationshipName="ChildSequenceHasConceptTypeChild" RoleName="ConceptTypeChild"/>
	</se:Element>
	<se:Element Class="ExclusionConstraint">
		<se:ChildElement Name="ChildSequence">
			<se:Link RelationshipName="TwoOrMoreChildSequenceConstraintHasChildSequence" RoleName="ChildSequence"/>
		</se:ChildElement>
	</se:Element>
	<se:Element Class="SubsetConstraint">
		<se:ChildElement Name="SubChildSequence">
			<se:Link RelationshipName="SubsetConstraintHasSubChildSequence" RoleName="SubChildSequence"/>
		</se:ChildElement>
		<se:ChildElement Name="SuperChildSequence">
			<se:Link RelationshipName="SubsetConstraintHasSuperChildSequence" RoleName="SuperChildSequence"/>
		</se:ChildElement>
	</se:Element>
	<se:Element Class="EqualityConstraint">
		<se:ChildElement Name="ChildSequence">
			<se:Link RelationshipName="TwoOrMoreChildSequenceConstraintHasChildSequence" RoleName="ChildSequence"/>
		</se:ChildElement>
	</se:Element>
	<!-- InformationTypeFormats -->
	<se:Element Class="InformationTypeFormat">
		<!--<se:Link RelationshipName="InformationTypeHasInformationTypeFormat" RoleName="InformationType" WriteStyle="NotWritten"/>-->
		<se:Link Name="ValueType" RelationshipName="InformationTypeFormatHasObjectType" RoleName="ValueType"/>
		<se:Link Name="ConceptType" RelationshipName="InformationType" RoleName="ConceptType" WriteStyle="NotWritten"/>
		<se:Link Name="ConceptTypeChild" RelationshipName="ConceptTypeChild" RoleName="Parent" WriteStyle="NotWritten"/>
	</se:Element>
	<!-- Concept Types -->
	<se:Element Class="ConceptType" SortChildElements="true">
		<se:Link Name="ObjectType" RelationshipName="ConceptTypeHasObjectType" RoleName="ObjectType"/>
		<se:ChildElement Name="ContainedTypes" SortChildElements="false">
			<se:Link RelationshipName="InformationType" RoleName="InformationTypeFormat"/>
			<se:Link RelationshipName="ConceptTypeAbsorbedConceptType" RoleName="AbsorbedConceptType"/>
			<se:Link RelationshipName="ConceptTypeRef" RoleName="ReferencedConceptType"/>
		</se:ChildElement>
		<se:Link Name="ConceptTypeLink" RelationshipName="ConceptTypeAbsorbedConceptType" RoleName="AbsorbingConceptType" WriteStyle="EmbeddingLinkElement"/>
		<se:Link RelationshipName="ConceptTypeRef" RoleName="ReferencedConceptType" Name="ReferencedConceptType" WriteStyle="PrimaryLinkElement" />
		<se:Link RelationshipName="InformationType" RoleName="InformationTypeFormat" Name="InformationType" WriteStyle="PrimaryLinkElement" />
		<se:Link RelationshipName="ConceptTypeRef" RoleName="ReferencingConceptType" WriteStyle="NotWritten"/>
		<se:Link Name="Parent" RelationshipName="ConceptTypeChild" RoleName="Parent" WriteStyle="NotWritten"/>
		<se:Link Name="Target" RelationshipName="ConceptTypeChild" RoleName="Target" WriteStyle="NotWritten"/>
	</se:Element>
	<!-- InformationTypes -->
	<!--<se:Element Class="InformationType">
		<se:Link Name="InformationTypeFormat" RelationshipName="InformationType" RoleName="InformationTypeFormat"/>
		<se:Link Name="InformationTypeLink" RelationshipName="InformationType" RoleName="ConceptType" WriteStyle="EmbeddingLinkElement"/>
		<se:Link Name="Parent" RelationshipName="ConceptTypeChild" RoleName="Parent" WriteStyle="NotWritten"/>
	</se:Element>-->
	<!-- ConceptTypeChild -->
	<se:Element Class="ConceptTypeChild">
		<!-- We write the value of the Mandatory property if and only if it is not "NotMandatory" -->
		<se:Attribute ID="Mandatory" Name="Mandatory">
			<se:Condition WriteStyle="NotWritten">
				<plx:binaryOperator type="equality">
					<plx:left>
						<plx:callThis name="Mandatory" type="property"/>
					</plx:left>
					<plx:right>
						<plx:callStatic type="field" dataTypeName="MandatoryConstraintModality" name="NotMandatory"/>
					</plx:right>
				</plx:binaryOperator>
			</se:Condition>
		</se:Attribute>
		<se:ChildElement Name="SingleChildConstraints">
			<se:Link RelationshipName="ChildHasSingleChildConstraint" RoleName="SingleChildConstraint"/>
		</se:ChildElement>
		<se:ChildElement Name="PathRoles">
			<se:Link RelationshipName="ConceptTypeChildHasPathRole" RoleName="PathRole"/>
		</se:ChildElement>
		<se:Link RelationshipName="ChildSequenceHasConceptTypeChild" RoleName="ChildSequence" WriteStyle="NotWritten"/>
		<se:Link RelationshipName="ConceptTypeChildHasPathRole" RoleName="PathRole" Name="Role" Prefix="orm"/>
	</se:Element>
</se:CustomSerializedElements>