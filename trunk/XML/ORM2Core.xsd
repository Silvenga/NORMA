<?xml version="1.0" encoding="utf-8"?>
<!-- Todo: Is external on object type?  What am I supposed to do with object shapes and data types? -->
<xs:schema targetNamespace="http://schemas.northface.edu/orm/ormcore" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns="http://schemas.northface.edu/orm/ormcore" xmlns:mstns="http://tempur.org/XMLSchema.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:derived="http://www.w3.org/2001/XMLSchema">
    <!--xmlns:derived="http://schemas.northface.edu/orm/ormcorederived"-->
    <!--ExtendableElement the thought here is to define all the any's once and then have Extendable Element extend this-->
    <xs:complexType name="ExtendableElement" abstract="true">
        <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:anyAttribute namespace="##other" processContents="lax" />
    </xs:complexType>
    <!--ExtendableElement-->
    <!--ORMModel-->
    <xs:element name="ORMModel" type="ORMModel" />
    <xs:complexType name="ORMModel">
        <xs:complexContent>
            <xs:extension base="ExtendableElement">
                <xs:sequence minOccurs="0" maxOccurs="unbounded">
                    <xs:element name="Objects" type="Objects" minOccurs="0" maxOccurs="1" />
                    <xs:element name="Facts" type="Facts" minOccurs="0" maxOccurs="1" />
                    <xs:element name="ExternalConstraints" type="ExternalConstraints" minOccurs="0" maxOccurs="1" />
                    <xs:element name="DataTypes" type="DataTypes" minOccurs="0" maxOccurs="1" />
                    <xs:element name="CustomReferenceModes" type="CustomReferenceModes" minOccurs="0" maxOccurs="1" />
                    <xs:element name="ModelErrors" type="ModelErrors" minOccurs="0" maxOccurs="1" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--End ORMModel-->
    <!--Objects and Object Types-->
    <!--ObjectRef and  ObjectRefs define references to constrains and collections of constraints-->
    <xs:complexType name="ObjectRefs">
        <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element name="ObjectRef" type="ObjectRef" minOccurs="1" maxOccurs="1" />
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="ObjectRef">
        <xs:restriction base="xs:IDREF" />
    </xs:simpleType>
    <!--end ObjectRef and  ObjectRefs-->
    <xs:complexType name="Objects">
        <xs:complexContent>
            <xs:extension base="ExtendableElement">
                <xs:sequence minOccurs="0" maxOccurs="unbounded">
                    <xs:element name="EntityType" type="EntityType" minOccurs="0" maxOccurs="unbounded" />
                    <xs:element name="ValueType" type="ValueType" minOccurs="0" maxOccurs="unbounded" />
                    <xs:element name="ObjectifiedType" type="ObjectifiedType" minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ObjectType" abstract="true">
        <xs:complexContent>
            <xs:extension base="ExtendableElement">
                <xs:sequence>
                    <xs:element name="ObjectNotes" type="Data" minOccurs="0" maxOccurs="1" />
                    <xs:element name="PlayedRoles" type="RoleSequence" minOccurs="0" maxOccurs="unbounded" />
                    <!--Subtypes is derived.-->
                    <xs:element name="Subtypes" type="ObjectRefs" minOccurs="0" maxOccurs="unbounded" />
                    <!--Supertypes is derived.-->
                    <xs:element name="Supertypes" type="ObjectRefs" minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
                <xs:attribute name="Name" use="required" type="xs:string" />
                <xs:attribute name="id" use="required" type="xs:ID" />
                <xs:attribute name="IsIndependent" type="xs:boolean" default="false" />
                <xs:attribute name="IsExternal" type="xs:boolean" default="false" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="EntityType">
        <xs:complexContent>
            <xs:extension base="ObjectType">
                <!--ReferenceMode is derived.-->
                <xs:sequence>
                    <xs:element name="ReferenceMode" type="xs:string" minOccurs="0" maxOccurs="1" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--The fact that an object is an ObjectifiedType is derrived.-->
    <xs:complexType name="ObjectifiedType">
        <xs:complexContent>
            <xs:extension base="ObjectType">
                <xs:sequence>
                    <xs:element name="NestedPredicate" type="FactRef" minOccurs="1" maxOccurs="1" />
                </xs:sequence>
                <xs:attribute name="Name" use="required" type="xs:string" />
                <xs:attribute name="id" use="required" type="xs:ID" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--The fact that an object is a valuetype is derrived-->
    <xs:complexType name="ValueType">
        <xs:complexContent>
            <xs:extension base="ObjectType">
                <xs:sequence>
                    <xs:element name="ConceptualDataType" type="DataTypeRef" minOccurs="0" maxOccurs="1" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--End Objects and Object Types-->
        <!--DataType -->
    <!--DataTypeRef indicates a reference to a datatype -->
    <xs:simpleType name="DataTypeRef">
        <xs:restriction base="xs:IDREF" />
    </xs:simpleType>
    <!--end DataTypeRef-->
    <xs:complexType name="DataTypes">
        <xs:sequence minOccurs ="0" maxOccurs ="unbounded">
            <xs:element name ="DataType" type ="DataType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="DataType">
        <xs:complexContent>
            <xs:extension base="ExtendableElement">
                <xs:attribute name="id" type="xs:ID" use="required" />
                <xs:attribute name="Type" type="DataTypeEnum" use="required" />
                <xs:attribute name="Scale" type="xs:int" />
                <xs:attribute name="Length" type="xs:int" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:simpleType name="DataTypeEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="byte" />
            <xs:enumeration value="date" />
            <xs:enumeration value="dateTime" />
            <xs:enumeration value="decimal" />
            <xs:enumeration value="double" />
            <xs:enumeration value="duration" />
            <xs:enumeration value="float" />
            <xs:enumeration value="int" />
            <xs:enumeration value="integer" />
            <xs:enumeration value="long" />
            <xs:enumeration value="negativeInteger" />
            <xs:enumeration value="nonNegativeInteger" />
            <xs:enumeration value="nonPositiveInteger" />
            <xs:enumeration value="normalizedString" />
            <xs:enumeration value="positiveInteger" />
            <xs:enumeration value="short" />
            <xs:enumeration value="string" />
            <xs:enumeration value="time" />
            <xs:enumeration value="unsignedByte" />
            <xs:enumeration value="unsignedInt" />
            <xs:enumeration value="unsignedLong" />
            <xs:enumeration value="unsignedShort" />
        </xs:restriction>
    </xs:simpleType>
    <!--End DataType -->
    <!--Data is a gereral purpose element wrapper to enclose data.  This helps make the schema more extendable.-->
    <xs:complexType name="Data">
        <xs:complexContent>
            <xs:extension base="ExtendableElement">
                <xs:sequence minOccurs="1" maxOccurs="1">
                    <xs:element name="Data" minOccurs="1" maxOccurs="1" type="xs:string" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--end data-->
    <!--Roles-->
    <!-- RoleRef, RoleSequence and  RoleSequences define references to roles and collections of roles and collections of collections of roles-->
    <xs:complexType name="RoleSequences">
        <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element name="RoleSequence" type="RoleSequence" minOccurs="1" maxOccurs="1" />
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="RoleSequence">
        <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element name="RoleRef" type="RoleRef" minOccurs="1" maxOccurs="1" />
        </xs:sequence>
        <xs:attribute name="id" type="xs:ID" use="optional" />
    </xs:complexType>
    <xs:complexType name="RoleRef">
        <xs:attribute name="ref" type="xs:IDREF" />
    </xs:complexType>
    <!--end RoleRef, RoleSequence and  RoleSequences-->
    <xs:complexType name="Roles">
        <xs:complexContent>
            <xs:extension base="ExtendableElement">
                <xs:sequence>
                    <xs:element name="Role" type="Role" minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="Role">
        <xs:complexContent>
            <xs:extension base="ExtendableElement">
                <xs:sequence>
                    <xs:element name="RolePlayer" type="ObjectRef" minOccurs="0" maxOccurs="1" />
                </xs:sequence>
                <xs:attribute name="Name" type="xs:string" use="required" />
                <xs:attribute name="id" type="xs:ID" use="required" />
                <!--Derived-->
                <xs:attribute name="IsFunctional" type="xs:boolean" default="false" />
                <!--Derived-->
                <xs:attribute name="IsMandatory" type="xs:boolean" default="false" />
                <!--Derived-->
                <xs:attribute name="Multiplicity" type="MultiplicityEnum" default="0..1" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--Look up enum values.-->
    <xs:simpleType name="MultiplicityEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="not set" />
            <xs:enumeration value="0..1" />
            <xs:enumeration value="0..*" />
            <xs:enumeration value="1..*" />
            <xs:enumeration value="1" />
        </xs:restriction>
    </xs:simpleType>
    <!--End Roles-->
    <!-- Facts -->
    <!--Fact Ref defines a reference to a fact-->
    <xs:complexType name="FactRef">
        <xs:attribute name="ref" type="xs:IDREF" />
    </xs:complexType>
    <!--end Fact Ref-->
    <xs:complexType name="Facts">
        <xs:complexContent>
            <xs:extension base="ExtendableElement">
                <xs:sequence>
                    <xs:element name="Fact" type="Fact" minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="Fact">
        <xs:complexContent>
            <xs:extension base="ExtendableElement">
                <xs:sequence minOccurs="0" maxOccurs="1">
                    <xs:element name="FactNotes" type="Data" minOccurs="0" maxOccurs="1" />
                    <xs:element name="DerivationRule" type="Data" minOccurs="0" maxOccurs="1" />
                    <xs:element name="FactRoles" type="Roles" minOccurs="0" maxOccurs="unbounded" />
                    <xs:element name="ReadingOrders" type="ReadingOrders" minOccurs="0" maxOccurs="unbounded" />
                    <xs:element name="InternalConstraints" type="InternalConstraints" minOccurs="0" maxOccurs="unbounded" />
                    <xs:element name="ExternalConstraints" type="ConstraintRefs" minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
                <xs:attribute name="Name" use="required" type="xs:string" />
                <xs:attribute name="id" use="required" type="xs:ID" />
                <xs:attribute name="IsExternal" type="xs:boolean" default="false" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- End Facts -->
    <!--Constraints-->
    <!--ConstraintRef and  ConstraintRefs define references to constrains and collections of constraints-->
    <xs:complexType name="ConstraintRefs">
        <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element name="ConstraintRef" type="ConstraintRef" minOccurs="1" maxOccurs="1" />
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="ConstraintRef">
        <xs:restriction base="xs:IDREF" />
    </xs:simpleType>
    <!--end ConstraintRef and  ConstraintRefs-->
    <xs:complexType name="ExternalConstraints">
        <xs:complexContent>
            <xs:extension base="ExtendableElement">
                <xs:sequence minOccurs="0" maxOccurs="unbounded">
                    <xs:element name="EqualityConstraint" type="EqualityConstraint" minOccurs="0" maxOccurs="unbounded" />
                    <xs:element name="ExclusionConstraint" type="ExclusionConstraint" minOccurs="0" maxOccurs="unbounded" />
                    <xs:element name="SubsetConstraint" type="SubsetConstraint" minOccurs="0" maxOccurs="unbounded" />
                    <xs:element name="FrequencyConstraint" type="FrequencyConstraint" minOccurs="0" maxOccurs="unbounded" />
                    <xs:element name="DisjunctiveMandatoryConstraint" type="DisjunctiveMandatoryConstraint" minOccurs="0" maxOccurs="unbounded" />
                    <xs:element name="ExternalUniqunessConstraint" type="ExternalUniqunessConstraint" minOccurs="0" maxOccurs="unbounded" />
                    <xs:element name="RingConstraint" type="RingConstraint" minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="Constraint">
        <xs:complexContent>
            <xs:extension base="ExtendableElement">
                <xs:sequence>
                    <xs:element name="ConstraintNote" type="Data" minOccurs="0" maxOccurs="1" />
                </xs:sequence>
                <xs:attribute name="id" type="xs:ID"></xs:attribute>
                <xs:attribute name="Name" type="xs:string"></xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--Multicolumn constraints-->
    <xs:complexType name="MultiColumnExternalConstraint" abstract="true">
        <xs:complexContent>
            <xs:extension base="Constraint">
                <xs:sequence>
                    <xs:element name="RoleSequences" type="RoleSequences" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="EqualityConstraint">
        <xs:complexContent>
            <xs:extension base="MultiColumnExternalConstraint" />
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ExclusionConstraint">
        <xs:complexContent>
            <xs:extension base="MultiColumnExternalConstraint" />
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="SubsetConstraint">
        <xs:complexContent>
            <xs:extension base="MultiColumnExternalConstraint">
                <xs:attribute name="FromRoleSequence" type="xs:IDREF" use="required" />
                <xs:attribute name="ToRoleSequence" type="xs:IDREF" use="required" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- end Multicolumn constraints-->
    <!--Singlecolumn constraints-->
    <xs:complexType name="SingleColumnExternalConstraint">
        <xs:complexContent>
            <xs:extension base="Constraint">
                <xs:sequence minOccurs="0" maxOccurs="unbounded">
                    <xs:element name="RoleSequence" type="RoleSequence" minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="FrequencyConstraint">
        <xs:complexContent>
            <xs:extension base="SingleColumnExternalConstraint" />
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="DisjunctiveMandatoryConstraint">
        <xs:complexContent>
            <xs:extension base="SingleColumnExternalConstraint" />
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ExternalUniqunessConstraint">
        <xs:complexContent>
            <xs:extension base="SingleColumnExternalConstraint" />
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="RingConstraint">
        <xs:complexContent>
            <xs:extension base="SingleColumnExternalConstraint" />
        </xs:complexContent>
    </xs:complexType>
    <!--End Singlecolumn constraints-->
    <!--InternalConstraint-note these are owned by FactTypes not the model -->
    <xs:complexType name="InternalConstraints">
        <xs:complexContent>
            <xs:extension base="ExtendableElement">
                <xs:sequence minOccurs="0" maxOccurs="unbounded">
                    <xs:element name="InternalUniquenessConstraint" type="InternalUniquenessConstraint" minOccurs="0" maxOccurs="1" />
                    <xs:element name="SimpleMandatoryConstraint" type="SimpleMandatoryConstraint" minOccurs="0" maxOccurs="1" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="InternalConstraint">
        <xs:complexContent>
            <xs:extension base="Constraint">
                <xs:sequence minOccurs="0" maxOccurs="unbounded">
                    <xs:element name="RoleSequence" type="RoleSequence" minOccurs="1" maxOccurs="unbounded" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="InternalUniquenessConstraint">
        <xs:complexContent>
            <xs:extension base="InternalConstraint">
                <!--IsPreferred is derived-->
                <xs:attribute name="IsPreferred" default="false" type="xs:boolean" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="SimpleMandatoryConstraint">
        <xs:complexContent>
            <xs:extension base="InternalConstraint" />
        </xs:complexContent>
    </xs:complexType>
    <!--End InternalConstraint-->
    <!--End Constraints-->
    <!--Fact Readings and reading Orders-->
    <xs:complexType name="ReadingOrders">
        <xs:complexContent>
            <xs:extension base="ExtendableElement">
                <xs:sequence>
                    <xs:element name="ReadingOrder" type="ReadingOrder" minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ReadingOrder">
        <xs:complexContent>
            <xs:extension base="ExtendableElement">
                <xs:sequence minOccurs="1" maxOccurs="1">
                    <xs:element name="Readings" type="Readings" minOccurs="1" maxOccurs="1" />
                    <xs:element name="RoleSequence" type="RoleSequence" minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="Readings">
        <xs:complexContent>
            <xs:extension base="ExtendableElement">
                <xs:sequence minOccurs="1" maxOccurs="1">
                    <xs:element name="Reading" type="Reading" minOccurs="1" maxOccurs="unbounded" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="Reading">
        <xs:complexContent>
            <xs:extension base="Data">
                <xs:attribute name="IsPrimary" type="xs:boolean" default="false" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--End Fact Readings and reading Orders-->
    <!-- Should Model errors be part of the core schema or in another namespace?-->
    <!--ModelErrors-->
    <xs:complexType name="ModelErrors">
        <xs:complexContent>
            <xs:extension base="ExtendableElement">
                <xs:sequence minOccurs="0" maxOccurs="1">
                    <xs:element name="DuplicateNameError" type="DuplicateNameError" minOccurs="0" maxOccurs="unbounded" />
                    <xs:element name="TooFewReadingRolesError" type="TooFewReadingRolesError" minOccurs="0" maxOccurs="unbounded" />
                    <xs:element name="TooFewRoleSequencesError" type="TooFewRoleSequencesError" minOccurs="0" maxOccurs="unbounded" />
                    <xs:element name="TooManyReadingRolesError" type="TooManyReadingRolesError" minOccurs="0" maxOccurs="unbounded" />
                    <xs:element name="TooManyRoleSequenceError" type="TooManyRoleSequenceError" minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ModelError" abstract="true">
        <xs:complexContent>
            <xs:extension base="ExtendableElement" />
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="DuplicateNameError">
        <xs:complexContent>
            <xs:extension base="ExtendableElement">
                <xs:attribute name="ElementType" type="xs:string" use="required" />
                <xs:attribute name="ElementRef" type="xs:IDREF" use="required" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="TooFewReadingRolesError">
        <xs:complexContent>
            <xs:extension base="ModelError" />
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="TooFewRoleSequencesError">
        <xs:complexContent>
            <xs:extension base="ModelError" />
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="TooManyReadingRolesError">
        <xs:complexContent>
            <xs:extension base="ModelError" />
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="TooManyRoleSequenceError">
        <xs:complexContent>
            <xs:extension base="ModelError" />
        </xs:complexContent>
    </xs:complexType>
    <!--End ModelErrors-->
    <!--Custrom Reference Modes-->
    <!--Reference Mdoes and Kinds-->
    <xs:simpleType name="CustomReferenceModeRef">
        <xs:restriction base="xs:IDREF"></xs:restriction>
    </xs:simpleType>
    <xs:complexType name="ReferenceMode"></xs:complexType>
    <!--Reference Mdoes and Kinds-->
    <xs:complexType name="CustomReferenceModes">
        <xs:complexContent>
            <xs:extension base="ExtendableElement">
                <xs:sequence minOccurs="0" maxOccurs="unbounded">
                    <xs:element name="CustomReferenceMode" type="CustomReferenceMode" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="CustomReferenceMode">
        <xs:complexContent>
            <xs:extension base="ExtendableElement">
                <xs:sequence>
                    <xs:element name="CustomFormatString" type="xs:string" minOccurs="0" maxOccurs="1" />
                </xs:sequence>
                <xs:attribute name="id" type="xs:ID" />
                <xs:attribute name="Name" type="xs:string" default="" />
                <xs:attribute name="Kind" type="ReferenceModeKind" default="General" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:simpleType name="ReferenceModeKind">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Popular" />
            <xs:enumeration value="UnitBase" />
            <xs:enumeration value="General" />
        </xs:restriction>
    </xs:simpleType>
    <!--End Custrom Reference Modes-->
</xs:schema>