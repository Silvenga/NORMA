<?xml version="1.0" encoding="utf-8"?>
<!-- Todo: Is external on object type?  What am I supposed to do with object shapes and data types? 
If we don't serialize intrinsicreference modes how do a link to them? by Name?-->
<xs:schema
    targetNamespace="http://schemas.northface.edu/orm/ormcore"
    elementFormDefault="qualified"
	attributeFormDefault="unqualified"
    xmlns="http://schemas.northface.edu/orm/ormcore"
    xmlns:mstns="http://tempur.org/XMLSchema.xsd"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:derived="http://www.w3.org/2001/XMLSchema"
    >
    <!--xmlns:derived="http://schemas.northface.edu/orm/ormcorederived"-->
    <!--ExtendableElement the thought here is to define all the any's once and then have Extendable Element extend this-->
    <xs:complexType name="ExtendableElement" abstract ="true">
        <xs:sequence minOccurs="0" maxOccurs ="unbounded">
            <xs:any namespace="##other"  processContents="lax" minOccurs="0" maxOccurs ="unbounded"/>
        </xs:sequence>
        <xs:anyAttribute namespace ="##other" processContents ="lax"/>
    </xs:complexType>
    <!--ExtendableElement-->
    <!--ORMModel-->
    <xs:element name ="ORMModel" type ="ORMModel"/>
    <xs:complexType name="ORMModel">
        <xs:complexContent>
            <xs:extension base ="ExtendableElement">
                <xs:sequence minOccurs="0" maxOccurs="unbounded">
                    <xs:element name="Objects" type="Objects" minOccurs ="0" maxOccurs="1"/>
                    <xs:element name="Facts" type="Facts"  minOccurs ="0" maxOccurs="1"/>
                    <xs:element name="ExternalConstraints" type="ExternalConstraints"  minOccurs ="0" maxOccurs="1"/>
                    <xs:element name="ModelErrors" type="ModelErrors"  minOccurs ="0" maxOccurs="1"/>
                    <xs:element name="CustomReferenceModes" type="CustomReferenceModes"  minOccurs ="0" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--End ORMModel-->
    <!--Objects and Object Types-->
    <xs:complexType name="Objects">
        <xs:complexContent>
            <xs:extension base ="ExtendableElement">
                <xs:sequence minOccurs="0" maxOccurs="unbounded">
                    <xs:element name="EntityType" type="EntityType" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="ValueType" type="ValueType" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="ObjectifiedType" type="ObjectifiedType" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ObjectType" abstract="true">
        <xs:complexContent>
            <xs:extension base ="ExtendableElement">
                <xs:sequence>
                    <xs:element name="ObjectNotes" type="Data" minOccurs ="0" maxOccurs="1"/>
                    <xs:element name="PlayedRoles" type="RoleSequence" minOccurs ="0" maxOccurs="unbounded"/>
                    <!--Subtypes is derived.-->
                    <xs:element name="Subtypes" type="ObjectRefs" minOccurs ="0" maxOccurs="unbounded"/>
                    <!--Supertypes is derived.-->
                    <xs:element name="Supertypes" type="ObjectRefs" minOccurs ="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="Name" use="required" type="xs:string"/>
                <xs:attribute name="ID" use="required" type="xs:ID"/>
                <xs:attribute name="IsIndependent" default="false"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="EntityType">
        <xs:complexContent>
            <xs:extension base="ObjectType">
                <!--ReferenceMode is derived.-->
                <xs:sequence>
                    <xs:element name ="CustomReferenceMode" type ="CustomReferenceModeRef" minOccurs ="0" maxOccurs ="1"/>
                    <xs:element name ="ReferenceMode" type ="xs:string" minOccurs ="0" maxOccurs ="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--The fact that an object is an ObjectifiedType is derrived.-->
    <xs:complexType name="ObjectifiedType">
        <xs:complexContent>
            <xs:extension base="ObjectType">
                <xs:sequence>
                    <xs:element name="NestedPredicate" type="FactRef" minOccurs="1" maxOccurs ="1"/>
                </xs:sequence>
                <xs:attribute name="Name" use="required" type="xs:string"/>
                <xs:attribute name="ID" use="required" type="xs:ID"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--The fact that an object is a valuetype is derrived-->
    <xs:complexType name="ValueType">
        <xs:complexContent>
            <xs:extension base="ObjectType">
                <xs:sequence>
                    <xs:element name="ConceptualDataType" type="DataType" minOccurs ="0" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--End Objects and Object Types-->
    <!--simpleTypes  while this isn't exactly right yet this indicates which types the ref should be even if it isn;t enforced-->
    <xs:complexType name ="ObjectRefs">
        <xs:sequence minOccurs ="0" maxOccurs ="unbounded">
            <xs:element name ="ObjectRef" type ="ObjectRef" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name ="ObjectRef">
        <xs:restriction base ="xs:IDREF"/>
    </xs:simpleType>
    <xs:simpleType name ="FactRef">
        <xs:restriction base ="xs:IDREF"/>
    </xs:simpleType>
    <xs:complexType name ="ConstraintRefs">
        <xs:sequence minOccurs ="0" maxOccurs ="unbounded">
            <xs:element name ="ConstraintRef" type ="ConstraintRef" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name ="ConstraintRef">
        <xs:restriction base ="xs:IDREF"/>
    </xs:simpleType>
    <xs:complexType name ="RoleSequences">
        <xs:sequence minOccurs ="0" maxOccurs ="unbounded">
            <xs:element name ="RoleSequence" type ="RoleSequence" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>
    <!-- Scot Becker has Role SequenceItems inside a rolesequence which furhter breaks this down. Is this nessicary?-->
    <xs:complexType name ="RoleSequence">
        <xs:sequence minOccurs ="0" maxOccurs ="unbounded">
            <xs:element name ="RoleRef" type ="RoleRef" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name ="ID" type ="xs:ID" use ="optional"/>
    </xs:complexType>
    <xs:complexType name ="RoleRef">
        <xs:attribute name="ref" type="xs:IDREF"/>
    </xs:complexType>
    <!--End SimpleTypes-->
    <!--DataType -->
    <xs:complexType name="Data">
        <xs:complexContent>
            <xs:extension base ="ExtendableElement">
                <xs:sequence minOccurs="1" maxOccurs ="1">
                    <xs:element name="Data" minOccurs="1" maxOccurs ="1" type="xs:string"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="DataType">
        <xs:complexContent>
            <xs:extension base ="ExtendableElement">
                <xs:attribute name="Type" type="DataTypeEnum" use ="required"/>
                <xs:attribute name="Scale" type="xs:int"/>
                <xs:attribute name="Length" type="xs:int"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:simpleType name="DataTypeEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="byte"/>
            <xs:enumeration value="date"/>
            <xs:enumeration value="dateTime"/>
            <xs:enumeration value="decimal"/>
            <xs:enumeration value="double"/>
            <xs:enumeration value="duration"/>
            <xs:enumeration value="float"/>
            <xs:enumeration value="int"/>
            <xs:enumeration value="integer"/>
            <xs:enumeration value="long"/>
            <xs:enumeration value="negativeInteger"/>
            <xs:enumeration value="nonNegativeInteger"/>
            <xs:enumeration value="nonPositiveInteger"/>
            <xs:enumeration value="normalizedString"/>
            <xs:enumeration value="positiveInteger"/>
            <xs:enumeration value="short"/>
            <xs:enumeration value="string"/>
            <xs:enumeration value="time"/>
            <xs:enumeration value="unsignedByte"/>
            <xs:enumeration value="unsignedInt"/>
            <xs:enumeration value="unsignedLong"/>
            <xs:enumeration value="unsignedShort"/>
        </xs:restriction>
    </xs:simpleType>
    <!--End DataType -->
    <!--Roles-->
    <xs:complexType name="Roles">
        <xs:complexContent>
            <xs:extension base ="ExtendableElement">
                <xs:sequence>
                    <xs:element name="Role" type="Role" minOccurs="0" maxOccurs ="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="Role">
        <xs:complexContent>
            <xs:extension base ="ExtendableElement">
                <xs:sequence>
                    <xs:element name ="RolePlayer" type="ObjectRef" minOccurs ="0" maxOccurs ="1"/>
                </xs:sequence>
                <xs:attribute name="Name" type="xs:string" use="required"/>
                <xs:attribute name="ID" type="xs:ID" use="required"/>
                <!--Derived-->
                <xs:attribute name="IsFunctional" type="xs:boolean"  default="false"/>
                <!--Derived-->
                <xs:attribute name="IsMandatory" type="xs:boolean"  default="false"/>
                <!--Derived-->
                <xs:attribute name="Multiplicity" type="MultiplicityEnum"  default="0..1"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:simpleType name ="MultiplicityEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="not set"/>
            <xs:enumeration value="0..1"/>
            <xs:enumeration value="0..*"/>
            <xs:enumeration value="1..*"/>
            <xs:enumeration value="1"/>
        </xs:restriction>
    </xs:simpleType>
    <!--End Roles-->
    <!-- Facts -->
    <xs:complexType name="Facts">
        <xs:complexContent>
            <xs:extension base ="ExtendableElement">
                <xs:sequence>
                    <xs:element name="Fact" type="Fact" minOccurs="0" maxOccurs ="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="Fact">
        <xs:complexContent>
            <xs:extension base ="ExtendableElement">
                <xs:sequence minOccurs ="0" maxOccurs ="1">
                    <xs:element name="FactNotes" type="Data" minOccurs="0" maxOccurs ="1"/>
                    <xs:element name="DerivationRule" type="Data" minOccurs="0" maxOccurs ="1"/>
                    <xs:element name="ReadingOrders" type="ReadingOrders" minOccurs="0" maxOccurs ="unbounded"/>
                    <xs:element name="FactRoles" type ="Roles" minOccurs="0" maxOccurs ="unbounded"/>
                    <xs:element name="InternalConstraints" type ="InternalConstraints" minOccurs="0" maxOccurs ="unbounded"/>
                    <xs:element name="ExternalConstraints" type ="ConstraintRefs"  minOccurs="0" maxOccurs ="unbounded"/>
                </xs:sequence>
                <xs:attribute name="Name" use="required" type="xs:string"/>
                <xs:attribute name="ID" use="required" type="xs:ID"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- End Facts -->
    <!--Constraints-->
    <xs:complexType name="ExternalConstraints">
        <xs:complexContent>
            <xs:extension base ="ExtendableElement">
                <xs:sequence minOccurs="0" maxOccurs ="unbounded">
                    <xs:element name="EqualityConstraint" type ="EqualityConstraint" minOccurs="0" maxOccurs ="unbounded"/>
                    <xs:element name="ExclusionConstraint" type ="ExclusionConstraint" minOccurs="0" maxOccurs ="unbounded"/>
                    <xs:element name="SubsetConstraint" type ="SubsetConstraint" minOccurs="0" maxOccurs ="unbounded"/>
                    <xs:element name="FrequencyConstraint" type ="FrequencyConstraint" minOccurs="0" maxOccurs ="unbounded"/>
                    <xs:element name="DisjunctiveMandatoryConstraint" type ="DisjunctiveMandatoryConstraint" minOccurs="0" maxOccurs ="unbounded"/>
                    <xs:element name="ExternalUniqunessConstraint" type ="ExternalUniqunessConstraint" minOccurs="0" maxOccurs ="unbounded"/>
                    <xs:element name="RingConstraint" type ="RingConstraint" minOccurs="0" maxOccurs ="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="Constraint">
        <xs:complexContent>
            <xs:extension base ="ExtendableElement">
                <xs:sequence>
                    <xs:element name="ConstraintNote" type="Data" minOccurs="0" maxOccurs ="1"/>
                </xs:sequence>
                <xs:attribute name ="ID" type ="xs:ID"></xs:attribute>
                <xs:attribute name ="Name" type ="xs:string"></xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--Multicolumn constraints-->
    <xs:complexType name="MultiColumnExternalConstraint" abstract="true">
        <xs:complexContent>
            <xs:extension base ="Constraint">
                <xs:sequence>
                    <xs:element name ="RoleSequences" type="RoleSequences" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name ="EqualityConstraint">
        <xs:complexContent>
            <xs:extension base ="MultiColumnExternalConstraint"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name ="ExclusionConstraint">
        <xs:complexContent>
            <xs:extension base ="MultiColumnExternalConstraint"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name ="SubsetConstraint">
        <xs:complexContent>
            <xs:extension base ="MultiColumnExternalConstraint">
                <xs:attribute name="FromRole" type="xs:IDREF" use="required"/>
                <xs:attribute name="ToRole" type="xs:IDREF" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- end Multicolumn constraints-->
    <!--Singlecolumn constraints-->
    <xs:complexType name="SingleColumnExternalConstraint">
        <xs:complexContent>
            <xs:extension base ="Constraint">
                <xs:sequence minOccurs ="0" maxOccurs ="unbounded">
                    <xs:element name="RoleSequence" type="RoleSequence" minOccurs="0" maxOccurs ="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name ="FrequencyConstraint">
        <xs:complexContent>
            <xs:extension base ="SingleColumnExternalConstraint"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name ="DisjunctiveMandatoryConstraint">
        <xs:complexContent>
            <xs:extension base ="SingleColumnExternalConstraint"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name ="ExternalUniqunessConstraint">
        <xs:complexContent>
            <xs:extension base ="SingleColumnExternalConstraint"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name ="RingConstraint">
        <xs:complexContent>
            <xs:extension base ="SingleColumnExternalConstraint"/>
        </xs:complexContent>
    </xs:complexType>
    <!--End Singlecolumn constraints-->
    <!--InternalConstraint-note these are owned by FactTypes not the model -->
    <xs:complexType name="InternalConstraints">
        <xs:complexContent>
            <xs:extension base ="ExtendableElement">
                <xs:sequence minOccurs ="0" maxOccurs ="unbounded">
                    <xs:element name="InternalUniquenessConstraint" type ="InternalUniquenessConstraint" minOccurs="0" maxOccurs ="1"/>
                    <xs:element name="SimpleMandatoryConstraint" type ="SimpleMandatoryConstraint" minOccurs="0" maxOccurs ="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="InternalConstraint">
        <xs:complexContent>
            <xs:extension base ="Constraint">
                <xs:sequence minOccurs ="0" maxOccurs ="unbounded">
                    <xs:element name="RoleSequence" type="RoleSequence" minOccurs="1" maxOccurs ="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name ="InternalUniquenessConstraint">
        <xs:complexContent>
            <xs:extension base ="InternalConstraint">
                <!--IsPreferred is derived-->
                <xs:attribute name="IsPreferred" default="false" type ="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name ="SimpleMandatoryConstraint">
        <xs:complexContent>
            <xs:extension base ="InternalConstraint"/>
        </xs:complexContent>
    </xs:complexType>
    <!--End InternalConstraint-->
    <!--End Constraints-->
    <!--Fact Readings and reading Orders-->
    <xs:complexType name="ReadingOrders">
        <xs:complexContent>
            <xs:extension base ="ExtendableElement">
                <xs:sequence>
                    <xs:element name="ReadingOrder" type="ReadingOrder" minOccurs ="0" maxOccurs ="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ReadingOrder">
        <xs:complexContent>
            <xs:extension base ="ExtendableElement">
                <xs:sequence minOccurs ="1" maxOccurs ="1">
                    <xs:element name="Readings" type="Readings"  minOccurs ="1" maxOccurs ="1"/>
                    <xs:element name="RoleSequence" type="RoleSequence" minOccurs="0" maxOccurs ="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="Readings">
        <xs:complexContent>
            <xs:extension base ="ExtendableElement">
                <xs:sequence minOccurs ="1" maxOccurs ="1">
                    <xs:element name="Reading" type="Reading" minOccurs="1" maxOccurs ="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="Reading">
        <xs:complexContent>
            <xs:extension base ="Data">
                <xs:attribute name="IsPrimary" type="xs:boolean" default ="false"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--End Fact Readings and reading Orders-->
    <!--ModelErrors-->
    <xs:complexType name="ModelErrors">
        <xs:complexContent>
            <xs:extension base ="ExtendableElement">
                <xs:sequence minOccurs="0" maxOccurs ="1">
                    <!--                    <xs:element name ="ConstraintDuplicateNameError" type ="ConstraintDuplicateNameError" minOccurs="0" maxOccurs ="unbounded"/>
                    <xs:element name ="FactTypeDuplicateNameError" type ="FactTypeDuplicateNameError" minOccurs="0" maxOccurs ="unbounded"/>
                    <xs:element name ="ObjectTypeDuplicateNameError" type ="ObjectTypeDuplicateNameError" minOccurs="0" maxOccurs ="unbounded"/>-->
                    <xs:element name ="DuplicateNameError" type ="DuplicateNameError" minOccurs="0" maxOccurs ="unbounded"/>
                    <xs:element name ="TooFewReadingRolesError" type ="TooFewReadingRolesError" minOccurs="0" maxOccurs ="unbounded"/>
                    <xs:element name ="TooFewRoleSequencesError" type ="TooFewRoleSequencesError" minOccurs="0" maxOccurs ="unbounded"/>
                    <xs:element name ="TooManyReadingRolesError" type ="TooManyReadingRolesError" minOccurs="0" maxOccurs ="unbounded"/>
                    <xs:element name ="TooManyRoleSequenceError" type ="TooManyRoleSequenceError" minOccurs="0" maxOccurs ="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ModelError" abstract ="true">
        <xs:complexContent>
            <xs:extension base ="ExtendableElement"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="DuplicateNameError">
        <!--abstract ="true"-->
        <xs:complexContent>
            <xs:extension base ="ExtendableElement">
                <xs:attribute name ="ElementType" type="xs:string" use ="required"/>
                <xs:attribute name ="ElementRef" type="xs:IDREF" use ="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--    <xs:complexType name="ConstraintDuplicateNameError">
        <xs:complexContent>
            <xs:extension base ="DuplicateNameError">
                <xs:attribute name ="FactType" type="FactRef" use ="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="FactTypeDuplicateNameError">
        <xs:complexContent>
            <xs:extension base ="DuplicateNameError">
                <xs:attribute name ="FactType" type="FactRef" use ="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ObjectTypeDuplicateNameError">
        <xs:complexContent>
            <xs:extension base ="DuplicateNameError">
                <xs:attribute name ="ObjectType" type="ObjectRef" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>-->
    <xs:complexType name="TooFewReadingRolesError">
        <xs:complexContent>
            <xs:extension base ="ModelError"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="TooFewRoleSequencesError">
        <xs:complexContent>
            <xs:extension base ="ModelError"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="TooManyReadingRolesError">
        <xs:complexContent>
            <xs:extension base ="ModelError"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="TooManyRoleSequenceError">
        <xs:complexContent>
            <xs:extension base ="ModelError"/>
        </xs:complexContent>
    </xs:complexType>
    <!--End ModelErrors-->
    <!--Custrom Reference Modes-->
    <!--Reference Mdoes and Kinds-->
    <xs:simpleType name ="CustomReferenceModeRef">
        <xs:restriction base ="xs:IDREF"></xs:restriction>
    </xs:simpleType>
    <xs:complexType name="ReferenceMode"></xs:complexType>
    <!--Reference Mdoes and Kinds-->
    <xs:complexType name="CustomReferenceModes">
        <xs:complexContent>
            <xs:extension base ="ExtendableElement">
                <xs:sequence minOccurs ="0" maxOccurs ="unbounded">
                    <xs:element name ="CustomReferenceMode" type="CustomReferenceMode"/>
                </xs:sequence>
            </xs:extension >
        </xs:complexContent>
        </xs:complexType>
        <xs:complexType name="CustomReferenceMode">
            <xs:complexContent>
                <xs:extension base="ExtendableElement">
                    <xs:sequence>
                        <xs:element name ="CustomFormatString" type ="xs:string" minOccurs="0" maxOccurs ="1"/>
                    </xs:sequence>
                    <xs:attribute name="ID" type="xs:ID"/>
                    <xs:attribute name="Name" type="xs:string" default=""/>
                    <xs:attribute name="Kind" type="ReferenceModeKind" default="General"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
        <xs:simpleType name="ReferenceModeKind">
            <xs:restriction base ="xs:string">
                <xs:enumeration value="Popular"/>
                <xs:enumeration value="UnitBase"/>
                <xs:enumeration value="General"/>
            </xs:restriction>
        </xs:simpleType>
        <!--End Custrom Reference Modes-->
    </xs:schema>