<?xml version="1.0" encoding="utf-8"?>
<xs:schema
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns:oil="http://schemas.orm.net/OIAL"
	xmlns:plx="http://schemas.neumont.edu/CodeGeneration/PLiX"
	xmlns:prop="urn:schemas-orm-net:PLiX:CLI:Properties"
	targetNamespace="urn:schemas-orm-net:PLiX:CLI:Properties"
	elementFormDefault="qualified"
	attributeFormDefault="unqualified">

	<xs:import namespace="http://schemas.orm.net/OIAL"/>
	<xs:import namespace="http://schemas.neumont.edu/CodeGeneration/PLiX"/>
	
	<xs:element name="Properties">
		<xs:annotation>
			<xs:documentation>A collection of Property elements for an oil:conceptType.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="prop:Property" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="conceptTypeName" use="required" type="xs:string">
				<xs:annotation>
					<xs:documentation>The name of the oil:conceptType that this Properties element is for.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
		<xs:key name="PropertiesKey">
			<xs:selector xpath="."/>
			<xs:field xpath="@conceptTypeName"/>
		</xs:key>
		<xs:key name="PropertyKey">
			<xs:selector xpath="prop:Property"/>
			<xs:field xpath="@name"/>
		</xs:key>
	</xs:element>
	<xs:element name="Property">
		<xs:annotation>
			<xs:documentation>Represents a CLI property.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="DataType">
					<xs:annotation>
						<xs:documentation>The data type of this Property.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:complexContent>
							<xs:extension base="plx:typeRefType"/>
						</xs:complexContent>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="name" use="required" type="xs:token">
				<xs:annotation>
					<xs:documentation>The name of this Property.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="mandatory" use="required" type="oil:mandatory">
				<xs:annotation>
					<xs:documentation>Whether this Property is alethicly mandatory, deonticly mandatory, or not mandatory.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="isUnique" use="required" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>Whether this Property (on its own) uniquely identifies its parent.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="isCollection" use="required" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>Whether this Property is a collection.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="isCustomType" use="required" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>If true, the data type of this Property is a custom-generated type which should be notified when this property changes.</xs:documentation>
					<xs:documentation>Note that a Property can have both @isCollection and @isCutomType be true, meaning that it is a collection of custom types.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="oppositeName" use="optional" type="xs:token">
				<xs:annotation>
					<xs:documentation>The name of the Property that represents the other end of this relationship.</xs:documentation>
					<xs:documentation>Note that if @isCustomType is true, this attribute must be present. If @isCustomType is false, this attribute must not be present.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
</xs:schema>
