<?xml version="1.0" encoding="utf-8"?>
<plx:root xmlns:plx="http://schemas.neumont.edu/CodeGeneration/PLiX" xmlns:prop="urn:schemas-orm-net:PLiX:CLI:Properties">
	<plx:namespaceImport name="System" />
	<plx:namespaceImport name="System.Collections.Generic" />
	<plx:namespaceImport name="System.Collections.ObjectModel" />
	<plx:namespaceImport name="System.ComponentModel" />
	<plx:namespaceImport name="System.Xml" />
	<plx:namespace name="SampleModel">
		<plx:class visibility="public" modifier="sealed" name="SampleModelContext">
			<plx:leadingInfo>
				<plx:pragma type="region" data="SampleModelContext" />
			</plx:leadingInfo>
			<plx:trailingInfo>
				<plx:pragma type="closeRegion" data="SampleModelContext" />
			</plx:trailingInfo>
			<plx:attribute dataTypeName="GeneratedCodeAttribute" dataTypeQualifier="System.CodeDom.Compiler">
				<plx:passParam>
					<plx:string>OIALtoPLiX</plx:string>
				</plx:passParam>
				<plx:passParam>
					<plx:string>1.0</plx:string>
				</plx:passParam>
			</plx:attribute>
			<plx:attribute dataTypeName="StructLayoutAttribute" dataTypeQualifier="System.Runtime.InteropServices">
				<plx:passParam>
					<plx:callStatic type="field" name="Auto" dataTypeName="LayoutKind" dataTypeQualifier="System.Runtime.InteropServices" />
				</plx:passParam>
				<plx:passParam>
					<plx:binaryOperator type="assignNamed">
						<plx:left>
							<plx:nameRef type="namedParameter" name="CharSet" />
						</plx:left>
						<plx:right>
							<plx:callStatic type="field" name="Auto" dataTypeName="CharSet" dataTypeQualifier="System.Runtime.InteropServices" />
						</plx:right>
					</plx:binaryOperator>
				</plx:passParam>
			</plx:attribute>
			<plx:implementsInterface dataTypeName="ISampleModelContext" />
			<plx:function visibility="public" name=".construct">
				<plx:local name="constraintEnforcementCollectionCallbacksByTypeDictionary" dataTypeName="Dictionary">
					<plx:passTypeParam dataTypeName="RuntimeTypeHandle" />
					<plx:passTypeParam dataTypeName=".object" />
					<plx:initialize>
						<plx:inlineStatement dataTypeName="Dictionary">
							<plx:passTypeParam dataTypeName="RuntimeTypeHandle" />
							<plx:passTypeParam dataTypeName=".object" />
							<plx:assign>
								<plx:left>
									<plx:callThis type="field" name="_ContraintEnforcementCollectionCallbacksByTypeDictionary" />
								</plx:left>
								<plx:right>
									<plx:callNew dataTypeName="Dictionary">
										<plx:passTypeParam dataTypeName="RuntimeTypeHandle" />
										<plx:passTypeParam dataTypeName=".object" />
										<plx:passParam>
											<plx:value type="i4" data="7" />
										</plx:passParam>
										<plx:passParam>
											<plx:callStatic type="field" name="Instance" dataTypeName="RuntimeTypeHandleEqualityComparer" />
										</plx:passParam>
									</plx:callNew>
								</plx:right>
							</plx:assign>
						</plx:inlineStatement>
					</plx:initialize>
				</plx:local>
				<plx:local name="constraintEnforcementCollectionCallbacksByTypeAndNameDictionary" dataTypeName="Dictionary">
					<plx:passTypeParam dataTypeName="ConstraintEnforcementCollectionTypeAndPropertyNameKey" />
					<plx:passTypeParam dataTypeName=".object" />
					<plx:initialize>
						<plx:inlineStatement dataTypeName="Dictionary">
							<plx:passTypeParam dataTypeName="ConstraintEnforcementCollectionTypeAndPropertyNameKey" />
							<plx:passTypeParam dataTypeName=".object" />
							<plx:assign>
								<plx:left>
									<plx:callThis type="field" name="_ContraintEnforcementCollectionCallbacksByTypeAndNameDictionary" />
								</plx:left>
								<plx:right>
									<plx:callNew dataTypeName="Dictionary">
										<plx:passTypeParam dataTypeName="ConstraintEnforcementCollectionTypeAndPropertyNameKey" />
										<plx:passTypeParam dataTypeName=".object" />
										<plx:passParam>
											<plx:value type="i4" data="2" />
										</plx:passParam>
									</plx:callNew>
								</plx:right>
							</plx:assign>
						</plx:inlineStatement>
					</plx:initialize>
				</plx:local>
				<plx:callInstance name="Add">
					<plx:callObject>
						<plx:nameRef name="constraintEnforcementCollectionCallbacksByTypeDictionary" />
					</plx:callObject>
					<plx:passParam>
						<plx:callInstance type="property" name="TypeHandle">
							<plx:callObject>
								<plx:typeOf dataTypeName="ConstraintEnforcementCollection">
									<plx:passTypeParam dataTypeName="Person" />
									<plx:passTypeParam dataTypeName="Task" />
								</plx:typeOf>
							</plx:callObject>
						</plx:callInstance>
					</plx:passParam>
					<plx:passParam>
						<plx:callNew dataTypeName="ConstraintEnforcementCollectionCallbacks">
							<plx:passTypeParam dataTypeName="Person" />
							<plx:passTypeParam dataTypeName="Task" />
							<plx:passParam>
								<plx:callNew type="newDelegate" dataTypeName="PotentialCollectionModificationCallback">
									<plx:passTypeParam dataTypeName="Person" />
									<plx:passTypeParam dataTypeName="Task" />
									<plx:passParam>
										<plx:callThis type="methodReference" name="OnPersonTaskViaPersonCollectionAdding" />
									</plx:passParam>
								</plx:callNew>
							</plx:passParam>
							<plx:passParam>
								<plx:callNew type="newDelegate" dataTypeName="CommittedCollectionModificationCallback">
									<plx:passTypeParam dataTypeName="Person" />
									<plx:passTypeParam dataTypeName="Task" />
									<plx:passParam>
										<plx:callThis type="methodReference" name="OnPersonTaskViaPersonCollectionAdded" />
									</plx:passParam>
								</plx:callNew>
							</plx:passParam>
							<plx:passParam>
								<plx:nullKeyword />
							</plx:passParam>
							<plx:passParam>
								<plx:callNew type="newDelegate" dataTypeName="CommittedCollectionModificationCallback">
									<plx:passTypeParam dataTypeName="Person" />
									<plx:passTypeParam dataTypeName="Task" />
									<plx:passParam>
										<plx:callThis type="methodReference" name="OnPersonTaskViaPersonCollectionRemoved" />
									</plx:passParam>
								</plx:callNew>
							</plx:passParam>
						</plx:callNew>
					</plx:passParam>
				</plx:callInstance>
				<plx:callInstance name="Add">
					<plx:callObject>
						<plx:nameRef name="constraintEnforcementCollectionCallbacksByTypeDictionary" />
					</plx:callObject>
					<plx:passParam>
						<plx:callInstance type="property" name="TypeHandle">
							<plx:callObject>
								<plx:typeOf dataTypeName="ConstraintEnforcementCollection">
									<plx:passTypeParam dataTypeName="Person" />
									<plx:passTypeParam dataTypeName="ValueType1" />
								</plx:typeOf>
							</plx:callObject>
						</plx:callInstance>
					</plx:passParam>
					<plx:passParam>
						<plx:callNew dataTypeName="ConstraintEnforcementCollectionCallbacks">
							<plx:passTypeParam dataTypeName="Person" />
							<plx:passTypeParam dataTypeName="ValueType1" />
							<plx:passParam>
								<plx:callNew type="newDelegate" dataTypeName="PotentialCollectionModificationCallback">
									<plx:passTypeParam dataTypeName="Person" />
									<plx:passTypeParam dataTypeName="ValueType1" />
									<plx:passParam>
										<plx:callThis type="methodReference" name="OnPersonValueType1DoesSomethingWithViaDoesSomethingWithPersonCollectionAdding" />
									</plx:passParam>
								</plx:callNew>
							</plx:passParam>
							<plx:passParam>
								<plx:callNew type="newDelegate" dataTypeName="CommittedCollectionModificationCallback">
									<plx:passTypeParam dataTypeName="Person" />
									<plx:passTypeParam dataTypeName="ValueType1" />
									<plx:passParam>
										<plx:callThis type="methodReference" name="OnPersonValueType1DoesSomethingWithViaDoesSomethingWithPersonCollectionAdded" />
									</plx:passParam>
								</plx:callNew>
							</plx:passParam>
							<plx:passParam>
								<plx:nullKeyword />
							</plx:passParam>
							<plx:passParam>
								<plx:callNew type="newDelegate" dataTypeName="CommittedCollectionModificationCallback">
									<plx:passTypeParam dataTypeName="Person" />
									<plx:passTypeParam dataTypeName="ValueType1" />
									<plx:passParam>
										<plx:callThis type="methodReference" name="OnPersonValueType1DoesSomethingWithViaDoesSomethingWithPersonCollectionRemoved" />
									</plx:passParam>
								</plx:callNew>
							</plx:passParam>
						</plx:callNew>
					</plx:passParam>
				</plx:callInstance>
				<plx:callInstance name="Add">
					<plx:callObject>
						<plx:nameRef name="constraintEnforcementCollectionCallbacksByTypeDictionary" />
					</plx:callObject>
					<plx:passParam>
						<plx:callInstance type="property" name="TypeHandle">
							<plx:callObject>
								<plx:typeOf dataTypeName="ConstraintEnforcementCollection">
									<plx:passTypeParam dataTypeName="Person" />
									<plx:passTypeParam dataTypeName="PersonDrivesCar" />
								</plx:typeOf>
							</plx:callObject>
						</plx:callInstance>
					</plx:passParam>
					<plx:passParam>
						<plx:callNew dataTypeName="ConstraintEnforcementCollectionCallbacks">
							<plx:passTypeParam dataTypeName="Person" />
							<plx:passTypeParam dataTypeName="PersonDrivesCar" />
							<plx:passParam>
								<plx:callNew type="newDelegate" dataTypeName="PotentialCollectionModificationCallback">
									<plx:passTypeParam dataTypeName="Person" />
									<plx:passTypeParam dataTypeName="PersonDrivesCar" />
									<plx:passParam>
										<plx:callThis type="methodReference" name="OnPersonPersonDrivesCarViaDrivenByPersonCollectionAdding" />
									</plx:passParam>
								</plx:callNew>
							</plx:passParam>
							<plx:passParam>
								<plx:callNew type="newDelegate" dataTypeName="CommittedCollectionModificationCallback">
									<plx:passTypeParam dataTypeName="Person" />
									<plx:passTypeParam dataTypeName="PersonDrivesCar" />
									<plx:passParam>
										<plx:callThis type="methodReference" name="OnPersonPersonDrivesCarViaDrivenByPersonCollectionAdded" />
									</plx:passParam>
								</plx:callNew>
							</plx:passParam>
							<plx:passParam>
								<plx:nullKeyword />
							</plx:passParam>
							<plx:passParam>
								<plx:callNew type="newDelegate" dataTypeName="CommittedCollectionModificationCallback">
									<plx:passTypeParam dataTypeName="Person" />
									<plx:passTypeParam dataTypeName="PersonDrivesCar" />
									<plx:passParam>
										<plx:callThis type="methodReference" name="OnPersonPersonDrivesCarViaDrivenByPersonCollectionRemoved" />
									</plx:passParam>
								</plx:callNew>
							</plx:passParam>
						</plx:callNew>
					</plx:passParam>
				</plx:callInstance>
				<plx:callInstance name="Add">
					<plx:callObject>
						<plx:nameRef name="constraintEnforcementCollectionCallbacksByTypeAndNameDictionary" />
					</plx:callObject>
					<plx:passParam>
						<plx:callNew dataTypeName="ConstraintEnforcementCollectionTypeAndPropertyNameKey">
							<plx:passParam>
								<plx:callInstance type="property" name="TypeHandle">
									<plx:callObject>
										<plx:typeOf dataTypeName="ConstraintEnforcementCollectionWithPropertyName">
											<plx:passTypeParam dataTypeName="Person" />
											<plx:passTypeParam dataTypeName="PersonBoughtCarFromPersonOnDate" />
										</plx:typeOf>
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:string>PersonBoughtCarFromPersonOnDateViaBuyerCollection</plx:string>
							</plx:passParam>
						</plx:callNew>
					</plx:passParam>
					<plx:passParam>
						<plx:callNew dataTypeName="ConstraintEnforcementCollectionCallbacks">
							<plx:passTypeParam dataTypeName="Person" />
							<plx:passTypeParam dataTypeName="PersonBoughtCarFromPersonOnDate" />
							<plx:passParam>
								<plx:callNew type="newDelegate" dataTypeName="PotentialCollectionModificationCallback">
									<plx:passTypeParam dataTypeName="Person" />
									<plx:passTypeParam dataTypeName="PersonBoughtCarFromPersonOnDate" />
									<plx:passParam>
										<plx:callThis type="methodReference" name="OnPersonPersonBoughtCarFromPersonOnDateViaBuyerCollectionAdding" />
									</plx:passParam>
								</plx:callNew>
							</plx:passParam>
							<plx:passParam>
								<plx:callNew type="newDelegate" dataTypeName="CommittedCollectionModificationCallback">
									<plx:passTypeParam dataTypeName="Person" />
									<plx:passTypeParam dataTypeName="PersonBoughtCarFromPersonOnDate" />
									<plx:passParam>
										<plx:callThis type="methodReference" name="OnPersonPersonBoughtCarFromPersonOnDateViaBuyerCollectionAdded" />
									</plx:passParam>
								</plx:callNew>
							</plx:passParam>
							<plx:passParam>
								<plx:nullKeyword />
							</plx:passParam>
							<plx:passParam>
								<plx:callNew type="newDelegate" dataTypeName="CommittedCollectionModificationCallback">
									<plx:passTypeParam dataTypeName="Person" />
									<plx:passTypeParam dataTypeName="PersonBoughtCarFromPersonOnDate" />
									<plx:passParam>
										<plx:callThis type="methodReference" name="OnPersonPersonBoughtCarFromPersonOnDateViaBuyerCollectionRemoved" />
									</plx:passParam>
								</plx:callNew>
							</plx:passParam>
						</plx:callNew>
					</plx:passParam>
				</plx:callInstance>
				<plx:callInstance name="Add">
					<plx:callObject>
						<plx:nameRef name="constraintEnforcementCollectionCallbacksByTypeAndNameDictionary" />
					</plx:callObject>
					<plx:passParam>
						<plx:callNew dataTypeName="ConstraintEnforcementCollectionTypeAndPropertyNameKey">
							<plx:passParam>
								<plx:callInstance type="property" name="TypeHandle">
									<plx:callObject>
										<plx:typeOf dataTypeName="ConstraintEnforcementCollectionWithPropertyName">
											<plx:passTypeParam dataTypeName="Person" />
											<plx:passTypeParam dataTypeName="PersonBoughtCarFromPersonOnDate" />
										</plx:typeOf>
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:string>PersonBoughtCarFromPersonOnDateViaSellerCollection</plx:string>
							</plx:passParam>
						</plx:callNew>
					</plx:passParam>
					<plx:passParam>
						<plx:callNew dataTypeName="ConstraintEnforcementCollectionCallbacks">
							<plx:passTypeParam dataTypeName="Person" />
							<plx:passTypeParam dataTypeName="PersonBoughtCarFromPersonOnDate" />
							<plx:passParam>
								<plx:callNew type="newDelegate" dataTypeName="PotentialCollectionModificationCallback">
									<plx:passTypeParam dataTypeName="Person" />
									<plx:passTypeParam dataTypeName="PersonBoughtCarFromPersonOnDate" />
									<plx:passParam>
										<plx:callThis type="methodReference" name="OnPersonPersonBoughtCarFromPersonOnDateViaSellerCollectionAdding" />
									</plx:passParam>
								</plx:callNew>
							</plx:passParam>
							<plx:passParam>
								<plx:callNew type="newDelegate" dataTypeName="CommittedCollectionModificationCallback">
									<plx:passTypeParam dataTypeName="Person" />
									<plx:passTypeParam dataTypeName="PersonBoughtCarFromPersonOnDate" />
									<plx:passParam>
										<plx:callThis type="methodReference" name="OnPersonPersonBoughtCarFromPersonOnDateViaSellerCollectionAdded" />
									</plx:passParam>
								</plx:callNew>
							</plx:passParam>
							<plx:passParam>
								<plx:nullKeyword />
							</plx:passParam>
							<plx:passParam>
								<plx:callNew type="newDelegate" dataTypeName="CommittedCollectionModificationCallback">
									<plx:passTypeParam dataTypeName="Person" />
									<plx:passTypeParam dataTypeName="PersonBoughtCarFromPersonOnDate" />
									<plx:passParam>
										<plx:callThis type="methodReference" name="OnPersonPersonBoughtCarFromPersonOnDateViaSellerCollectionRemoved" />
									</plx:passParam>
								</plx:callNew>
							</plx:passParam>
						</plx:callNew>
					</plx:passParam>
				</plx:callInstance>
				<plx:callInstance name="Add">
					<plx:callObject>
						<plx:nameRef name="constraintEnforcementCollectionCallbacksByTypeDictionary" />
					</plx:callObject>
					<plx:passParam>
						<plx:callInstance type="property" name="TypeHandle">
							<plx:callObject>
								<plx:typeOf dataTypeName="ConstraintEnforcementCollection">
									<plx:passTypeParam dataTypeName="Person" />
									<plx:passTypeParam dataTypeName="PersonHasNickName" />
								</plx:typeOf>
							</plx:callObject>
						</plx:callInstance>
					</plx:passParam>
					<plx:passParam>
						<plx:callNew dataTypeName="ConstraintEnforcementCollectionCallbacks">
							<plx:passTypeParam dataTypeName="Person" />
							<plx:passTypeParam dataTypeName="PersonHasNickName" />
							<plx:passParam>
								<plx:callNew type="newDelegate" dataTypeName="PotentialCollectionModificationCallback">
									<plx:passTypeParam dataTypeName="Person" />
									<plx:passTypeParam dataTypeName="PersonHasNickName" />
									<plx:passParam>
										<plx:callThis type="methodReference" name="OnPersonPersonHasNickNameViaPersonCollectionAdding" />
									</plx:passParam>
								</plx:callNew>
							</plx:passParam>
							<plx:passParam>
								<plx:callNew type="newDelegate" dataTypeName="CommittedCollectionModificationCallback">
									<plx:passTypeParam dataTypeName="Person" />
									<plx:passTypeParam dataTypeName="PersonHasNickName" />
									<plx:passParam>
										<plx:callThis type="methodReference" name="OnPersonPersonHasNickNameViaPersonCollectionAdded" />
									</plx:passParam>
								</plx:callNew>
							</plx:passParam>
							<plx:passParam>
								<plx:nullKeyword />
							</plx:passParam>
							<plx:passParam>
								<plx:callNew type="newDelegate" dataTypeName="CommittedCollectionModificationCallback">
									<plx:passTypeParam dataTypeName="Person" />
									<plx:passTypeParam dataTypeName="PersonHasNickName" />
									<plx:passParam>
										<plx:callThis type="methodReference" name="OnPersonPersonHasNickNameViaPersonCollectionRemoved" />
									</plx:passParam>
								</plx:callNew>
							</plx:passParam>
						</plx:callNew>
					</plx:passParam>
				</plx:callInstance>
				<plx:callInstance name="Add">
					<plx:callObject>
						<plx:nameRef name="constraintEnforcementCollectionCallbacksByTypeDictionary" />
					</plx:callObject>
					<plx:passParam>
						<plx:callInstance type="property" name="TypeHandle">
							<plx:callObject>
								<plx:typeOf dataTypeName="ConstraintEnforcementCollection">
									<plx:passTypeParam dataTypeName="ValueType1" />
									<plx:passTypeParam dataTypeName="Person" />
								</plx:typeOf>
							</plx:callObject>
						</plx:callInstance>
					</plx:passParam>
					<plx:passParam>
						<plx:callNew dataTypeName="ConstraintEnforcementCollectionCallbacks">
							<plx:passTypeParam dataTypeName="ValueType1" />
							<plx:passTypeParam dataTypeName="Person" />
							<plx:passParam>
								<plx:callNew type="newDelegate" dataTypeName="PotentialCollectionModificationCallback">
									<plx:passTypeParam dataTypeName="ValueType1" />
									<plx:passTypeParam dataTypeName="Person" />
									<plx:passParam>
										<plx:callThis type="methodReference" name="OnValueType1DoesSomethingElseWithPersonViaValueType1DoesSomethingElseWithCollectionAdding" />
									</plx:passParam>
								</plx:callNew>
							</plx:passParam>
							<plx:passParam>
								<plx:callNew type="newDelegate" dataTypeName="CommittedCollectionModificationCallback">
									<plx:passTypeParam dataTypeName="ValueType1" />
									<plx:passTypeParam dataTypeName="Person" />
									<plx:passParam>
										<plx:callThis type="methodReference" name="OnValueType1DoesSomethingElseWithPersonViaValueType1DoesSomethingElseWithCollectionAdded" />
									</plx:passParam>
								</plx:callNew>
							</plx:passParam>
							<plx:passParam>
								<plx:nullKeyword />
							</plx:passParam>
							<plx:passParam>
								<plx:callNew type="newDelegate" dataTypeName="CommittedCollectionModificationCallback">
									<plx:passTypeParam dataTypeName="ValueType1" />
									<plx:passTypeParam dataTypeName="Person" />
									<plx:passParam>
										<plx:callThis type="methodReference" name="OnValueType1DoesSomethingElseWithPersonViaValueType1DoesSomethingElseWithCollectionRemoved" />
									</plx:passParam>
								</plx:callNew>
							</plx:passParam>
						</plx:callNew>
					</plx:passParam>
				</plx:callInstance>
				<plx:callInstance name="Add">
					<plx:callObject>
						<plx:nameRef name="constraintEnforcementCollectionCallbacksByTypeDictionary" />
					</plx:callObject>
					<plx:passParam>
						<plx:callInstance type="property" name="TypeHandle">
							<plx:callObject>
								<plx:typeOf dataTypeName="ConstraintEnforcementCollection">
									<plx:passTypeParam dataTypeName="MalePerson" />
									<plx:passTypeParam dataTypeName="ChildPerson" />
								</plx:typeOf>
							</plx:callObject>
						</plx:callInstance>
					</plx:passParam>
					<plx:passParam>
						<plx:callNew dataTypeName="ConstraintEnforcementCollectionCallbacks">
							<plx:passTypeParam dataTypeName="MalePerson" />
							<plx:passTypeParam dataTypeName="ChildPerson" />
							<plx:passParam>
								<plx:callNew type="newDelegate" dataTypeName="PotentialCollectionModificationCallback">
									<plx:passTypeParam dataTypeName="MalePerson" />
									<plx:passTypeParam dataTypeName="ChildPerson" />
									<plx:passParam>
										<plx:callThis type="methodReference" name="OnMalePersonChildPersonViaFatherCollectionAdding" />
									</plx:passParam>
								</plx:callNew>
							</plx:passParam>
							<plx:passParam>
								<plx:callNew type="newDelegate" dataTypeName="CommittedCollectionModificationCallback">
									<plx:passTypeParam dataTypeName="MalePerson" />
									<plx:passTypeParam dataTypeName="ChildPerson" />
									<plx:passParam>
										<plx:callThis type="methodReference" name="OnMalePersonChildPersonViaFatherCollectionAdded" />
									</plx:passParam>
								</plx:callNew>
							</plx:passParam>
							<plx:passParam>
								<plx:nullKeyword />
							</plx:passParam>
							<plx:passParam>
								<plx:callNew type="newDelegate" dataTypeName="CommittedCollectionModificationCallback">
									<plx:passTypeParam dataTypeName="MalePerson" />
									<plx:passTypeParam dataTypeName="ChildPerson" />
									<plx:passParam>
										<plx:callThis type="methodReference" name="OnMalePersonChildPersonViaFatherCollectionRemoved" />
									</plx:passParam>
								</plx:callNew>
							</plx:passParam>
						</plx:callNew>
					</plx:passParam>
				</plx:callInstance>
				<plx:callInstance name="Add">
					<plx:callObject>
						<plx:nameRef name="constraintEnforcementCollectionCallbacksByTypeDictionary" />
					</plx:callObject>
					<plx:passParam>
						<plx:callInstance type="property" name="TypeHandle">
							<plx:callObject>
								<plx:typeOf dataTypeName="ConstraintEnforcementCollection">
									<plx:passTypeParam dataTypeName="FemalePerson" />
									<plx:passTypeParam dataTypeName="ChildPerson" />
								</plx:typeOf>
							</plx:callObject>
						</plx:callInstance>
					</plx:passParam>
					<plx:passParam>
						<plx:callNew dataTypeName="ConstraintEnforcementCollectionCallbacks">
							<plx:passTypeParam dataTypeName="FemalePerson" />
							<plx:passTypeParam dataTypeName="ChildPerson" />
							<plx:passParam>
								<plx:callNew type="newDelegate" dataTypeName="PotentialCollectionModificationCallback">
									<plx:passTypeParam dataTypeName="FemalePerson" />
									<plx:passTypeParam dataTypeName="ChildPerson" />
									<plx:passParam>
										<plx:callThis type="methodReference" name="OnFemalePersonChildPersonViaMotherCollectionAdding" />
									</plx:passParam>
								</plx:callNew>
							</plx:passParam>
							<plx:passParam>
								<plx:callNew type="newDelegate" dataTypeName="CommittedCollectionModificationCallback">
									<plx:passTypeParam dataTypeName="FemalePerson" />
									<plx:passTypeParam dataTypeName="ChildPerson" />
									<plx:passParam>
										<plx:callThis type="methodReference" name="OnFemalePersonChildPersonViaMotherCollectionAdded" />
									</plx:passParam>
								</plx:callNew>
							</plx:passParam>
							<plx:passParam>
								<plx:nullKeyword />
							</plx:passParam>
							<plx:passParam>
								<plx:callNew type="newDelegate" dataTypeName="CommittedCollectionModificationCallback">
									<plx:passTypeParam dataTypeName="FemalePerson" />
									<plx:passTypeParam dataTypeName="ChildPerson" />
									<plx:passParam>
										<plx:callThis type="methodReference" name="OnFemalePersonChildPersonViaMotherCollectionRemoved" />
									</plx:passParam>
								</plx:callNew>
							</plx:passParam>
						</plx:callNew>
					</plx:passParam>
				</plx:callInstance>
				<plx:assign>
					<plx:left>
						<plx:callThis type="field" name="_PersonReadOnlyCollection" />
					</plx:left>
					<plx:right>
						<plx:callNew dataTypeName="ReadOnlyCollection">
							<plx:passTypeParam dataTypeName="Person" />
							<plx:passParam>
								<plx:inlineStatement dataTypeName="List">
									<plx:passTypeParam dataTypeName="Person" />
									<plx:assign>
										<plx:left>
											<plx:callThis type="field" name="_PersonList" />
										</plx:left>
										<plx:right>
											<plx:callNew dataTypeName="List">
												<plx:passTypeParam dataTypeName="Person" />
											</plx:callNew>
										</plx:right>
									</plx:assign>
								</plx:inlineStatement>
							</plx:passParam>
						</plx:callNew>
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis type="field" name="_TaskReadOnlyCollection" />
					</plx:left>
					<plx:right>
						<plx:callNew dataTypeName="ReadOnlyCollection">
							<plx:passTypeParam dataTypeName="Task" />
							<plx:passParam>
								<plx:inlineStatement dataTypeName="List">
									<plx:passTypeParam dataTypeName="Task" />
									<plx:assign>
										<plx:left>
											<plx:callThis type="field" name="_TaskList" />
										</plx:left>
										<plx:right>
											<plx:callNew dataTypeName="List">
												<plx:passTypeParam dataTypeName="Task" />
											</plx:callNew>
										</plx:right>
									</plx:assign>
								</plx:inlineStatement>
							</plx:passParam>
						</plx:callNew>
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis type="field" name="_ValueType1ReadOnlyCollection" />
					</plx:left>
					<plx:right>
						<plx:callNew dataTypeName="ReadOnlyCollection">
							<plx:passTypeParam dataTypeName="ValueType1" />
							<plx:passParam>
								<plx:inlineStatement dataTypeName="List">
									<plx:passTypeParam dataTypeName="ValueType1" />
									<plx:assign>
										<plx:left>
											<plx:callThis type="field" name="_ValueType1List" />
										</plx:left>
										<plx:right>
											<plx:callNew dataTypeName="List">
												<plx:passTypeParam dataTypeName="ValueType1" />
											</plx:callNew>
										</plx:right>
									</plx:assign>
								</plx:inlineStatement>
							</plx:passParam>
						</plx:callNew>
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis type="field" name="_DeathReadOnlyCollection" />
					</plx:left>
					<plx:right>
						<plx:callNew dataTypeName="ReadOnlyCollection">
							<plx:passTypeParam dataTypeName="Death" />
							<plx:passParam>
								<plx:inlineStatement dataTypeName="List">
									<plx:passTypeParam dataTypeName="Death" />
									<plx:assign>
										<plx:left>
											<plx:callThis type="field" name="_DeathList" />
										</plx:left>
										<plx:right>
											<plx:callNew dataTypeName="List">
												<plx:passTypeParam dataTypeName="Death" />
											</plx:callNew>
										</plx:right>
									</plx:assign>
								</plx:inlineStatement>
							</plx:passParam>
						</plx:callNew>
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis type="field" name="_NaturalDeathReadOnlyCollection" />
					</plx:left>
					<plx:right>
						<plx:callNew dataTypeName="ReadOnlyCollection">
							<plx:passTypeParam dataTypeName="NaturalDeath" />
							<plx:passParam>
								<plx:inlineStatement dataTypeName="List">
									<plx:passTypeParam dataTypeName="NaturalDeath" />
									<plx:assign>
										<plx:left>
											<plx:callThis type="field" name="_NaturalDeathList" />
										</plx:left>
										<plx:right>
											<plx:callNew dataTypeName="List">
												<plx:passTypeParam dataTypeName="NaturalDeath" />
											</plx:callNew>
										</plx:right>
									</plx:assign>
								</plx:inlineStatement>
							</plx:passParam>
						</plx:callNew>
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis type="field" name="_UnnaturalDeathReadOnlyCollection" />
					</plx:left>
					<plx:right>
						<plx:callNew dataTypeName="ReadOnlyCollection">
							<plx:passTypeParam dataTypeName="UnnaturalDeath" />
							<plx:passParam>
								<plx:inlineStatement dataTypeName="List">
									<plx:passTypeParam dataTypeName="UnnaturalDeath" />
									<plx:assign>
										<plx:left>
											<plx:callThis type="field" name="_UnnaturalDeathList" />
										</plx:left>
										<plx:right>
											<plx:callNew dataTypeName="List">
												<plx:passTypeParam dataTypeName="UnnaturalDeath" />
											</plx:callNew>
										</plx:right>
									</plx:assign>
								</plx:inlineStatement>
							</plx:passParam>
						</plx:callNew>
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis type="field" name="_MalePersonReadOnlyCollection" />
					</plx:left>
					<plx:right>
						<plx:callNew dataTypeName="ReadOnlyCollection">
							<plx:passTypeParam dataTypeName="MalePerson" />
							<plx:passParam>
								<plx:inlineStatement dataTypeName="List">
									<plx:passTypeParam dataTypeName="MalePerson" />
									<plx:assign>
										<plx:left>
											<plx:callThis type="field" name="_MalePersonList" />
										</plx:left>
										<plx:right>
											<plx:callNew dataTypeName="List">
												<plx:passTypeParam dataTypeName="MalePerson" />
											</plx:callNew>
										</plx:right>
									</plx:assign>
								</plx:inlineStatement>
							</plx:passParam>
						</plx:callNew>
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis type="field" name="_FemalePersonReadOnlyCollection" />
					</plx:left>
					<plx:right>
						<plx:callNew dataTypeName="ReadOnlyCollection">
							<plx:passTypeParam dataTypeName="FemalePerson" />
							<plx:passParam>
								<plx:inlineStatement dataTypeName="List">
									<plx:passTypeParam dataTypeName="FemalePerson" />
									<plx:assign>
										<plx:left>
											<plx:callThis type="field" name="_FemalePersonList" />
										</plx:left>
										<plx:right>
											<plx:callNew dataTypeName="List">
												<plx:passTypeParam dataTypeName="FemalePerson" />
											</plx:callNew>
										</plx:right>
									</plx:assign>
								</plx:inlineStatement>
							</plx:passParam>
						</plx:callNew>
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis type="field" name="_ChildPersonReadOnlyCollection" />
					</plx:left>
					<plx:right>
						<plx:callNew dataTypeName="ReadOnlyCollection">
							<plx:passTypeParam dataTypeName="ChildPerson" />
							<plx:passParam>
								<plx:inlineStatement dataTypeName="List">
									<plx:passTypeParam dataTypeName="ChildPerson" />
									<plx:assign>
										<plx:left>
											<plx:callThis type="field" name="_ChildPersonList" />
										</plx:left>
										<plx:right>
											<plx:callNew dataTypeName="List">
												<plx:passTypeParam dataTypeName="ChildPerson" />
											</plx:callNew>
										</plx:right>
									</plx:assign>
								</plx:inlineStatement>
							</plx:passParam>
						</plx:callNew>
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis type="field" name="_PersonDrivesCarReadOnlyCollection" />
					</plx:left>
					<plx:right>
						<plx:callNew dataTypeName="ReadOnlyCollection">
							<plx:passTypeParam dataTypeName="PersonDrivesCar" />
							<plx:passParam>
								<plx:inlineStatement dataTypeName="List">
									<plx:passTypeParam dataTypeName="PersonDrivesCar" />
									<plx:assign>
										<plx:left>
											<plx:callThis type="field" name="_PersonDrivesCarList" />
										</plx:left>
										<plx:right>
											<plx:callNew dataTypeName="List">
												<plx:passTypeParam dataTypeName="PersonDrivesCar" />
											</plx:callNew>
										</plx:right>
									</plx:assign>
								</plx:inlineStatement>
							</plx:passParam>
						</plx:callNew>
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis type="field" name="_PersonBoughtCarFromPersonOnDateReadOnlyCollection" />
					</plx:left>
					<plx:right>
						<plx:callNew dataTypeName="ReadOnlyCollection">
							<plx:passTypeParam dataTypeName="PersonBoughtCarFromPersonOnDate" />
							<plx:passParam>
								<plx:inlineStatement dataTypeName="List">
									<plx:passTypeParam dataTypeName="PersonBoughtCarFromPersonOnDate" />
									<plx:assign>
										<plx:left>
											<plx:callThis type="field" name="_PersonBoughtCarFromPersonOnDateList" />
										</plx:left>
										<plx:right>
											<plx:callNew dataTypeName="List">
												<plx:passTypeParam dataTypeName="PersonBoughtCarFromPersonOnDate" />
											</plx:callNew>
										</plx:right>
									</plx:assign>
								</plx:inlineStatement>
							</plx:passParam>
						</plx:callNew>
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis type="field" name="_ReviewReadOnlyCollection" />
					</plx:left>
					<plx:right>
						<plx:callNew dataTypeName="ReadOnlyCollection">
							<plx:passTypeParam dataTypeName="Review" />
							<plx:passParam>
								<plx:inlineStatement dataTypeName="List">
									<plx:passTypeParam dataTypeName="Review" />
									<plx:assign>
										<plx:left>
											<plx:callThis type="field" name="_ReviewList" />
										</plx:left>
										<plx:right>
											<plx:callNew dataTypeName="List">
												<plx:passTypeParam dataTypeName="Review" />
											</plx:callNew>
										</plx:right>
									</plx:assign>
								</plx:inlineStatement>
							</plx:passParam>
						</plx:callNew>
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis type="field" name="_PersonHasNickNameReadOnlyCollection" />
					</plx:left>
					<plx:right>
						<plx:callNew dataTypeName="ReadOnlyCollection">
							<plx:passTypeParam dataTypeName="PersonHasNickName" />
							<plx:passParam>
								<plx:inlineStatement dataTypeName="List">
									<plx:passTypeParam dataTypeName="PersonHasNickName" />
									<plx:assign>
										<plx:left>
											<plx:callThis type="field" name="_PersonHasNickNameList" />
										</plx:left>
										<plx:right>
											<plx:callNew dataTypeName="List">
												<plx:passTypeParam dataTypeName="PersonHasNickName" />
											</plx:callNew>
										</plx:right>
									</plx:assign>
								</plx:inlineStatement>
							</plx:passParam>
						</plx:callNew>
					</plx:right>
				</plx:assign>
			</plx:function>
			<plx:pragma type="region" data="Exception Helpers" />
			<plx:function visibility="private" modifier="static" overload="true" name="GetDifferentContextsException">
				<plx:returns dataTypeName="ArgumentException" />
				<plx:return>
					<plx:callStatic name="GetDifferentContextsException" dataTypeName="SampleModelContext">
						<plx:passParam>
							<plx:valueKeyword stringize="true" />
						</plx:passParam>
					</plx:callStatic>
				</plx:return>
			</plx:function>
			<plx:function visibility="private" modifier="static" overload="true" name="GetDifferentContextsException">
				<plx:attribute dataTypeName="SuppressMessageAttribute" dataTypeQualifier="System.Diagnostics.CodeAnalysis">
					<plx:passParam>
						<plx:string>Microsoft.Usage</plx:string>
					</plx:passParam>
					<plx:passParam>
						<plx:string>CA2208:InstantiateArgumentExceptionsCorrectly</plx:string>
					</plx:passParam>
				</plx:attribute>
				<plx:param name="paramName" dataTypeName=".string" />
				<plx:returns dataTypeName="ArgumentException" />
				<plx:return>
					<plx:callNew dataTypeName="ArgumentException">
						<plx:passParam>
							<plx:string data="All objects in a relationship must be part of the same Context." />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="paramName" />
						</plx:passParam>
					</plx:callNew>
				</plx:return>
			</plx:function>
			<plx:function visibility="private" modifier="static" name="GetConstraintEnforcementFailedException">
				<plx:param name="paramName" dataTypeName=".string" />
				<plx:returns dataTypeName="ArgumentException" />
				<plx:return>
					<plx:callNew dataTypeName="ArgumentException">
						<plx:passParam>
							<plx:string data="Argument failed constraint enforcement." />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="paramName" />
						</plx:passParam>
					</plx:callNew>
				</plx:return>
			</plx:function>
			<plx:pragma type="closeRegion" data="Exception Helpers" />
			<plx:pragma type="region" data="Lookup and External Constraint Enforcement" />
			<plx:field visibility="private" readOnly="true" name="_PersonPersonIdDictionary" dataTypeName="Dictionary">
				<plx:passTypeParam dataTypeName=".i4" />
				<plx:passTypeParam dataTypeName="Person" />
				<plx:initialize>
					<plx:callNew dataTypeName="Dictionary">
						<plx:passTypeParam dataTypeName=".i4" />
						<plx:passTypeParam dataTypeName="Person" />
					</plx:callNew>
				</plx:initialize>
			</plx:field>
			<plx:function visibility="public" name="GetPersonByPersonId">
				<plx:interfaceMember memberName="GetPersonByPersonId" dataTypeName="ISampleModelContext" />
				<plx:param name="personId" dataTypeName=".i4" />
				<plx:returns dataTypeName="Person" />
				<plx:return>
					<plx:callInstance type="indexerCall" name=".implied">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonPersonIdDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="personId" />
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" name="TryGetPersonByPersonId">
				<plx:interfaceMember memberName="TryGetPersonByPersonId" dataTypeName="ISampleModelContext" />
				<plx:param name="personId" dataTypeName=".i4" />
				<plx:param type="out" name="person" dataTypeName="Person" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:callInstance name="TryGetValue">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonPersonIdDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="personId" />
						</plx:passParam>
						<plx:passParam type="out">
							<plx:nameRef type="parameter" name="person" />
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:field visibility="private" readOnly="true" name="_PersonFirstNameAndYMDDictionary" dataTypeName="Dictionary">
				<plx:passTypeParam dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".string" />
					<plx:passTypeParam dataTypeName=".date" />
				</plx:passTypeParam>
				<plx:passTypeParam dataTypeName="Person" />
				<plx:initialize>
					<plx:callNew dataTypeName="Dictionary">
						<plx:passTypeParam dataTypeName="Tuple">
							<plx:passTypeParam dataTypeName=".string" />
							<plx:passTypeParam dataTypeName=".date" />
						</plx:passTypeParam>
						<plx:passTypeParam dataTypeName="Person" />
					</plx:callNew>
				</plx:initialize>
			</plx:field>
			<plx:function visibility="public" name="GetPersonByFirstNameAndYMD">
				<plx:interfaceMember memberName="GetPersonByFirstNameAndYMD" dataTypeName="ISampleModelContext" />
				<plx:param name="firstName" dataTypeName=".string" />
				<plx:param name="YMD" dataTypeName=".date" />
				<plx:returns dataTypeName="Person" />
				<plx:return>
					<plx:callInstance type="indexerCall" name=".implied">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonFirstNameAndYMDDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
								<plx:passMemberTypeParam dataTypeName=".string" />
								<plx:passMemberTypeParam dataTypeName=".date" />
								<plx:passParam>
									<plx:nameRef type="parameter" name="firstName" />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="YMD" />
								</plx:passParam>
							</plx:callStatic>
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" name="TryGetPersonByFirstNameAndYMD">
				<plx:interfaceMember memberName="TryGetPersonByFirstNameAndYMD" dataTypeName="ISampleModelContext" />
				<plx:param name="firstName" dataTypeName=".string" />
				<plx:param name="YMD" dataTypeName=".date" />
				<plx:param type="out" name="person" dataTypeName="Person" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:callInstance name="TryGetValue">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonFirstNameAndYMDDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
								<plx:passMemberTypeParam dataTypeName=".string" />
								<plx:passMemberTypeParam dataTypeName=".date" />
								<plx:passParam>
									<plx:nameRef type="parameter" name="firstName" />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="YMD" />
								</plx:passParam>
							</plx:callStatic>
						</plx:passParam>
						<plx:passParam type="out">
							<plx:nameRef type="parameter" name="person" />
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnFirstNameAndYMDChanging">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="newValue" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".string" />
					<plx:passTypeParam dataTypeName=".date" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="newValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:local name="currentInstance" dataTypeName="Person" />
					<plx:branch>
						<plx:condition>
							<plx:callInstance name="TryGetValue">
								<plx:callObject>
									<plx:callThis type="field" name="_PersonFirstNameAndYMDDictionary" />
								</plx:callObject>
								<plx:passParam>
									<plx:nameRef type="parameter" name="newValue" />
								</plx:passParam>
								<plx:passParam type="out">
									<plx:nameRef name="currentInstance" />
								</plx:passParam>
							</plx:callInstance>
						</plx:condition>
						<plx:return>
							<plx:binaryOperator type="identityEquality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef name="currentInstance" />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="instance" />
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:return>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnFirstNameAndYMDChanged">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="oldValue" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".string" />
					<plx:passTypeParam dataTypeName=".date" />
				</plx:param>
				<plx:param name="newValue" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".string" />
					<plx:passTypeParam dataTypeName=".date" />
				</plx:param>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:callInstance name="Remove">
						<plx:callObject>
							<plx:callThis name="_PersonFirstNameAndYMDDictionary" type="field" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="oldValue" />
						</plx:passParam>
					</plx:callInstance>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="newValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:callInstance name="Add">
						<plx:callObject>
							<plx:callThis name="_PersonFirstNameAndYMDDictionary" type="field" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="newValue" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="instance" />
						</plx:passParam>
					</plx:callInstance>
				</plx:branch>
			</plx:function>
			<plx:field visibility="private" readOnly="true" name="_PersonLastNameAndYMDDictionary" dataTypeName="Dictionary">
				<plx:passTypeParam dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".string" />
					<plx:passTypeParam dataTypeName=".date" />
				</plx:passTypeParam>
				<plx:passTypeParam dataTypeName="Person" />
				<plx:initialize>
					<plx:callNew dataTypeName="Dictionary">
						<plx:passTypeParam dataTypeName="Tuple">
							<plx:passTypeParam dataTypeName=".string" />
							<plx:passTypeParam dataTypeName=".date" />
						</plx:passTypeParam>
						<plx:passTypeParam dataTypeName="Person" />
					</plx:callNew>
				</plx:initialize>
			</plx:field>
			<plx:function visibility="public" name="GetPersonByLastNameAndYMD">
				<plx:interfaceMember memberName="GetPersonByLastNameAndYMD" dataTypeName="ISampleModelContext" />
				<plx:param name="lastName" dataTypeName=".string" />
				<plx:param name="YMD" dataTypeName=".date" />
				<plx:returns dataTypeName="Person" />
				<plx:return>
					<plx:callInstance type="indexerCall" name=".implied">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonLastNameAndYMDDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
								<plx:passMemberTypeParam dataTypeName=".string" />
								<plx:passMemberTypeParam dataTypeName=".date" />
								<plx:passParam>
									<plx:nameRef type="parameter" name="lastName" />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="YMD" />
								</plx:passParam>
							</plx:callStatic>
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" name="TryGetPersonByLastNameAndYMD">
				<plx:interfaceMember memberName="TryGetPersonByLastNameAndYMD" dataTypeName="ISampleModelContext" />
				<plx:param name="lastName" dataTypeName=".string" />
				<plx:param name="YMD" dataTypeName=".date" />
				<plx:param type="out" name="person" dataTypeName="Person" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:callInstance name="TryGetValue">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonLastNameAndYMDDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
								<plx:passMemberTypeParam dataTypeName=".string" />
								<plx:passMemberTypeParam dataTypeName=".date" />
								<plx:passParam>
									<plx:nameRef type="parameter" name="lastName" />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="YMD" />
								</plx:passParam>
							</plx:callStatic>
						</plx:passParam>
						<plx:passParam type="out">
							<plx:nameRef type="parameter" name="person" />
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnLastNameAndYMDChanging">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="newValue" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".string" />
					<plx:passTypeParam dataTypeName=".date" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="newValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:local name="currentInstance" dataTypeName="Person" />
					<plx:branch>
						<plx:condition>
							<plx:callInstance name="TryGetValue">
								<plx:callObject>
									<plx:callThis type="field" name="_PersonLastNameAndYMDDictionary" />
								</plx:callObject>
								<plx:passParam>
									<plx:nameRef type="parameter" name="newValue" />
								</plx:passParam>
								<plx:passParam type="out">
									<plx:nameRef name="currentInstance" />
								</plx:passParam>
							</plx:callInstance>
						</plx:condition>
						<plx:return>
							<plx:binaryOperator type="identityEquality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef name="currentInstance" />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="instance" />
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:return>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnLastNameAndYMDChanged">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="oldValue" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".string" />
					<plx:passTypeParam dataTypeName=".date" />
				</plx:param>
				<plx:param name="newValue" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".string" />
					<plx:passTypeParam dataTypeName=".date" />
				</plx:param>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:callInstance name="Remove">
						<plx:callObject>
							<plx:callThis name="_PersonLastNameAndYMDDictionary" type="field" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="oldValue" />
						</plx:passParam>
					</plx:callInstance>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="newValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:callInstance name="Add">
						<plx:callObject>
							<plx:callThis name="_PersonLastNameAndYMDDictionary" type="field" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="newValue" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="instance" />
						</plx:passParam>
					</plx:callInstance>
				</plx:branch>
			</plx:function>
			<plx:field visibility="private" readOnly="true" name="_PersonOptionalUniqueStringDictionary" dataTypeName="Dictionary">
				<plx:passTypeParam dataTypeName=".string" />
				<plx:passTypeParam dataTypeName="Person" />
				<plx:initialize>
					<plx:callNew dataTypeName="Dictionary">
						<plx:passTypeParam dataTypeName=".string" />
						<plx:passTypeParam dataTypeName="Person" />
					</plx:callNew>
				</plx:initialize>
			</plx:field>
			<plx:function visibility="public" name="GetPersonByOptionalUniqueString">
				<plx:interfaceMember memberName="GetPersonByOptionalUniqueString" dataTypeName="ISampleModelContext" />
				<plx:param name="optionalUniqueString" dataTypeName=".string" />
				<plx:returns dataTypeName="Person" />
				<plx:return>
					<plx:callInstance type="indexerCall" name=".implied">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonOptionalUniqueStringDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="optionalUniqueString" />
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" name="TryGetPersonByOptionalUniqueString">
				<plx:interfaceMember memberName="TryGetPersonByOptionalUniqueString" dataTypeName="ISampleModelContext" />
				<plx:param name="optionalUniqueString" dataTypeName=".string" />
				<plx:param type="out" name="person" dataTypeName="Person" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:callInstance name="TryGetValue">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonOptionalUniqueStringDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="optionalUniqueString" />
						</plx:passParam>
						<plx:passParam type="out">
							<plx:nameRef type="parameter" name="person" />
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:field visibility="private" readOnly="true" name="_PersonWifeDictionary" dataTypeName="Dictionary">
				<plx:passTypeParam dataTypeName="Person" />
				<plx:passTypeParam dataTypeName="Person" />
				<plx:initialize>
					<plx:callNew dataTypeName="Dictionary">
						<plx:passTypeParam dataTypeName="Person" />
						<plx:passTypeParam dataTypeName="Person" />
					</plx:callNew>
				</plx:initialize>
			</plx:field>
			<plx:function visibility="public" name="GetPersonByWife">
				<plx:interfaceMember memberName="GetPersonByWife" dataTypeName="ISampleModelContext" />
				<plx:param name="wife" dataTypeName="Person" />
				<plx:returns dataTypeName="Person" />
				<plx:return>
					<plx:callInstance type="indexerCall" name=".implied">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonWifeDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="wife" />
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" name="TryGetPersonByWife">
				<plx:interfaceMember memberName="TryGetPersonByWife" dataTypeName="ISampleModelContext" />
				<plx:param name="wife" dataTypeName="Person" />
				<plx:param type="out" name="person" dataTypeName="Person" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:callInstance name="TryGetValue">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonWifeDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="wife" />
						</plx:passParam>
						<plx:passParam type="out">
							<plx:nameRef type="parameter" name="person" />
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:field visibility="private" readOnly="true" name="_PersonVinDictionary" dataTypeName="Dictionary">
				<plx:passTypeParam dataTypeName=".u4" />
				<plx:passTypeParam dataTypeName="Person" />
				<plx:initialize>
					<plx:callNew dataTypeName="Dictionary">
						<plx:passTypeParam dataTypeName=".u4" />
						<plx:passTypeParam dataTypeName="Person" />
					</plx:callNew>
				</plx:initialize>
			</plx:field>
			<plx:function visibility="public" name="GetPersonByVin">
				<plx:interfaceMember memberName="GetPersonByVin" dataTypeName="ISampleModelContext" />
				<plx:param name="vin" dataTypeName=".u4" />
				<plx:returns dataTypeName="Person" />
				<plx:return>
					<plx:callInstance type="indexerCall" name=".implied">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonVinDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="vin" />
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" name="TryGetPersonByVin">
				<plx:interfaceMember memberName="TryGetPersonByVin" dataTypeName="ISampleModelContext" />
				<plx:param name="vin" dataTypeName=".u4" />
				<plx:param type="out" name="person" dataTypeName="Person" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:callInstance name="TryGetValue">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonVinDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="vin" />
						</plx:passParam>
						<plx:passParam type="out">
							<plx:nameRef type="parameter" name="person" />
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:field visibility="private" readOnly="true" name="_PersonOptionalUniqueDecimalDictionary" dataTypeName="Dictionary">
				<plx:passTypeParam dataTypeName=".i4" />
				<plx:passTypeParam dataTypeName="Person" />
				<plx:initialize>
					<plx:callNew dataTypeName="Dictionary">
						<plx:passTypeParam dataTypeName=".i4" />
						<plx:passTypeParam dataTypeName="Person" />
					</plx:callNew>
				</plx:initialize>
			</plx:field>
			<plx:function visibility="public" name="GetPersonByOptionalUniqueDecimal">
				<plx:interfaceMember memberName="GetPersonByOptionalUniqueDecimal" dataTypeName="ISampleModelContext" />
				<plx:param name="optionalUniqueDecimal" dataTypeName=".i4" />
				<plx:returns dataTypeName="Person" />
				<plx:return>
					<plx:callInstance type="indexerCall" name=".implied">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonOptionalUniqueDecimalDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="optionalUniqueDecimal" />
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" name="TryGetPersonByOptionalUniqueDecimal">
				<plx:interfaceMember memberName="TryGetPersonByOptionalUniqueDecimal" dataTypeName="ISampleModelContext" />
				<plx:param name="optionalUniqueDecimal" dataTypeName=".i4" />
				<plx:param type="out" name="person" dataTypeName="Person" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:callInstance name="TryGetValue">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonOptionalUniqueDecimalDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="optionalUniqueDecimal" />
						</plx:passParam>
						<plx:passParam type="out">
							<plx:nameRef type="parameter" name="person" />
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:field visibility="private" readOnly="true" name="_PersonMandatoryUniqueDecimalDictionary" dataTypeName="Dictionary">
				<plx:passTypeParam dataTypeName=".i4" />
				<plx:passTypeParam dataTypeName="Person" />
				<plx:initialize>
					<plx:callNew dataTypeName="Dictionary">
						<plx:passTypeParam dataTypeName=".i4" />
						<plx:passTypeParam dataTypeName="Person" />
					</plx:callNew>
				</plx:initialize>
			</plx:field>
			<plx:function visibility="public" name="GetPersonByMandatoryUniqueDecimal">
				<plx:interfaceMember memberName="GetPersonByMandatoryUniqueDecimal" dataTypeName="ISampleModelContext" />
				<plx:param name="mandatoryUniqueDecimal" dataTypeName=".i4" />
				<plx:returns dataTypeName="Person" />
				<plx:return>
					<plx:callInstance type="indexerCall" name=".implied">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonMandatoryUniqueDecimalDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="mandatoryUniqueDecimal" />
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" name="TryGetPersonByMandatoryUniqueDecimal">
				<plx:interfaceMember memberName="TryGetPersonByMandatoryUniqueDecimal" dataTypeName="ISampleModelContext" />
				<plx:param name="mandatoryUniqueDecimal" dataTypeName=".i4" />
				<plx:param type="out" name="person" dataTypeName="Person" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:callInstance name="TryGetValue">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonMandatoryUniqueDecimalDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="mandatoryUniqueDecimal" />
						</plx:passParam>
						<plx:passParam type="out">
							<plx:nameRef type="parameter" name="person" />
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:field visibility="private" readOnly="true" name="_PersonMandatoryUniqueStringDictionary" dataTypeName="Dictionary">
				<plx:passTypeParam dataTypeName=".string" />
				<plx:passTypeParam dataTypeName="Person" />
				<plx:initialize>
					<plx:callNew dataTypeName="Dictionary">
						<plx:passTypeParam dataTypeName=".string" />
						<plx:passTypeParam dataTypeName="Person" />
					</plx:callNew>
				</plx:initialize>
			</plx:field>
			<plx:function visibility="public" name="GetPersonByMandatoryUniqueString">
				<plx:interfaceMember memberName="GetPersonByMandatoryUniqueString" dataTypeName="ISampleModelContext" />
				<plx:param name="mandatoryUniqueString" dataTypeName=".string" />
				<plx:returns dataTypeName="Person" />
				<plx:return>
					<plx:callInstance type="indexerCall" name=".implied">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonMandatoryUniqueStringDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="mandatoryUniqueString" />
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" name="TryGetPersonByMandatoryUniqueString">
				<plx:interfaceMember memberName="TryGetPersonByMandatoryUniqueString" dataTypeName="ISampleModelContext" />
				<plx:param name="mandatoryUniqueString" dataTypeName=".string" />
				<plx:param type="out" name="person" dataTypeName="Person" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:callInstance name="TryGetValue">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonMandatoryUniqueStringDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="mandatoryUniqueString" />
						</plx:passParam>
						<plx:passParam type="out">
							<plx:nameRef type="parameter" name="person" />
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:field visibility="private" readOnly="true" name="_PersonOptionalUniqueTinyIntDictionary" dataTypeName="Dictionary">
				<plx:passTypeParam dataTypeName=".u1" />
				<plx:passTypeParam dataTypeName="Person" />
				<plx:initialize>
					<plx:callNew dataTypeName="Dictionary">
						<plx:passTypeParam dataTypeName=".u1" />
						<plx:passTypeParam dataTypeName="Person" />
					</plx:callNew>
				</plx:initialize>
			</plx:field>
			<plx:function visibility="public" name="GetPersonByOptionalUniqueTinyInt">
				<plx:interfaceMember memberName="GetPersonByOptionalUniqueTinyInt" dataTypeName="ISampleModelContext" />
				<plx:param name="optionalUniqueTinyInt" dataTypeName=".u1" />
				<plx:returns dataTypeName="Person" />
				<plx:return>
					<plx:callInstance type="indexerCall" name=".implied">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonOptionalUniqueTinyIntDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="optionalUniqueTinyInt" />
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" name="TryGetPersonByOptionalUniqueTinyInt">
				<plx:interfaceMember memberName="TryGetPersonByOptionalUniqueTinyInt" dataTypeName="ISampleModelContext" />
				<plx:param name="optionalUniqueTinyInt" dataTypeName=".u1" />
				<plx:param type="out" name="person" dataTypeName="Person" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:callInstance name="TryGetValue">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonOptionalUniqueTinyIntDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="optionalUniqueTinyInt" />
						</plx:passParam>
						<plx:passParam type="out">
							<plx:nameRef type="parameter" name="person" />
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:field visibility="private" readOnly="true" name="_PersonMandatoryUniqueTinyIntDictionary" dataTypeName="Dictionary">
				<plx:passTypeParam dataTypeName=".u1" />
				<plx:passTypeParam dataTypeName="Person" />
				<plx:initialize>
					<plx:callNew dataTypeName="Dictionary">
						<plx:passTypeParam dataTypeName=".u1" />
						<plx:passTypeParam dataTypeName="Person" />
					</plx:callNew>
				</plx:initialize>
			</plx:field>
			<plx:function visibility="public" name="GetPersonByMandatoryUniqueTinyInt">
				<plx:interfaceMember memberName="GetPersonByMandatoryUniqueTinyInt" dataTypeName="ISampleModelContext" />
				<plx:param name="mandatoryUniqueTinyInt" dataTypeName=".u1" />
				<plx:returns dataTypeName="Person" />
				<plx:return>
					<plx:callInstance type="indexerCall" name=".implied">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonMandatoryUniqueTinyIntDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="mandatoryUniqueTinyInt" />
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" name="TryGetPersonByMandatoryUniqueTinyInt">
				<plx:interfaceMember memberName="TryGetPersonByMandatoryUniqueTinyInt" dataTypeName="ISampleModelContext" />
				<plx:param name="mandatoryUniqueTinyInt" dataTypeName=".u1" />
				<plx:param type="out" name="person" dataTypeName="Person" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:callInstance name="TryGetValue">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonMandatoryUniqueTinyIntDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="mandatoryUniqueTinyInt" />
						</plx:passParam>
						<plx:passParam type="out">
							<plx:nameRef type="parameter" name="person" />
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:field visibility="private" readOnly="true" name="_TaskTaskIdDictionary" dataTypeName="Dictionary">
				<plx:passTypeParam dataTypeName=".i4" />
				<plx:passTypeParam dataTypeName="Task" />
				<plx:initialize>
					<plx:callNew dataTypeName="Dictionary">
						<plx:passTypeParam dataTypeName=".i4" />
						<plx:passTypeParam dataTypeName="Task" />
					</plx:callNew>
				</plx:initialize>
			</plx:field>
			<plx:function visibility="public" name="GetTaskByTaskId">
				<plx:interfaceMember memberName="GetTaskByTaskId" dataTypeName="ISampleModelContext" />
				<plx:param name="taskId" dataTypeName=".i4" />
				<plx:returns dataTypeName="Task" />
				<plx:return>
					<plx:callInstance type="indexerCall" name=".implied">
						<plx:callObject>
							<plx:callThis type="field" name="_TaskTaskIdDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="taskId" />
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" name="TryGetTaskByTaskId">
				<plx:interfaceMember memberName="TryGetTaskByTaskId" dataTypeName="ISampleModelContext" />
				<plx:param name="taskId" dataTypeName=".i4" />
				<plx:param type="out" name="task" dataTypeName="Task" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:callInstance name="TryGetValue">
						<plx:callObject>
							<plx:callThis type="field" name="_TaskTaskIdDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="taskId" />
						</plx:passParam>
						<plx:passParam type="out">
							<plx:nameRef type="parameter" name="task" />
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:field visibility="private" readOnly="true" name="_ValueType1ValueType1ValueDictionary" dataTypeName="Dictionary">
				<plx:passTypeParam dataTypeName=".i4" />
				<plx:passTypeParam dataTypeName="ValueType1" />
				<plx:initialize>
					<plx:callNew dataTypeName="Dictionary">
						<plx:passTypeParam dataTypeName=".i4" />
						<plx:passTypeParam dataTypeName="ValueType1" />
					</plx:callNew>
				</plx:initialize>
			</plx:field>
			<plx:function visibility="public" name="GetValueType1ByValueType1Value">
				<plx:interfaceMember memberName="GetValueType1ByValueType1Value" dataTypeName="ISampleModelContext" />
				<plx:param name="valueType1Value" dataTypeName=".i4" />
				<plx:returns dataTypeName="ValueType1" />
				<plx:return>
					<plx:callInstance type="indexerCall" name=".implied">
						<plx:callObject>
							<plx:callThis type="field" name="_ValueType1ValueType1ValueDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="valueType1Value" />
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" name="TryGetValueType1ByValueType1Value">
				<plx:interfaceMember memberName="TryGetValueType1ByValueType1Value" dataTypeName="ISampleModelContext" />
				<plx:param name="valueType1Value" dataTypeName=".i4" />
				<plx:param type="out" name="valueType1" dataTypeName="ValueType1" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:callInstance name="TryGetValue">
						<plx:callObject>
							<plx:callThis type="field" name="_ValueType1ValueType1ValueDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="valueType1Value" />
						</plx:passParam>
						<plx:passParam type="out">
							<plx:nameRef type="parameter" name="valueType1" />
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:field visibility="private" readOnly="true" name="_ChildPersonFatherAndBirthOrderNrAndMotherDictionary" dataTypeName="Dictionary">
				<plx:passTypeParam dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="MalePerson" />
					<plx:passTypeParam dataTypeName=".u4" />
					<plx:passTypeParam dataTypeName="FemalePerson" />
				</plx:passTypeParam>
				<plx:passTypeParam dataTypeName="ChildPerson" />
				<plx:initialize>
					<plx:callNew dataTypeName="Dictionary">
						<plx:passTypeParam dataTypeName="Tuple">
							<plx:passTypeParam dataTypeName="MalePerson" />
							<plx:passTypeParam dataTypeName=".u4" />
							<plx:passTypeParam dataTypeName="FemalePerson" />
						</plx:passTypeParam>
						<plx:passTypeParam dataTypeName="ChildPerson" />
					</plx:callNew>
				</plx:initialize>
			</plx:field>
			<plx:function visibility="public" name="GetChildPersonByFatherAndBirthOrderNrAndMother">
				<plx:interfaceMember memberName="GetChildPersonByFatherAndBirthOrderNrAndMother" dataTypeName="ISampleModelContext" />
				<plx:param name="father" dataTypeName="MalePerson" />
				<plx:param name="birthOrderNr" dataTypeName=".u4" />
				<plx:param name="mother" dataTypeName="FemalePerson" />
				<plx:returns dataTypeName="ChildPerson" />
				<plx:return>
					<plx:callInstance type="indexerCall" name=".implied">
						<plx:callObject>
							<plx:callThis type="field" name="_ChildPersonFatherAndBirthOrderNrAndMotherDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
								<plx:passMemberTypeParam dataTypeName="MalePerson" />
								<plx:passMemberTypeParam dataTypeName=".u4" />
								<plx:passMemberTypeParam dataTypeName="FemalePerson" />
								<plx:passParam>
									<plx:nameRef type="parameter" name="father" />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="birthOrderNr" />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="mother" />
								</plx:passParam>
							</plx:callStatic>
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" name="TryGetChildPersonByFatherAndBirthOrderNrAndMother">
				<plx:interfaceMember memberName="TryGetChildPersonByFatherAndBirthOrderNrAndMother" dataTypeName="ISampleModelContext" />
				<plx:param name="father" dataTypeName="MalePerson" />
				<plx:param name="birthOrderNr" dataTypeName=".u4" />
				<plx:param name="mother" dataTypeName="FemalePerson" />
				<plx:param type="out" name="childPerson" dataTypeName="ChildPerson" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:callInstance name="TryGetValue">
						<plx:callObject>
							<plx:callThis type="field" name="_ChildPersonFatherAndBirthOrderNrAndMotherDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
								<plx:passMemberTypeParam dataTypeName="MalePerson" />
								<plx:passMemberTypeParam dataTypeName=".u4" />
								<plx:passMemberTypeParam dataTypeName="FemalePerson" />
								<plx:passParam>
									<plx:nameRef type="parameter" name="father" />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="birthOrderNr" />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="mother" />
								</plx:passParam>
							</plx:callStatic>
						</plx:passParam>
						<plx:passParam type="out">
							<plx:nameRef type="parameter" name="childPerson" />
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnFatherAndBirthOrderNrAndMotherChanging">
				<plx:param name="instance" dataTypeName="ChildPerson" />
				<plx:param name="newValue" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="MalePerson" />
					<plx:passTypeParam dataTypeName=".u4" />
					<plx:passTypeParam dataTypeName="FemalePerson" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="newValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:local name="currentInstance" dataTypeName="ChildPerson" />
					<plx:branch>
						<plx:condition>
							<plx:callInstance name="TryGetValue">
								<plx:callObject>
									<plx:callThis type="field" name="_ChildPersonFatherAndBirthOrderNrAndMotherDictionary" />
								</plx:callObject>
								<plx:passParam>
									<plx:nameRef type="parameter" name="newValue" />
								</plx:passParam>
								<plx:passParam type="out">
									<plx:nameRef name="currentInstance" />
								</plx:passParam>
							</plx:callInstance>
						</plx:condition>
						<plx:return>
							<plx:binaryOperator type="identityEquality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef name="currentInstance" />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="instance" />
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:return>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnFatherAndBirthOrderNrAndMotherChanged">
				<plx:param name="instance" dataTypeName="ChildPerson" />
				<plx:param name="oldValue" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="MalePerson" />
					<plx:passTypeParam dataTypeName=".u4" />
					<plx:passTypeParam dataTypeName="FemalePerson" />
				</plx:param>
				<plx:param name="newValue" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="MalePerson" />
					<plx:passTypeParam dataTypeName=".u4" />
					<plx:passTypeParam dataTypeName="FemalePerson" />
				</plx:param>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:callInstance name="Remove">
						<plx:callObject>
							<plx:callThis name="_ChildPersonFatherAndBirthOrderNrAndMotherDictionary" type="field" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="oldValue" />
						</plx:passParam>
					</plx:callInstance>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="newValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:callInstance name="Add">
						<plx:callObject>
							<plx:callThis name="_ChildPersonFatherAndBirthOrderNrAndMotherDictionary" type="field" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="newValue" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="instance" />
						</plx:passParam>
					</plx:callInstance>
				</plx:branch>
			</plx:function>
			<plx:field visibility="private" readOnly="true" name="_PersonDrivesCarVinAndDrivenByPersonDictionary" dataTypeName="Dictionary">
				<plx:passTypeParam dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".u4" />
					<plx:passTypeParam dataTypeName="Person" />
				</plx:passTypeParam>
				<plx:passTypeParam dataTypeName="PersonDrivesCar" />
				<plx:initialize>
					<plx:callNew dataTypeName="Dictionary">
						<plx:passTypeParam dataTypeName="Tuple">
							<plx:passTypeParam dataTypeName=".u4" />
							<plx:passTypeParam dataTypeName="Person" />
						</plx:passTypeParam>
						<plx:passTypeParam dataTypeName="PersonDrivesCar" />
					</plx:callNew>
				</plx:initialize>
			</plx:field>
			<plx:function visibility="public" name="GetPersonDrivesCarByVinAndDrivenByPerson">
				<plx:interfaceMember memberName="GetPersonDrivesCarByVinAndDrivenByPerson" dataTypeName="ISampleModelContext" />
				<plx:param name="vin" dataTypeName=".u4" />
				<plx:param name="drivenByPerson" dataTypeName="Person" />
				<plx:returns dataTypeName="PersonDrivesCar" />
				<plx:return>
					<plx:callInstance type="indexerCall" name=".implied">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonDrivesCarVinAndDrivenByPersonDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
								<plx:passMemberTypeParam dataTypeName=".u4" />
								<plx:passMemberTypeParam dataTypeName="Person" />
								<plx:passParam>
									<plx:nameRef type="parameter" name="vin" />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="drivenByPerson" />
								</plx:passParam>
							</plx:callStatic>
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" name="TryGetPersonDrivesCarByVinAndDrivenByPerson">
				<plx:interfaceMember memberName="TryGetPersonDrivesCarByVinAndDrivenByPerson" dataTypeName="ISampleModelContext" />
				<plx:param name="vin" dataTypeName=".u4" />
				<plx:param name="drivenByPerson" dataTypeName="Person" />
				<plx:param type="out" name="personDrivesCar" dataTypeName="PersonDrivesCar" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:callInstance name="TryGetValue">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonDrivesCarVinAndDrivenByPersonDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
								<plx:passMemberTypeParam dataTypeName=".u4" />
								<plx:passMemberTypeParam dataTypeName="Person" />
								<plx:passParam>
									<plx:nameRef type="parameter" name="vin" />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="drivenByPerson" />
								</plx:passParam>
							</plx:callStatic>
						</plx:passParam>
						<plx:passParam type="out">
							<plx:nameRef type="parameter" name="personDrivesCar" />
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnVinAndDrivenByPersonChanging">
				<plx:param name="instance" dataTypeName="PersonDrivesCar" />
				<plx:param name="newValue" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".u4" />
					<plx:passTypeParam dataTypeName="Person" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="newValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:local name="currentInstance" dataTypeName="PersonDrivesCar" />
					<plx:branch>
						<plx:condition>
							<plx:callInstance name="TryGetValue">
								<plx:callObject>
									<plx:callThis type="field" name="_PersonDrivesCarVinAndDrivenByPersonDictionary" />
								</plx:callObject>
								<plx:passParam>
									<plx:nameRef type="parameter" name="newValue" />
								</plx:passParam>
								<plx:passParam type="out">
									<plx:nameRef name="currentInstance" />
								</plx:passParam>
							</plx:callInstance>
						</plx:condition>
						<plx:return>
							<plx:binaryOperator type="identityEquality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef name="currentInstance" />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="instance" />
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:return>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnVinAndDrivenByPersonChanged">
				<plx:param name="instance" dataTypeName="PersonDrivesCar" />
				<plx:param name="oldValue" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".u4" />
					<plx:passTypeParam dataTypeName="Person" />
				</plx:param>
				<plx:param name="newValue" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".u4" />
					<plx:passTypeParam dataTypeName="Person" />
				</plx:param>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:callInstance name="Remove">
						<plx:callObject>
							<plx:callThis name="_PersonDrivesCarVinAndDrivenByPersonDictionary" type="field" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="oldValue" />
						</plx:passParam>
					</plx:callInstance>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="newValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:callInstance name="Add">
						<plx:callObject>
							<plx:callThis name="_PersonDrivesCarVinAndDrivenByPersonDictionary" type="field" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="newValue" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="instance" />
						</plx:passParam>
					</plx:callInstance>
				</plx:branch>
			</plx:function>
			<plx:field visibility="private" readOnly="true" name="_PersonBoughtCarFromPersonOnDateBuyerAndVinAndSellerDictionary" dataTypeName="Dictionary">
				<plx:passTypeParam dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="Person" />
					<plx:passTypeParam dataTypeName=".u4" />
					<plx:passTypeParam dataTypeName="Person" />
				</plx:passTypeParam>
				<plx:passTypeParam dataTypeName="PersonBoughtCarFromPersonOnDate" />
				<plx:initialize>
					<plx:callNew dataTypeName="Dictionary">
						<plx:passTypeParam dataTypeName="Tuple">
							<plx:passTypeParam dataTypeName="Person" />
							<plx:passTypeParam dataTypeName=".u4" />
							<plx:passTypeParam dataTypeName="Person" />
						</plx:passTypeParam>
						<plx:passTypeParam dataTypeName="PersonBoughtCarFromPersonOnDate" />
					</plx:callNew>
				</plx:initialize>
			</plx:field>
			<plx:function visibility="public" name="GetPersonBoughtCarFromPersonOnDateByBuyerAndVinAndSeller">
				<plx:interfaceMember memberName="GetPersonBoughtCarFromPersonOnDateByBuyerAndVinAndSeller" dataTypeName="ISampleModelContext" />
				<plx:param name="buyer" dataTypeName="Person" />
				<plx:param name="vin" dataTypeName=".u4" />
				<plx:param name="seller" dataTypeName="Person" />
				<plx:returns dataTypeName="PersonBoughtCarFromPersonOnDate" />
				<plx:return>
					<plx:callInstance type="indexerCall" name=".implied">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonBoughtCarFromPersonOnDateBuyerAndVinAndSellerDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
								<plx:passMemberTypeParam dataTypeName="Person" />
								<plx:passMemberTypeParam dataTypeName=".u4" />
								<plx:passMemberTypeParam dataTypeName="Person" />
								<plx:passParam>
									<plx:nameRef type="parameter" name="buyer" />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="vin" />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="seller" />
								</plx:passParam>
							</plx:callStatic>
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" name="TryGetPersonBoughtCarFromPersonOnDateByBuyerAndVinAndSeller">
				<plx:interfaceMember memberName="TryGetPersonBoughtCarFromPersonOnDateByBuyerAndVinAndSeller" dataTypeName="ISampleModelContext" />
				<plx:param name="buyer" dataTypeName="Person" />
				<plx:param name="vin" dataTypeName=".u4" />
				<plx:param name="seller" dataTypeName="Person" />
				<plx:param type="out" name="personBoughtCarFromPersonOnDate" dataTypeName="PersonBoughtCarFromPersonOnDate" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:callInstance name="TryGetValue">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonBoughtCarFromPersonOnDateBuyerAndVinAndSellerDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
								<plx:passMemberTypeParam dataTypeName="Person" />
								<plx:passMemberTypeParam dataTypeName=".u4" />
								<plx:passMemberTypeParam dataTypeName="Person" />
								<plx:passParam>
									<plx:nameRef type="parameter" name="buyer" />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="vin" />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="seller" />
								</plx:passParam>
							</plx:callStatic>
						</plx:passParam>
						<plx:passParam type="out">
							<plx:nameRef type="parameter" name="personBoughtCarFromPersonOnDate" />
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnBuyerAndVinAndSellerChanging">
				<plx:param name="instance" dataTypeName="PersonBoughtCarFromPersonOnDate" />
				<plx:param name="newValue" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="Person" />
					<plx:passTypeParam dataTypeName=".u4" />
					<plx:passTypeParam dataTypeName="Person" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="newValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:local name="currentInstance" dataTypeName="PersonBoughtCarFromPersonOnDate" />
					<plx:branch>
						<plx:condition>
							<plx:callInstance name="TryGetValue">
								<plx:callObject>
									<plx:callThis type="field" name="_PersonBoughtCarFromPersonOnDateBuyerAndVinAndSellerDictionary" />
								</plx:callObject>
								<plx:passParam>
									<plx:nameRef type="parameter" name="newValue" />
								</plx:passParam>
								<plx:passParam type="out">
									<plx:nameRef name="currentInstance" />
								</plx:passParam>
							</plx:callInstance>
						</plx:condition>
						<plx:return>
							<plx:binaryOperator type="identityEquality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef name="currentInstance" />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="instance" />
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:return>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnBuyerAndVinAndSellerChanged">
				<plx:param name="instance" dataTypeName="PersonBoughtCarFromPersonOnDate" />
				<plx:param name="oldValue" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="Person" />
					<plx:passTypeParam dataTypeName=".u4" />
					<plx:passTypeParam dataTypeName="Person" />
				</plx:param>
				<plx:param name="newValue" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="Person" />
					<plx:passTypeParam dataTypeName=".u4" />
					<plx:passTypeParam dataTypeName="Person" />
				</plx:param>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:callInstance name="Remove">
						<plx:callObject>
							<plx:callThis name="_PersonBoughtCarFromPersonOnDateBuyerAndVinAndSellerDictionary" type="field" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="oldValue" />
						</plx:passParam>
					</plx:callInstance>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="newValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:callInstance name="Add">
						<plx:callObject>
							<plx:callThis name="_PersonBoughtCarFromPersonOnDateBuyerAndVinAndSellerDictionary" type="field" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="newValue" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="instance" />
						</plx:passParam>
					</plx:callInstance>
				</plx:branch>
			</plx:function>
			<plx:field visibility="private" readOnly="true" name="_PersonBoughtCarFromPersonOnDateVinAndYMDAndBuyerDictionary" dataTypeName="Dictionary">
				<plx:passTypeParam dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".u4" />
					<plx:passTypeParam dataTypeName=".date" />
					<plx:passTypeParam dataTypeName="Person" />
				</plx:passTypeParam>
				<plx:passTypeParam dataTypeName="PersonBoughtCarFromPersonOnDate" />
				<plx:initialize>
					<plx:callNew dataTypeName="Dictionary">
						<plx:passTypeParam dataTypeName="Tuple">
							<plx:passTypeParam dataTypeName=".u4" />
							<plx:passTypeParam dataTypeName=".date" />
							<plx:passTypeParam dataTypeName="Person" />
						</plx:passTypeParam>
						<plx:passTypeParam dataTypeName="PersonBoughtCarFromPersonOnDate" />
					</plx:callNew>
				</plx:initialize>
			</plx:field>
			<plx:function visibility="public" name="GetPersonBoughtCarFromPersonOnDateByVinAndYMDAndBuyer">
				<plx:interfaceMember memberName="GetPersonBoughtCarFromPersonOnDateByVinAndYMDAndBuyer" dataTypeName="ISampleModelContext" />
				<plx:param name="vin" dataTypeName=".u4" />
				<plx:param name="YMD" dataTypeName=".date" />
				<plx:param name="buyer" dataTypeName="Person" />
				<plx:returns dataTypeName="PersonBoughtCarFromPersonOnDate" />
				<plx:return>
					<plx:callInstance type="indexerCall" name=".implied">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonBoughtCarFromPersonOnDateVinAndYMDAndBuyerDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
								<plx:passMemberTypeParam dataTypeName=".u4" />
								<plx:passMemberTypeParam dataTypeName=".date" />
								<plx:passMemberTypeParam dataTypeName="Person" />
								<plx:passParam>
									<plx:nameRef type="parameter" name="vin" />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="YMD" />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="buyer" />
								</plx:passParam>
							</plx:callStatic>
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" name="TryGetPersonBoughtCarFromPersonOnDateByVinAndYMDAndBuyer">
				<plx:interfaceMember memberName="TryGetPersonBoughtCarFromPersonOnDateByVinAndYMDAndBuyer" dataTypeName="ISampleModelContext" />
				<plx:param name="vin" dataTypeName=".u4" />
				<plx:param name="YMD" dataTypeName=".date" />
				<plx:param name="buyer" dataTypeName="Person" />
				<plx:param type="out" name="personBoughtCarFromPersonOnDate" dataTypeName="PersonBoughtCarFromPersonOnDate" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:callInstance name="TryGetValue">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonBoughtCarFromPersonOnDateVinAndYMDAndBuyerDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
								<plx:passMemberTypeParam dataTypeName=".u4" />
								<plx:passMemberTypeParam dataTypeName=".date" />
								<plx:passMemberTypeParam dataTypeName="Person" />
								<plx:passParam>
									<plx:nameRef type="parameter" name="vin" />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="YMD" />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="buyer" />
								</plx:passParam>
							</plx:callStatic>
						</plx:passParam>
						<plx:passParam type="out">
							<plx:nameRef type="parameter" name="personBoughtCarFromPersonOnDate" />
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnVinAndYMDAndBuyerChanging">
				<plx:param name="instance" dataTypeName="PersonBoughtCarFromPersonOnDate" />
				<plx:param name="newValue" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".u4" />
					<plx:passTypeParam dataTypeName=".date" />
					<plx:passTypeParam dataTypeName="Person" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="newValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:local name="currentInstance" dataTypeName="PersonBoughtCarFromPersonOnDate" />
					<plx:branch>
						<plx:condition>
							<plx:callInstance name="TryGetValue">
								<plx:callObject>
									<plx:callThis type="field" name="_PersonBoughtCarFromPersonOnDateVinAndYMDAndBuyerDictionary" />
								</plx:callObject>
								<plx:passParam>
									<plx:nameRef type="parameter" name="newValue" />
								</plx:passParam>
								<plx:passParam type="out">
									<plx:nameRef name="currentInstance" />
								</plx:passParam>
							</plx:callInstance>
						</plx:condition>
						<plx:return>
							<plx:binaryOperator type="identityEquality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef name="currentInstance" />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="instance" />
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:return>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnVinAndYMDAndBuyerChanged">
				<plx:param name="instance" dataTypeName="PersonBoughtCarFromPersonOnDate" />
				<plx:param name="oldValue" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".u4" />
					<plx:passTypeParam dataTypeName=".date" />
					<plx:passTypeParam dataTypeName="Person" />
				</plx:param>
				<plx:param name="newValue" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".u4" />
					<plx:passTypeParam dataTypeName=".date" />
					<plx:passTypeParam dataTypeName="Person" />
				</plx:param>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:callInstance name="Remove">
						<plx:callObject>
							<plx:callThis name="_PersonBoughtCarFromPersonOnDateVinAndYMDAndBuyerDictionary" type="field" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="oldValue" />
						</plx:passParam>
					</plx:callInstance>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="newValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:callInstance name="Add">
						<plx:callObject>
							<plx:callThis name="_PersonBoughtCarFromPersonOnDateVinAndYMDAndBuyerDictionary" type="field" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="newValue" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="instance" />
						</plx:passParam>
					</plx:callInstance>
				</plx:branch>
			</plx:function>
			<plx:field visibility="private" readOnly="true" name="_PersonBoughtCarFromPersonOnDateYMDAndSellerAndVinDictionary" dataTypeName="Dictionary">
				<plx:passTypeParam dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".date" />
					<plx:passTypeParam dataTypeName="Person" />
					<plx:passTypeParam dataTypeName=".u4" />
				</plx:passTypeParam>
				<plx:passTypeParam dataTypeName="PersonBoughtCarFromPersonOnDate" />
				<plx:initialize>
					<plx:callNew dataTypeName="Dictionary">
						<plx:passTypeParam dataTypeName="Tuple">
							<plx:passTypeParam dataTypeName=".date" />
							<plx:passTypeParam dataTypeName="Person" />
							<plx:passTypeParam dataTypeName=".u4" />
						</plx:passTypeParam>
						<plx:passTypeParam dataTypeName="PersonBoughtCarFromPersonOnDate" />
					</plx:callNew>
				</plx:initialize>
			</plx:field>
			<plx:function visibility="public" name="GetPersonBoughtCarFromPersonOnDateByYMDAndSellerAndVin">
				<plx:interfaceMember memberName="GetPersonBoughtCarFromPersonOnDateByYMDAndSellerAndVin" dataTypeName="ISampleModelContext" />
				<plx:param name="YMD" dataTypeName=".date" />
				<plx:param name="seller" dataTypeName="Person" />
				<plx:param name="vin" dataTypeName=".u4" />
				<plx:returns dataTypeName="PersonBoughtCarFromPersonOnDate" />
				<plx:return>
					<plx:callInstance type="indexerCall" name=".implied">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonBoughtCarFromPersonOnDateYMDAndSellerAndVinDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
								<plx:passMemberTypeParam dataTypeName=".date" />
								<plx:passMemberTypeParam dataTypeName="Person" />
								<plx:passMemberTypeParam dataTypeName=".u4" />
								<plx:passParam>
									<plx:nameRef type="parameter" name="YMD" />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="seller" />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="vin" />
								</plx:passParam>
							</plx:callStatic>
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" name="TryGetPersonBoughtCarFromPersonOnDateByYMDAndSellerAndVin">
				<plx:interfaceMember memberName="TryGetPersonBoughtCarFromPersonOnDateByYMDAndSellerAndVin" dataTypeName="ISampleModelContext" />
				<plx:param name="YMD" dataTypeName=".date" />
				<plx:param name="seller" dataTypeName="Person" />
				<plx:param name="vin" dataTypeName=".u4" />
				<plx:param type="out" name="personBoughtCarFromPersonOnDate" dataTypeName="PersonBoughtCarFromPersonOnDate" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:callInstance name="TryGetValue">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonBoughtCarFromPersonOnDateYMDAndSellerAndVinDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
								<plx:passMemberTypeParam dataTypeName=".date" />
								<plx:passMemberTypeParam dataTypeName="Person" />
								<plx:passMemberTypeParam dataTypeName=".u4" />
								<plx:passParam>
									<plx:nameRef type="parameter" name="YMD" />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="seller" />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="vin" />
								</plx:passParam>
							</plx:callStatic>
						</plx:passParam>
						<plx:passParam type="out">
							<plx:nameRef type="parameter" name="personBoughtCarFromPersonOnDate" />
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnYMDAndSellerAndVinChanging">
				<plx:param name="instance" dataTypeName="PersonBoughtCarFromPersonOnDate" />
				<plx:param name="newValue" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".date" />
					<plx:passTypeParam dataTypeName="Person" />
					<plx:passTypeParam dataTypeName=".u4" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="newValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:local name="currentInstance" dataTypeName="PersonBoughtCarFromPersonOnDate" />
					<plx:branch>
						<plx:condition>
							<plx:callInstance name="TryGetValue">
								<plx:callObject>
									<plx:callThis type="field" name="_PersonBoughtCarFromPersonOnDateYMDAndSellerAndVinDictionary" />
								</plx:callObject>
								<plx:passParam>
									<plx:nameRef type="parameter" name="newValue" />
								</plx:passParam>
								<plx:passParam type="out">
									<plx:nameRef name="currentInstance" />
								</plx:passParam>
							</plx:callInstance>
						</plx:condition>
						<plx:return>
							<plx:binaryOperator type="identityEquality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef name="currentInstance" />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="instance" />
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:return>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnYMDAndSellerAndVinChanged">
				<plx:param name="instance" dataTypeName="PersonBoughtCarFromPersonOnDate" />
				<plx:param name="oldValue" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".date" />
					<plx:passTypeParam dataTypeName="Person" />
					<plx:passTypeParam dataTypeName=".u4" />
				</plx:param>
				<plx:param name="newValue" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".date" />
					<plx:passTypeParam dataTypeName="Person" />
					<plx:passTypeParam dataTypeName=".u4" />
				</plx:param>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:callInstance name="Remove">
						<plx:callObject>
							<plx:callThis name="_PersonBoughtCarFromPersonOnDateYMDAndSellerAndVinDictionary" type="field" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="oldValue" />
						</plx:passParam>
					</plx:callInstance>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="newValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:callInstance name="Add">
						<plx:callObject>
							<plx:callThis name="_PersonBoughtCarFromPersonOnDateYMDAndSellerAndVinDictionary" type="field" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="newValue" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="instance" />
						</plx:passParam>
					</plx:callInstance>
				</plx:branch>
			</plx:function>
			<plx:field visibility="private" readOnly="true" name="_ReviewVinAndNameDictionary" dataTypeName="Dictionary">
				<plx:passTypeParam dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".u4" />
					<plx:passTypeParam dataTypeName=".string" />
				</plx:passTypeParam>
				<plx:passTypeParam dataTypeName="Review" />
				<plx:initialize>
					<plx:callNew dataTypeName="Dictionary">
						<plx:passTypeParam dataTypeName="Tuple">
							<plx:passTypeParam dataTypeName=".u4" />
							<plx:passTypeParam dataTypeName=".string" />
						</plx:passTypeParam>
						<plx:passTypeParam dataTypeName="Review" />
					</plx:callNew>
				</plx:initialize>
			</plx:field>
			<plx:function visibility="public" name="GetReviewByVinAndName">
				<plx:interfaceMember memberName="GetReviewByVinAndName" dataTypeName="ISampleModelContext" />
				<plx:param name="vin" dataTypeName=".u4" />
				<plx:param name="name" dataTypeName=".string" />
				<plx:returns dataTypeName="Review" />
				<plx:return>
					<plx:callInstance type="indexerCall" name=".implied">
						<plx:callObject>
							<plx:callThis type="field" name="_ReviewVinAndNameDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
								<plx:passMemberTypeParam dataTypeName=".u4" />
								<plx:passMemberTypeParam dataTypeName=".string" />
								<plx:passParam>
									<plx:nameRef type="parameter" name="vin" />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="name" />
								</plx:passParam>
							</plx:callStatic>
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" name="TryGetReviewByVinAndName">
				<plx:interfaceMember memberName="TryGetReviewByVinAndName" dataTypeName="ISampleModelContext" />
				<plx:param name="vin" dataTypeName=".u4" />
				<plx:param name="name" dataTypeName=".string" />
				<plx:param type="out" name="review" dataTypeName="Review" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:callInstance name="TryGetValue">
						<plx:callObject>
							<plx:callThis type="field" name="_ReviewVinAndNameDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
								<plx:passMemberTypeParam dataTypeName=".u4" />
								<plx:passMemberTypeParam dataTypeName=".string" />
								<plx:passParam>
									<plx:nameRef type="parameter" name="vin" />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="name" />
								</plx:passParam>
							</plx:callStatic>
						</plx:passParam>
						<plx:passParam type="out">
							<plx:nameRef type="parameter" name="review" />
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnVinAndNameChanging">
				<plx:param name="instance" dataTypeName="Review" />
				<plx:param name="newValue" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".u4" />
					<plx:passTypeParam dataTypeName=".string" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="newValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:local name="currentInstance" dataTypeName="Review" />
					<plx:branch>
						<plx:condition>
							<plx:callInstance name="TryGetValue">
								<plx:callObject>
									<plx:callThis type="field" name="_ReviewVinAndNameDictionary" />
								</plx:callObject>
								<plx:passParam>
									<plx:nameRef type="parameter" name="newValue" />
								</plx:passParam>
								<plx:passParam type="out">
									<plx:nameRef name="currentInstance" />
								</plx:passParam>
							</plx:callInstance>
						</plx:condition>
						<plx:return>
							<plx:binaryOperator type="identityEquality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef name="currentInstance" />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="instance" />
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:return>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnVinAndNameChanged">
				<plx:param name="instance" dataTypeName="Review" />
				<plx:param name="oldValue" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".u4" />
					<plx:passTypeParam dataTypeName=".string" />
				</plx:param>
				<plx:param name="newValue" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".u4" />
					<plx:passTypeParam dataTypeName=".string" />
				</plx:param>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:callInstance name="Remove">
						<plx:callObject>
							<plx:callThis name="_ReviewVinAndNameDictionary" type="field" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="oldValue" />
						</plx:passParam>
					</plx:callInstance>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="newValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:callInstance name="Add">
						<plx:callObject>
							<plx:callThis name="_ReviewVinAndNameDictionary" type="field" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="newValue" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="instance" />
						</plx:passParam>
					</plx:callInstance>
				</plx:branch>
			</plx:function>
			<plx:field visibility="private" readOnly="true" name="_PersonHasNickNameNickNameAndPersonDictionary" dataTypeName="Dictionary">
				<plx:passTypeParam dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".string" />
					<plx:passTypeParam dataTypeName="Person" />
				</plx:passTypeParam>
				<plx:passTypeParam dataTypeName="PersonHasNickName" />
				<plx:initialize>
					<plx:callNew dataTypeName="Dictionary">
						<plx:passTypeParam dataTypeName="Tuple">
							<plx:passTypeParam dataTypeName=".string" />
							<plx:passTypeParam dataTypeName="Person" />
						</plx:passTypeParam>
						<plx:passTypeParam dataTypeName="PersonHasNickName" />
					</plx:callNew>
				</plx:initialize>
			</plx:field>
			<plx:function visibility="public" name="GetPersonHasNickNameByNickNameAndPerson">
				<plx:interfaceMember memberName="GetPersonHasNickNameByNickNameAndPerson" dataTypeName="ISampleModelContext" />
				<plx:param name="nickName" dataTypeName=".string" />
				<plx:param name="person" dataTypeName="Person" />
				<plx:returns dataTypeName="PersonHasNickName" />
				<plx:return>
					<plx:callInstance type="indexerCall" name=".implied">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonHasNickNameNickNameAndPersonDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
								<plx:passMemberTypeParam dataTypeName=".string" />
								<plx:passMemberTypeParam dataTypeName="Person" />
								<plx:passParam>
									<plx:nameRef type="parameter" name="nickName" />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="person" />
								</plx:passParam>
							</plx:callStatic>
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" name="TryGetPersonHasNickNameByNickNameAndPerson">
				<plx:interfaceMember memberName="TryGetPersonHasNickNameByNickNameAndPerson" dataTypeName="ISampleModelContext" />
				<plx:param name="nickName" dataTypeName=".string" />
				<plx:param name="person" dataTypeName="Person" />
				<plx:param type="out" name="personHasNickName" dataTypeName="PersonHasNickName" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:callInstance name="TryGetValue">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonHasNickNameNickNameAndPersonDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
								<plx:passMemberTypeParam dataTypeName=".string" />
								<plx:passMemberTypeParam dataTypeName="Person" />
								<plx:passParam>
									<plx:nameRef type="parameter" name="nickName" />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="person" />
								</plx:passParam>
							</plx:callStatic>
						</plx:passParam>
						<plx:passParam type="out">
							<plx:nameRef type="parameter" name="personHasNickName" />
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnNickNameAndPersonChanging">
				<plx:param name="instance" dataTypeName="PersonHasNickName" />
				<plx:param name="newValue" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".string" />
					<plx:passTypeParam dataTypeName="Person" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="newValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:local name="currentInstance" dataTypeName="PersonHasNickName" />
					<plx:branch>
						<plx:condition>
							<plx:callInstance name="TryGetValue">
								<plx:callObject>
									<plx:callThis type="field" name="_PersonHasNickNameNickNameAndPersonDictionary" />
								</plx:callObject>
								<plx:passParam>
									<plx:nameRef type="parameter" name="newValue" />
								</plx:passParam>
								<plx:passParam type="out">
									<plx:nameRef name="currentInstance" />
								</plx:passParam>
							</plx:callInstance>
						</plx:condition>
						<plx:return>
							<plx:binaryOperator type="identityEquality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef name="currentInstance" />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="instance" />
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:return>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnNickNameAndPersonChanged">
				<plx:param name="instance" dataTypeName="PersonHasNickName" />
				<plx:param name="oldValue" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".string" />
					<plx:passTypeParam dataTypeName="Person" />
				</plx:param>
				<plx:param name="newValue" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".string" />
					<plx:passTypeParam dataTypeName="Person" />
				</plx:param>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:callInstance name="Remove">
						<plx:callObject>
							<plx:callThis name="_PersonHasNickNameNickNameAndPersonDictionary" type="field" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="oldValue" />
						</plx:passParam>
					</plx:callInstance>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="newValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:callInstance name="Add">
						<plx:callObject>
							<plx:callThis name="_PersonHasNickNameNickNameAndPersonDictionary" type="field" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="newValue" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="instance" />
						</plx:passParam>
					</plx:callInstance>
				</plx:branch>
			</plx:function>
			<plx:pragma type="closeRegion" data="Lookup and External Constraint Enforcement" />
			<plx:pragma type="region" data="ConstraintEnforcementCollection" />
			<plx:delegate visibility="private" name="PotentialCollectionModificationCallback">
				<plx:typeParam requireReferenceType="true" name="TClass">
					<plx:typeConstraint dataTypeName="IHasSampleModelContext" />
				</plx:typeParam>
				<plx:typeParam name="TProperty" />
				<plx:param name="instance" dataTypeName="TClass" />
				<plx:param name="item" dataTypeName="TProperty" />
				<plx:returns dataTypeName=".boolean" />
			</plx:delegate>
			<plx:delegate visibility="private" name="CommittedCollectionModificationCallback">
				<plx:typeParam requireReferenceType="true" name="TClass">
					<plx:typeConstraint dataTypeName="IHasSampleModelContext" />
				</plx:typeParam>
				<plx:typeParam name="TProperty" />
				<plx:param name="instance" dataTypeName="TClass" />
				<plx:param name="item" dataTypeName="TProperty" />
			</plx:delegate>
			<plx:class visibility="private" modifier="sealed" name="ConstraintEnforcementCollectionCallbacks">
				<plx:attribute dataTypeName="StructLayoutAttribute" dataTypeQualifier="System.Runtime.InteropServices">
					<plx:passParam>
						<plx:callStatic type="field" name="Auto" dataTypeName="LayoutKind" dataTypeQualifier="System.Runtime.InteropServices" />
					</plx:passParam>
					<plx:passParam>
						<plx:binaryOperator type="assignNamed">
							<plx:left>
								<plx:nameRef type="namedParameter" name="CharSet" />
							</plx:left>
							<plx:right>
								<plx:callStatic type="field" name="Auto" dataTypeName="CharSet" dataTypeQualifier="System.Runtime.InteropServices" />
							</plx:right>
						</plx:binaryOperator>
					</plx:passParam>
				</plx:attribute>
				<plx:typeParam requireReferenceType="true" name="TClass">
					<plx:typeConstraint dataTypeName="IHasSampleModelContext" />
				</plx:typeParam>
				<plx:typeParam name="TProperty" />
				<plx:function visibility="public" name=".construct">
					<plx:param name="adding" dataTypeName="PotentialCollectionModificationCallback">
						<plx:passTypeParam dataTypeName="TClass" />
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:param>
					<plx:param name="added" dataTypeName="CommittedCollectionModificationCallback">
						<plx:passTypeParam dataTypeName="TClass" />
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:param>
					<plx:param name="removing" dataTypeName="PotentialCollectionModificationCallback">
						<plx:passTypeParam dataTypeName="TClass" />
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:param>
					<plx:param name="removed" dataTypeName="CommittedCollectionModificationCallback">
						<plx:passTypeParam dataTypeName="TClass" />
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:param>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="Adding" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="adding" />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="Added" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="added" />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="Removing" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="removing" />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="Removed" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="removed" />
						</plx:right>
					</plx:assign>
				</plx:function>
				<plx:field visibility="public" readOnly="true" name="Adding" dataTypeName="PotentialCollectionModificationCallback">
					<plx:passTypeParam dataTypeName="TClass" />
					<plx:passTypeParam dataTypeName="TProperty" />
				</plx:field>
				<plx:field visibility="public" readOnly="true" name="Added" dataTypeName="CommittedCollectionModificationCallback">
					<plx:passTypeParam dataTypeName="TClass" />
					<plx:passTypeParam dataTypeName="TProperty" />
				</plx:field>
				<plx:field visibility="public" readOnly="true" name="Removing" dataTypeName="PotentialCollectionModificationCallback">
					<plx:passTypeParam dataTypeName="TClass" />
					<plx:passTypeParam dataTypeName="TProperty" />
				</plx:field>
				<plx:field visibility="public" readOnly="true" name="Removed" dataTypeName="CommittedCollectionModificationCallback">
					<plx:passTypeParam dataTypeName="TClass" />
					<plx:passTypeParam dataTypeName="TProperty" />
				</plx:field>
			</plx:class>
			<plx:function visibility="private" overload="true" name="GetConstraintEnforcementCollectionCallbacks">
				<plx:typeParam requireReferenceType="true" name="TClass">
					<plx:typeConstraint dataTypeName="IHasSampleModelContext" />
				</plx:typeParam>
				<plx:typeParam name="TProperty" />
				<plx:returns dataTypeName="ConstraintEnforcementCollectionCallbacks">
					<plx:passTypeParam dataTypeName="TClass" />
					<plx:passTypeParam dataTypeName="TProperty" />
				</plx:returns>
				<plx:return>
					<plx:cast type="exceptionCast" dataTypeName="ConstraintEnforcementCollectionCallbacks">
						<plx:passTypeParam dataTypeName="TClass" />
						<plx:passTypeParam dataTypeName="TProperty" />
						<plx:callInstance type="indexerCall" name=".implied">
							<plx:callObject>
								<plx:callThis type="field" name="_ContraintEnforcementCollectionCallbacksByTypeDictionary" />
							</plx:callObject>
							<plx:passParam>
								<plx:callInstance type="property" name="TypeHandle">
									<plx:callObject>
										<plx:typeOf dataTypeName="ConstraintEnforcementCollection">
											<plx:passTypeParam dataTypeName="TClass" />
											<plx:passTypeParam dataTypeName="TProperty" />
										</plx:typeOf>
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
						</plx:callInstance>
					</plx:cast>
				</plx:return>
			</plx:function>
			<plx:class visibility="private" modifier="sealed" name="RuntimeTypeHandleEqualityComparer">
				<plx:attribute dataTypeName="StructLayoutAttribute" dataTypeQualifier="System.Runtime.InteropServices">
					<plx:passParam>
						<plx:callStatic type="field" name="Auto" dataTypeName="LayoutKind" dataTypeQualifier="System.Runtime.InteropServices" />
					</plx:passParam>
					<plx:passParam>
						<plx:binaryOperator type="assignNamed">
							<plx:left>
								<plx:nameRef type="namedParameter" name="CharSet" />
							</plx:left>
							<plx:right>
								<plx:callStatic type="field" name="Auto" dataTypeName="CharSet" dataTypeQualifier="System.Runtime.InteropServices" />
							</plx:right>
						</plx:binaryOperator>
					</plx:passParam>
				</plx:attribute>
				<plx:implementsInterface dataTypeName="IEqualityComparer">
					<plx:passTypeParam dataTypeName="RuntimeTypeHandle" />
				</plx:implementsInterface>
				<plx:field visibility="public" static="true" readOnly="true" name="Instance" dataTypeName="RuntimeTypeHandleEqualityComparer">
					<plx:initialize>
						<plx:callNew dataTypeName="RuntimeTypeHandleEqualityComparer" />
					</plx:initialize>
				</plx:field>
				<plx:function visibility="private" name=".construct" />
				<plx:function visibility="public" overload="true" name="Equals">
					<plx:interfaceMember memberName="Equals" dataTypeName="IEqualityComparer">
						<plx:passTypeParam dataTypeName="RuntimeTypeHandle" />
					</plx:interfaceMember>
					<plx:param name="x" dataTypeName="RuntimeTypeHandle" />
					<plx:param name="y" dataTypeName="RuntimeTypeHandle" />
					<plx:returns dataTypeName=".boolean" />
					<plx:return>
						<plx:callInstance name="Equals">
							<plx:callObject>
								<plx:nameRef type="parameter" name="x" />
							</plx:callObject>
							<plx:passParam>
								<plx:nameRef type="parameter" name="y" />
							</plx:passParam>
						</plx:callInstance>
					</plx:return>
				</plx:function>
				<plx:function visibility="public" overload="true" name="GetHashCode">
					<plx:interfaceMember memberName="GetHashCode" dataTypeName="IEqualityComparer">
						<plx:passTypeParam dataTypeName="RuntimeTypeHandle" />
					</plx:interfaceMember>
					<plx:param name="obj" dataTypeName="RuntimeTypeHandle" />
					<plx:returns dataTypeName=".i4" />
					<plx:return>
						<plx:callInstance name="GetHashCode">
							<plx:callObject>
								<plx:nameRef type="parameter" name="obj" />
							</plx:callObject>
						</plx:callInstance>
					</plx:return>
				</plx:function>
			</plx:class>
			<plx:field visibility="private" readOnly="true" name="_ContraintEnforcementCollectionCallbacksByTypeDictionary" dataTypeName="Dictionary">
				<plx:passTypeParam dataTypeName="RuntimeTypeHandle" />
				<plx:passTypeParam dataTypeName=".object" />
			</plx:field>
			<plx:class visibility="private" modifier="sealed" name="ConstraintEnforcementCollection">
				<plx:attribute dataTypeName="StructLayoutAttribute" dataTypeQualifier="System.Runtime.InteropServices">
					<plx:passParam>
						<plx:callStatic type="field" name="Auto" dataTypeName="LayoutKind" dataTypeQualifier="System.Runtime.InteropServices" />
					</plx:passParam>
					<plx:passParam>
						<plx:binaryOperator type="assignNamed">
							<plx:left>
								<plx:nameRef type="namedParameter" name="CharSet" />
							</plx:left>
							<plx:right>
								<plx:callStatic type="field" name="Auto" dataTypeName="CharSet" dataTypeQualifier="System.Runtime.InteropServices" />
							</plx:right>
						</plx:binaryOperator>
					</plx:passParam>
				</plx:attribute>
				<plx:typeParam requireReferenceType="true" name="TClass">
					<plx:typeConstraint dataTypeName="IHasSampleModelContext" />
				</plx:typeParam>
				<plx:typeParam name="TProperty" />
				<plx:implementsInterface dataTypeName="ICollection">
					<plx:passTypeParam dataTypeName="TProperty" />
				</plx:implementsInterface>
				<plx:field visibility="private" readOnly="true" name="_Instance" dataTypeName="TClass" />
				<plx:field visibility="private" readOnly="true" name="_List" dataTypeName="List">
					<plx:passTypeParam dataTypeName="TProperty" />
					<plx:initialize>
						<plx:callNew dataTypeName="List">
							<plx:passTypeParam dataTypeName="TProperty" />
						</plx:callNew>
					</plx:initialize>
				</plx:field>
				<plx:function visibility="public" name=".construct">
					<plx:param name="instance" dataTypeName="TClass" />
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_Instance" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="instance" />
						</plx:right>
					</plx:assign>
				</plx:function>
				<plx:function visibility="privateInterfaceMember" name="GetNonGenericEnumerator">
					<plx:interfaceMember memberName="GetEnumerator" dataTypeName="IEnumerable" dataTypeQualifier="System.Collections" />
					<plx:returns dataTypeName="IEnumerator" dataTypeQualifier="System.Collections" />
					<plx:return>
						<plx:callThis name="GetEnumerator" />
					</plx:return>
				</plx:function>
				<plx:function visibility="public" name="GetEnumerator">
					<plx:interfaceMember memberName="GetEnumerator" dataTypeName="IEnumerable">
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:interfaceMember>
					<plx:returns dataTypeName="IEnumerator">
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:returns>
					<plx:return>
						<plx:callInstance name="GetEnumerator">
							<plx:callObject>
								<plx:callThis type="field" name="_List" />
							</plx:callObject>
						</plx:callInstance>
					</plx:return>
				</plx:function>
				<plx:function visibility="public" name="Add">
					<plx:interfaceMember memberName="Add" dataTypeName="ICollection">
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:interfaceMember>
					<plx:param name="item" dataTypeName="TProperty" />
					<plx:branch>
						<plx:condition>
							<plx:binaryOperator type="identityEquality">
								<plx:left>
									<plx:nameRef type="parameter" name="item" />
								</plx:left>
								<plx:right>
									<plx:nullKeyword />
								</plx:right>
							</plx:binaryOperator>
						</plx:condition>
						<plx:throw>
							<plx:callNew dataTypeName="ArgumentNullException">
								<plx:passParam>
									<plx:string data="item" />
								</plx:passParam>
							</plx:callNew>
						</plx:throw>
					</plx:branch>
					<plx:local name="instance" dataTypeName="TClass">
						<plx:initialize>
							<plx:callThis type="field" name="_Instance" />
						</plx:initialize>
					</plx:local>
					<plx:local name="callbacks" dataTypeName="ConstraintEnforcementCollectionCallbacks">
						<plx:passTypeParam dataTypeName="TClass" />
						<plx:passTypeParam dataTypeName="TProperty" />
						<plx:initialize>
							<plx:callInstance name="GetConstraintEnforcementCollectionCallbacks">
								<plx:passMemberTypeParam dataTypeName="TClass" />
								<plx:passMemberTypeParam dataTypeName="TProperty" />
								<plx:callObject>
									<plx:callInstance type="property" name="Context">
										<plx:callObject>
											<plx:nameRef name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:callObject>
							</plx:callInstance>
						</plx:initialize>
					</plx:local>
					<plx:local name="adding" dataTypeName="PotentialCollectionModificationCallback">
						<plx:passTypeParam dataTypeName="TClass" />
						<plx:passTypeParam dataTypeName="TProperty" />
						<plx:initialize>
							<plx:callInstance type="field" name="Adding">
								<plx:callObject>
									<plx:nameRef name="callbacks" />
								</plx:callObject>
							</plx:callInstance>
						</plx:initialize>
					</plx:local>
					<plx:branch>
						<plx:condition>
							<plx:binaryOperator type="booleanOr">
								<plx:left>
									<plx:binaryOperator type="identityEquality">
										<plx:left>
											<plx:cast type="exceptionCast" dataTypeName=".object">
												<plx:nameRef name="adding" />
											</plx:cast>
										</plx:left>
										<plx:right>
											<plx:nullKeyword />
										</plx:right>
									</plx:binaryOperator>
								</plx:left>
								<plx:right>
									<plx:callInstance type="delegateCall" name=".implied">
										<plx:callObject>
											<plx:nameRef name="adding" />
										</plx:callObject>
										<plx:passParam>
											<plx:nameRef name="instance" />
										</plx:passParam>
										<plx:passParam>
											<plx:nameRef type="parameter" name="item" />
										</plx:passParam>
									</plx:callInstance>
								</plx:right>
							</plx:binaryOperator>
						</plx:condition>
						<plx:callInstance name="Add">
							<plx:callObject>
								<plx:callThis type="field" name="_List" />
							</plx:callObject>
							<plx:passParam>
								<plx:nameRef type="parameter" name="item" />
							</plx:passParam>
						</plx:callInstance>
						<plx:local name="added" dataTypeName="CommittedCollectionModificationCallback">
							<plx:passTypeParam dataTypeName="TClass" />
							<plx:passTypeParam dataTypeName="TProperty" />
							<plx:initialize>
								<plx:callInstance type="field" name="Added">
									<plx:callObject>
										<plx:nameRef name="callbacks" />
									</plx:callObject>
								</plx:callInstance>
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityInequality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:nameRef name="added" />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:callInstance type="delegateCall" name=".implied">
								<plx:callObject>
									<plx:nameRef name="added" />
								</plx:callObject>
								<plx:passParam>
									<plx:nameRef name="instance" />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="item" />
								</plx:passParam>
							</plx:callInstance>
						</plx:branch>
					</plx:branch>
				</plx:function>
				<plx:function visibility="public" name="Remove">
					<plx:interfaceMember memberName="Remove" dataTypeName="ICollection">
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:interfaceMember>
					<plx:param name="item" dataTypeName="TProperty" />
					<plx:returns dataTypeName=".boolean" />
					<plx:branch>
						<plx:condition>
							<plx:binaryOperator type="identityEquality">
								<plx:left>
									<plx:nameRef type="parameter" name="item" />
								</plx:left>
								<plx:right>
									<plx:nullKeyword />
								</plx:right>
							</plx:binaryOperator>
						</plx:condition>
						<plx:throw>
							<plx:callNew dataTypeName="ArgumentNullException">
								<plx:passParam>
									<plx:string data="item" />
								</plx:passParam>
							</plx:callNew>
						</plx:throw>
					</plx:branch>
					<plx:local name="instance" dataTypeName="TClass">
						<plx:initialize>
							<plx:callThis type="field" name="_Instance" />
						</plx:initialize>
					</plx:local>
					<plx:local name="callbacks" dataTypeName="ConstraintEnforcementCollectionCallbacks">
						<plx:passTypeParam dataTypeName="TClass" />
						<plx:passTypeParam dataTypeName="TProperty" />
						<plx:initialize>
							<plx:callInstance name="GetConstraintEnforcementCollectionCallbacks">
								<plx:passMemberTypeParam dataTypeName="TClass" />
								<plx:passMemberTypeParam dataTypeName="TProperty" />
								<plx:callObject>
									<plx:callInstance type="property" name="Context">
										<plx:callObject>
											<plx:nameRef name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:callObject>
							</plx:callInstance>
						</plx:initialize>
					</plx:local>
					<plx:local name="removing" dataTypeName="PotentialCollectionModificationCallback">
						<plx:passTypeParam dataTypeName="TClass" />
						<plx:passTypeParam dataTypeName="TProperty" />
						<plx:initialize>
							<plx:callInstance type="field" name="Removing">
								<plx:callObject>
									<plx:nameRef name="callbacks" />
								</plx:callObject>
							</plx:callInstance>
						</plx:initialize>
					</plx:local>
					<plx:branch>
						<plx:condition>
							<plx:binaryOperator type="booleanOr">
								<plx:left>
									<plx:binaryOperator type="identityEquality">
										<plx:left>
											<plx:cast type="exceptionCast" dataTypeName=".object">
												<plx:nameRef name="removing" />
											</plx:cast>
										</plx:left>
										<plx:right>
											<plx:nullKeyword />
										</plx:right>
									</plx:binaryOperator>
								</plx:left>
								<plx:right>
									<plx:callInstance type="delegateCall" name=".implied">
										<plx:callObject>
											<plx:nameRef name="removing" />
										</plx:callObject>
										<plx:passParam>
											<plx:nameRef name="instance" />
										</plx:passParam>
										<plx:passParam>
											<plx:nameRef type="parameter" name="item" />
										</plx:passParam>
									</plx:callInstance>
								</plx:right>
							</plx:binaryOperator>
						</plx:condition>
						<plx:branch>
							<plx:condition>
								<plx:callInstance name="Remove">
									<plx:callObject>
										<plx:callThis type="field" name="_List" />
									</plx:callObject>
									<plx:passParam>
										<plx:nameRef type="parameter" name="item" />
									</plx:passParam>
								</plx:callInstance>
							</plx:condition>
							<plx:local name="removed" dataTypeName="CommittedCollectionModificationCallback">
								<plx:passTypeParam dataTypeName="TClass" />
								<plx:passTypeParam dataTypeName="TProperty" />
								<plx:initialize>
									<plx:callInstance type="field" name="Removed">
										<plx:callObject>
											<plx:nameRef name="callbacks" />
										</plx:callObject>
									</plx:callInstance>
								</plx:initialize>
							</plx:local>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="identityInequality">
										<plx:left>
											<plx:cast type="exceptionCast" dataTypeName=".object">
												<plx:nameRef name="removed" />
											</plx:cast>
										</plx:left>
										<plx:right>
											<plx:nullKeyword />
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:callInstance type="delegateCall" name=".implied">
									<plx:callObject>
										<plx:nameRef name="removed" />
									</plx:callObject>
									<plx:passParam>
										<plx:nameRef name="instance" />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef type="parameter" name="item" />
									</plx:passParam>
								</plx:callInstance>
							</plx:branch>
							<plx:return>
								<plx:trueKeyword />
							</plx:return>
						</plx:branch>
					</plx:branch>
					<plx:return>
						<plx:falseKeyword />
					</plx:return>
				</plx:function>
				<plx:function visibility="public" name="Clear">
					<plx:interfaceMember memberName="Clear" dataTypeName="ICollection">
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:interfaceMember>
					<plx:local name="list" dataTypeName="List">
						<plx:passTypeParam dataTypeName="TProperty" />
						<plx:initialize>
							<plx:callThis type="field" name="_List" />
						</plx:initialize>
					</plx:local>
					<plx:loop>
						<plx:initializeLoop>
							<plx:local name="i" dataTypeName=".i4">
								<plx:initialize>
									<plx:binaryOperator type="subtract">
										<plx:left>
											<plx:callInstance type="property" name="Count">
												<plx:callObject>
													<plx:nameRef name="list" />
												</plx:callObject>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:value type="i4" data="1" />
										</plx:right>
									</plx:binaryOperator>
								</plx:initialize>
							</plx:local>
						</plx:initializeLoop>
						<plx:condition>
							<plx:binaryOperator type="greaterThan">
								<plx:left>
									<plx:nameRef name="i" />
								</plx:left>
								<plx:right>
									<plx:value type="i4" data="0" />
								</plx:right>
							</plx:binaryOperator>
						</plx:condition>
						<plx:beforeLoop>
							<plx:decrement>
								<plx:nameRef name="i" />
							</plx:decrement>
						</plx:beforeLoop>
						<plx:callThis name="Remove">
							<plx:passParam>
								<plx:callInstance type="indexerCall" name=".implied">
									<plx:callObject>
										<plx:nameRef name="list" />
									</plx:callObject>
									<plx:passParam>
										<plx:nameRef name="i" />
									</plx:passParam>
								</plx:callInstance>
							</plx:passParam>
						</plx:callThis>
					</plx:loop>
				</plx:function>
				<plx:function visibility="public" name="Contains">
					<plx:interfaceMember memberName="Contains" dataTypeName="ICollection">
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:interfaceMember>
					<plx:param name="item" dataTypeName="TProperty" />
					<plx:returns dataTypeName=".boolean" />
					<plx:return>
						<plx:binaryOperator type="booleanAnd">
							<plx:left>
								<plx:binaryOperator type="identityInequality">
									<plx:left>
										<plx:nameRef type="parameter" name="item" />
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:left>
							<plx:right>
								<plx:callInstance name="Contains">
									<plx:callObject>
										<plx:callThis type="field" name="_List" />
									</plx:callObject>
									<plx:passParam>
										<plx:nameRef type="parameter" name="item" />
									</plx:passParam>
								</plx:callInstance>
							</plx:right>
						</plx:binaryOperator>
					</plx:return>
				</plx:function>
				<plx:function visibility="public" name="CopyTo">
					<plx:interfaceMember memberName="CopyTo" dataTypeName="ICollection">
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:interfaceMember>
					<plx:param name="array" dataTypeName="TProperty" dataTypeIsSimpleArray="true" />
					<plx:param name="arrayIndex" dataTypeName=".i4" />
					<plx:callInstance name="CopyTo">
						<plx:callObject>
							<plx:callThis type="field" name="_List" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="array" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="arrayIndex" />
						</plx:passParam>
					</plx:callInstance>
				</plx:function>
				<plx:property visibility="public" name="Count">
					<plx:interfaceMember memberName="Count" dataTypeName="ICollection">
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:interfaceMember>
					<plx:returns dataTypeName=".i4" />
					<plx:get>
						<plx:return>
							<plx:callInstance type="property" name="Count">
								<plx:callObject>
									<plx:callThis type="field" name="_List" />
								</plx:callObject>
							</plx:callInstance>
						</plx:return>
					</plx:get>
				</plx:property>
				<plx:property visibility="public" name="IsReadOnly">
					<plx:interfaceMember memberName="IsReadOnly" dataTypeName="ICollection">
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:interfaceMember>
					<plx:returns dataTypeName=".boolean" />
					<plx:get>
						<plx:return>
							<plx:falseKeyword />
						</plx:return>
					</plx:get>
				</plx:property>
			</plx:class>
			<plx:function visibility="private" overload="true" name="GetConstraintEnforcementCollectionCallbacks">
				<plx:typeParam requireReferenceType="true" name="TClass">
					<plx:typeConstraint dataTypeName="IHasSampleModelContext" />
				</plx:typeParam>
				<plx:typeParam name="TProperty" />
				<plx:param name="propertyName" dataTypeName=".string" />
				<plx:returns dataTypeName="ConstraintEnforcementCollectionCallbacks">
					<plx:passTypeParam dataTypeName="TClass" />
					<plx:passTypeParam dataTypeName="TProperty" />
				</plx:returns>
				<plx:return>
					<plx:cast type="exceptionCast" dataTypeName="ConstraintEnforcementCollectionCallbacks">
						<plx:passTypeParam dataTypeName="TClass" />
						<plx:passTypeParam dataTypeName="TProperty" />
						<plx:callInstance type="indexerCall" name=".implied">
							<plx:callObject>
								<plx:callThis type="field" name="_ContraintEnforcementCollectionCallbacksByTypeAndNameDictionary" />
							</plx:callObject>
							<plx:passParam>
								<plx:callNew dataTypeName="ConstraintEnforcementCollectionTypeAndPropertyNameKey">
									<plx:passParam>
										<plx:callInstance type="property" name="TypeHandle">
											<plx:callObject>
												<plx:typeOf dataTypeName="ConstraintEnforcementCollectionWithPropertyName">
													<plx:passTypeParam dataTypeName="TClass" />
													<plx:passTypeParam dataTypeName="TProperty" />
												</plx:typeOf>
											</plx:callObject>
										</plx:callInstance>
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef type="parameter" name="propertyName" />
									</plx:passParam>
								</plx:callNew>
							</plx:passParam>
						</plx:callInstance>
					</plx:cast>
				</plx:return>
			</plx:function>
			<plx:structure visibility="private" name="ConstraintEnforcementCollectionTypeAndPropertyNameKey">
				<plx:attribute dataTypeName="StructLayoutAttribute" dataTypeQualifier="System.Runtime.InteropServices">
					<plx:passParam>
						<plx:callStatic type="field" name="Auto" dataTypeName="LayoutKind" dataTypeQualifier="System.Runtime.InteropServices" />
					</plx:passParam>
					<plx:passParam>
						<plx:binaryOperator type="assignNamed">
							<plx:left>
								<plx:nameRef type="namedParameter" name="CharSet" />
							</plx:left>
							<plx:right>
								<plx:callStatic type="field" name="Auto" dataTypeName="CharSet" dataTypeQualifier="System.Runtime.InteropServices" />
							</plx:right>
						</plx:binaryOperator>
					</plx:passParam>
				</plx:attribute>
				<plx:implementsInterface dataTypeName="IEquatable">
					<plx:passTypeParam dataTypeName="ConstraintEnforcementCollectionTypeAndPropertyNameKey" />
				</plx:implementsInterface>
				<plx:function visibility="public" name=".construct">
					<plx:param name="typeHandle" dataTypeName="RuntimeTypeHandle" />
					<plx:param name="name" dataTypeName=".string" />
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="TypeHandle" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="typeHandle" />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="Name" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="name" />
						</plx:right>
					</plx:assign>
				</plx:function>
				<plx:field visibility="public" readOnly="true" name="TypeHandle" dataTypeName="RuntimeTypeHandle" />
				<plx:field visibility="public" readOnly="true" name="Name" dataTypeName=".string" />
				<plx:function visibility="public" modifier="override" name="GetHashCode">
					<plx:returns dataTypeName=".i4" />
					<plx:return>
						<plx:binaryOperator type="bitwiseExclusiveOr">
							<plx:left>
								<plx:callInstance name="GetHashCode">
									<plx:callObject>
										<plx:callThis type="field" name="TypeHandle" />
									</plx:callObject>
								</plx:callInstance>
							</plx:left>
							<plx:right>
								<plx:callInstance name="GetHashCode">
									<plx:callObject>
										<plx:callThis type="field" name="Name" />
									</plx:callObject>
								</plx:callInstance>
							</plx:right>
						</plx:binaryOperator>
					</plx:return>
				</plx:function>
				<plx:function visibility="public" modifier="override" overload="true" name="Equals">
					<plx:attribute dataTypeName="SuppressMessageAttribute" dataTypeQualifier="System.Diagnostics.CodeAnalysis">
						<plx:passParam>
							<plx:string>Microsoft.Usage</plx:string>
						</plx:passParam>
						<plx:passParam>
							<plx:string>CA2231:OverloadOperatorEqualsOnOverridingValueTypeEquals</plx:string>
						</plx:passParam>
					</plx:attribute>
					<plx:param name="obj" dataTypeName=".object" />
					<plx:returns dataTypeName=".boolean" />
					<plx:return>
						<plx:binaryOperator type="booleanAnd">
							<plx:left>
								<plx:binaryOperator type="typeEquality">
									<plx:left>
										<plx:nameRef type="parameter" name="obj" />
									</plx:left>
									<plx:right>
										<plx:directTypeReference dataTypeName="ConstraintEnforcementCollectionTypeAndPropertyNameKey" />
									</plx:right>
								</plx:binaryOperator>
							</plx:left>
							<plx:right>
								<plx:callThis name="Equals">
									<plx:passParam>
										<plx:cast type="exceptionCast" dataTypeName="ConstraintEnforcementCollectionTypeAndPropertyNameKey">
											<plx:nameRef type="parameter" name="obj" />
										</plx:cast>
									</plx:passParam>
								</plx:callThis>
							</plx:right>
						</plx:binaryOperator>
					</plx:return>
				</plx:function>
				<plx:function visibility="public" overload="true" name="Equals">
					<plx:attribute dataTypeName="SuppressMessageAttribute" dataTypeQualifier="System.Diagnostics.CodeAnalysis">
						<plx:passParam>
							<plx:string>Microsoft.Usage</plx:string>
						</plx:passParam>
						<plx:passParam>
							<plx:string>CA2231:OverloadOperatorEqualsOnOverridingValueTypeEquals</plx:string>
						</plx:passParam>
					</plx:attribute>
					<plx:interfaceMember memberName="Equals" dataTypeName="IEquatable">
						<plx:passTypeParam dataTypeName="ConstraintEnforcementCollectionTypeAndPropertyNameKey" />
					</plx:interfaceMember>
					<plx:param name="other" dataTypeName="ConstraintEnforcementCollectionTypeAndPropertyNameKey" />
					<plx:returns dataTypeName=".boolean" />
					<plx:return>
						<plx:binaryOperator type="booleanAnd">
							<plx:left>
								<plx:callInstance name="Equals">
									<plx:callObject>
										<plx:callThis type="field" name="TypeHandle" />
									</plx:callObject>
									<plx:passParam>
										<plx:callInstance type="field" name="TypeHandle">
											<plx:callObject>
												<plx:nameRef type="parameter" name="other" />
											</plx:callObject>
										</plx:callInstance>
									</plx:passParam>
								</plx:callInstance>
							</plx:left>
							<plx:right>
								<plx:callInstance name="Equals">
									<plx:callObject>
										<plx:callThis type="field" name="Name" />
									</plx:callObject>
									<plx:passParam>
										<plx:callInstance type="field" name="Name">
											<plx:callObject>
												<plx:nameRef type="parameter" name="other" />
											</plx:callObject>
										</plx:callInstance>
									</plx:passParam>
								</plx:callInstance>
							</plx:right>
						</plx:binaryOperator>
					</plx:return>
				</plx:function>
			</plx:structure>
			<plx:field visibility="private" readOnly="true" name="_ContraintEnforcementCollectionCallbacksByTypeAndNameDictionary" dataTypeName="Dictionary">
				<plx:passTypeParam dataTypeName="ConstraintEnforcementCollectionTypeAndPropertyNameKey" />
				<plx:passTypeParam dataTypeName=".object" />
			</plx:field>
			<plx:class visibility="private" modifier="sealed" name="ConstraintEnforcementCollectionWithPropertyName">
				<plx:attribute dataTypeName="StructLayoutAttribute" dataTypeQualifier="System.Runtime.InteropServices">
					<plx:passParam>
						<plx:callStatic type="field" name="Auto" dataTypeName="LayoutKind" dataTypeQualifier="System.Runtime.InteropServices" />
					</plx:passParam>
					<plx:passParam>
						<plx:binaryOperator type="assignNamed">
							<plx:left>
								<plx:nameRef type="namedParameter" name="CharSet" />
							</plx:left>
							<plx:right>
								<plx:callStatic type="field" name="Auto" dataTypeName="CharSet" dataTypeQualifier="System.Runtime.InteropServices" />
							</plx:right>
						</plx:binaryOperator>
					</plx:passParam>
				</plx:attribute>
				<plx:typeParam requireReferenceType="true" name="TClass">
					<plx:typeConstraint dataTypeName="IHasSampleModelContext" />
				</plx:typeParam>
				<plx:typeParam name="TProperty" />
				<plx:implementsInterface dataTypeName="ICollection">
					<plx:passTypeParam dataTypeName="TProperty" />
				</plx:implementsInterface>
				<plx:field visibility="private" readOnly="true" name="_Instance" dataTypeName="TClass" />
				<plx:field visibility="private" readOnly="true" name="_PropertyName" dataTypeName=".string" />
				<plx:field visibility="private" readOnly="true" name="_List" dataTypeName="List">
					<plx:passTypeParam dataTypeName="TProperty" />
					<plx:initialize>
						<plx:callNew dataTypeName="List">
							<plx:passTypeParam dataTypeName="TProperty" />
						</plx:callNew>
					</plx:initialize>
				</plx:field>
				<plx:function visibility="public" name=".construct">
					<plx:param name="instance" dataTypeName="TClass" />
					<plx:param name="propertyName" dataTypeName=".string" />
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_Instance" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="instance" />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_PropertyName" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="propertyName" />
						</plx:right>
					</plx:assign>
				</plx:function>
				<plx:function visibility="privateInterfaceMember" name="GetNonGenericEnumerator">
					<plx:interfaceMember memberName="GetEnumerator" dataTypeName="IEnumerable" dataTypeQualifier="System.Collections" />
					<plx:returns dataTypeName="IEnumerator" dataTypeQualifier="System.Collections" />
					<plx:return>
						<plx:callThis name="GetEnumerator" />
					</plx:return>
				</plx:function>
				<plx:function visibility="public" name="GetEnumerator">
					<plx:interfaceMember memberName="GetEnumerator" dataTypeName="IEnumerable">
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:interfaceMember>
					<plx:returns dataTypeName="IEnumerator">
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:returns>
					<plx:return>
						<plx:callInstance name="GetEnumerator">
							<plx:callObject>
								<plx:callThis type="field" name="_List" />
							</plx:callObject>
						</plx:callInstance>
					</plx:return>
				</plx:function>
				<plx:function visibility="public" name="Add">
					<plx:interfaceMember memberName="Add" dataTypeName="ICollection">
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:interfaceMember>
					<plx:param name="item" dataTypeName="TProperty" />
					<plx:branch>
						<plx:condition>
							<plx:binaryOperator type="identityEquality">
								<plx:left>
									<plx:nameRef type="parameter" name="item" />
								</plx:left>
								<plx:right>
									<plx:nullKeyword />
								</plx:right>
							</plx:binaryOperator>
						</plx:condition>
						<plx:throw>
							<plx:callNew dataTypeName="ArgumentNullException">
								<plx:passParam>
									<plx:string data="item" />
								</plx:passParam>
							</plx:callNew>
						</plx:throw>
					</plx:branch>
					<plx:local name="instance" dataTypeName="TClass">
						<plx:initialize>
							<plx:callThis type="field" name="_Instance" />
						</plx:initialize>
					</plx:local>
					<plx:local name="callbacks" dataTypeName="ConstraintEnforcementCollectionCallbacks">
						<plx:passTypeParam dataTypeName="TClass" />
						<plx:passTypeParam dataTypeName="TProperty" />
						<plx:initialize>
							<plx:callInstance name="GetConstraintEnforcementCollectionCallbacks">
								<plx:passMemberTypeParam dataTypeName="TClass" />
								<plx:passMemberTypeParam dataTypeName="TProperty" />
								<plx:callObject>
									<plx:callInstance type="property" name="Context">
										<plx:callObject>
											<plx:nameRef name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:callObject>
								<plx:passParam>
									<plx:callThis type="field" name="_PropertyName" />
								</plx:passParam>
							</plx:callInstance>
						</plx:initialize>
					</plx:local>
					<plx:local name="adding" dataTypeName="PotentialCollectionModificationCallback">
						<plx:passTypeParam dataTypeName="TClass" />
						<plx:passTypeParam dataTypeName="TProperty" />
						<plx:initialize>
							<plx:callInstance type="field" name="Adding">
								<plx:callObject>
									<plx:nameRef name="callbacks" />
								</plx:callObject>
							</plx:callInstance>
						</plx:initialize>
					</plx:local>
					<plx:branch>
						<plx:condition>
							<plx:binaryOperator type="booleanOr">
								<plx:left>
									<plx:binaryOperator type="identityEquality">
										<plx:left>
											<plx:cast type="exceptionCast" dataTypeName=".object">
												<plx:nameRef name="adding" />
											</plx:cast>
										</plx:left>
										<plx:right>
											<plx:nullKeyword />
										</plx:right>
									</plx:binaryOperator>
								</plx:left>
								<plx:right>
									<plx:callInstance type="delegateCall" name=".implied">
										<plx:callObject>
											<plx:nameRef name="adding" />
										</plx:callObject>
										<plx:passParam>
											<plx:nameRef name="instance" />
										</plx:passParam>
										<plx:passParam>
											<plx:nameRef type="parameter" name="item" />
										</plx:passParam>
									</plx:callInstance>
								</plx:right>
							</plx:binaryOperator>
						</plx:condition>
						<plx:callInstance name="Add">
							<plx:callObject>
								<plx:callThis type="field" name="_List" />
							</plx:callObject>
							<plx:passParam>
								<plx:nameRef type="parameter" name="item" />
							</plx:passParam>
						</plx:callInstance>
						<plx:local name="added" dataTypeName="CommittedCollectionModificationCallback">
							<plx:passTypeParam dataTypeName="TClass" />
							<plx:passTypeParam dataTypeName="TProperty" />
							<plx:initialize>
								<plx:callInstance type="field" name="Added">
									<plx:callObject>
										<plx:nameRef name="callbacks" />
									</plx:callObject>
								</plx:callInstance>
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityInequality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:nameRef name="added" />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:callInstance type="delegateCall" name=".implied">
								<plx:callObject>
									<plx:nameRef name="added" />
								</plx:callObject>
								<plx:passParam>
									<plx:nameRef name="instance" />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="item" />
								</plx:passParam>
							</plx:callInstance>
						</plx:branch>
					</plx:branch>
				</plx:function>
				<plx:function visibility="public" name="Remove">
					<plx:interfaceMember memberName="Remove" dataTypeName="ICollection">
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:interfaceMember>
					<plx:param name="item" dataTypeName="TProperty" />
					<plx:returns dataTypeName=".boolean" />
					<plx:branch>
						<plx:condition>
							<plx:binaryOperator type="identityEquality">
								<plx:left>
									<plx:nameRef type="parameter" name="item" />
								</plx:left>
								<plx:right>
									<plx:nullKeyword />
								</plx:right>
							</plx:binaryOperator>
						</plx:condition>
						<plx:throw>
							<plx:callNew dataTypeName="ArgumentNullException">
								<plx:passParam>
									<plx:string data="item" />
								</plx:passParam>
							</plx:callNew>
						</plx:throw>
					</plx:branch>
					<plx:local name="instance" dataTypeName="TClass">
						<plx:initialize>
							<plx:callThis type="field" name="_Instance" />
						</plx:initialize>
					</plx:local>
					<plx:local name="callbacks" dataTypeName="ConstraintEnforcementCollectionCallbacks">
						<plx:passTypeParam dataTypeName="TClass" />
						<plx:passTypeParam dataTypeName="TProperty" />
						<plx:initialize>
							<plx:callInstance name="GetConstraintEnforcementCollectionCallbacks">
								<plx:passMemberTypeParam dataTypeName="TClass" />
								<plx:passMemberTypeParam dataTypeName="TProperty" />
								<plx:callObject>
									<plx:callInstance type="property" name="Context">
										<plx:callObject>
											<plx:nameRef name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:callObject>
								<plx:passParam>
									<plx:callThis type="field" name="_PropertyName" />
								</plx:passParam>
							</plx:callInstance>
						</plx:initialize>
					</plx:local>
					<plx:local name="removing" dataTypeName="PotentialCollectionModificationCallback">
						<plx:passTypeParam dataTypeName="TClass" />
						<plx:passTypeParam dataTypeName="TProperty" />
						<plx:initialize>
							<plx:callInstance type="field" name="Removing">
								<plx:callObject>
									<plx:nameRef name="callbacks" />
								</plx:callObject>
							</plx:callInstance>
						</plx:initialize>
					</plx:local>
					<plx:branch>
						<plx:condition>
							<plx:binaryOperator type="booleanOr">
								<plx:left>
									<plx:binaryOperator type="identityEquality">
										<plx:left>
											<plx:cast type="exceptionCast" dataTypeName=".object">
												<plx:nameRef name="removing" />
											</plx:cast>
										</plx:left>
										<plx:right>
											<plx:nullKeyword />
										</plx:right>
									</plx:binaryOperator>
								</plx:left>
								<plx:right>
									<plx:callInstance type="delegateCall" name=".implied">
										<plx:callObject>
											<plx:nameRef name="removing" />
										</plx:callObject>
										<plx:passParam>
											<plx:nameRef name="instance" />
										</plx:passParam>
										<plx:passParam>
											<plx:nameRef type="parameter" name="item" />
										</plx:passParam>
									</plx:callInstance>
								</plx:right>
							</plx:binaryOperator>
						</plx:condition>
						<plx:branch>
							<plx:condition>
								<plx:callInstance name="Remove">
									<plx:callObject>
										<plx:callThis type="field" name="_List" />
									</plx:callObject>
									<plx:passParam>
										<plx:nameRef type="parameter" name="item" />
									</plx:passParam>
								</plx:callInstance>
							</plx:condition>
							<plx:local name="removed" dataTypeName="CommittedCollectionModificationCallback">
								<plx:passTypeParam dataTypeName="TClass" />
								<plx:passTypeParam dataTypeName="TProperty" />
								<plx:initialize>
									<plx:callInstance type="field" name="Removed">
										<plx:callObject>
											<plx:nameRef name="callbacks" />
										</plx:callObject>
									</plx:callInstance>
								</plx:initialize>
							</plx:local>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="identityInequality">
										<plx:left>
											<plx:cast type="exceptionCast" dataTypeName=".object">
												<plx:nameRef name="removed" />
											</plx:cast>
										</plx:left>
										<plx:right>
											<plx:nullKeyword />
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:callInstance type="delegateCall" name=".implied">
									<plx:callObject>
										<plx:nameRef name="removed" />
									</plx:callObject>
									<plx:passParam>
										<plx:nameRef name="instance" />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef type="parameter" name="item" />
									</plx:passParam>
								</plx:callInstance>
							</plx:branch>
							<plx:return>
								<plx:trueKeyword />
							</plx:return>
						</plx:branch>
					</plx:branch>
					<plx:return>
						<plx:falseKeyword />
					</plx:return>
				</plx:function>
				<plx:function visibility="public" name="Clear">
					<plx:interfaceMember memberName="Clear" dataTypeName="ICollection">
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:interfaceMember>
					<plx:local name="list" dataTypeName="List">
						<plx:passTypeParam dataTypeName="TProperty" />
						<plx:initialize>
							<plx:callThis type="field" name="_List" />
						</plx:initialize>
					</plx:local>
					<plx:loop>
						<plx:initializeLoop>
							<plx:local name="i" dataTypeName=".i4">
								<plx:initialize>
									<plx:binaryOperator type="subtract">
										<plx:left>
											<plx:callInstance type="property" name="Count">
												<plx:callObject>
													<plx:nameRef name="list" />
												</plx:callObject>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:value type="i4" data="1" />
										</plx:right>
									</plx:binaryOperator>
								</plx:initialize>
							</plx:local>
						</plx:initializeLoop>
						<plx:condition>
							<plx:binaryOperator type="greaterThan">
								<plx:left>
									<plx:nameRef name="i" />
								</plx:left>
								<plx:right>
									<plx:value type="i4" data="0" />
								</plx:right>
							</plx:binaryOperator>
						</plx:condition>
						<plx:beforeLoop>
							<plx:decrement>
								<plx:nameRef name="i" />
							</plx:decrement>
						</plx:beforeLoop>
						<plx:callThis name="Remove">
							<plx:passParam>
								<plx:callInstance type="indexerCall" name=".implied">
									<plx:callObject>
										<plx:nameRef name="list" />
									</plx:callObject>
									<plx:passParam>
										<plx:nameRef name="i" />
									</plx:passParam>
								</plx:callInstance>
							</plx:passParam>
						</plx:callThis>
					</plx:loop>
				</plx:function>
				<plx:function visibility="public" name="Contains">
					<plx:interfaceMember memberName="Contains" dataTypeName="ICollection">
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:interfaceMember>
					<plx:param name="item" dataTypeName="TProperty" />
					<plx:returns dataTypeName=".boolean" />
					<plx:return>
						<plx:binaryOperator type="booleanAnd">
							<plx:left>
								<plx:binaryOperator type="identityInequality">
									<plx:left>
										<plx:nameRef type="parameter" name="item" />
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:left>
							<plx:right>
								<plx:callInstance name="Contains">
									<plx:callObject>
										<plx:callThis type="field" name="_List" />
									</plx:callObject>
									<plx:passParam>
										<plx:nameRef type="parameter" name="item" />
									</plx:passParam>
								</plx:callInstance>
							</plx:right>
						</plx:binaryOperator>
					</plx:return>
				</plx:function>
				<plx:function visibility="public" name="CopyTo">
					<plx:interfaceMember memberName="CopyTo" dataTypeName="ICollection">
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:interfaceMember>
					<plx:param name="array" dataTypeName="TProperty" dataTypeIsSimpleArray="true" />
					<plx:param name="arrayIndex" dataTypeName=".i4" />
					<plx:callInstance name="CopyTo">
						<plx:callObject>
							<plx:callThis type="field" name="_List" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="array" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="arrayIndex" />
						</plx:passParam>
					</plx:callInstance>
				</plx:function>
				<plx:property visibility="public" name="Count">
					<plx:interfaceMember memberName="Count" dataTypeName="ICollection">
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:interfaceMember>
					<plx:returns dataTypeName=".i4" />
					<plx:get>
						<plx:return>
							<plx:callInstance type="property" name="Count">
								<plx:callObject>
									<plx:callThis type="field" name="_List" />
								</plx:callObject>
							</plx:callInstance>
						</plx:return>
					</plx:get>
				</plx:property>
				<plx:property visibility="public" name="IsReadOnly">
					<plx:interfaceMember memberName="IsReadOnly" dataTypeName="ICollection">
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:interfaceMember>
					<plx:returns dataTypeName=".boolean" />
					<plx:get>
						<plx:return>
							<plx:falseKeyword />
						</plx:return>
					</plx:get>
				</plx:property>
			</plx:class>
			<plx:pragma type="closeRegion" data="ConstraintEnforcementCollection" />
			<plx:pragma type="region" data="Person" />
			<plx:function visibility="public" name="CreatePerson">
				<plx:interfaceMember memberName="CreatePerson" dataTypeName="ISampleModelContext" />
				<plx:param name="firstName" dataTypeName=".string" />
				<plx:param name="lastName" dataTypeName=".string" />
				<plx:param name="YMD" dataTypeName=".date" />
				<plx:param name="genderCode" dataTypeName=".string" />
				<plx:param name="mandatoryUniqueDecimal" dataTypeName=".i4" />
				<plx:param name="mandatoryUniqueString" dataTypeName=".string" />
				<plx:param name="mandatoryUniqueTinyInt" dataTypeName=".u1" />
				<plx:param name="mandatoryNonUniqueTinyInt" dataTypeName=".u1" />
				<plx:param name="mandatoryNonUniqueUnconstrainedDecimal" dataTypeName=".i4" />
				<plx:param name="mandatoryNonUniqueUnconstrainedFloat" dataTypeName=".r4" />
				<plx:returns dataTypeName="Person" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="firstName" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="ArgumentNullException">
							<plx:passParam>
								<plx:string>firstName</plx:string>
							</plx:passParam>
						</plx:callNew>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="lastName" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="ArgumentNullException">
							<plx:passParam>
								<plx:string>lastName</plx:string>
							</plx:passParam>
						</plx:callNew>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="genderCode" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="ArgumentNullException">
							<plx:passParam>
								<plx:string>genderCode</plx:string>
							</plx:passParam>
						</plx:callNew>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="mandatoryUniqueString" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="ArgumentNullException">
							<plx:passParam>
								<plx:string>mandatoryUniqueString</plx:string>
							</plx:passParam>
						</plx:callNew>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnPersonFirstNameChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="firstName" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="SampleModelContext">
							<plx:passParam>
								<plx:string>firstName</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnPersonLastNameChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="lastName" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="SampleModelContext">
							<plx:passParam>
								<plx:string>lastName</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnPersonYMDChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="YMD" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="SampleModelContext">
							<plx:passParam>
								<plx:string>YMD</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnPersonGenderCodeChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="genderCode" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="SampleModelContext">
							<plx:passParam>
								<plx:string>genderCode</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnPersonMandatoryUniqueDecimalChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="mandatoryUniqueDecimal" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="SampleModelContext">
							<plx:passParam>
								<plx:string>mandatoryUniqueDecimal</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnPersonMandatoryUniqueStringChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="mandatoryUniqueString" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="SampleModelContext">
							<plx:passParam>
								<plx:string>mandatoryUniqueString</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnPersonMandatoryUniqueTinyIntChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="mandatoryUniqueTinyInt" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="SampleModelContext">
							<plx:passParam>
								<plx:string>mandatoryUniqueTinyInt</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnPersonMandatoryNonUniqueTinyIntChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="mandatoryNonUniqueTinyInt" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="SampleModelContext">
							<plx:passParam>
								<plx:string>mandatoryNonUniqueTinyInt</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnPersonMandatoryNonUniqueUnconstrainedDecimalChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="mandatoryNonUniqueUnconstrainedDecimal" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="SampleModelContext">
							<plx:passParam>
								<plx:string>mandatoryNonUniqueUnconstrainedDecimal</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnPersonMandatoryNonUniqueUnconstrainedFloatChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="mandatoryNonUniqueUnconstrainedFloat" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="SampleModelContext">
							<plx:passParam>
								<plx:string>mandatoryNonUniqueUnconstrainedFloat</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:return>
					<plx:callNew dataTypeName="PersonImpl">
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="firstName" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="lastName" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="YMD" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="genderCode" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="mandatoryUniqueDecimal" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="mandatoryUniqueString" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="mandatoryUniqueTinyInt" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="mandatoryNonUniqueTinyInt" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="mandatoryNonUniqueUnconstrainedDecimal" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="mandatoryNonUniqueUnconstrainedFloat" />
						</plx:passParam>
					</plx:callNew>
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnPersonFirstNameChanging">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="newValue" dataTypeName=".string" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="instance" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:branch>
						<plx:condition>
							<plx:unaryOperator type="booleanNot">
								<plx:callThis name="OnFirstNameAndYMDChanging">
									<plx:passParam>
										<plx:nameRef type="parameter" name="instance" />
									</plx:passParam>
									<plx:passParam>
										<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
											<plx:passMemberTypeParam dataTypeName=".string" />
											<plx:passMemberTypeParam dataTypeName=".date" />
											<plx:passParam>
												<plx:nameRef type="parameter" name="newValue" />
											</plx:passParam>
											<plx:passParam>
												<plx:callInstance type="property" name="YMD">
													<plx:callObject>
														<plx:nameRef type="parameter" name="instance" />
													</plx:callObject>
												</plx:callInstance>
											</plx:passParam>
										</plx:callStatic>
									</plx:passParam>
								</plx:callThis>
							</plx:unaryOperator>
						</plx:condition>
						<plx:return>
							<plx:falseKeyword />
						</plx:return>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnPersonFirstNameChanged">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="oldValue" dataTypeName=".string" />
				<plx:local name="FirstNameAndYMDOldValueTuple" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".string" />
					<plx:passTypeParam dataTypeName=".date" />
				</plx:local>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="FirstNameAndYMDOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
								<plx:passMemberTypeParam dataTypeName=".string" />
								<plx:passMemberTypeParam dataTypeName=".date" />
								<plx:passParam>
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:passParam>
								<plx:passParam>
									<plx:callInstance type="property" name="YMD">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
							</plx:callStatic>
						</plx:right>
					</plx:assign>
				</plx:branch>
				<plx:fallbackBranch>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="FirstNameAndYMDOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:fallbackBranch>
				<plx:callThis name="OnFirstNameAndYMDChanged">
					<plx:passParam>
						<plx:nameRef type="parameter" name="instance" />
					</plx:passParam>
					<plx:passParam>
						<plx:nameRef name="FirstNameAndYMDOldValueTuple" />
					</plx:passParam>
					<plx:passParam>
						<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
							<plx:passMemberTypeParam dataTypeName=".string" />
							<plx:passMemberTypeParam dataTypeName=".date" />
							<plx:passParam>
								<plx:callInstance type="property" name="FirstName">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:callInstance type="property" name="YMD">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
						</plx:callStatic>
					</plx:passParam>
				</plx:callThis>
			</plx:function>
			<plx:function visibility="private" name="OnPersonLastNameChanging">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="newValue" dataTypeName=".string" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="instance" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:branch>
						<plx:condition>
							<plx:unaryOperator type="booleanNot">
								<plx:callThis name="OnLastNameAndYMDChanging">
									<plx:passParam>
										<plx:nameRef type="parameter" name="instance" />
									</plx:passParam>
									<plx:passParam>
										<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
											<plx:passMemberTypeParam dataTypeName=".string" />
											<plx:passMemberTypeParam dataTypeName=".date" />
											<plx:passParam>
												<plx:nameRef type="parameter" name="newValue" />
											</plx:passParam>
											<plx:passParam>
												<plx:callInstance type="property" name="YMD">
													<plx:callObject>
														<plx:nameRef type="parameter" name="instance" />
													</plx:callObject>
												</plx:callInstance>
											</plx:passParam>
										</plx:callStatic>
									</plx:passParam>
								</plx:callThis>
							</plx:unaryOperator>
						</plx:condition>
						<plx:return>
							<plx:falseKeyword />
						</plx:return>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnPersonLastNameChanged">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="oldValue" dataTypeName=".string" />
				<plx:local name="LastNameAndYMDOldValueTuple" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".string" />
					<plx:passTypeParam dataTypeName=".date" />
				</plx:local>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="LastNameAndYMDOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
								<plx:passMemberTypeParam dataTypeName=".string" />
								<plx:passMemberTypeParam dataTypeName=".date" />
								<plx:passParam>
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:passParam>
								<plx:passParam>
									<plx:callInstance type="property" name="YMD">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
							</plx:callStatic>
						</plx:right>
					</plx:assign>
				</plx:branch>
				<plx:fallbackBranch>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="LastNameAndYMDOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:fallbackBranch>
				<plx:callThis name="OnLastNameAndYMDChanged">
					<plx:passParam>
						<plx:nameRef type="parameter" name="instance" />
					</plx:passParam>
					<plx:passParam>
						<plx:nameRef name="LastNameAndYMDOldValueTuple" />
					</plx:passParam>
					<plx:passParam>
						<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
							<plx:passMemberTypeParam dataTypeName=".string" />
							<plx:passMemberTypeParam dataTypeName=".date" />
							<plx:passParam>
								<plx:callInstance type="property" name="LastName">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:callInstance type="property" name="YMD">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
						</plx:callStatic>
					</plx:passParam>
				</plx:callThis>
			</plx:function>
			<plx:function visibility="private" name="OnPersonOptionalUniqueStringChanging">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="newValue" dataTypeName=".string" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="newValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:local name="currentInstance" dataTypeName="Person" />
					<plx:branch>
						<plx:condition>
							<plx:callInstance name="TryGetValue">
								<plx:callObject>
									<plx:callThis type="field" name="_PersonOptionalUniqueStringDictionary" />
								</plx:callObject>
								<plx:passParam>
									<plx:nameRef type="parameter" name="newValue" />
								</plx:passParam>
								<plx:passParam type="out">
									<plx:nameRef name="currentInstance" />
								</plx:passParam>
							</plx:callInstance>
						</plx:condition>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityInequality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:nameRef name="currentInstance" />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:nameRef type="parameter" name="instance" />
										</plx:cast>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:return>
								<plx:falseKeyword />
							</plx:return>
						</plx:branch>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnPersonOptionalUniqueStringChanged">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="oldValue" dataTypeName=".string" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="OptionalUniqueString">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:callInstance name="Add">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonOptionalUniqueStringDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:callInstance type="property" name="OptionalUniqueString">
								<plx:callObject>
									<plx:nameRef type="parameter" name="instance" />
								</plx:callObject>
							</plx:callInstance>
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="instance" />
						</plx:passParam>
					</plx:callInstance>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:callInstance name="Remove">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonOptionalUniqueStringDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="oldValue" />
						</plx:passParam>
					</plx:callInstance>
				</plx:branch>
			</plx:function>
			<plx:function visibility="private" name="OnPersonColorARGBChanging">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="newValue" dataTypeName="Nullable">
					<plx:passTypeParam dataTypeName=".i4" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnPersonHatTypeStyleDescriptionChanging">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="newValue" dataTypeName=".string" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnPersonVinChanging">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="newValue" dataTypeName="Nullable">
					<plx:passTypeParam dataTypeName=".u4" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:callInstance type="property" name="HasValue">
							<plx:callObject>
								<plx:nameRef type="parameter" name="newValue" />
							</plx:callObject>
						</plx:callInstance>
					</plx:condition>
					<plx:local name="currentInstance" dataTypeName="Person" />
					<plx:branch>
						<plx:condition>
							<plx:callInstance name="TryGetValue">
								<plx:callObject>
									<plx:callThis type="field" name="_PersonVinDictionary" />
								</plx:callObject>
								<plx:passParam>
									<plx:callInstance name="GetValueOrDefault">
										<plx:callObject>
											<plx:nameRef type="parameter" name="newValue" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
								<plx:passParam type="out">
									<plx:nameRef name="currentInstance" />
								</plx:passParam>
							</plx:callInstance>
						</plx:condition>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityInequality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:nameRef name="currentInstance" />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:nameRef type="parameter" name="instance" />
										</plx:cast>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:return>
								<plx:falseKeyword />
							</plx:return>
						</plx:branch>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnPersonVinChanged">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="oldValue" dataTypeName="Nullable">
					<plx:passTypeParam dataTypeName=".u4" />
				</plx:param>
				<plx:branch>
					<plx:condition>
						<plx:callInstance type="property" name="HasValue">
							<plx:callObject>
								<plx:callInstance type="property" name="Vin">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:callObject>
						</plx:callInstance>
					</plx:condition>
					<plx:callInstance name="Add">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonVinDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:callInstance name="GetValueOrDefault">
								<plx:callObject>
									<plx:callInstance type="property" name="Vin">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:callObject>
							</plx:callInstance>
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="instance" />
						</plx:passParam>
					</plx:callInstance>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:callInstance type="property" name="HasValue">
							<plx:callObject>
								<plx:nameRef type="parameter" name="oldValue" />
							</plx:callObject>
						</plx:callInstance>
					</plx:condition>
					<plx:callInstance name="Remove">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonVinDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:callInstance name="GetValueOrDefault">
								<plx:callObject>
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:callObject>
							</plx:callInstance>
						</plx:passParam>
					</plx:callInstance>
				</plx:branch>
			</plx:function>
			<plx:function visibility="private" name="OnPersonYMDChanging">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="newValue" dataTypeName=".date" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="instance" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:branch>
						<plx:condition>
							<plx:unaryOperator type="booleanNot">
								<plx:callThis name="OnFirstNameAndYMDChanging">
									<plx:passParam>
										<plx:nameRef type="parameter" name="instance" />
									</plx:passParam>
									<plx:passParam>
										<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
											<plx:passMemberTypeParam dataTypeName=".string" />
											<plx:passMemberTypeParam dataTypeName=".date" />
											<plx:passParam>
												<plx:callInstance type="property" name="FirstName">
													<plx:callObject>
														<plx:nameRef type="parameter" name="instance" />
													</plx:callObject>
												</plx:callInstance>
											</plx:passParam>
											<plx:passParam>
												<plx:nameRef type="parameter" name="newValue" />
											</plx:passParam>
										</plx:callStatic>
									</plx:passParam>
								</plx:callThis>
							</plx:unaryOperator>
						</plx:condition>
						<plx:return>
							<plx:falseKeyword />
						</plx:return>
					</plx:branch>
					<plx:branch>
						<plx:condition>
							<plx:unaryOperator type="booleanNot">
								<plx:callThis name="OnLastNameAndYMDChanging">
									<plx:passParam>
										<plx:nameRef type="parameter" name="instance" />
									</plx:passParam>
									<plx:passParam>
										<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
											<plx:passMemberTypeParam dataTypeName=".string" />
											<plx:passMemberTypeParam dataTypeName=".date" />
											<plx:passParam>
												<plx:callInstance type="property" name="LastName">
													<plx:callObject>
														<plx:nameRef type="parameter" name="instance" />
													</plx:callObject>
												</plx:callInstance>
											</plx:passParam>
											<plx:passParam>
												<plx:nameRef type="parameter" name="newValue" />
											</plx:passParam>
										</plx:callStatic>
									</plx:passParam>
								</plx:callThis>
							</plx:unaryOperator>
						</plx:condition>
						<plx:return>
							<plx:falseKeyword />
						</plx:return>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnPersonYMDChanged">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="oldValue" dataTypeName="Nullable">
					<plx:passTypeParam dataTypeName=".date" />
				</plx:param>
				<plx:local name="FirstNameAndYMDOldValueTuple" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".string" />
					<plx:passTypeParam dataTypeName=".date" />
				</plx:local>
				<plx:local name="LastNameAndYMDOldValueTuple" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".string" />
					<plx:passTypeParam dataTypeName=".date" />
				</plx:local>
				<plx:branch>
					<plx:condition>
						<plx:callInstance type="property" name="HasValue">
							<plx:callObject>
								<plx:nameRef type="parameter" name="oldValue" />
							</plx:callObject>
						</plx:callInstance>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="FirstNameAndYMDOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
								<plx:passMemberTypeParam dataTypeName=".string" />
								<plx:passMemberTypeParam dataTypeName=".date" />
								<plx:passParam>
									<plx:callInstance type="property" name="FirstName">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
								<plx:passParam>
									<plx:callInstance name="GetValueOrDefault">
										<plx:callObject>
											<plx:nameRef type="parameter" name="oldValue" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
							</plx:callStatic>
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="LastNameAndYMDOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
								<plx:passMemberTypeParam dataTypeName=".string" />
								<plx:passMemberTypeParam dataTypeName=".date" />
								<plx:passParam>
									<plx:callInstance type="property" name="LastName">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
								<plx:passParam>
									<plx:callInstance name="GetValueOrDefault">
										<plx:callObject>
											<plx:nameRef type="parameter" name="oldValue" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
							</plx:callStatic>
						</plx:right>
					</plx:assign>
				</plx:branch>
				<plx:fallbackBranch>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="FirstNameAndYMDOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="LastNameAndYMDOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:fallbackBranch>
				<plx:callThis name="OnFirstNameAndYMDChanged">
					<plx:passParam>
						<plx:nameRef type="parameter" name="instance" />
					</plx:passParam>
					<plx:passParam>
						<plx:nameRef name="FirstNameAndYMDOldValueTuple" />
					</plx:passParam>
					<plx:passParam>
						<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
							<plx:passMemberTypeParam dataTypeName=".string" />
							<plx:passMemberTypeParam dataTypeName=".date" />
							<plx:passParam>
								<plx:callInstance type="property" name="FirstName">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:callInstance type="property" name="YMD">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
						</plx:callStatic>
					</plx:passParam>
				</plx:callThis>
				<plx:callThis name="OnLastNameAndYMDChanged">
					<plx:passParam>
						<plx:nameRef type="parameter" name="instance" />
					</plx:passParam>
					<plx:passParam>
						<plx:nameRef name="LastNameAndYMDOldValueTuple" />
					</plx:passParam>
					<plx:passParam>
						<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
							<plx:passMemberTypeParam dataTypeName=".string" />
							<plx:passMemberTypeParam dataTypeName=".date" />
							<plx:passParam>
								<plx:callInstance type="property" name="LastName">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:callInstance type="property" name="YMD">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
						</plx:callStatic>
					</plx:passParam>
				</plx:callThis>
			</plx:function>
			<plx:function visibility="private" name="OnPersonIsDeadChanging">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="newValue" dataTypeName="Nullable">
					<plx:passTypeParam dataTypeName=".boolean" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnPersonGenderCodeChanging">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="newValue" dataTypeName=".string" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnPersonHasParentsChanging">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="newValue" dataTypeName="Nullable">
					<plx:passTypeParam dataTypeName=".boolean" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnPersonOptionalUniqueDecimalChanging">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="newValue" dataTypeName="Nullable">
					<plx:passTypeParam dataTypeName=".i4" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:callInstance type="property" name="HasValue">
							<plx:callObject>
								<plx:nameRef type="parameter" name="newValue" />
							</plx:callObject>
						</plx:callInstance>
					</plx:condition>
					<plx:local name="currentInstance" dataTypeName="Person" />
					<plx:branch>
						<plx:condition>
							<plx:callInstance name="TryGetValue">
								<plx:callObject>
									<plx:callThis type="field" name="_PersonOptionalUniqueDecimalDictionary" />
								</plx:callObject>
								<plx:passParam>
									<plx:callInstance name="GetValueOrDefault">
										<plx:callObject>
											<plx:nameRef type="parameter" name="newValue" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
								<plx:passParam type="out">
									<plx:nameRef name="currentInstance" />
								</plx:passParam>
							</plx:callInstance>
						</plx:condition>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityInequality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:nameRef name="currentInstance" />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:nameRef type="parameter" name="instance" />
										</plx:cast>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:return>
								<plx:falseKeyword />
							</plx:return>
						</plx:branch>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnPersonOptionalUniqueDecimalChanged">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="oldValue" dataTypeName="Nullable">
					<plx:passTypeParam dataTypeName=".i4" />
				</plx:param>
				<plx:branch>
					<plx:condition>
						<plx:callInstance type="property" name="HasValue">
							<plx:callObject>
								<plx:callInstance type="property" name="OptionalUniqueDecimal">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:callObject>
						</plx:callInstance>
					</plx:condition>
					<plx:callInstance name="Add">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonOptionalUniqueDecimalDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:callInstance name="GetValueOrDefault">
								<plx:callObject>
									<plx:callInstance type="property" name="OptionalUniqueDecimal">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:callObject>
							</plx:callInstance>
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="instance" />
						</plx:passParam>
					</plx:callInstance>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:callInstance type="property" name="HasValue">
							<plx:callObject>
								<plx:nameRef type="parameter" name="oldValue" />
							</plx:callObject>
						</plx:callInstance>
					</plx:condition>
					<plx:callInstance name="Remove">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonOptionalUniqueDecimalDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:callInstance name="GetValueOrDefault">
								<plx:callObject>
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:callObject>
							</plx:callInstance>
						</plx:passParam>
					</plx:callInstance>
				</plx:branch>
			</plx:function>
			<plx:function visibility="private" name="OnPersonMandatoryUniqueDecimalChanging">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="newValue" dataTypeName=".i4" />
				<plx:returns dataTypeName=".boolean" />
				<plx:local name="currentInstance" dataTypeName="Person" />
				<plx:branch>
					<plx:condition>
						<plx:callInstance name="TryGetValue">
							<plx:callObject>
								<plx:callThis type="field" name="_PersonMandatoryUniqueDecimalDictionary" />
							</plx:callObject>
							<plx:passParam>
								<plx:nameRef type="parameter" name="newValue" />
							</plx:passParam>
							<plx:passParam type="out">
								<plx:nameRef name="currentInstance" />
							</plx:passParam>
						</plx:callInstance>
					</plx:condition>
					<plx:branch>
						<plx:condition>
							<plx:binaryOperator type="identityInequality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef name="currentInstance" />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="instance" />
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:condition>
						<plx:return>
							<plx:falseKeyword />
						</plx:return>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnPersonMandatoryUniqueDecimalChanged">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="oldValue" dataTypeName="Nullable">
					<plx:passTypeParam dataTypeName=".i4" />
				</plx:param>
				<plx:callInstance name="Add">
					<plx:callObject>
						<plx:callThis type="field" name="_PersonMandatoryUniqueDecimalDictionary" />
					</plx:callObject>
					<plx:passParam>
						<plx:callInstance type="property" name="MandatoryUniqueDecimal">
							<plx:callObject>
								<plx:nameRef type="parameter" name="instance" />
							</plx:callObject>
						</plx:callInstance>
					</plx:passParam>
					<plx:passParam>
						<plx:nameRef type="parameter" name="instance" />
					</plx:passParam>
				</plx:callInstance>
				<plx:branch>
					<plx:condition>
						<plx:callInstance type="property" name="HasValue">
							<plx:callObject>
								<plx:nameRef type="parameter" name="oldValue" />
							</plx:callObject>
						</plx:callInstance>
					</plx:condition>
					<plx:callInstance name="Remove">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonMandatoryUniqueDecimalDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:callInstance name="GetValueOrDefault">
								<plx:callObject>
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:callObject>
							</plx:callInstance>
						</plx:passParam>
					</plx:callInstance>
				</plx:branch>
			</plx:function>
			<plx:function visibility="private" name="OnPersonMandatoryUniqueStringChanging">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="newValue" dataTypeName=".string" />
				<plx:returns dataTypeName=".boolean" />
				<plx:local name="currentInstance" dataTypeName="Person" />
				<plx:branch>
					<plx:condition>
						<plx:callInstance name="TryGetValue">
							<plx:callObject>
								<plx:callThis type="field" name="_PersonMandatoryUniqueStringDictionary" />
							</plx:callObject>
							<plx:passParam>
								<plx:nameRef type="parameter" name="newValue" />
							</plx:passParam>
							<plx:passParam type="out">
								<plx:nameRef name="currentInstance" />
							</plx:passParam>
						</plx:callInstance>
					</plx:condition>
					<plx:branch>
						<plx:condition>
							<plx:binaryOperator type="identityInequality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef name="currentInstance" />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="instance" />
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:condition>
						<plx:return>
							<plx:falseKeyword />
						</plx:return>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnPersonMandatoryUniqueStringChanged">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="oldValue" dataTypeName=".string" />
				<plx:callInstance name="Add">
					<plx:callObject>
						<plx:callThis type="field" name="_PersonMandatoryUniqueStringDictionary" />
					</plx:callObject>
					<plx:passParam>
						<plx:callInstance type="property" name="MandatoryUniqueString">
							<plx:callObject>
								<plx:nameRef type="parameter" name="instance" />
							</plx:callObject>
						</plx:callInstance>
					</plx:passParam>
					<plx:passParam>
						<plx:nameRef type="parameter" name="instance" />
					</plx:passParam>
				</plx:callInstance>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:callInstance name="Remove">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonMandatoryUniqueStringDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="oldValue" />
						</plx:passParam>
					</plx:callInstance>
				</plx:branch>
			</plx:function>
			<plx:function visibility="private" name="OnPersonOptionalUniqueTinyIntChanging">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="newValue" dataTypeName="Nullable">
					<plx:passTypeParam dataTypeName=".u1" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:callInstance type="property" name="HasValue">
							<plx:callObject>
								<plx:nameRef type="parameter" name="newValue" />
							</plx:callObject>
						</plx:callInstance>
					</plx:condition>
					<plx:local name="currentInstance" dataTypeName="Person" />
					<plx:branch>
						<plx:condition>
							<plx:callInstance name="TryGetValue">
								<plx:callObject>
									<plx:callThis type="field" name="_PersonOptionalUniqueTinyIntDictionary" />
								</plx:callObject>
								<plx:passParam>
									<plx:callInstance name="GetValueOrDefault">
										<plx:callObject>
											<plx:nameRef type="parameter" name="newValue" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
								<plx:passParam type="out">
									<plx:nameRef name="currentInstance" />
								</plx:passParam>
							</plx:callInstance>
						</plx:condition>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityInequality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:nameRef name="currentInstance" />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:nameRef type="parameter" name="instance" />
										</plx:cast>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:return>
								<plx:falseKeyword />
							</plx:return>
						</plx:branch>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnPersonOptionalUniqueTinyIntChanged">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="oldValue" dataTypeName="Nullable">
					<plx:passTypeParam dataTypeName=".u1" />
				</plx:param>
				<plx:branch>
					<plx:condition>
						<plx:callInstance type="property" name="HasValue">
							<plx:callObject>
								<plx:callInstance type="property" name="OptionalUniqueTinyInt">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:callObject>
						</plx:callInstance>
					</plx:condition>
					<plx:callInstance name="Add">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonOptionalUniqueTinyIntDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:callInstance name="GetValueOrDefault">
								<plx:callObject>
									<plx:callInstance type="property" name="OptionalUniqueTinyInt">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:callObject>
							</plx:callInstance>
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="instance" />
						</plx:passParam>
					</plx:callInstance>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:callInstance type="property" name="HasValue">
							<plx:callObject>
								<plx:nameRef type="parameter" name="oldValue" />
							</plx:callObject>
						</plx:callInstance>
					</plx:condition>
					<plx:callInstance name="Remove">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonOptionalUniqueTinyIntDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:callInstance name="GetValueOrDefault">
								<plx:callObject>
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:callObject>
							</plx:callInstance>
						</plx:passParam>
					</plx:callInstance>
				</plx:branch>
			</plx:function>
			<plx:function visibility="private" name="OnPersonMandatoryUniqueTinyIntChanging">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="newValue" dataTypeName=".u1" />
				<plx:returns dataTypeName=".boolean" />
				<plx:local name="currentInstance" dataTypeName="Person" />
				<plx:branch>
					<plx:condition>
						<plx:callInstance name="TryGetValue">
							<plx:callObject>
								<plx:callThis type="field" name="_PersonMandatoryUniqueTinyIntDictionary" />
							</plx:callObject>
							<plx:passParam>
								<plx:nameRef type="parameter" name="newValue" />
							</plx:passParam>
							<plx:passParam type="out">
								<plx:nameRef name="currentInstance" />
							</plx:passParam>
						</plx:callInstance>
					</plx:condition>
					<plx:branch>
						<plx:condition>
							<plx:binaryOperator type="identityInequality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef name="currentInstance" />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="instance" />
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:condition>
						<plx:return>
							<plx:falseKeyword />
						</plx:return>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnPersonMandatoryUniqueTinyIntChanged">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="oldValue" dataTypeName="Nullable">
					<plx:passTypeParam dataTypeName=".u1" />
				</plx:param>
				<plx:callInstance name="Add">
					<plx:callObject>
						<plx:callThis type="field" name="_PersonMandatoryUniqueTinyIntDictionary" />
					</plx:callObject>
					<plx:passParam>
						<plx:callInstance type="property" name="MandatoryUniqueTinyInt">
							<plx:callObject>
								<plx:nameRef type="parameter" name="instance" />
							</plx:callObject>
						</plx:callInstance>
					</plx:passParam>
					<plx:passParam>
						<plx:nameRef type="parameter" name="instance" />
					</plx:passParam>
				</plx:callInstance>
				<plx:branch>
					<plx:condition>
						<plx:callInstance type="property" name="HasValue">
							<plx:callObject>
								<plx:nameRef type="parameter" name="oldValue" />
							</plx:callObject>
						</plx:callInstance>
					</plx:condition>
					<plx:callInstance name="Remove">
						<plx:callObject>
							<plx:callThis type="field" name="_PersonMandatoryUniqueTinyIntDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:callInstance name="GetValueOrDefault">
								<plx:callObject>
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:callObject>
							</plx:callInstance>
						</plx:passParam>
					</plx:callInstance>
				</plx:branch>
			</plx:function>
			<plx:function visibility="private" name="OnPersonOptionalNonUniqueTinyIntChanging">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="newValue" dataTypeName="Nullable">
					<plx:passTypeParam dataTypeName=".u1" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnPersonMandatoryNonUniqueTinyIntChanging">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="newValue" dataTypeName=".u1" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnPersonMandatoryNonUniqueUnconstrainedDecimalChanging">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="newValue" dataTypeName=".i4" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnPersonMandatoryNonUniqueUnconstrainedFloatChanging">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="newValue" dataTypeName=".r4" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnPersonWifeChanging">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="newValue" dataTypeName="Person" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="newValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:branch>
						<plx:condition>
							<plx:binaryOperator type="identityInequality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:thisKeyword />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:callInstance type="property" name="Context">
											<plx:callObject>
												<plx:nameRef type="parameter" name="newValue" />
											</plx:callObject>
										</plx:callInstance>
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:condition>
						<plx:throw>
							<plx:callStatic name="GetDifferentContextsException" dataTypeName="SampleModelContext" />
						</plx:throw>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnPersonWifeChanged">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="oldValue" dataTypeName="Person" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="Wife">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:callInstance type="property" name="HusbandViaWife">
								<plx:callObject>
									<plx:callInstance type="property" name="Wife">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="instance" />
						</plx:right>
					</plx:assign>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:callInstance type="property" name="HusbandViaWife">
								<plx:callObject>
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:branch>
			</plx:function>
			<plx:function visibility="private" name="OnPersonValueType1DoesSomethingElseWithChanging">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="newValue" dataTypeName="ValueType1" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="newValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:branch>
						<plx:condition>
							<plx:binaryOperator type="identityInequality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:thisKeyword />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:callInstance type="property" name="Context">
											<plx:callObject>
												<plx:nameRef type="parameter" name="newValue" />
											</plx:callObject>
										</plx:callInstance>
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:condition>
						<plx:throw>
							<plx:callStatic name="GetDifferentContextsException" dataTypeName="SampleModelContext" />
						</plx:throw>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnPersonValueType1DoesSomethingElseWithChanged">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="oldValue" dataTypeName="ValueType1" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="ValueType1DoesSomethingElseWith">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:callInstance name="Add">
						<plx:callObject>
							<plx:cast type="exceptionCast" dataTypeName="ICollection">
								<plx:passTypeParam dataTypeName="Person" />
								<plx:callInstance type="property" name="DoesSomethingElseWithPersonViaValueType1DoesSomethingElseWithCollection">
									<plx:callObject>
										<plx:callInstance type="property" name="ValueType1DoesSomethingElseWith">
											<plx:callObject>
												<plx:nameRef type="parameter" name="instance" />
											</plx:callObject>
										</plx:callInstance>
									</plx:callObject>
								</plx:callInstance>
							</plx:cast>
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="instance" />
						</plx:passParam>
					</plx:callInstance>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:callInstance name="Remove">
						<plx:callObject>
							<plx:cast type="exceptionCast" dataTypeName="ICollection">
								<plx:passTypeParam dataTypeName="Person" />
								<plx:callInstance type="property" name="DoesSomethingElseWithPersonViaValueType1DoesSomethingElseWithCollection">
									<plx:callObject>
										<plx:nameRef type="parameter" name="oldValue" />
									</plx:callObject>
								</plx:callInstance>
							</plx:cast>
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="instance" />
						</plx:passParam>
					</plx:callInstance>
				</plx:branch>
			</plx:function>
			<plx:function visibility="private" name="OnPersonMalePersonChanging">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="newValue" dataTypeName="MalePerson" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="newValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:branch>
						<plx:condition>
							<plx:binaryOperator type="identityInequality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:thisKeyword />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:callInstance type="property" name="Context">
											<plx:callObject>
												<plx:nameRef type="parameter" name="newValue" />
											</plx:callObject>
										</plx:callInstance>
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:condition>
						<plx:throw>
							<plx:callStatic name="GetDifferentContextsException" dataTypeName="SampleModelContext" />
						</plx:throw>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnPersonMalePersonChanged">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="oldValue" dataTypeName="MalePerson" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="MalePerson">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:callInstance type="property" name="Person">
								<plx:callObject>
									<plx:callInstance type="property" name="MalePerson">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="instance" />
						</plx:right>
					</plx:assign>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:callInstance type="property" name="Person">
								<plx:callObject>
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:branch>
			</plx:function>
			<plx:function visibility="private" name="OnPersonFemalePersonChanging">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="newValue" dataTypeName="FemalePerson" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="newValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:branch>
						<plx:condition>
							<plx:binaryOperator type="identityInequality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:thisKeyword />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:callInstance type="property" name="Context">
											<plx:callObject>
												<plx:nameRef type="parameter" name="newValue" />
											</plx:callObject>
										</plx:callInstance>
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:condition>
						<plx:throw>
							<plx:callStatic name="GetDifferentContextsException" dataTypeName="SampleModelContext" />
						</plx:throw>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnPersonFemalePersonChanged">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="oldValue" dataTypeName="FemalePerson" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="FemalePerson">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:callInstance type="property" name="Person">
								<plx:callObject>
									<plx:callInstance type="property" name="FemalePerson">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="instance" />
						</plx:right>
					</plx:assign>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:callInstance type="property" name="Person">
								<plx:callObject>
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:branch>
			</plx:function>
			<plx:function visibility="private" name="OnPersonChildPersonChanging">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="newValue" dataTypeName="ChildPerson" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="newValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:branch>
						<plx:condition>
							<plx:binaryOperator type="identityInequality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:thisKeyword />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:callInstance type="property" name="Context">
											<plx:callObject>
												<plx:nameRef type="parameter" name="newValue" />
											</plx:callObject>
										</plx:callInstance>
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:condition>
						<plx:throw>
							<plx:callStatic name="GetDifferentContextsException" dataTypeName="SampleModelContext" />
						</plx:throw>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnPersonChildPersonChanged">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="oldValue" dataTypeName="ChildPerson" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="ChildPerson">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:callInstance type="property" name="Person">
								<plx:callObject>
									<plx:callInstance type="property" name="ChildPerson">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="instance" />
						</plx:right>
					</plx:assign>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:callInstance type="property" name="Person">
								<plx:callObject>
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:branch>
			</plx:function>
			<plx:function visibility="private" name="OnPersonDeathChanging">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="newValue" dataTypeName="Death" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="newValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:branch>
						<plx:condition>
							<plx:binaryOperator type="identityInequality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:thisKeyword />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:callInstance type="property" name="Context">
											<plx:callObject>
												<plx:nameRef type="parameter" name="newValue" />
											</plx:callObject>
										</plx:callInstance>
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:condition>
						<plx:throw>
							<plx:callStatic name="GetDifferentContextsException" dataTypeName="SampleModelContext" />
						</plx:throw>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnPersonDeathChanged">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="oldValue" dataTypeName="Death" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="Death">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:callInstance type="property" name="Person">
								<plx:callObject>
									<plx:callInstance type="property" name="Death">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="instance" />
						</plx:right>
					</plx:assign>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:callInstance type="property" name="Person">
								<plx:callObject>
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:branch>
			</plx:function>
			<plx:function visibility="private" name="OnPersonHusbandViaWifeChanging">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="newValue" dataTypeName="Person" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="newValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:branch>
						<plx:condition>
							<plx:binaryOperator type="identityInequality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:thisKeyword />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:callInstance type="property" name="Context">
											<plx:callObject>
												<plx:nameRef type="parameter" name="newValue" />
											</plx:callObject>
										</plx:callInstance>
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:condition>
						<plx:throw>
							<plx:callStatic name="GetDifferentContextsException" dataTypeName="SampleModelContext" />
						</plx:throw>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnPersonHusbandViaWifeChanged">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="oldValue" dataTypeName="Person" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="HusbandViaWife">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:callInstance type="property" name="Wife">
								<plx:callObject>
									<plx:callInstance type="property" name="HusbandViaWife">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="instance" />
						</plx:right>
					</plx:assign>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:callInstance type="property" name="Wife">
								<plx:callObject>
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:branch>
			</plx:function>
			<plx:function visibility="private" name="OnPersonTaskViaPersonCollectionAdding">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="item" dataTypeName="Task" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:thisKeyword />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="Context">
										<plx:callObject>
											<plx:nameRef type="parameter" name="item" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetDifferentContextsException" dataTypeName="SampleModelContext">
							<plx:passParam>
								<plx:string data="item" />
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnPersonTaskViaPersonCollectionAdded">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="item" dataTypeName="Task" />
				<plx:assign>
					<plx:left>
						<plx:callInstance type="property" name="Person">
							<plx:callObject>
								<plx:nameRef type="parameter" name="item" />
							</plx:callObject>
						</plx:callInstance>
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="instance" />
					</plx:right>
				</plx:assign>
			</plx:function>
			<plx:function visibility="private" name="OnPersonTaskViaPersonCollectionRemoved">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="item" dataTypeName="Task" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="Person">
										<plx:callObject>
											<plx:nameRef type="parameter" name="item" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="instance" />
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:callInstance type="property" name="Person">
								<plx:callObject>
									<plx:nameRef type="parameter" name="item" />
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:branch>
			</plx:function>
			<plx:function visibility="private" name="OnPersonValueType1DoesSomethingWithViaDoesSomethingWithPersonCollectionAdding">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="item" dataTypeName="ValueType1" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:thisKeyword />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="Context">
										<plx:callObject>
											<plx:nameRef type="parameter" name="item" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetDifferentContextsException" dataTypeName="SampleModelContext">
							<plx:passParam>
								<plx:string data="item" />
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnPersonValueType1DoesSomethingWithViaDoesSomethingWithPersonCollectionAdded">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="item" dataTypeName="ValueType1" />
				<plx:assign>
					<plx:left>
						<plx:callInstance type="property" name="DoesSomethingWithPerson">
							<plx:callObject>
								<plx:nameRef type="parameter" name="item" />
							</plx:callObject>
						</plx:callInstance>
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="instance" />
					</plx:right>
				</plx:assign>
			</plx:function>
			<plx:function visibility="private" name="OnPersonValueType1DoesSomethingWithViaDoesSomethingWithPersonCollectionRemoved">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="item" dataTypeName="ValueType1" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="DoesSomethingWithPerson">
										<plx:callObject>
											<plx:nameRef type="parameter" name="item" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="instance" />
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:callInstance type="property" name="DoesSomethingWithPerson">
								<plx:callObject>
									<plx:nameRef type="parameter" name="item" />
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:branch>
			</plx:function>
			<plx:function visibility="private" name="OnPersonPersonDrivesCarViaDrivenByPersonCollectionAdding">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="item" dataTypeName="PersonDrivesCar" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:thisKeyword />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="Context">
										<plx:callObject>
											<plx:nameRef type="parameter" name="item" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetDifferentContextsException" dataTypeName="SampleModelContext">
							<plx:passParam>
								<plx:string data="item" />
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnPersonPersonDrivesCarViaDrivenByPersonCollectionAdded">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="item" dataTypeName="PersonDrivesCar" />
				<plx:assign>
					<plx:left>
						<plx:callInstance type="property" name="DrivenByPerson">
							<plx:callObject>
								<plx:nameRef type="parameter" name="item" />
							</plx:callObject>
						</plx:callInstance>
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="instance" />
					</plx:right>
				</plx:assign>
			</plx:function>
			<plx:function visibility="private" name="OnPersonPersonDrivesCarViaDrivenByPersonCollectionRemoved">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="item" dataTypeName="PersonDrivesCar" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="DrivenByPerson">
										<plx:callObject>
											<plx:nameRef type="parameter" name="item" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="instance" />
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:callInstance type="property" name="DrivenByPerson">
								<plx:callObject>
									<plx:nameRef type="parameter" name="item" />
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:branch>
			</plx:function>
			<plx:function visibility="private" name="OnPersonPersonBoughtCarFromPersonOnDateViaBuyerCollectionAdding">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="item" dataTypeName="PersonBoughtCarFromPersonOnDate" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:thisKeyword />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="Context">
										<plx:callObject>
											<plx:nameRef type="parameter" name="item" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetDifferentContextsException" dataTypeName="SampleModelContext">
							<plx:passParam>
								<plx:string data="item" />
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnPersonPersonBoughtCarFromPersonOnDateViaBuyerCollectionAdded">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="item" dataTypeName="PersonBoughtCarFromPersonOnDate" />
				<plx:assign>
					<plx:left>
						<plx:callInstance type="property" name="Buyer">
							<plx:callObject>
								<plx:nameRef type="parameter" name="item" />
							</plx:callObject>
						</plx:callInstance>
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="instance" />
					</plx:right>
				</plx:assign>
			</plx:function>
			<plx:function visibility="private" name="OnPersonPersonBoughtCarFromPersonOnDateViaBuyerCollectionRemoved">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="item" dataTypeName="PersonBoughtCarFromPersonOnDate" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="Buyer">
										<plx:callObject>
											<plx:nameRef type="parameter" name="item" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="instance" />
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:callInstance type="property" name="Buyer">
								<plx:callObject>
									<plx:nameRef type="parameter" name="item" />
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:branch>
			</plx:function>
			<plx:function visibility="private" name="OnPersonPersonBoughtCarFromPersonOnDateViaSellerCollectionAdding">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="item" dataTypeName="PersonBoughtCarFromPersonOnDate" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:thisKeyword />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="Context">
										<plx:callObject>
											<plx:nameRef type="parameter" name="item" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetDifferentContextsException" dataTypeName="SampleModelContext">
							<plx:passParam>
								<plx:string data="item" />
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnPersonPersonBoughtCarFromPersonOnDateViaSellerCollectionAdded">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="item" dataTypeName="PersonBoughtCarFromPersonOnDate" />
				<plx:assign>
					<plx:left>
						<plx:callInstance type="property" name="Seller">
							<plx:callObject>
								<plx:nameRef type="parameter" name="item" />
							</plx:callObject>
						</plx:callInstance>
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="instance" />
					</plx:right>
				</plx:assign>
			</plx:function>
			<plx:function visibility="private" name="OnPersonPersonBoughtCarFromPersonOnDateViaSellerCollectionRemoved">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="item" dataTypeName="PersonBoughtCarFromPersonOnDate" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="Seller">
										<plx:callObject>
											<plx:nameRef type="parameter" name="item" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="instance" />
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:callInstance type="property" name="Seller">
								<plx:callObject>
									<plx:nameRef type="parameter" name="item" />
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:branch>
			</plx:function>
			<plx:function visibility="private" name="OnPersonPersonHasNickNameViaPersonCollectionAdding">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="item" dataTypeName="PersonHasNickName" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:thisKeyword />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="Context">
										<plx:callObject>
											<plx:nameRef type="parameter" name="item" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetDifferentContextsException" dataTypeName="SampleModelContext">
							<plx:passParam>
								<plx:string data="item" />
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnPersonPersonHasNickNameViaPersonCollectionAdded">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="item" dataTypeName="PersonHasNickName" />
				<plx:assign>
					<plx:left>
						<plx:callInstance type="property" name="Person">
							<plx:callObject>
								<plx:nameRef type="parameter" name="item" />
							</plx:callObject>
						</plx:callInstance>
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="instance" />
					</plx:right>
				</plx:assign>
			</plx:function>
			<plx:function visibility="private" name="OnPersonPersonHasNickNameViaPersonCollectionRemoved">
				<plx:param name="instance" dataTypeName="Person" />
				<plx:param name="item" dataTypeName="PersonHasNickName" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="Person">
										<plx:callObject>
											<plx:nameRef type="parameter" name="item" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="instance" />
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:callInstance type="property" name="Person">
								<plx:callObject>
									<plx:nameRef type="parameter" name="item" />
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:branch>
			</plx:function>
			<plx:field visibility="private" readOnly="true" name="_PersonList" dataTypeName="List">
				<plx:passTypeParam dataTypeName="Person" />
			</plx:field>
			<plx:field visibility="private" readOnly="true" name="_PersonReadOnlyCollection" dataTypeName="ReadOnlyCollection">
				<plx:passTypeParam dataTypeName="Person" />
			</plx:field>
			<plx:property visibility="public" name="PersonCollection">
				<plx:interfaceMember memberName="PersonCollection" dataTypeName="ISampleModelContext" />
				<plx:returns dataTypeName="IEnumerable">
					<plx:passTypeParam dataTypeName="Person" />
				</plx:returns>
				<plx:get>
					<plx:return>
						<plx:callThis type="field" name="_PersonReadOnlyCollection" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:class visibility="private" modifier="sealed" name="PersonImpl">
				<plx:leadingInfo>
					<plx:pragma type="region" data="PersonImpl" />
				</plx:leadingInfo>
				<plx:trailingInfo>
					<plx:pragma type="closeRegion" data="PersonImpl" />
				</plx:trailingInfo>
				<plx:attribute dataTypeName="StructLayoutAttribute" dataTypeQualifier="System.Runtime.InteropServices">
					<plx:passParam>
						<plx:callStatic type="field" name="Auto" dataTypeName="LayoutKind" dataTypeQualifier="System.Runtime.InteropServices" />
					</plx:passParam>
					<plx:passParam>
						<plx:binaryOperator type="assignNamed">
							<plx:left>
								<plx:nameRef type="namedParameter" name="CharSet" />
							</plx:left>
							<plx:right>
								<plx:callStatic type="field" name="Auto" dataTypeName="CharSet" dataTypeQualifier="System.Runtime.InteropServices" />
							</plx:right>
						</plx:binaryOperator>
					</plx:passParam>
				</plx:attribute>
				<plx:derivesFromClass dataTypeName="Person" />
				<plx:function visibility="public" name=".construct">
					<plx:param name="context" dataTypeName="SampleModelContext" />
					<plx:param name="firstName" dataTypeName=".string" />
					<plx:param name="lastName" dataTypeName=".string" />
					<plx:param name="YMD" dataTypeName=".date" />
					<plx:param name="genderCode" dataTypeName=".string" />
					<plx:param name="mandatoryUniqueDecimal" dataTypeName=".i4" />
					<plx:param name="mandatoryUniqueString" dataTypeName=".string" />
					<plx:param name="mandatoryUniqueTinyInt" dataTypeName=".u1" />
					<plx:param name="mandatoryNonUniqueTinyInt" dataTypeName=".u1" />
					<plx:param name="mandatoryNonUniqueUnconstrainedDecimal" dataTypeName=".i4" />
					<plx:param name="mandatoryNonUniqueUnconstrainedFloat" dataTypeName=".r4" />
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_Context" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="context" />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_TaskViaPersonCollection" />
						</plx:left>
						<plx:right>
							<plx:callNew dataTypeName="ConstraintEnforcementCollection">
								<plx:passTypeParam dataTypeName="Person" />
								<plx:passTypeParam dataTypeName="Task" />
								<plx:passParam>
									<plx:thisKeyword />
								</plx:passParam>
							</plx:callNew>
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_ValueType1DoesSomethingWithViaDoesSomethingWithPersonCollection" />
						</plx:left>
						<plx:right>
							<plx:callNew dataTypeName="ConstraintEnforcementCollection">
								<plx:passTypeParam dataTypeName="Person" />
								<plx:passTypeParam dataTypeName="ValueType1" />
								<plx:passParam>
									<plx:thisKeyword />
								</plx:passParam>
							</plx:callNew>
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_PersonDrivesCarViaDrivenByPersonCollection" />
						</plx:left>
						<plx:right>
							<plx:callNew dataTypeName="ConstraintEnforcementCollection">
								<plx:passTypeParam dataTypeName="Person" />
								<plx:passTypeParam dataTypeName="PersonDrivesCar" />
								<plx:passParam>
									<plx:thisKeyword />
								</plx:passParam>
							</plx:callNew>
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_PersonBoughtCarFromPersonOnDateViaBuyerCollection" />
						</plx:left>
						<plx:right>
							<plx:callNew dataTypeName="ConstraintEnforcementCollectionWithPropertyName">
								<plx:passTypeParam dataTypeName="Person" />
								<plx:passTypeParam dataTypeName="PersonBoughtCarFromPersonOnDate" />
								<plx:passParam>
									<plx:thisKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:string>PersonBoughtCarFromPersonOnDateViaBuyerCollection</plx:string>
								</plx:passParam>
							</plx:callNew>
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_PersonBoughtCarFromPersonOnDateViaSellerCollection" />
						</plx:left>
						<plx:right>
							<plx:callNew dataTypeName="ConstraintEnforcementCollectionWithPropertyName">
								<plx:passTypeParam dataTypeName="Person" />
								<plx:passTypeParam dataTypeName="PersonBoughtCarFromPersonOnDate" />
								<plx:passParam>
									<plx:thisKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:string>PersonBoughtCarFromPersonOnDateViaSellerCollection</plx:string>
								</plx:passParam>
							</plx:callNew>
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_PersonHasNickNameViaPersonCollection" />
						</plx:left>
						<plx:right>
							<plx:callNew dataTypeName="ConstraintEnforcementCollection">
								<plx:passTypeParam dataTypeName="Person" />
								<plx:passTypeParam dataTypeName="PersonHasNickName" />
								<plx:passParam>
									<plx:thisKeyword />
								</plx:passParam>
							</plx:callNew>
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_FirstName" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="firstName" />
						</plx:right>
					</plx:assign>
					<plx:callInstance name="OnPersonFirstNameChanged">
						<plx:callObject>
							<plx:nameRef type="parameter" name="context" />
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callInstance>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_LastName" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="lastName" />
						</plx:right>
					</plx:assign>
					<plx:callInstance name="OnPersonLastNameChanged">
						<plx:callObject>
							<plx:nameRef type="parameter" name="context" />
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callInstance>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_YMD" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="YMD" />
						</plx:right>
					</plx:assign>
					<plx:callInstance name="OnPersonYMDChanged">
						<plx:callObject>
							<plx:nameRef type="parameter" name="context" />
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callInstance>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_GenderCode" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="genderCode" />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_MandatoryUniqueDecimal" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="mandatoryUniqueDecimal" />
						</plx:right>
					</plx:assign>
					<plx:callInstance name="OnPersonMandatoryUniqueDecimalChanged">
						<plx:callObject>
							<plx:nameRef type="parameter" name="context" />
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callInstance>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_MandatoryUniqueString" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="mandatoryUniqueString" />
						</plx:right>
					</plx:assign>
					<plx:callInstance name="OnPersonMandatoryUniqueStringChanged">
						<plx:callObject>
							<plx:nameRef type="parameter" name="context" />
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callInstance>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_MandatoryUniqueTinyInt" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="mandatoryUniqueTinyInt" />
						</plx:right>
					</plx:assign>
					<plx:callInstance name="OnPersonMandatoryUniqueTinyIntChanged">
						<plx:callObject>
							<plx:nameRef type="parameter" name="context" />
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callInstance>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_MandatoryNonUniqueTinyInt" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="mandatoryNonUniqueTinyInt" />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_MandatoryNonUniqueUnconstrainedDecimal" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="mandatoryNonUniqueUnconstrainedDecimal" />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_MandatoryNonUniqueUnconstrainedFloat" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="mandatoryNonUniqueUnconstrainedFloat" />
						</plx:right>
					</plx:assign>
					<plx:callInstance name="Add">
						<plx:callObject>
							<plx:callInstance type="field" name="_PersonList">
								<plx:callObject>
									<plx:nameRef type="parameter" name="context" />
								</plx:callObject>
							</plx:callInstance>
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
					</plx:callInstance>
				</plx:function>
				<plx:field visibility="private" readOnly="true" name="_Context" dataTypeName="SampleModelContext" />
				<plx:property visibility="public" modifier="sealedOverride" name="Context">
					<plx:returns dataTypeName="SampleModelContext" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_Context" />
						</plx:return>
					</plx:get>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_FirstName" dataTypeName=".string" />
				<plx:property visibility="public" modifier="sealedOverride" name="FirstName">
					<plx:returns dataTypeName=".string" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_FirstName" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:throw>
								<plx:callNew dataTypeName="ArgumentNullException">
									<plx:passParam>
										<plx:valueKeyword stringize="true" />
									</plx:passParam>
								</plx:callNew>
							</plx:throw>
						</plx:branch>
						<plx:local name="oldValue" dataTypeName=".string">
							<plx:initialize>
								<plx:callThis type="field" name="_FirstName" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="booleanAnd">
									<plx:left>
										<plx:binaryOperator type="identityInequality">
											<plx:left>
												<plx:cast type="exceptionCast" dataTypeName=".object">
													<plx:nameRef name="oldValue" />
												</plx:cast>
											</plx:left>
											<plx:right>
												<plx:cast type="exceptionCast" dataTypeName=".object">
													<plx:valueKeyword />
												</plx:cast>
											</plx:right>
										</plx:binaryOperator>
									</plx:left>
									<plx:right>
										<plx:unaryOperator type="booleanNot">
											<plx:callInstance name="Equals">
												<plx:callObject>
													<plx:valueKeyword />
												</plx:callObject>
												<plx:passParam>
													<plx:nameRef name="oldValue" />
												</plx:passParam>
											</plx:callInstance>
										</plx:unaryOperator>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnPersonFirstNameChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnFirstNameChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_FirstName" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnPersonFirstNameChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnFirstNameChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_LastName" dataTypeName=".string" />
				<plx:property visibility="public" modifier="sealedOverride" name="LastName">
					<plx:returns dataTypeName=".string" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_LastName" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:throw>
								<plx:callNew dataTypeName="ArgumentNullException">
									<plx:passParam>
										<plx:valueKeyword stringize="true" />
									</plx:passParam>
								</plx:callNew>
							</plx:throw>
						</plx:branch>
						<plx:local name="oldValue" dataTypeName=".string">
							<plx:initialize>
								<plx:callThis type="field" name="_LastName" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="booleanAnd">
									<plx:left>
										<plx:binaryOperator type="identityInequality">
											<plx:left>
												<plx:cast type="exceptionCast" dataTypeName=".object">
													<plx:nameRef name="oldValue" />
												</plx:cast>
											</plx:left>
											<plx:right>
												<plx:cast type="exceptionCast" dataTypeName=".object">
													<plx:valueKeyword />
												</plx:cast>
											</plx:right>
										</plx:binaryOperator>
									</plx:left>
									<plx:right>
										<plx:unaryOperator type="booleanNot">
											<plx:callInstance name="Equals">
												<plx:callObject>
													<plx:valueKeyword />
												</plx:callObject>
												<plx:passParam>
													<plx:nameRef name="oldValue" />
												</plx:passParam>
											</plx:callInstance>
										</plx:unaryOperator>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnPersonLastNameChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnLastNameChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_LastName" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnPersonLastNameChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnLastNameChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_OptionalUniqueString" dataTypeName=".string" />
				<plx:property visibility="public" modifier="sealedOverride" name="OptionalUniqueString">
					<plx:returns dataTypeName=".string" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_OptionalUniqueString" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:local name="oldValue" dataTypeName=".string">
							<plx:initialize>
								<plx:callThis type="field" name="_OptionalUniqueString" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:unaryOperator type="booleanNot">
									<plx:callStatic name="Equals" dataTypeName=".object">
										<plx:passParam>
											<plx:nameRef name="oldValue" />
										</plx:passParam>
										<plx:passParam>
											<plx:valueKeyword />
										</plx:passParam>
									</plx:callStatic>
								</plx:unaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnPersonOptionalUniqueStringChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnOptionalUniqueStringChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_OptionalUniqueString" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnPersonOptionalUniqueStringChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnOptionalUniqueStringChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_ColorARGB" dataTypeName="Nullable">
					<plx:passTypeParam dataTypeName=".i4" />
				</plx:field>
				<plx:property visibility="public" modifier="sealedOverride" name="ColorARGB">
					<plx:returns dataTypeName="Nullable">
						<plx:passTypeParam dataTypeName=".i4" />
					</plx:returns>
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_ColorARGB" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:local name="oldValue" dataTypeName="Nullable">
							<plx:passTypeParam dataTypeName=".i4" />
							<plx:initialize>
								<plx:callThis type="field" name="_ColorARGB" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="booleanOr">
									<plx:left>
										<plx:binaryOperator type="inequality">
											<plx:left>
												<plx:callInstance name="GetValueOrDefault">
													<plx:callObject>
														<plx:nameRef name="oldValue" />
													</plx:callObject>
												</plx:callInstance>
											</plx:left>
											<plx:right>
												<plx:callInstance name="GetValueOrDefault">
													<plx:callObject>
														<plx:valueKeyword />
													</plx:callObject>
												</plx:callInstance>
											</plx:right>
										</plx:binaryOperator>
									</plx:left>
									<plx:right>
										<plx:binaryOperator type="inequality">
											<plx:left>
												<plx:callInstance type="property" name="HasValue">
													<plx:callObject>
														<plx:nameRef name="oldValue" />
													</plx:callObject>
												</plx:callInstance>
											</plx:left>
											<plx:right>
												<plx:callInstance type="property" name="HasValue">
													<plx:callObject>
														<plx:valueKeyword />
													</plx:callObject>
												</plx:callInstance>
											</plx:right>
										</plx:binaryOperator>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnPersonColorARGBChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnColorARGBChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_ColorARGB" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callThis accessor="base" name="OnColorARGBChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_HatTypeStyleDescription" dataTypeName=".string" />
				<plx:property visibility="public" modifier="sealedOverride" name="HatTypeStyleDescription">
					<plx:returns dataTypeName=".string" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_HatTypeStyleDescription" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:local name="oldValue" dataTypeName=".string">
							<plx:initialize>
								<plx:callThis type="field" name="_HatTypeStyleDescription" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:unaryOperator type="booleanNot">
									<plx:callStatic name="Equals" dataTypeName=".object">
										<plx:passParam>
											<plx:nameRef name="oldValue" />
										</plx:passParam>
										<plx:passParam>
											<plx:valueKeyword />
										</plx:passParam>
									</plx:callStatic>
								</plx:unaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnPersonHatTypeStyleDescriptionChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnHatTypeStyleDescriptionChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_HatTypeStyleDescription" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callThis accessor="base" name="OnHatTypeStyleDescriptionChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_Vin" dataTypeName="Nullable">
					<plx:passTypeParam dataTypeName=".u4" />
				</plx:field>
				<plx:property visibility="public" modifier="sealedOverride" name="Vin">
					<plx:returns dataTypeName="Nullable">
						<plx:passTypeParam dataTypeName=".u4" />
					</plx:returns>
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_Vin" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:local name="oldValue" dataTypeName="Nullable">
							<plx:passTypeParam dataTypeName=".u4" />
							<plx:initialize>
								<plx:callThis type="field" name="_Vin" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="booleanOr">
									<plx:left>
										<plx:binaryOperator type="inequality">
											<plx:left>
												<plx:callInstance name="GetValueOrDefault">
													<plx:callObject>
														<plx:nameRef name="oldValue" />
													</plx:callObject>
												</plx:callInstance>
											</plx:left>
											<plx:right>
												<plx:callInstance name="GetValueOrDefault">
													<plx:callObject>
														<plx:valueKeyword />
													</plx:callObject>
												</plx:callInstance>
											</plx:right>
										</plx:binaryOperator>
									</plx:left>
									<plx:right>
										<plx:binaryOperator type="inequality">
											<plx:left>
												<plx:callInstance type="property" name="HasValue">
													<plx:callObject>
														<plx:nameRef name="oldValue" />
													</plx:callObject>
												</plx:callInstance>
											</plx:left>
											<plx:right>
												<plx:callInstance type="property" name="HasValue">
													<plx:callObject>
														<plx:valueKeyword />
													</plx:callObject>
												</plx:callInstance>
											</plx:right>
										</plx:binaryOperator>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnPersonVinChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnVinChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_Vin" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnPersonVinChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnVinChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_YMD" dataTypeName=".date" />
				<plx:property visibility="public" modifier="sealedOverride" name="YMD">
					<plx:returns dataTypeName=".date" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_YMD" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:local name="oldValue" dataTypeName=".date">
							<plx:initialize>
								<plx:callThis type="field" name="_YMD" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="inequality">
									<plx:left>
										<plx:nameRef name="oldValue" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnPersonYMDChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnYMDChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_YMD" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnPersonYMDChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnYMDChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_IsDead" dataTypeName="Nullable">
					<plx:passTypeParam dataTypeName=".boolean" />
				</plx:field>
				<plx:property visibility="public" modifier="sealedOverride" name="IsDead">
					<plx:returns dataTypeName="Nullable">
						<plx:passTypeParam dataTypeName=".boolean" />
					</plx:returns>
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_IsDead" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:local name="oldValue" dataTypeName="Nullable">
							<plx:passTypeParam dataTypeName=".boolean" />
							<plx:initialize>
								<plx:callThis type="field" name="_IsDead" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="booleanOr">
									<plx:left>
										<plx:binaryOperator type="inequality">
											<plx:left>
												<plx:callInstance name="GetValueOrDefault">
													<plx:callObject>
														<plx:nameRef name="oldValue" />
													</plx:callObject>
												</plx:callInstance>
											</plx:left>
											<plx:right>
												<plx:callInstance name="GetValueOrDefault">
													<plx:callObject>
														<plx:valueKeyword />
													</plx:callObject>
												</plx:callInstance>
											</plx:right>
										</plx:binaryOperator>
									</plx:left>
									<plx:right>
										<plx:binaryOperator type="inequality">
											<plx:left>
												<plx:callInstance type="property" name="HasValue">
													<plx:callObject>
														<plx:nameRef name="oldValue" />
													</plx:callObject>
												</plx:callInstance>
											</plx:left>
											<plx:right>
												<plx:callInstance type="property" name="HasValue">
													<plx:callObject>
														<plx:valueKeyword />
													</plx:callObject>
												</plx:callInstance>
											</plx:right>
										</plx:binaryOperator>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnPersonIsDeadChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnIsDeadChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_IsDead" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callThis accessor="base" name="OnIsDeadChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_GenderCode" dataTypeName=".string" />
				<plx:property visibility="public" modifier="sealedOverride" name="GenderCode">
					<plx:returns dataTypeName=".string" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_GenderCode" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:throw>
								<plx:callNew dataTypeName="ArgumentNullException">
									<plx:passParam>
										<plx:valueKeyword stringize="true" />
									</plx:passParam>
								</plx:callNew>
							</plx:throw>
						</plx:branch>
						<plx:local name="oldValue" dataTypeName=".string">
							<plx:initialize>
								<plx:callThis type="field" name="_GenderCode" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="booleanAnd">
									<plx:left>
										<plx:binaryOperator type="identityInequality">
											<plx:left>
												<plx:cast type="exceptionCast" dataTypeName=".object">
													<plx:nameRef name="oldValue" />
												</plx:cast>
											</plx:left>
											<plx:right>
												<plx:cast type="exceptionCast" dataTypeName=".object">
													<plx:valueKeyword />
												</plx:cast>
											</plx:right>
										</plx:binaryOperator>
									</plx:left>
									<plx:right>
										<plx:unaryOperator type="booleanNot">
											<plx:callInstance name="Equals">
												<plx:callObject>
													<plx:valueKeyword />
												</plx:callObject>
												<plx:passParam>
													<plx:nameRef name="oldValue" />
												</plx:passParam>
											</plx:callInstance>
										</plx:unaryOperator>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnPersonGenderCodeChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnGenderCodeChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_GenderCode" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callThis accessor="base" name="OnGenderCodeChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_HasParents" dataTypeName="Nullable">
					<plx:passTypeParam dataTypeName=".boolean" />
				</plx:field>
				<plx:property visibility="public" modifier="sealedOverride" name="HasParents">
					<plx:returns dataTypeName="Nullable">
						<plx:passTypeParam dataTypeName=".boolean" />
					</plx:returns>
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_HasParents" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:local name="oldValue" dataTypeName="Nullable">
							<plx:passTypeParam dataTypeName=".boolean" />
							<plx:initialize>
								<plx:callThis type="field" name="_HasParents" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="booleanOr">
									<plx:left>
										<plx:binaryOperator type="inequality">
											<plx:left>
												<plx:callInstance name="GetValueOrDefault">
													<plx:callObject>
														<plx:nameRef name="oldValue" />
													</plx:callObject>
												</plx:callInstance>
											</plx:left>
											<plx:right>
												<plx:callInstance name="GetValueOrDefault">
													<plx:callObject>
														<plx:valueKeyword />
													</plx:callObject>
												</plx:callInstance>
											</plx:right>
										</plx:binaryOperator>
									</plx:left>
									<plx:right>
										<plx:binaryOperator type="inequality">
											<plx:left>
												<plx:callInstance type="property" name="HasValue">
													<plx:callObject>
														<plx:nameRef name="oldValue" />
													</plx:callObject>
												</plx:callInstance>
											</plx:left>
											<plx:right>
												<plx:callInstance type="property" name="HasValue">
													<plx:callObject>
														<plx:valueKeyword />
													</plx:callObject>
												</plx:callInstance>
											</plx:right>
										</plx:binaryOperator>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnPersonHasParentsChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnHasParentsChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_HasParents" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callThis accessor="base" name="OnHasParentsChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_OptionalUniqueDecimal" dataTypeName="Nullable">
					<plx:passTypeParam dataTypeName=".i4" />
				</plx:field>
				<plx:property visibility="public" modifier="sealedOverride" name="OptionalUniqueDecimal">
					<plx:returns dataTypeName="Nullable">
						<plx:passTypeParam dataTypeName=".i4" />
					</plx:returns>
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_OptionalUniqueDecimal" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:local name="oldValue" dataTypeName="Nullable">
							<plx:passTypeParam dataTypeName=".i4" />
							<plx:initialize>
								<plx:callThis type="field" name="_OptionalUniqueDecimal" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="booleanOr">
									<plx:left>
										<plx:binaryOperator type="inequality">
											<plx:left>
												<plx:callInstance name="GetValueOrDefault">
													<plx:callObject>
														<plx:nameRef name="oldValue" />
													</plx:callObject>
												</plx:callInstance>
											</plx:left>
											<plx:right>
												<plx:callInstance name="GetValueOrDefault">
													<plx:callObject>
														<plx:valueKeyword />
													</plx:callObject>
												</plx:callInstance>
											</plx:right>
										</plx:binaryOperator>
									</plx:left>
									<plx:right>
										<plx:binaryOperator type="inequality">
											<plx:left>
												<plx:callInstance type="property" name="HasValue">
													<plx:callObject>
														<plx:nameRef name="oldValue" />
													</plx:callObject>
												</plx:callInstance>
											</plx:left>
											<plx:right>
												<plx:callInstance type="property" name="HasValue">
													<plx:callObject>
														<plx:valueKeyword />
													</plx:callObject>
												</plx:callInstance>
											</plx:right>
										</plx:binaryOperator>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnPersonOptionalUniqueDecimalChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnOptionalUniqueDecimalChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_OptionalUniqueDecimal" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnPersonOptionalUniqueDecimalChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnOptionalUniqueDecimalChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_MandatoryUniqueDecimal" dataTypeName=".i4" />
				<plx:property visibility="public" modifier="sealedOverride" name="MandatoryUniqueDecimal">
					<plx:returns dataTypeName=".i4" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_MandatoryUniqueDecimal" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:local name="oldValue" dataTypeName=".i4">
							<plx:initialize>
								<plx:callThis type="field" name="_MandatoryUniqueDecimal" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="inequality">
									<plx:left>
										<plx:nameRef name="oldValue" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnPersonMandatoryUniqueDecimalChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnMandatoryUniqueDecimalChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_MandatoryUniqueDecimal" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnPersonMandatoryUniqueDecimalChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnMandatoryUniqueDecimalChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_MandatoryUniqueString" dataTypeName=".string" />
				<plx:property visibility="public" modifier="sealedOverride" name="MandatoryUniqueString">
					<plx:returns dataTypeName=".string" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_MandatoryUniqueString" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:throw>
								<plx:callNew dataTypeName="ArgumentNullException">
									<plx:passParam>
										<plx:valueKeyword stringize="true" />
									</plx:passParam>
								</plx:callNew>
							</plx:throw>
						</plx:branch>
						<plx:local name="oldValue" dataTypeName=".string">
							<plx:initialize>
								<plx:callThis type="field" name="_MandatoryUniqueString" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="booleanAnd">
									<plx:left>
										<plx:binaryOperator type="identityInequality">
											<plx:left>
												<plx:cast type="exceptionCast" dataTypeName=".object">
													<plx:nameRef name="oldValue" />
												</plx:cast>
											</plx:left>
											<plx:right>
												<plx:cast type="exceptionCast" dataTypeName=".object">
													<plx:valueKeyword />
												</plx:cast>
											</plx:right>
										</plx:binaryOperator>
									</plx:left>
									<plx:right>
										<plx:unaryOperator type="booleanNot">
											<plx:callInstance name="Equals">
												<plx:callObject>
													<plx:valueKeyword />
												</plx:callObject>
												<plx:passParam>
													<plx:nameRef name="oldValue" />
												</plx:passParam>
											</plx:callInstance>
										</plx:unaryOperator>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnPersonMandatoryUniqueStringChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnMandatoryUniqueStringChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_MandatoryUniqueString" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnPersonMandatoryUniqueStringChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnMandatoryUniqueStringChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_OptionalUniqueTinyInt" dataTypeName="Nullable">
					<plx:passTypeParam dataTypeName=".u1" />
				</plx:field>
				<plx:property visibility="public" modifier="sealedOverride" name="OptionalUniqueTinyInt">
					<plx:returns dataTypeName="Nullable">
						<plx:passTypeParam dataTypeName=".u1" />
					</plx:returns>
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_OptionalUniqueTinyInt" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:local name="oldValue" dataTypeName="Nullable">
							<plx:passTypeParam dataTypeName=".u1" />
							<plx:initialize>
								<plx:callThis type="field" name="_OptionalUniqueTinyInt" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="booleanOr">
									<plx:left>
										<plx:binaryOperator type="inequality">
											<plx:left>
												<plx:callInstance name="GetValueOrDefault">
													<plx:callObject>
														<plx:nameRef name="oldValue" />
													</plx:callObject>
												</plx:callInstance>
											</plx:left>
											<plx:right>
												<plx:callInstance name="GetValueOrDefault">
													<plx:callObject>
														<plx:valueKeyword />
													</plx:callObject>
												</plx:callInstance>
											</plx:right>
										</plx:binaryOperator>
									</plx:left>
									<plx:right>
										<plx:binaryOperator type="inequality">
											<plx:left>
												<plx:callInstance type="property" name="HasValue">
													<plx:callObject>
														<plx:nameRef name="oldValue" />
													</plx:callObject>
												</plx:callInstance>
											</plx:left>
											<plx:right>
												<plx:callInstance type="property" name="HasValue">
													<plx:callObject>
														<plx:valueKeyword />
													</plx:callObject>
												</plx:callInstance>
											</plx:right>
										</plx:binaryOperator>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnPersonOptionalUniqueTinyIntChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnOptionalUniqueTinyIntChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_OptionalUniqueTinyInt" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnPersonOptionalUniqueTinyIntChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnOptionalUniqueTinyIntChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_MandatoryUniqueTinyInt" dataTypeName=".u1" />
				<plx:property visibility="public" modifier="sealedOverride" name="MandatoryUniqueTinyInt">
					<plx:returns dataTypeName=".u1" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_MandatoryUniqueTinyInt" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:local name="oldValue" dataTypeName=".u1">
							<plx:initialize>
								<plx:callThis type="field" name="_MandatoryUniqueTinyInt" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="inequality">
									<plx:left>
										<plx:nameRef name="oldValue" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnPersonMandatoryUniqueTinyIntChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnMandatoryUniqueTinyIntChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_MandatoryUniqueTinyInt" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnPersonMandatoryUniqueTinyIntChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnMandatoryUniqueTinyIntChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_OptionalNonUniqueTinyInt" dataTypeName="Nullable">
					<plx:passTypeParam dataTypeName=".u1" />
				</plx:field>
				<plx:property visibility="public" modifier="sealedOverride" name="OptionalNonUniqueTinyInt">
					<plx:returns dataTypeName="Nullable">
						<plx:passTypeParam dataTypeName=".u1" />
					</plx:returns>
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_OptionalNonUniqueTinyInt" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:local name="oldValue" dataTypeName="Nullable">
							<plx:passTypeParam dataTypeName=".u1" />
							<plx:initialize>
								<plx:callThis type="field" name="_OptionalNonUniqueTinyInt" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="booleanOr">
									<plx:left>
										<plx:binaryOperator type="inequality">
											<plx:left>
												<plx:callInstance name="GetValueOrDefault">
													<plx:callObject>
														<plx:nameRef name="oldValue" />
													</plx:callObject>
												</plx:callInstance>
											</plx:left>
											<plx:right>
												<plx:callInstance name="GetValueOrDefault">
													<plx:callObject>
														<plx:valueKeyword />
													</plx:callObject>
												</plx:callInstance>
											</plx:right>
										</plx:binaryOperator>
									</plx:left>
									<plx:right>
										<plx:binaryOperator type="inequality">
											<plx:left>
												<plx:callInstance type="property" name="HasValue">
													<plx:callObject>
														<plx:nameRef name="oldValue" />
													</plx:callObject>
												</plx:callInstance>
											</plx:left>
											<plx:right>
												<plx:callInstance type="property" name="HasValue">
													<plx:callObject>
														<plx:valueKeyword />
													</plx:callObject>
												</plx:callInstance>
											</plx:right>
										</plx:binaryOperator>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnPersonOptionalNonUniqueTinyIntChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnOptionalNonUniqueTinyIntChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_OptionalNonUniqueTinyInt" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callThis accessor="base" name="OnOptionalNonUniqueTinyIntChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_MandatoryNonUniqueTinyInt" dataTypeName=".u1" />
				<plx:property visibility="public" modifier="sealedOverride" name="MandatoryNonUniqueTinyInt">
					<plx:returns dataTypeName=".u1" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_MandatoryNonUniqueTinyInt" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:local name="oldValue" dataTypeName=".u1">
							<plx:initialize>
								<plx:callThis type="field" name="_MandatoryNonUniqueTinyInt" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="inequality">
									<plx:left>
										<plx:nameRef name="oldValue" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnPersonMandatoryNonUniqueTinyIntChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnMandatoryNonUniqueTinyIntChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_MandatoryNonUniqueTinyInt" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callThis accessor="base" name="OnMandatoryNonUniqueTinyIntChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_MandatoryNonUniqueUnconstrainedDecimal" dataTypeName=".i4" />
				<plx:property visibility="public" modifier="sealedOverride" name="MandatoryNonUniqueUnconstrainedDecimal">
					<plx:returns dataTypeName=".i4" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_MandatoryNonUniqueUnconstrainedDecimal" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:local name="oldValue" dataTypeName=".i4">
							<plx:initialize>
								<plx:callThis type="field" name="_MandatoryNonUniqueUnconstrainedDecimal" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="inequality">
									<plx:left>
										<plx:nameRef name="oldValue" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnPersonMandatoryNonUniqueUnconstrainedDecimalChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnMandatoryNonUniqueUnconstrainedDecimalChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_MandatoryNonUniqueUnconstrainedDecimal" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callThis accessor="base" name="OnMandatoryNonUniqueUnconstrainedDecimalChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_MandatoryNonUniqueUnconstrainedFloat" dataTypeName=".r4" />
				<plx:property visibility="public" modifier="sealedOverride" name="MandatoryNonUniqueUnconstrainedFloat">
					<plx:returns dataTypeName=".r4" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_MandatoryNonUniqueUnconstrainedFloat" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:local name="oldValue" dataTypeName=".r4">
							<plx:initialize>
								<plx:callThis type="field" name="_MandatoryNonUniqueUnconstrainedFloat" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="inequality">
									<plx:left>
										<plx:nameRef name="oldValue" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnPersonMandatoryNonUniqueUnconstrainedFloatChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnMandatoryNonUniqueUnconstrainedFloatChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_MandatoryNonUniqueUnconstrainedFloat" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callThis accessor="base" name="OnMandatoryNonUniqueUnconstrainedFloatChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_Wife" dataTypeName="Person" />
				<plx:property visibility="public" modifier="sealedOverride" name="Wife">
					<plx:returns dataTypeName="Person" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_Wife" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:local name="oldValue" dataTypeName="Person">
							<plx:initialize>
								<plx:callThis type="field" name="_Wife" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityInequality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:nameRef name="oldValue" />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnPersonWifeChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnWifeChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_Wife" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnPersonWifeChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnWifeChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_ValueType1DoesSomethingElseWith" dataTypeName="ValueType1" />
				<plx:property visibility="public" modifier="sealedOverride" name="ValueType1DoesSomethingElseWith">
					<plx:returns dataTypeName="ValueType1" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_ValueType1DoesSomethingElseWith" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:local name="oldValue" dataTypeName="ValueType1">
							<plx:initialize>
								<plx:callThis type="field" name="_ValueType1DoesSomethingElseWith" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityInequality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:nameRef name="oldValue" />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnPersonValueType1DoesSomethingElseWithChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnValueType1DoesSomethingElseWithChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_ValueType1DoesSomethingElseWith" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnPersonValueType1DoesSomethingElseWithChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnValueType1DoesSomethingElseWithChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_MalePerson" dataTypeName="MalePerson" />
				<plx:property visibility="public" modifier="sealedOverride" name="MalePerson">
					<plx:returns dataTypeName="MalePerson" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_MalePerson" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:local name="oldValue" dataTypeName="MalePerson">
							<plx:initialize>
								<plx:callThis type="field" name="_MalePerson" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityInequality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:nameRef name="oldValue" />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnPersonMalePersonChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnMalePersonChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_MalePerson" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnPersonMalePersonChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnMalePersonChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_FemalePerson" dataTypeName="FemalePerson" />
				<plx:property visibility="public" modifier="sealedOverride" name="FemalePerson">
					<plx:returns dataTypeName="FemalePerson" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_FemalePerson" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:local name="oldValue" dataTypeName="FemalePerson">
							<plx:initialize>
								<plx:callThis type="field" name="_FemalePerson" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityInequality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:nameRef name="oldValue" />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnPersonFemalePersonChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnFemalePersonChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_FemalePerson" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnPersonFemalePersonChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnFemalePersonChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_ChildPerson" dataTypeName="ChildPerson" />
				<plx:property visibility="public" modifier="sealedOverride" name="ChildPerson">
					<plx:returns dataTypeName="ChildPerson" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_ChildPerson" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:local name="oldValue" dataTypeName="ChildPerson">
							<plx:initialize>
								<plx:callThis type="field" name="_ChildPerson" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityInequality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:nameRef name="oldValue" />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnPersonChildPersonChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnChildPersonChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_ChildPerson" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnPersonChildPersonChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnChildPersonChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_Death" dataTypeName="Death" />
				<plx:property visibility="public" modifier="sealedOverride" name="Death">
					<plx:returns dataTypeName="Death" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_Death" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:local name="oldValue" dataTypeName="Death">
							<plx:initialize>
								<plx:callThis type="field" name="_Death" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityInequality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:nameRef name="oldValue" />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnPersonDeathChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnDeathChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_Death" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnPersonDeathChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnDeathChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_HusbandViaWife" dataTypeName="Person" />
				<plx:property visibility="public" modifier="sealedOverride" name="HusbandViaWife">
					<plx:returns dataTypeName="Person" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_HusbandViaWife" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:local name="oldValue" dataTypeName="Person">
							<plx:initialize>
								<plx:callThis type="field" name="_HusbandViaWife" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityInequality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:nameRef name="oldValue" />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnPersonHusbandViaWifeChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnHusbandViaWifeChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_HusbandViaWife" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnPersonHusbandViaWifeChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnHusbandViaWifeChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="true" name="_TaskViaPersonCollection" dataTypeName="IEnumerable">
					<plx:passTypeParam dataTypeName="Task" />
				</plx:field>
				<plx:property visibility="public" modifier="sealedOverride" name="TaskViaPersonCollection">
					<plx:returns dataTypeName="IEnumerable">
						<plx:passTypeParam dataTypeName="Task" />
					</plx:returns>
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_TaskViaPersonCollection" />
						</plx:return>
					</plx:get>
				</plx:property>
				<plx:field visibility="private" readOnly="true" name="_ValueType1DoesSomethingWithViaDoesSomethingWithPersonCollection" dataTypeName="IEnumerable">
					<plx:passTypeParam dataTypeName="ValueType1" />
				</plx:field>
				<plx:property visibility="public" modifier="sealedOverride" name="ValueType1DoesSomethingWithViaDoesSomethingWithPersonCollection">
					<plx:returns dataTypeName="IEnumerable">
						<plx:passTypeParam dataTypeName="ValueType1" />
					</plx:returns>
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_ValueType1DoesSomethingWithViaDoesSomethingWithPersonCollection" />
						</plx:return>
					</plx:get>
				</plx:property>
				<plx:field visibility="private" readOnly="true" name="_PersonDrivesCarViaDrivenByPersonCollection" dataTypeName="IEnumerable">
					<plx:passTypeParam dataTypeName="PersonDrivesCar" />
				</plx:field>
				<plx:property visibility="public" modifier="sealedOverride" name="PersonDrivesCarViaDrivenByPersonCollection">
					<plx:returns dataTypeName="IEnumerable">
						<plx:passTypeParam dataTypeName="PersonDrivesCar" />
					</plx:returns>
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_PersonDrivesCarViaDrivenByPersonCollection" />
						</plx:return>
					</plx:get>
				</plx:property>
				<plx:field visibility="private" readOnly="true" name="_PersonBoughtCarFromPersonOnDateViaBuyerCollection" dataTypeName="IEnumerable">
					<plx:passTypeParam dataTypeName="PersonBoughtCarFromPersonOnDate" />
				</plx:field>
				<plx:property visibility="public" modifier="sealedOverride" name="PersonBoughtCarFromPersonOnDateViaBuyerCollection">
					<plx:returns dataTypeName="IEnumerable">
						<plx:passTypeParam dataTypeName="PersonBoughtCarFromPersonOnDate" />
					</plx:returns>
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_PersonBoughtCarFromPersonOnDateViaBuyerCollection" />
						</plx:return>
					</plx:get>
				</plx:property>
				<plx:field visibility="private" readOnly="true" name="_PersonBoughtCarFromPersonOnDateViaSellerCollection" dataTypeName="IEnumerable">
					<plx:passTypeParam dataTypeName="PersonBoughtCarFromPersonOnDate" />
				</plx:field>
				<plx:property visibility="public" modifier="sealedOverride" name="PersonBoughtCarFromPersonOnDateViaSellerCollection">
					<plx:returns dataTypeName="IEnumerable">
						<plx:passTypeParam dataTypeName="PersonBoughtCarFromPersonOnDate" />
					</plx:returns>
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_PersonBoughtCarFromPersonOnDateViaSellerCollection" />
						</plx:return>
					</plx:get>
				</plx:property>
				<plx:field visibility="private" readOnly="true" name="_PersonHasNickNameViaPersonCollection" dataTypeName="IEnumerable">
					<plx:passTypeParam dataTypeName="PersonHasNickName" />
				</plx:field>
				<plx:property visibility="public" modifier="sealedOverride" name="PersonHasNickNameViaPersonCollection">
					<plx:returns dataTypeName="IEnumerable">
						<plx:passTypeParam dataTypeName="PersonHasNickName" />
					</plx:returns>
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_PersonHasNickNameViaPersonCollection" />
						</plx:return>
					</plx:get>
				</plx:property>
			</plx:class>
			<plx:pragma type="closeRegion" data="Person" />
			<plx:pragma type="region" data="Task" />
			<plx:function visibility="public" name="CreateTask">
				<plx:interfaceMember memberName="CreateTask" dataTypeName="ISampleModelContext" />
				<plx:param name="person" dataTypeName="Person" />
				<plx:returns dataTypeName="Task" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="person" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="ArgumentNullException">
							<plx:passParam>
								<plx:string>person</plx:string>
							</plx:passParam>
						</plx:callNew>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnTaskPersonChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="person" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="SampleModelContext">
							<plx:passParam>
								<plx:string>person</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:return>
					<plx:callNew dataTypeName="TaskImpl">
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="person" />
						</plx:passParam>
					</plx:callNew>
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnTaskPersonChanging">
				<plx:param name="instance" dataTypeName="Task" />
				<plx:param name="newValue" dataTypeName="Person" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:thisKeyword />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="Context">
										<plx:callObject>
											<plx:nameRef type="parameter" name="newValue" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetDifferentContextsException" dataTypeName="SampleModelContext" />
					</plx:throw>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnTaskPersonChanged">
				<plx:param name="instance" dataTypeName="Task" />
				<plx:param name="oldValue" dataTypeName="Person" />
				<plx:callInstance name="Add">
					<plx:callObject>
						<plx:cast type="exceptionCast" dataTypeName="ICollection">
							<plx:passTypeParam dataTypeName="Task" />
							<plx:callInstance type="property" name="TaskViaPersonCollection">
								<plx:callObject>
									<plx:callInstance type="property" name="Person">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:callObject>
							</plx:callInstance>
						</plx:cast>
					</plx:callObject>
					<plx:passParam>
						<plx:nameRef type="parameter" name="instance" />
					</plx:passParam>
				</plx:callInstance>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:callInstance name="Remove">
						<plx:callObject>
							<plx:cast type="exceptionCast" dataTypeName="ICollection">
								<plx:passTypeParam dataTypeName="Task" />
								<plx:callInstance type="property" name="TaskViaPersonCollection">
									<plx:callObject>
										<plx:nameRef type="parameter" name="oldValue" />
									</plx:callObject>
								</plx:callInstance>
							</plx:cast>
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="instance" />
						</plx:passParam>
					</plx:callInstance>
				</plx:branch>
			</plx:function>
			<plx:field visibility="private" readOnly="true" name="_TaskList" dataTypeName="List">
				<plx:passTypeParam dataTypeName="Task" />
			</plx:field>
			<plx:field visibility="private" readOnly="true" name="_TaskReadOnlyCollection" dataTypeName="ReadOnlyCollection">
				<plx:passTypeParam dataTypeName="Task" />
			</plx:field>
			<plx:property visibility="public" name="TaskCollection">
				<plx:interfaceMember memberName="TaskCollection" dataTypeName="ISampleModelContext" />
				<plx:returns dataTypeName="IEnumerable">
					<plx:passTypeParam dataTypeName="Task" />
				</plx:returns>
				<plx:get>
					<plx:return>
						<plx:callThis type="field" name="_TaskReadOnlyCollection" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:class visibility="private" modifier="sealed" name="TaskImpl">
				<plx:leadingInfo>
					<plx:pragma type="region" data="TaskImpl" />
				</plx:leadingInfo>
				<plx:trailingInfo>
					<plx:pragma type="closeRegion" data="TaskImpl" />
				</plx:trailingInfo>
				<plx:attribute dataTypeName="StructLayoutAttribute" dataTypeQualifier="System.Runtime.InteropServices">
					<plx:passParam>
						<plx:callStatic type="field" name="Auto" dataTypeName="LayoutKind" dataTypeQualifier="System.Runtime.InteropServices" />
					</plx:passParam>
					<plx:passParam>
						<plx:binaryOperator type="assignNamed">
							<plx:left>
								<plx:nameRef type="namedParameter" name="CharSet" />
							</plx:left>
							<plx:right>
								<plx:callStatic type="field" name="Auto" dataTypeName="CharSet" dataTypeQualifier="System.Runtime.InteropServices" />
							</plx:right>
						</plx:binaryOperator>
					</plx:passParam>
				</plx:attribute>
				<plx:derivesFromClass dataTypeName="Task" />
				<plx:function visibility="public" name=".construct">
					<plx:param name="context" dataTypeName="SampleModelContext" />
					<plx:param name="person" dataTypeName="Person" />
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_Context" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="context" />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_Person" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="person" />
						</plx:right>
					</plx:assign>
					<plx:callInstance name="OnTaskPersonChanged">
						<plx:callObject>
							<plx:nameRef type="parameter" name="context" />
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callInstance>
					<plx:callInstance name="Add">
						<plx:callObject>
							<plx:callInstance type="field" name="_TaskList">
								<plx:callObject>
									<plx:nameRef type="parameter" name="context" />
								</plx:callObject>
							</plx:callInstance>
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
					</plx:callInstance>
				</plx:function>
				<plx:field visibility="private" readOnly="true" name="_Context" dataTypeName="SampleModelContext" />
				<plx:property visibility="public" modifier="sealedOverride" name="Context">
					<plx:returns dataTypeName="SampleModelContext" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_Context" />
						</plx:return>
					</plx:get>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_Person" dataTypeName="Person" />
				<plx:property visibility="public" modifier="sealedOverride" name="Person">
					<plx:returns dataTypeName="Person" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_Person" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:throw>
								<plx:callNew dataTypeName="ArgumentNullException">
									<plx:passParam>
										<plx:valueKeyword stringize="true" />
									</plx:passParam>
								</plx:callNew>
							</plx:throw>
						</plx:branch>
						<plx:local name="oldValue" dataTypeName="Person">
							<plx:initialize>
								<plx:callThis type="field" name="_Person" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityInequality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:nameRef name="oldValue" />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnTaskPersonChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnPersonChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_Person" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnTaskPersonChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnPersonChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
			</plx:class>
			<plx:pragma type="closeRegion" data="Task" />
			<plx:pragma type="region" data="ValueType1" />
			<plx:function visibility="public" name="CreateValueType1">
				<plx:interfaceMember memberName="CreateValueType1" dataTypeName="ISampleModelContext" />
				<plx:param name="valueType1Value" dataTypeName=".i4" />
				<plx:returns dataTypeName="ValueType1" />
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnValueType1ValueType1ValueChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="valueType1Value" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="SampleModelContext">
							<plx:passParam>
								<plx:string>valueType1Value</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:return>
					<plx:callNew dataTypeName="ValueType1Impl">
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="valueType1Value" />
						</plx:passParam>
					</plx:callNew>
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnValueType1ValueType1ValueChanging">
				<plx:param name="instance" dataTypeName="ValueType1" />
				<plx:param name="newValue" dataTypeName=".i4" />
				<plx:returns dataTypeName=".boolean" />
				<plx:local name="currentInstance" dataTypeName="ValueType1" />
				<plx:branch>
					<plx:condition>
						<plx:callInstance name="TryGetValue">
							<plx:callObject>
								<plx:callThis type="field" name="_ValueType1ValueType1ValueDictionary" />
							</plx:callObject>
							<plx:passParam>
								<plx:nameRef type="parameter" name="newValue" />
							</plx:passParam>
							<plx:passParam type="out">
								<plx:nameRef name="currentInstance" />
							</plx:passParam>
						</plx:callInstance>
					</plx:condition>
					<plx:branch>
						<plx:condition>
							<plx:binaryOperator type="identityInequality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef name="currentInstance" />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="instance" />
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:condition>
						<plx:return>
							<plx:falseKeyword />
						</plx:return>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnValueType1ValueType1ValueChanged">
				<plx:param name="instance" dataTypeName="ValueType1" />
				<plx:param name="oldValue" dataTypeName="Nullable">
					<plx:passTypeParam dataTypeName=".i4" />
				</plx:param>
				<plx:callInstance name="Add">
					<plx:callObject>
						<plx:callThis type="field" name="_ValueType1ValueType1ValueDictionary" />
					</plx:callObject>
					<plx:passParam>
						<plx:callInstance type="property" name="ValueType1Value">
							<plx:callObject>
								<plx:nameRef type="parameter" name="instance" />
							</plx:callObject>
						</plx:callInstance>
					</plx:passParam>
					<plx:passParam>
						<plx:nameRef type="parameter" name="instance" />
					</plx:passParam>
				</plx:callInstance>
				<plx:branch>
					<plx:condition>
						<plx:callInstance type="property" name="HasValue">
							<plx:callObject>
								<plx:nameRef type="parameter" name="oldValue" />
							</plx:callObject>
						</plx:callInstance>
					</plx:condition>
					<plx:callInstance name="Remove">
						<plx:callObject>
							<plx:callThis type="field" name="_ValueType1ValueType1ValueDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:callInstance name="GetValueOrDefault">
								<plx:callObject>
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:callObject>
							</plx:callInstance>
						</plx:passParam>
					</plx:callInstance>
				</plx:branch>
			</plx:function>
			<plx:function visibility="private" name="OnValueType1DoesSomethingWithPersonChanging">
				<plx:param name="instance" dataTypeName="ValueType1" />
				<plx:param name="newValue" dataTypeName="Person" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="newValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:branch>
						<plx:condition>
							<plx:binaryOperator type="identityInequality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:thisKeyword />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:callInstance type="property" name="Context">
											<plx:callObject>
												<plx:nameRef type="parameter" name="newValue" />
											</plx:callObject>
										</plx:callInstance>
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:condition>
						<plx:throw>
							<plx:callStatic name="GetDifferentContextsException" dataTypeName="SampleModelContext" />
						</plx:throw>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnValueType1DoesSomethingWithPersonChanged">
				<plx:param name="instance" dataTypeName="ValueType1" />
				<plx:param name="oldValue" dataTypeName="Person" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="DoesSomethingWithPerson">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:callInstance name="Add">
						<plx:callObject>
							<plx:cast type="exceptionCast" dataTypeName="ICollection">
								<plx:passTypeParam dataTypeName="ValueType1" />
								<plx:callInstance type="property" name="ValueType1DoesSomethingWithViaDoesSomethingWithPersonCollection">
									<plx:callObject>
										<plx:callInstance type="property" name="DoesSomethingWithPerson">
											<plx:callObject>
												<plx:nameRef type="parameter" name="instance" />
											</plx:callObject>
										</plx:callInstance>
									</plx:callObject>
								</plx:callInstance>
							</plx:cast>
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="instance" />
						</plx:passParam>
					</plx:callInstance>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:callInstance name="Remove">
						<plx:callObject>
							<plx:cast type="exceptionCast" dataTypeName="ICollection">
								<plx:passTypeParam dataTypeName="ValueType1" />
								<plx:callInstance type="property" name="ValueType1DoesSomethingWithViaDoesSomethingWithPersonCollection">
									<plx:callObject>
										<plx:nameRef type="parameter" name="oldValue" />
									</plx:callObject>
								</plx:callInstance>
							</plx:cast>
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="instance" />
						</plx:passParam>
					</plx:callInstance>
				</plx:branch>
			</plx:function>
			<plx:function visibility="private" name="OnValueType1DoesSomethingElseWithPersonViaValueType1DoesSomethingElseWithCollectionAdding">
				<plx:param name="instance" dataTypeName="ValueType1" />
				<plx:param name="item" dataTypeName="Person" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:thisKeyword />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="Context">
										<plx:callObject>
											<plx:nameRef type="parameter" name="item" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetDifferentContextsException" dataTypeName="SampleModelContext">
							<plx:passParam>
								<plx:string data="item" />
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnValueType1DoesSomethingElseWithPersonViaValueType1DoesSomethingElseWithCollectionAdded">
				<plx:param name="instance" dataTypeName="ValueType1" />
				<plx:param name="item" dataTypeName="Person" />
				<plx:assign>
					<plx:left>
						<plx:callInstance type="property" name="ValueType1DoesSomethingElseWith">
							<plx:callObject>
								<plx:nameRef type="parameter" name="item" />
							</plx:callObject>
						</plx:callInstance>
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="instance" />
					</plx:right>
				</plx:assign>
			</plx:function>
			<plx:function visibility="private" name="OnValueType1DoesSomethingElseWithPersonViaValueType1DoesSomethingElseWithCollectionRemoved">
				<plx:param name="instance" dataTypeName="ValueType1" />
				<plx:param name="item" dataTypeName="Person" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="ValueType1DoesSomethingElseWith">
										<plx:callObject>
											<plx:nameRef type="parameter" name="item" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="instance" />
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:callInstance type="property" name="ValueType1DoesSomethingElseWith">
								<plx:callObject>
									<plx:nameRef type="parameter" name="item" />
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:branch>
			</plx:function>
			<plx:field visibility="private" readOnly="true" name="_ValueType1List" dataTypeName="List">
				<plx:passTypeParam dataTypeName="ValueType1" />
			</plx:field>
			<plx:field visibility="private" readOnly="true" name="_ValueType1ReadOnlyCollection" dataTypeName="ReadOnlyCollection">
				<plx:passTypeParam dataTypeName="ValueType1" />
			</plx:field>
			<plx:property visibility="public" name="ValueType1Collection">
				<plx:interfaceMember memberName="ValueType1Collection" dataTypeName="ISampleModelContext" />
				<plx:returns dataTypeName="IEnumerable">
					<plx:passTypeParam dataTypeName="ValueType1" />
				</plx:returns>
				<plx:get>
					<plx:return>
						<plx:callThis type="field" name="_ValueType1ReadOnlyCollection" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:class visibility="private" modifier="sealed" name="ValueType1Impl">
				<plx:leadingInfo>
					<plx:pragma type="region" data="ValueType1Impl" />
				</plx:leadingInfo>
				<plx:trailingInfo>
					<plx:pragma type="closeRegion" data="ValueType1Impl" />
				</plx:trailingInfo>
				<plx:attribute dataTypeName="StructLayoutAttribute" dataTypeQualifier="System.Runtime.InteropServices">
					<plx:passParam>
						<plx:callStatic type="field" name="Auto" dataTypeName="LayoutKind" dataTypeQualifier="System.Runtime.InteropServices" />
					</plx:passParam>
					<plx:passParam>
						<plx:binaryOperator type="assignNamed">
							<plx:left>
								<plx:nameRef type="namedParameter" name="CharSet" />
							</plx:left>
							<plx:right>
								<plx:callStatic type="field" name="Auto" dataTypeName="CharSet" dataTypeQualifier="System.Runtime.InteropServices" />
							</plx:right>
						</plx:binaryOperator>
					</plx:passParam>
				</plx:attribute>
				<plx:derivesFromClass dataTypeName="ValueType1" />
				<plx:function visibility="public" name=".construct">
					<plx:param name="context" dataTypeName="SampleModelContext" />
					<plx:param name="valueType1Value" dataTypeName=".i4" />
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_Context" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="context" />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_DoesSomethingElseWithPersonViaValueType1DoesSomethingElseWithCollection" />
						</plx:left>
						<plx:right>
							<plx:callNew dataTypeName="ConstraintEnforcementCollection">
								<plx:passTypeParam dataTypeName="ValueType1" />
								<plx:passTypeParam dataTypeName="Person" />
								<plx:passParam>
									<plx:thisKeyword />
								</plx:passParam>
							</plx:callNew>
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_ValueType1Value" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="valueType1Value" />
						</plx:right>
					</plx:assign>
					<plx:callInstance name="OnValueType1ValueType1ValueChanged">
						<plx:callObject>
							<plx:nameRef type="parameter" name="context" />
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callInstance>
					<plx:callInstance name="Add">
						<plx:callObject>
							<plx:callInstance type="field" name="_ValueType1List">
								<plx:callObject>
									<plx:nameRef type="parameter" name="context" />
								</plx:callObject>
							</plx:callInstance>
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
					</plx:callInstance>
				</plx:function>
				<plx:field visibility="private" readOnly="true" name="_Context" dataTypeName="SampleModelContext" />
				<plx:property visibility="public" modifier="sealedOverride" name="Context">
					<plx:returns dataTypeName="SampleModelContext" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_Context" />
						</plx:return>
					</plx:get>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_ValueType1Value" dataTypeName=".i4" />
				<plx:property visibility="public" modifier="sealedOverride" name="ValueType1Value">
					<plx:returns dataTypeName=".i4" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_ValueType1Value" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:local name="oldValue" dataTypeName=".i4">
							<plx:initialize>
								<plx:callThis type="field" name="_ValueType1Value" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="inequality">
									<plx:left>
										<plx:nameRef name="oldValue" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnValueType1ValueType1ValueChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnValueType1ValueChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_ValueType1Value" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnValueType1ValueType1ValueChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnValueType1ValueChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_DoesSomethingWithPerson" dataTypeName="Person" />
				<plx:property visibility="public" modifier="sealedOverride" name="DoesSomethingWithPerson">
					<plx:returns dataTypeName="Person" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_DoesSomethingWithPerson" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:local name="oldValue" dataTypeName="Person">
							<plx:initialize>
								<plx:callThis type="field" name="_DoesSomethingWithPerson" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityInequality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:nameRef name="oldValue" />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnValueType1DoesSomethingWithPersonChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnDoesSomethingWithPersonChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_DoesSomethingWithPerson" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnValueType1DoesSomethingWithPersonChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnDoesSomethingWithPersonChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="true" name="_DoesSomethingElseWithPersonViaValueType1DoesSomethingElseWithCollection" dataTypeName="IEnumerable">
					<plx:passTypeParam dataTypeName="Person" />
				</plx:field>
				<plx:property visibility="public" modifier="sealedOverride" name="DoesSomethingElseWithPersonViaValueType1DoesSomethingElseWithCollection">
					<plx:returns dataTypeName="IEnumerable">
						<plx:passTypeParam dataTypeName="Person" />
					</plx:returns>
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_DoesSomethingElseWithPersonViaValueType1DoesSomethingElseWithCollection" />
						</plx:return>
					</plx:get>
				</plx:property>
			</plx:class>
			<plx:pragma type="closeRegion" data="ValueType1" />
			<plx:pragma type="region" data="Death" />
			<plx:function visibility="public" name="CreateDeath">
				<plx:interfaceMember memberName="CreateDeath" dataTypeName="ISampleModelContext" />
				<plx:param name="deathCauseType" dataTypeName=".string" />
				<plx:param name="person" dataTypeName="Person" />
				<plx:returns dataTypeName="Death" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="deathCauseType" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="ArgumentNullException">
							<plx:passParam>
								<plx:string>deathCauseType</plx:string>
							</plx:passParam>
						</plx:callNew>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="person" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="ArgumentNullException">
							<plx:passParam>
								<plx:string>person</plx:string>
							</plx:passParam>
						</plx:callNew>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnDeathDeathCauseTypeChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="deathCauseType" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="SampleModelContext">
							<plx:passParam>
								<plx:string>deathCauseType</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnDeathPersonChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="person" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="SampleModelContext">
							<plx:passParam>
								<plx:string>person</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:return>
					<plx:callNew dataTypeName="DeathImpl">
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="deathCauseType" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="person" />
						</plx:passParam>
					</plx:callNew>
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnDeathYMDChanging">
				<plx:param name="instance" dataTypeName="Death" />
				<plx:param name="newValue" dataTypeName="Nullable">
					<plx:passTypeParam dataTypeName=".date" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnDeathDeathCauseTypeChanging">
				<plx:param name="instance" dataTypeName="Death" />
				<plx:param name="newValue" dataTypeName=".string" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnDeathNaturalDeathChanging">
				<plx:param name="instance" dataTypeName="Death" />
				<plx:param name="newValue" dataTypeName="NaturalDeath" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="newValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:branch>
						<plx:condition>
							<plx:binaryOperator type="identityInequality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:thisKeyword />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:callInstance type="property" name="Context">
											<plx:callObject>
												<plx:nameRef type="parameter" name="newValue" />
											</plx:callObject>
										</plx:callInstance>
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:condition>
						<plx:throw>
							<plx:callStatic name="GetDifferentContextsException" dataTypeName="SampleModelContext" />
						</plx:throw>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnDeathNaturalDeathChanged">
				<plx:param name="instance" dataTypeName="Death" />
				<plx:param name="oldValue" dataTypeName="NaturalDeath" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="NaturalDeath">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:callInstance type="property" name="Death">
								<plx:callObject>
									<plx:callInstance type="property" name="NaturalDeath">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="instance" />
						</plx:right>
					</plx:assign>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:callInstance type="property" name="Death">
								<plx:callObject>
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:branch>
			</plx:function>
			<plx:function visibility="private" name="OnDeathUnnaturalDeathChanging">
				<plx:param name="instance" dataTypeName="Death" />
				<plx:param name="newValue" dataTypeName="UnnaturalDeath" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="newValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:branch>
						<plx:condition>
							<plx:binaryOperator type="identityInequality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:thisKeyword />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:callInstance type="property" name="Context">
											<plx:callObject>
												<plx:nameRef type="parameter" name="newValue" />
											</plx:callObject>
										</plx:callInstance>
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:condition>
						<plx:throw>
							<plx:callStatic name="GetDifferentContextsException" dataTypeName="SampleModelContext" />
						</plx:throw>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnDeathUnnaturalDeathChanged">
				<plx:param name="instance" dataTypeName="Death" />
				<plx:param name="oldValue" dataTypeName="UnnaturalDeath" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="UnnaturalDeath">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:callInstance type="property" name="Death">
								<plx:callObject>
									<plx:callInstance type="property" name="UnnaturalDeath">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="instance" />
						</plx:right>
					</plx:assign>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:callInstance type="property" name="Death">
								<plx:callObject>
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:branch>
			</plx:function>
			<plx:function visibility="private" name="OnDeathPersonChanging">
				<plx:param name="instance" dataTypeName="Death" />
				<plx:param name="newValue" dataTypeName="Person" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:thisKeyword />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="Context">
										<plx:callObject>
											<plx:nameRef type="parameter" name="newValue" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetDifferentContextsException" dataTypeName="SampleModelContext" />
					</plx:throw>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnDeathPersonChanged">
				<plx:param name="instance" dataTypeName="Death" />
				<plx:param name="oldValue" dataTypeName="Person" />
				<plx:assign>
					<plx:left>
						<plx:callInstance type="property" name="Death">
							<plx:callObject>
								<plx:callInstance type="property" name="Person">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:callObject>
						</plx:callInstance>
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="instance" />
					</plx:right>
				</plx:assign>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:callInstance type="property" name="Death">
								<plx:callObject>
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:branch>
			</plx:function>
			<plx:field visibility="private" readOnly="true" name="_DeathList" dataTypeName="List">
				<plx:passTypeParam dataTypeName="Death" />
			</plx:field>
			<plx:field visibility="private" readOnly="true" name="_DeathReadOnlyCollection" dataTypeName="ReadOnlyCollection">
				<plx:passTypeParam dataTypeName="Death" />
			</plx:field>
			<plx:property visibility="public" name="DeathCollection">
				<plx:interfaceMember memberName="DeathCollection" dataTypeName="ISampleModelContext" />
				<plx:returns dataTypeName="IEnumerable">
					<plx:passTypeParam dataTypeName="Death" />
				</plx:returns>
				<plx:get>
					<plx:return>
						<plx:callThis type="field" name="_DeathReadOnlyCollection" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:class visibility="private" modifier="sealed" name="DeathImpl">
				<plx:leadingInfo>
					<plx:pragma type="region" data="DeathImpl" />
				</plx:leadingInfo>
				<plx:trailingInfo>
					<plx:pragma type="closeRegion" data="DeathImpl" />
				</plx:trailingInfo>
				<plx:attribute dataTypeName="StructLayoutAttribute" dataTypeQualifier="System.Runtime.InteropServices">
					<plx:passParam>
						<plx:callStatic type="field" name="Auto" dataTypeName="LayoutKind" dataTypeQualifier="System.Runtime.InteropServices" />
					</plx:passParam>
					<plx:passParam>
						<plx:binaryOperator type="assignNamed">
							<plx:left>
								<plx:nameRef type="namedParameter" name="CharSet" />
							</plx:left>
							<plx:right>
								<plx:callStatic type="field" name="Auto" dataTypeName="CharSet" dataTypeQualifier="System.Runtime.InteropServices" />
							</plx:right>
						</plx:binaryOperator>
					</plx:passParam>
				</plx:attribute>
				<plx:derivesFromClass dataTypeName="Death" />
				<plx:function visibility="public" name=".construct">
					<plx:param name="context" dataTypeName="SampleModelContext" />
					<plx:param name="deathCauseType" dataTypeName=".string" />
					<plx:param name="person" dataTypeName="Person" />
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_Context" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="context" />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_DeathCauseType" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="deathCauseType" />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_Person" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="person" />
						</plx:right>
					</plx:assign>
					<plx:callInstance name="OnDeathPersonChanged">
						<plx:callObject>
							<plx:nameRef type="parameter" name="context" />
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callInstance>
					<plx:callInstance name="Add">
						<plx:callObject>
							<plx:callInstance type="field" name="_DeathList">
								<plx:callObject>
									<plx:nameRef type="parameter" name="context" />
								</plx:callObject>
							</plx:callInstance>
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
					</plx:callInstance>
				</plx:function>
				<plx:field visibility="private" readOnly="true" name="_Context" dataTypeName="SampleModelContext" />
				<plx:property visibility="public" modifier="sealedOverride" name="Context">
					<plx:returns dataTypeName="SampleModelContext" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_Context" />
						</plx:return>
					</plx:get>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_YMD" dataTypeName="Nullable">
					<plx:passTypeParam dataTypeName=".date" />
				</plx:field>
				<plx:property visibility="public" modifier="sealedOverride" name="YMD">
					<plx:returns dataTypeName="Nullable">
						<plx:passTypeParam dataTypeName=".date" />
					</plx:returns>
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_YMD" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:local name="oldValue" dataTypeName="Nullable">
							<plx:passTypeParam dataTypeName=".date" />
							<plx:initialize>
								<plx:callThis type="field" name="_YMD" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="booleanOr">
									<plx:left>
										<plx:binaryOperator type="inequality">
											<plx:left>
												<plx:callInstance name="GetValueOrDefault">
													<plx:callObject>
														<plx:nameRef name="oldValue" />
													</plx:callObject>
												</plx:callInstance>
											</plx:left>
											<plx:right>
												<plx:callInstance name="GetValueOrDefault">
													<plx:callObject>
														<plx:valueKeyword />
													</plx:callObject>
												</plx:callInstance>
											</plx:right>
										</plx:binaryOperator>
									</plx:left>
									<plx:right>
										<plx:binaryOperator type="inequality">
											<plx:left>
												<plx:callInstance type="property" name="HasValue">
													<plx:callObject>
														<plx:nameRef name="oldValue" />
													</plx:callObject>
												</plx:callInstance>
											</plx:left>
											<plx:right>
												<plx:callInstance type="property" name="HasValue">
													<plx:callObject>
														<plx:valueKeyword />
													</plx:callObject>
												</plx:callInstance>
											</plx:right>
										</plx:binaryOperator>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnDeathYMDChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnYMDChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_YMD" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callThis accessor="base" name="OnYMDChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_DeathCauseType" dataTypeName=".string" />
				<plx:property visibility="public" modifier="sealedOverride" name="DeathCauseType">
					<plx:returns dataTypeName=".string" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_DeathCauseType" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:throw>
								<plx:callNew dataTypeName="ArgumentNullException">
									<plx:passParam>
										<plx:valueKeyword stringize="true" />
									</plx:passParam>
								</plx:callNew>
							</plx:throw>
						</plx:branch>
						<plx:local name="oldValue" dataTypeName=".string">
							<plx:initialize>
								<plx:callThis type="field" name="_DeathCauseType" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="booleanAnd">
									<plx:left>
										<plx:binaryOperator type="identityInequality">
											<plx:left>
												<plx:cast type="exceptionCast" dataTypeName=".object">
													<plx:nameRef name="oldValue" />
												</plx:cast>
											</plx:left>
											<plx:right>
												<plx:cast type="exceptionCast" dataTypeName=".object">
													<plx:valueKeyword />
												</plx:cast>
											</plx:right>
										</plx:binaryOperator>
									</plx:left>
									<plx:right>
										<plx:unaryOperator type="booleanNot">
											<plx:callInstance name="Equals">
												<plx:callObject>
													<plx:valueKeyword />
												</plx:callObject>
												<plx:passParam>
													<plx:nameRef name="oldValue" />
												</plx:passParam>
											</plx:callInstance>
										</plx:unaryOperator>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnDeathDeathCauseTypeChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnDeathCauseTypeChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_DeathCauseType" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callThis accessor="base" name="OnDeathCauseTypeChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_NaturalDeath" dataTypeName="NaturalDeath" />
				<plx:property visibility="public" modifier="sealedOverride" name="NaturalDeath">
					<plx:returns dataTypeName="NaturalDeath" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_NaturalDeath" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:local name="oldValue" dataTypeName="NaturalDeath">
							<plx:initialize>
								<plx:callThis type="field" name="_NaturalDeath" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityInequality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:nameRef name="oldValue" />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnDeathNaturalDeathChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnNaturalDeathChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_NaturalDeath" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnDeathNaturalDeathChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnNaturalDeathChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_UnnaturalDeath" dataTypeName="UnnaturalDeath" />
				<plx:property visibility="public" modifier="sealedOverride" name="UnnaturalDeath">
					<plx:returns dataTypeName="UnnaturalDeath" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_UnnaturalDeath" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:local name="oldValue" dataTypeName="UnnaturalDeath">
							<plx:initialize>
								<plx:callThis type="field" name="_UnnaturalDeath" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityInequality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:nameRef name="oldValue" />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnDeathUnnaturalDeathChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnUnnaturalDeathChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_UnnaturalDeath" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnDeathUnnaturalDeathChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnUnnaturalDeathChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_Person" dataTypeName="Person" />
				<plx:property visibility="public" modifier="sealedOverride" name="Person">
					<plx:returns dataTypeName="Person" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_Person" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:throw>
								<plx:callNew dataTypeName="ArgumentNullException">
									<plx:passParam>
										<plx:valueKeyword stringize="true" />
									</plx:passParam>
								</plx:callNew>
							</plx:throw>
						</plx:branch>
						<plx:local name="oldValue" dataTypeName="Person">
							<plx:initialize>
								<plx:callThis type="field" name="_Person" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityInequality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:nameRef name="oldValue" />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnDeathPersonChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnPersonChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_Person" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnDeathPersonChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnPersonChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
			</plx:class>
			<plx:pragma type="closeRegion" data="Death" />
			<plx:pragma type="region" data="NaturalDeath" />
			<plx:function visibility="public" name="CreateNaturalDeath">
				<plx:interfaceMember memberName="CreateNaturalDeath" dataTypeName="ISampleModelContext" />
				<plx:param name="death" dataTypeName="Death" />
				<plx:returns dataTypeName="NaturalDeath" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="death" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="ArgumentNullException">
							<plx:passParam>
								<plx:string>death</plx:string>
							</plx:passParam>
						</plx:callNew>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnNaturalDeathDeathChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="death" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="SampleModelContext">
							<plx:passParam>
								<plx:string>death</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:return>
					<plx:callNew dataTypeName="NaturalDeathImpl">
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="death" />
						</plx:passParam>
					</plx:callNew>
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnNaturalDeathIsFromProstateCancerChanging">
				<plx:param name="instance" dataTypeName="NaturalDeath" />
				<plx:param name="newValue" dataTypeName="Nullable">
					<plx:passTypeParam dataTypeName=".boolean" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnNaturalDeathDeathChanging">
				<plx:param name="instance" dataTypeName="NaturalDeath" />
				<plx:param name="newValue" dataTypeName="Death" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:thisKeyword />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="Context">
										<plx:callObject>
											<plx:nameRef type="parameter" name="newValue" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetDifferentContextsException" dataTypeName="SampleModelContext" />
					</plx:throw>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnNaturalDeathDeathChanged">
				<plx:param name="instance" dataTypeName="NaturalDeath" />
				<plx:param name="oldValue" dataTypeName="Death" />
				<plx:assign>
					<plx:left>
						<plx:callInstance type="property" name="NaturalDeath">
							<plx:callObject>
								<plx:callInstance type="property" name="Death">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:callObject>
						</plx:callInstance>
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="instance" />
					</plx:right>
				</plx:assign>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:callInstance type="property" name="NaturalDeath">
								<plx:callObject>
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:branch>
			</plx:function>
			<plx:field visibility="private" readOnly="true" name="_NaturalDeathList" dataTypeName="List">
				<plx:passTypeParam dataTypeName="NaturalDeath" />
			</plx:field>
			<plx:field visibility="private" readOnly="true" name="_NaturalDeathReadOnlyCollection" dataTypeName="ReadOnlyCollection">
				<plx:passTypeParam dataTypeName="NaturalDeath" />
			</plx:field>
			<plx:property visibility="public" name="NaturalDeathCollection">
				<plx:interfaceMember memberName="NaturalDeathCollection" dataTypeName="ISampleModelContext" />
				<plx:returns dataTypeName="IEnumerable">
					<plx:passTypeParam dataTypeName="NaturalDeath" />
				</plx:returns>
				<plx:get>
					<plx:return>
						<plx:callThis type="field" name="_NaturalDeathReadOnlyCollection" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:class visibility="private" modifier="sealed" name="NaturalDeathImpl">
				<plx:leadingInfo>
					<plx:pragma type="region" data="NaturalDeathImpl" />
				</plx:leadingInfo>
				<plx:trailingInfo>
					<plx:pragma type="closeRegion" data="NaturalDeathImpl" />
				</plx:trailingInfo>
				<plx:attribute dataTypeName="StructLayoutAttribute" dataTypeQualifier="System.Runtime.InteropServices">
					<plx:passParam>
						<plx:callStatic type="field" name="Auto" dataTypeName="LayoutKind" dataTypeQualifier="System.Runtime.InteropServices" />
					</plx:passParam>
					<plx:passParam>
						<plx:binaryOperator type="assignNamed">
							<plx:left>
								<plx:nameRef type="namedParameter" name="CharSet" />
							</plx:left>
							<plx:right>
								<plx:callStatic type="field" name="Auto" dataTypeName="CharSet" dataTypeQualifier="System.Runtime.InteropServices" />
							</plx:right>
						</plx:binaryOperator>
					</plx:passParam>
				</plx:attribute>
				<plx:derivesFromClass dataTypeName="NaturalDeath" />
				<plx:function visibility="public" name=".construct">
					<plx:param name="context" dataTypeName="SampleModelContext" />
					<plx:param name="death" dataTypeName="Death" />
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_Context" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="context" />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_Death" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="death" />
						</plx:right>
					</plx:assign>
					<plx:callInstance name="OnNaturalDeathDeathChanged">
						<plx:callObject>
							<plx:nameRef type="parameter" name="context" />
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callInstance>
					<plx:callInstance name="Add">
						<plx:callObject>
							<plx:callInstance type="field" name="_NaturalDeathList">
								<plx:callObject>
									<plx:nameRef type="parameter" name="context" />
								</plx:callObject>
							</plx:callInstance>
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
					</plx:callInstance>
				</plx:function>
				<plx:field visibility="private" readOnly="true" name="_Context" dataTypeName="SampleModelContext" />
				<plx:property visibility="public" modifier="sealedOverride" name="Context">
					<plx:returns dataTypeName="SampleModelContext" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_Context" />
						</plx:return>
					</plx:get>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_IsFromProstateCancer" dataTypeName="Nullable">
					<plx:passTypeParam dataTypeName=".boolean" />
				</plx:field>
				<plx:property visibility="public" modifier="sealedOverride" name="IsFromProstateCancer">
					<plx:returns dataTypeName="Nullable">
						<plx:passTypeParam dataTypeName=".boolean" />
					</plx:returns>
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_IsFromProstateCancer" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:local name="oldValue" dataTypeName="Nullable">
							<plx:passTypeParam dataTypeName=".boolean" />
							<plx:initialize>
								<plx:callThis type="field" name="_IsFromProstateCancer" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="booleanOr">
									<plx:left>
										<plx:binaryOperator type="inequality">
											<plx:left>
												<plx:callInstance name="GetValueOrDefault">
													<plx:callObject>
														<plx:nameRef name="oldValue" />
													</plx:callObject>
												</plx:callInstance>
											</plx:left>
											<plx:right>
												<plx:callInstance name="GetValueOrDefault">
													<plx:callObject>
														<plx:valueKeyword />
													</plx:callObject>
												</plx:callInstance>
											</plx:right>
										</plx:binaryOperator>
									</plx:left>
									<plx:right>
										<plx:binaryOperator type="inequality">
											<plx:left>
												<plx:callInstance type="property" name="HasValue">
													<plx:callObject>
														<plx:nameRef name="oldValue" />
													</plx:callObject>
												</plx:callInstance>
											</plx:left>
											<plx:right>
												<plx:callInstance type="property" name="HasValue">
													<plx:callObject>
														<plx:valueKeyword />
													</plx:callObject>
												</plx:callInstance>
											</plx:right>
										</plx:binaryOperator>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnNaturalDeathIsFromProstateCancerChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnIsFromProstateCancerChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_IsFromProstateCancer" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callThis accessor="base" name="OnIsFromProstateCancerChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_Death" dataTypeName="Death" />
				<plx:property visibility="public" modifier="sealedOverride" name="Death">
					<plx:returns dataTypeName="Death" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_Death" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:throw>
								<plx:callNew dataTypeName="ArgumentNullException">
									<plx:passParam>
										<plx:valueKeyword stringize="true" />
									</plx:passParam>
								</plx:callNew>
							</plx:throw>
						</plx:branch>
						<plx:local name="oldValue" dataTypeName="Death">
							<plx:initialize>
								<plx:callThis type="field" name="_Death" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityInequality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:nameRef name="oldValue" />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnNaturalDeathDeathChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnDeathChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_Death" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnNaturalDeathDeathChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnDeathChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
			</plx:class>
			<plx:pragma type="closeRegion" data="NaturalDeath" />
			<plx:pragma type="region" data="UnnaturalDeath" />
			<plx:function visibility="public" name="CreateUnnaturalDeath">
				<plx:interfaceMember memberName="CreateUnnaturalDeath" dataTypeName="ISampleModelContext" />
				<plx:param name="death" dataTypeName="Death" />
				<plx:returns dataTypeName="UnnaturalDeath" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="death" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="ArgumentNullException">
							<plx:passParam>
								<plx:string>death</plx:string>
							</plx:passParam>
						</plx:callNew>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnUnnaturalDeathDeathChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="death" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="SampleModelContext">
							<plx:passParam>
								<plx:string>death</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:return>
					<plx:callNew dataTypeName="UnnaturalDeathImpl">
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="death" />
						</plx:passParam>
					</plx:callNew>
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnUnnaturalDeathIsViolentChanging">
				<plx:param name="instance" dataTypeName="UnnaturalDeath" />
				<plx:param name="newValue" dataTypeName="Nullable">
					<plx:passTypeParam dataTypeName=".boolean" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnUnnaturalDeathIsBloodyChanging">
				<plx:param name="instance" dataTypeName="UnnaturalDeath" />
				<plx:param name="newValue" dataTypeName="Nullable">
					<plx:passTypeParam dataTypeName=".boolean" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnUnnaturalDeathDeathChanging">
				<plx:param name="instance" dataTypeName="UnnaturalDeath" />
				<plx:param name="newValue" dataTypeName="Death" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:thisKeyword />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="Context">
										<plx:callObject>
											<plx:nameRef type="parameter" name="newValue" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetDifferentContextsException" dataTypeName="SampleModelContext" />
					</plx:throw>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnUnnaturalDeathDeathChanged">
				<plx:param name="instance" dataTypeName="UnnaturalDeath" />
				<plx:param name="oldValue" dataTypeName="Death" />
				<plx:assign>
					<plx:left>
						<plx:callInstance type="property" name="UnnaturalDeath">
							<plx:callObject>
								<plx:callInstance type="property" name="Death">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:callObject>
						</plx:callInstance>
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="instance" />
					</plx:right>
				</plx:assign>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:callInstance type="property" name="UnnaturalDeath">
								<plx:callObject>
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:branch>
			</plx:function>
			<plx:field visibility="private" readOnly="true" name="_UnnaturalDeathList" dataTypeName="List">
				<plx:passTypeParam dataTypeName="UnnaturalDeath" />
			</plx:field>
			<plx:field visibility="private" readOnly="true" name="_UnnaturalDeathReadOnlyCollection" dataTypeName="ReadOnlyCollection">
				<plx:passTypeParam dataTypeName="UnnaturalDeath" />
			</plx:field>
			<plx:property visibility="public" name="UnnaturalDeathCollection">
				<plx:interfaceMember memberName="UnnaturalDeathCollection" dataTypeName="ISampleModelContext" />
				<plx:returns dataTypeName="IEnumerable">
					<plx:passTypeParam dataTypeName="UnnaturalDeath" />
				</plx:returns>
				<plx:get>
					<plx:return>
						<plx:callThis type="field" name="_UnnaturalDeathReadOnlyCollection" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:class visibility="private" modifier="sealed" name="UnnaturalDeathImpl">
				<plx:leadingInfo>
					<plx:pragma type="region" data="UnnaturalDeathImpl" />
				</plx:leadingInfo>
				<plx:trailingInfo>
					<plx:pragma type="closeRegion" data="UnnaturalDeathImpl" />
				</plx:trailingInfo>
				<plx:attribute dataTypeName="StructLayoutAttribute" dataTypeQualifier="System.Runtime.InteropServices">
					<plx:passParam>
						<plx:callStatic type="field" name="Auto" dataTypeName="LayoutKind" dataTypeQualifier="System.Runtime.InteropServices" />
					</plx:passParam>
					<plx:passParam>
						<plx:binaryOperator type="assignNamed">
							<plx:left>
								<plx:nameRef type="namedParameter" name="CharSet" />
							</plx:left>
							<plx:right>
								<plx:callStatic type="field" name="Auto" dataTypeName="CharSet" dataTypeQualifier="System.Runtime.InteropServices" />
							</plx:right>
						</plx:binaryOperator>
					</plx:passParam>
				</plx:attribute>
				<plx:derivesFromClass dataTypeName="UnnaturalDeath" />
				<plx:function visibility="public" name=".construct">
					<plx:param name="context" dataTypeName="SampleModelContext" />
					<plx:param name="death" dataTypeName="Death" />
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_Context" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="context" />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_Death" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="death" />
						</plx:right>
					</plx:assign>
					<plx:callInstance name="OnUnnaturalDeathDeathChanged">
						<plx:callObject>
							<plx:nameRef type="parameter" name="context" />
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callInstance>
					<plx:callInstance name="Add">
						<plx:callObject>
							<plx:callInstance type="field" name="_UnnaturalDeathList">
								<plx:callObject>
									<plx:nameRef type="parameter" name="context" />
								</plx:callObject>
							</plx:callInstance>
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
					</plx:callInstance>
				</plx:function>
				<plx:field visibility="private" readOnly="true" name="_Context" dataTypeName="SampleModelContext" />
				<plx:property visibility="public" modifier="sealedOverride" name="Context">
					<plx:returns dataTypeName="SampleModelContext" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_Context" />
						</plx:return>
					</plx:get>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_IsViolent" dataTypeName="Nullable">
					<plx:passTypeParam dataTypeName=".boolean" />
				</plx:field>
				<plx:property visibility="public" modifier="sealedOverride" name="IsViolent">
					<plx:returns dataTypeName="Nullable">
						<plx:passTypeParam dataTypeName=".boolean" />
					</plx:returns>
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_IsViolent" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:local name="oldValue" dataTypeName="Nullable">
							<plx:passTypeParam dataTypeName=".boolean" />
							<plx:initialize>
								<plx:callThis type="field" name="_IsViolent" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="booleanOr">
									<plx:left>
										<plx:binaryOperator type="inequality">
											<plx:left>
												<plx:callInstance name="GetValueOrDefault">
													<plx:callObject>
														<plx:nameRef name="oldValue" />
													</plx:callObject>
												</plx:callInstance>
											</plx:left>
											<plx:right>
												<plx:callInstance name="GetValueOrDefault">
													<plx:callObject>
														<plx:valueKeyword />
													</plx:callObject>
												</plx:callInstance>
											</plx:right>
										</plx:binaryOperator>
									</plx:left>
									<plx:right>
										<plx:binaryOperator type="inequality">
											<plx:left>
												<plx:callInstance type="property" name="HasValue">
													<plx:callObject>
														<plx:nameRef name="oldValue" />
													</plx:callObject>
												</plx:callInstance>
											</plx:left>
											<plx:right>
												<plx:callInstance type="property" name="HasValue">
													<plx:callObject>
														<plx:valueKeyword />
													</plx:callObject>
												</plx:callInstance>
											</plx:right>
										</plx:binaryOperator>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnUnnaturalDeathIsViolentChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnIsViolentChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_IsViolent" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callThis accessor="base" name="OnIsViolentChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_IsBloody" dataTypeName="Nullable">
					<plx:passTypeParam dataTypeName=".boolean" />
				</plx:field>
				<plx:property visibility="public" modifier="sealedOverride" name="IsBloody">
					<plx:returns dataTypeName="Nullable">
						<plx:passTypeParam dataTypeName=".boolean" />
					</plx:returns>
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_IsBloody" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:local name="oldValue" dataTypeName="Nullable">
							<plx:passTypeParam dataTypeName=".boolean" />
							<plx:initialize>
								<plx:callThis type="field" name="_IsBloody" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="booleanOr">
									<plx:left>
										<plx:binaryOperator type="inequality">
											<plx:left>
												<plx:callInstance name="GetValueOrDefault">
													<plx:callObject>
														<plx:nameRef name="oldValue" />
													</plx:callObject>
												</plx:callInstance>
											</plx:left>
											<plx:right>
												<plx:callInstance name="GetValueOrDefault">
													<plx:callObject>
														<plx:valueKeyword />
													</plx:callObject>
												</plx:callInstance>
											</plx:right>
										</plx:binaryOperator>
									</plx:left>
									<plx:right>
										<plx:binaryOperator type="inequality">
											<plx:left>
												<plx:callInstance type="property" name="HasValue">
													<plx:callObject>
														<plx:nameRef name="oldValue" />
													</plx:callObject>
												</plx:callInstance>
											</plx:left>
											<plx:right>
												<plx:callInstance type="property" name="HasValue">
													<plx:callObject>
														<plx:valueKeyword />
													</plx:callObject>
												</plx:callInstance>
											</plx:right>
										</plx:binaryOperator>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnUnnaturalDeathIsBloodyChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnIsBloodyChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_IsBloody" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callThis accessor="base" name="OnIsBloodyChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_Death" dataTypeName="Death" />
				<plx:property visibility="public" modifier="sealedOverride" name="Death">
					<plx:returns dataTypeName="Death" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_Death" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:throw>
								<plx:callNew dataTypeName="ArgumentNullException">
									<plx:passParam>
										<plx:valueKeyword stringize="true" />
									</plx:passParam>
								</plx:callNew>
							</plx:throw>
						</plx:branch>
						<plx:local name="oldValue" dataTypeName="Death">
							<plx:initialize>
								<plx:callThis type="field" name="_Death" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityInequality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:nameRef name="oldValue" />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnUnnaturalDeathDeathChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnDeathChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_Death" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnUnnaturalDeathDeathChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnDeathChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
			</plx:class>
			<plx:pragma type="closeRegion" data="UnnaturalDeath" />
			<plx:pragma type="region" data="MalePerson" />
			<plx:function visibility="public" name="CreateMalePerson">
				<plx:interfaceMember memberName="CreateMalePerson" dataTypeName="ISampleModelContext" />
				<plx:param name="person" dataTypeName="Person" />
				<plx:returns dataTypeName="MalePerson" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="person" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="ArgumentNullException">
							<plx:passParam>
								<plx:string>person</plx:string>
							</plx:passParam>
						</plx:callNew>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnMalePersonPersonChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="person" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="SampleModelContext">
							<plx:passParam>
								<plx:string>person</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:return>
					<plx:callNew dataTypeName="MalePersonImpl">
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="person" />
						</plx:passParam>
					</plx:callNew>
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnMalePersonPersonChanging">
				<plx:param name="instance" dataTypeName="MalePerson" />
				<plx:param name="newValue" dataTypeName="Person" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:thisKeyword />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="Context">
										<plx:callObject>
											<plx:nameRef type="parameter" name="newValue" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetDifferentContextsException" dataTypeName="SampleModelContext" />
					</plx:throw>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnMalePersonPersonChanged">
				<plx:param name="instance" dataTypeName="MalePerson" />
				<plx:param name="oldValue" dataTypeName="Person" />
				<plx:assign>
					<plx:left>
						<plx:callInstance type="property" name="MalePerson">
							<plx:callObject>
								<plx:callInstance type="property" name="Person">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:callObject>
						</plx:callInstance>
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="instance" />
					</plx:right>
				</plx:assign>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:callInstance type="property" name="MalePerson">
								<plx:callObject>
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:branch>
			</plx:function>
			<plx:function visibility="private" name="OnMalePersonChildPersonViaFatherCollectionAdding">
				<plx:param name="instance" dataTypeName="MalePerson" />
				<plx:param name="item" dataTypeName="ChildPerson" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:thisKeyword />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="Context">
										<plx:callObject>
											<plx:nameRef type="parameter" name="item" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetDifferentContextsException" dataTypeName="SampleModelContext">
							<plx:passParam>
								<plx:string data="item" />
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnMalePersonChildPersonViaFatherCollectionAdded">
				<plx:param name="instance" dataTypeName="MalePerson" />
				<plx:param name="item" dataTypeName="ChildPerson" />
				<plx:assign>
					<plx:left>
						<plx:callInstance type="property" name="Father">
							<plx:callObject>
								<plx:nameRef type="parameter" name="item" />
							</plx:callObject>
						</plx:callInstance>
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="instance" />
					</plx:right>
				</plx:assign>
			</plx:function>
			<plx:function visibility="private" name="OnMalePersonChildPersonViaFatherCollectionRemoved">
				<plx:param name="instance" dataTypeName="MalePerson" />
				<plx:param name="item" dataTypeName="ChildPerson" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="Father">
										<plx:callObject>
											<plx:nameRef type="parameter" name="item" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="instance" />
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:callInstance type="property" name="Father">
								<plx:callObject>
									<plx:nameRef type="parameter" name="item" />
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:branch>
			</plx:function>
			<plx:field visibility="private" readOnly="true" name="_MalePersonList" dataTypeName="List">
				<plx:passTypeParam dataTypeName="MalePerson" />
			</plx:field>
			<plx:field visibility="private" readOnly="true" name="_MalePersonReadOnlyCollection" dataTypeName="ReadOnlyCollection">
				<plx:passTypeParam dataTypeName="MalePerson" />
			</plx:field>
			<plx:property visibility="public" name="MalePersonCollection">
				<plx:interfaceMember memberName="MalePersonCollection" dataTypeName="ISampleModelContext" />
				<plx:returns dataTypeName="IEnumerable">
					<plx:passTypeParam dataTypeName="MalePerson" />
				</plx:returns>
				<plx:get>
					<plx:return>
						<plx:callThis type="field" name="_MalePersonReadOnlyCollection" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:class visibility="private" modifier="sealed" name="MalePersonImpl">
				<plx:leadingInfo>
					<plx:pragma type="region" data="MalePersonImpl" />
				</plx:leadingInfo>
				<plx:trailingInfo>
					<plx:pragma type="closeRegion" data="MalePersonImpl" />
				</plx:trailingInfo>
				<plx:attribute dataTypeName="StructLayoutAttribute" dataTypeQualifier="System.Runtime.InteropServices">
					<plx:passParam>
						<plx:callStatic type="field" name="Auto" dataTypeName="LayoutKind" dataTypeQualifier="System.Runtime.InteropServices" />
					</plx:passParam>
					<plx:passParam>
						<plx:binaryOperator type="assignNamed">
							<plx:left>
								<plx:nameRef type="namedParameter" name="CharSet" />
							</plx:left>
							<plx:right>
								<plx:callStatic type="field" name="Auto" dataTypeName="CharSet" dataTypeQualifier="System.Runtime.InteropServices" />
							</plx:right>
						</plx:binaryOperator>
					</plx:passParam>
				</plx:attribute>
				<plx:derivesFromClass dataTypeName="MalePerson" />
				<plx:function visibility="public" name=".construct">
					<plx:param name="context" dataTypeName="SampleModelContext" />
					<plx:param name="person" dataTypeName="Person" />
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_Context" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="context" />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_ChildPersonViaFatherCollection" />
						</plx:left>
						<plx:right>
							<plx:callNew dataTypeName="ConstraintEnforcementCollection">
								<plx:passTypeParam dataTypeName="MalePerson" />
								<plx:passTypeParam dataTypeName="ChildPerson" />
								<plx:passParam>
									<plx:thisKeyword />
								</plx:passParam>
							</plx:callNew>
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_Person" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="person" />
						</plx:right>
					</plx:assign>
					<plx:callInstance name="OnMalePersonPersonChanged">
						<plx:callObject>
							<plx:nameRef type="parameter" name="context" />
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callInstance>
					<plx:callInstance name="Add">
						<plx:callObject>
							<plx:callInstance type="field" name="_MalePersonList">
								<plx:callObject>
									<plx:nameRef type="parameter" name="context" />
								</plx:callObject>
							</plx:callInstance>
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
					</plx:callInstance>
				</plx:function>
				<plx:field visibility="private" readOnly="true" name="_Context" dataTypeName="SampleModelContext" />
				<plx:property visibility="public" modifier="sealedOverride" name="Context">
					<plx:returns dataTypeName="SampleModelContext" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_Context" />
						</plx:return>
					</plx:get>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_Person" dataTypeName="Person" />
				<plx:property visibility="public" modifier="sealedOverride" name="Person">
					<plx:returns dataTypeName="Person" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_Person" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:throw>
								<plx:callNew dataTypeName="ArgumentNullException">
									<plx:passParam>
										<plx:valueKeyword stringize="true" />
									</plx:passParam>
								</plx:callNew>
							</plx:throw>
						</plx:branch>
						<plx:local name="oldValue" dataTypeName="Person">
							<plx:initialize>
								<plx:callThis type="field" name="_Person" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityInequality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:nameRef name="oldValue" />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnMalePersonPersonChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnPersonChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_Person" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnMalePersonPersonChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnPersonChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="true" name="_ChildPersonViaFatherCollection" dataTypeName="IEnumerable">
					<plx:passTypeParam dataTypeName="ChildPerson" />
				</plx:field>
				<plx:property visibility="public" modifier="sealedOverride" name="ChildPersonViaFatherCollection">
					<plx:returns dataTypeName="IEnumerable">
						<plx:passTypeParam dataTypeName="ChildPerson" />
					</plx:returns>
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_ChildPersonViaFatherCollection" />
						</plx:return>
					</plx:get>
				</plx:property>
			</plx:class>
			<plx:pragma type="closeRegion" data="MalePerson" />
			<plx:pragma type="region" data="FemalePerson" />
			<plx:function visibility="public" name="CreateFemalePerson">
				<plx:interfaceMember memberName="CreateFemalePerson" dataTypeName="ISampleModelContext" />
				<plx:param name="person" dataTypeName="Person" />
				<plx:returns dataTypeName="FemalePerson" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="person" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="ArgumentNullException">
							<plx:passParam>
								<plx:string>person</plx:string>
							</plx:passParam>
						</plx:callNew>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnFemalePersonPersonChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="person" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="SampleModelContext">
							<plx:passParam>
								<plx:string>person</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:return>
					<plx:callNew dataTypeName="FemalePersonImpl">
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="person" />
						</plx:passParam>
					</plx:callNew>
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnFemalePersonPersonChanging">
				<plx:param name="instance" dataTypeName="FemalePerson" />
				<plx:param name="newValue" dataTypeName="Person" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:thisKeyword />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="Context">
										<plx:callObject>
											<plx:nameRef type="parameter" name="newValue" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetDifferentContextsException" dataTypeName="SampleModelContext" />
					</plx:throw>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnFemalePersonPersonChanged">
				<plx:param name="instance" dataTypeName="FemalePerson" />
				<plx:param name="oldValue" dataTypeName="Person" />
				<plx:assign>
					<plx:left>
						<plx:callInstance type="property" name="FemalePerson">
							<plx:callObject>
								<plx:callInstance type="property" name="Person">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:callObject>
						</plx:callInstance>
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="instance" />
					</plx:right>
				</plx:assign>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:callInstance type="property" name="FemalePerson">
								<plx:callObject>
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:branch>
			</plx:function>
			<plx:function visibility="private" name="OnFemalePersonChildPersonViaMotherCollectionAdding">
				<plx:param name="instance" dataTypeName="FemalePerson" />
				<plx:param name="item" dataTypeName="ChildPerson" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:thisKeyword />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="Context">
										<plx:callObject>
											<plx:nameRef type="parameter" name="item" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetDifferentContextsException" dataTypeName="SampleModelContext">
							<plx:passParam>
								<plx:string data="item" />
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnFemalePersonChildPersonViaMotherCollectionAdded">
				<plx:param name="instance" dataTypeName="FemalePerson" />
				<plx:param name="item" dataTypeName="ChildPerson" />
				<plx:assign>
					<plx:left>
						<plx:callInstance type="property" name="Mother">
							<plx:callObject>
								<plx:nameRef type="parameter" name="item" />
							</plx:callObject>
						</plx:callInstance>
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="instance" />
					</plx:right>
				</plx:assign>
			</plx:function>
			<plx:function visibility="private" name="OnFemalePersonChildPersonViaMotherCollectionRemoved">
				<plx:param name="instance" dataTypeName="FemalePerson" />
				<plx:param name="item" dataTypeName="ChildPerson" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="Mother">
										<plx:callObject>
											<plx:nameRef type="parameter" name="item" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="instance" />
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:callInstance type="property" name="Mother">
								<plx:callObject>
									<plx:nameRef type="parameter" name="item" />
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:branch>
			</plx:function>
			<plx:field visibility="private" readOnly="true" name="_FemalePersonList" dataTypeName="List">
				<plx:passTypeParam dataTypeName="FemalePerson" />
			</plx:field>
			<plx:field visibility="private" readOnly="true" name="_FemalePersonReadOnlyCollection" dataTypeName="ReadOnlyCollection">
				<plx:passTypeParam dataTypeName="FemalePerson" />
			</plx:field>
			<plx:property visibility="public" name="FemalePersonCollection">
				<plx:interfaceMember memberName="FemalePersonCollection" dataTypeName="ISampleModelContext" />
				<plx:returns dataTypeName="IEnumerable">
					<plx:passTypeParam dataTypeName="FemalePerson" />
				</plx:returns>
				<plx:get>
					<plx:return>
						<plx:callThis type="field" name="_FemalePersonReadOnlyCollection" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:class visibility="private" modifier="sealed" name="FemalePersonImpl">
				<plx:leadingInfo>
					<plx:pragma type="region" data="FemalePersonImpl" />
				</plx:leadingInfo>
				<plx:trailingInfo>
					<plx:pragma type="closeRegion" data="FemalePersonImpl" />
				</plx:trailingInfo>
				<plx:attribute dataTypeName="StructLayoutAttribute" dataTypeQualifier="System.Runtime.InteropServices">
					<plx:passParam>
						<plx:callStatic type="field" name="Auto" dataTypeName="LayoutKind" dataTypeQualifier="System.Runtime.InteropServices" />
					</plx:passParam>
					<plx:passParam>
						<plx:binaryOperator type="assignNamed">
							<plx:left>
								<plx:nameRef type="namedParameter" name="CharSet" />
							</plx:left>
							<plx:right>
								<plx:callStatic type="field" name="Auto" dataTypeName="CharSet" dataTypeQualifier="System.Runtime.InteropServices" />
							</plx:right>
						</plx:binaryOperator>
					</plx:passParam>
				</plx:attribute>
				<plx:derivesFromClass dataTypeName="FemalePerson" />
				<plx:function visibility="public" name=".construct">
					<plx:param name="context" dataTypeName="SampleModelContext" />
					<plx:param name="person" dataTypeName="Person" />
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_Context" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="context" />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_ChildPersonViaMotherCollection" />
						</plx:left>
						<plx:right>
							<plx:callNew dataTypeName="ConstraintEnforcementCollection">
								<plx:passTypeParam dataTypeName="FemalePerson" />
								<plx:passTypeParam dataTypeName="ChildPerson" />
								<plx:passParam>
									<plx:thisKeyword />
								</plx:passParam>
							</plx:callNew>
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_Person" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="person" />
						</plx:right>
					</plx:assign>
					<plx:callInstance name="OnFemalePersonPersonChanged">
						<plx:callObject>
							<plx:nameRef type="parameter" name="context" />
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callInstance>
					<plx:callInstance name="Add">
						<plx:callObject>
							<plx:callInstance type="field" name="_FemalePersonList">
								<plx:callObject>
									<plx:nameRef type="parameter" name="context" />
								</plx:callObject>
							</plx:callInstance>
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
					</plx:callInstance>
				</plx:function>
				<plx:field visibility="private" readOnly="true" name="_Context" dataTypeName="SampleModelContext" />
				<plx:property visibility="public" modifier="sealedOverride" name="Context">
					<plx:returns dataTypeName="SampleModelContext" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_Context" />
						</plx:return>
					</plx:get>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_Person" dataTypeName="Person" />
				<plx:property visibility="public" modifier="sealedOverride" name="Person">
					<plx:returns dataTypeName="Person" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_Person" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:throw>
								<plx:callNew dataTypeName="ArgumentNullException">
									<plx:passParam>
										<plx:valueKeyword stringize="true" />
									</plx:passParam>
								</plx:callNew>
							</plx:throw>
						</plx:branch>
						<plx:local name="oldValue" dataTypeName="Person">
							<plx:initialize>
								<plx:callThis type="field" name="_Person" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityInequality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:nameRef name="oldValue" />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnFemalePersonPersonChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnPersonChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_Person" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnFemalePersonPersonChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnPersonChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="true" name="_ChildPersonViaMotherCollection" dataTypeName="IEnumerable">
					<plx:passTypeParam dataTypeName="ChildPerson" />
				</plx:field>
				<plx:property visibility="public" modifier="sealedOverride" name="ChildPersonViaMotherCollection">
					<plx:returns dataTypeName="IEnumerable">
						<plx:passTypeParam dataTypeName="ChildPerson" />
					</plx:returns>
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_ChildPersonViaMotherCollection" />
						</plx:return>
					</plx:get>
				</plx:property>
			</plx:class>
			<plx:pragma type="closeRegion" data="FemalePerson" />
			<plx:pragma type="region" data="ChildPerson" />
			<plx:function visibility="public" name="CreateChildPerson">
				<plx:interfaceMember memberName="CreateChildPerson" dataTypeName="ISampleModelContext" />
				<plx:param name="birthOrderNr" dataTypeName=".u4" />
				<plx:param name="father" dataTypeName="MalePerson" />
				<plx:param name="mother" dataTypeName="FemalePerson" />
				<plx:param name="person" dataTypeName="Person" />
				<plx:returns dataTypeName="ChildPerson" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="father" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="ArgumentNullException">
							<plx:passParam>
								<plx:string>father</plx:string>
							</plx:passParam>
						</plx:callNew>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="mother" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="ArgumentNullException">
							<plx:passParam>
								<plx:string>mother</plx:string>
							</plx:passParam>
						</plx:callNew>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="person" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="ArgumentNullException">
							<plx:passParam>
								<plx:string>person</plx:string>
							</plx:passParam>
						</plx:callNew>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnChildPersonBirthOrderNrChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="birthOrderNr" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="SampleModelContext">
							<plx:passParam>
								<plx:string>birthOrderNr</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnChildPersonFatherChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="father" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="SampleModelContext">
							<plx:passParam>
								<plx:string>father</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnChildPersonMotherChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="mother" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="SampleModelContext">
							<plx:passParam>
								<plx:string>mother</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnChildPersonPersonChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="person" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="SampleModelContext">
							<plx:passParam>
								<plx:string>person</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:return>
					<plx:callNew dataTypeName="ChildPersonImpl">
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="birthOrderNr" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="father" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="mother" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="person" />
						</plx:passParam>
					</plx:callNew>
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnChildPersonBirthOrderNrChanging">
				<plx:param name="instance" dataTypeName="ChildPerson" />
				<plx:param name="newValue" dataTypeName=".u4" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="instance" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:branch>
						<plx:condition>
							<plx:unaryOperator type="booleanNot">
								<plx:callThis name="OnFatherAndBirthOrderNrAndMotherChanging">
									<plx:passParam>
										<plx:nameRef type="parameter" name="instance" />
									</plx:passParam>
									<plx:passParam>
										<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
											<plx:passMemberTypeParam dataTypeName="MalePerson" />
											<plx:passMemberTypeParam dataTypeName=".u4" />
											<plx:passMemberTypeParam dataTypeName="FemalePerson" />
											<plx:passParam>
												<plx:callInstance type="property" name="Father">
													<plx:callObject>
														<plx:nameRef type="parameter" name="instance" />
													</plx:callObject>
												</plx:callInstance>
											</plx:passParam>
											<plx:passParam>
												<plx:nameRef type="parameter" name="newValue" />
											</plx:passParam>
											<plx:passParam>
												<plx:callInstance type="property" name="Mother">
													<plx:callObject>
														<plx:nameRef type="parameter" name="instance" />
													</plx:callObject>
												</plx:callInstance>
											</plx:passParam>
										</plx:callStatic>
									</plx:passParam>
								</plx:callThis>
							</plx:unaryOperator>
						</plx:condition>
						<plx:return>
							<plx:falseKeyword />
						</plx:return>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnChildPersonBirthOrderNrChanged">
				<plx:param name="instance" dataTypeName="ChildPerson" />
				<plx:param name="oldValue" dataTypeName="Nullable">
					<plx:passTypeParam dataTypeName=".u4" />
				</plx:param>
				<plx:local name="FatherAndBirthOrderNrAndMotherOldValueTuple" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="MalePerson" />
					<plx:passTypeParam dataTypeName=".u4" />
					<plx:passTypeParam dataTypeName="FemalePerson" />
				</plx:local>
				<plx:branch>
					<plx:condition>
						<plx:callInstance type="property" name="HasValue">
							<plx:callObject>
								<plx:nameRef type="parameter" name="oldValue" />
							</plx:callObject>
						</plx:callInstance>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="FatherAndBirthOrderNrAndMotherOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
								<plx:passMemberTypeParam dataTypeName="MalePerson" />
								<plx:passMemberTypeParam dataTypeName=".u4" />
								<plx:passMemberTypeParam dataTypeName="FemalePerson" />
								<plx:passParam>
									<plx:callInstance type="property" name="Father">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
								<plx:passParam>
									<plx:callInstance name="GetValueOrDefault">
										<plx:callObject>
											<plx:nameRef type="parameter" name="oldValue" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
								<plx:passParam>
									<plx:callInstance type="property" name="Mother">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
							</plx:callStatic>
						</plx:right>
					</plx:assign>
				</plx:branch>
				<plx:fallbackBranch>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="FatherAndBirthOrderNrAndMotherOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:fallbackBranch>
				<plx:callThis name="OnFatherAndBirthOrderNrAndMotherChanged">
					<plx:passParam>
						<plx:nameRef type="parameter" name="instance" />
					</plx:passParam>
					<plx:passParam>
						<plx:nameRef name="FatherAndBirthOrderNrAndMotherOldValueTuple" />
					</plx:passParam>
					<plx:passParam>
						<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
							<plx:passMemberTypeParam dataTypeName="MalePerson" />
							<plx:passMemberTypeParam dataTypeName=".u4" />
							<plx:passMemberTypeParam dataTypeName="FemalePerson" />
							<plx:passParam>
								<plx:callInstance type="property" name="Father">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:callInstance type="property" name="BirthOrderNr">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:callInstance type="property" name="Mother">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
						</plx:callStatic>
					</plx:passParam>
				</plx:callThis>
			</plx:function>
			<plx:function visibility="private" name="OnChildPersonFatherChanging">
				<plx:param name="instance" dataTypeName="ChildPerson" />
				<plx:param name="newValue" dataTypeName="MalePerson" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:thisKeyword />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="Context">
										<plx:callObject>
											<plx:nameRef type="parameter" name="newValue" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetDifferentContextsException" dataTypeName="SampleModelContext" />
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="instance" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:branch>
						<plx:condition>
							<plx:unaryOperator type="booleanNot">
								<plx:callThis name="OnFatherAndBirthOrderNrAndMotherChanging">
									<plx:passParam>
										<plx:nameRef type="parameter" name="instance" />
									</plx:passParam>
									<plx:passParam>
										<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
											<plx:passMemberTypeParam dataTypeName="MalePerson" />
											<plx:passMemberTypeParam dataTypeName=".u4" />
											<plx:passMemberTypeParam dataTypeName="FemalePerson" />
											<plx:passParam>
												<plx:nameRef type="parameter" name="newValue" />
											</plx:passParam>
											<plx:passParam>
												<plx:callInstance type="property" name="BirthOrderNr">
													<plx:callObject>
														<plx:nameRef type="parameter" name="instance" />
													</plx:callObject>
												</plx:callInstance>
											</plx:passParam>
											<plx:passParam>
												<plx:callInstance type="property" name="Mother">
													<plx:callObject>
														<plx:nameRef type="parameter" name="instance" />
													</plx:callObject>
												</plx:callInstance>
											</plx:passParam>
										</plx:callStatic>
									</plx:passParam>
								</plx:callThis>
							</plx:unaryOperator>
						</plx:condition>
						<plx:return>
							<plx:falseKeyword />
						</plx:return>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnChildPersonFatherChanged">
				<plx:param name="instance" dataTypeName="ChildPerson" />
				<plx:param name="oldValue" dataTypeName="MalePerson" />
				<plx:callInstance name="Add">
					<plx:callObject>
						<plx:cast type="exceptionCast" dataTypeName="ICollection">
							<plx:passTypeParam dataTypeName="ChildPerson" />
							<plx:callInstance type="property" name="ChildPersonViaFatherCollection">
								<plx:callObject>
									<plx:callInstance type="property" name="Father">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:callObject>
							</plx:callInstance>
						</plx:cast>
					</plx:callObject>
					<plx:passParam>
						<plx:nameRef type="parameter" name="instance" />
					</plx:passParam>
				</plx:callInstance>
				<plx:local name="FatherAndBirthOrderNrAndMotherOldValueTuple" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="MalePerson" />
					<plx:passTypeParam dataTypeName=".u4" />
					<plx:passTypeParam dataTypeName="FemalePerson" />
				</plx:local>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:callInstance name="Remove">
						<plx:callObject>
							<plx:cast type="exceptionCast" dataTypeName="ICollection">
								<plx:passTypeParam dataTypeName="ChildPerson" />
								<plx:callInstance type="property" name="ChildPersonViaFatherCollection">
									<plx:callObject>
										<plx:nameRef type="parameter" name="oldValue" />
									</plx:callObject>
								</plx:callInstance>
							</plx:cast>
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="instance" />
						</plx:passParam>
					</plx:callInstance>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="FatherAndBirthOrderNrAndMotherOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
								<plx:passMemberTypeParam dataTypeName="MalePerson" />
								<plx:passMemberTypeParam dataTypeName=".u4" />
								<plx:passMemberTypeParam dataTypeName="FemalePerson" />
								<plx:passParam>
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:passParam>
								<plx:passParam>
									<plx:callInstance type="property" name="BirthOrderNr">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
								<plx:passParam>
									<plx:callInstance type="property" name="Mother">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
							</plx:callStatic>
						</plx:right>
					</plx:assign>
				</plx:branch>
				<plx:fallbackBranch>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="FatherAndBirthOrderNrAndMotherOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:fallbackBranch>
				<plx:callThis name="OnFatherAndBirthOrderNrAndMotherChanged">
					<plx:passParam>
						<plx:nameRef type="parameter" name="instance" />
					</plx:passParam>
					<plx:passParam>
						<plx:nameRef name="FatherAndBirthOrderNrAndMotherOldValueTuple" />
					</plx:passParam>
					<plx:passParam>
						<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
							<plx:passMemberTypeParam dataTypeName="MalePerson" />
							<plx:passMemberTypeParam dataTypeName=".u4" />
							<plx:passMemberTypeParam dataTypeName="FemalePerson" />
							<plx:passParam>
								<plx:callInstance type="property" name="Father">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:callInstance type="property" name="BirthOrderNr">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:callInstance type="property" name="Mother">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
						</plx:callStatic>
					</plx:passParam>
				</plx:callThis>
			</plx:function>
			<plx:function visibility="private" name="OnChildPersonMotherChanging">
				<plx:param name="instance" dataTypeName="ChildPerson" />
				<plx:param name="newValue" dataTypeName="FemalePerson" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:thisKeyword />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="Context">
										<plx:callObject>
											<plx:nameRef type="parameter" name="newValue" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetDifferentContextsException" dataTypeName="SampleModelContext" />
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="instance" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:branch>
						<plx:condition>
							<plx:unaryOperator type="booleanNot">
								<plx:callThis name="OnFatherAndBirthOrderNrAndMotherChanging">
									<plx:passParam>
										<plx:nameRef type="parameter" name="instance" />
									</plx:passParam>
									<plx:passParam>
										<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
											<plx:passMemberTypeParam dataTypeName="MalePerson" />
											<plx:passMemberTypeParam dataTypeName=".u4" />
											<plx:passMemberTypeParam dataTypeName="FemalePerson" />
											<plx:passParam>
												<plx:callInstance type="property" name="Father">
													<plx:callObject>
														<plx:nameRef type="parameter" name="instance" />
													</plx:callObject>
												</plx:callInstance>
											</plx:passParam>
											<plx:passParam>
												<plx:callInstance type="property" name="BirthOrderNr">
													<plx:callObject>
														<plx:nameRef type="parameter" name="instance" />
													</plx:callObject>
												</plx:callInstance>
											</plx:passParam>
											<plx:passParam>
												<plx:nameRef type="parameter" name="newValue" />
											</plx:passParam>
										</plx:callStatic>
									</plx:passParam>
								</plx:callThis>
							</plx:unaryOperator>
						</plx:condition>
						<plx:return>
							<plx:falseKeyword />
						</plx:return>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnChildPersonMotherChanged">
				<plx:param name="instance" dataTypeName="ChildPerson" />
				<plx:param name="oldValue" dataTypeName="FemalePerson" />
				<plx:callInstance name="Add">
					<plx:callObject>
						<plx:cast type="exceptionCast" dataTypeName="ICollection">
							<plx:passTypeParam dataTypeName="ChildPerson" />
							<plx:callInstance type="property" name="ChildPersonViaMotherCollection">
								<plx:callObject>
									<plx:callInstance type="property" name="Mother">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:callObject>
							</plx:callInstance>
						</plx:cast>
					</plx:callObject>
					<plx:passParam>
						<plx:nameRef type="parameter" name="instance" />
					</plx:passParam>
				</plx:callInstance>
				<plx:local name="FatherAndBirthOrderNrAndMotherOldValueTuple" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="MalePerson" />
					<plx:passTypeParam dataTypeName=".u4" />
					<plx:passTypeParam dataTypeName="FemalePerson" />
				</plx:local>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:callInstance name="Remove">
						<plx:callObject>
							<plx:cast type="exceptionCast" dataTypeName="ICollection">
								<plx:passTypeParam dataTypeName="ChildPerson" />
								<plx:callInstance type="property" name="ChildPersonViaMotherCollection">
									<plx:callObject>
										<plx:nameRef type="parameter" name="oldValue" />
									</plx:callObject>
								</plx:callInstance>
							</plx:cast>
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="instance" />
						</plx:passParam>
					</plx:callInstance>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="FatherAndBirthOrderNrAndMotherOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
								<plx:passMemberTypeParam dataTypeName="MalePerson" />
								<plx:passMemberTypeParam dataTypeName=".u4" />
								<plx:passMemberTypeParam dataTypeName="FemalePerson" />
								<plx:passParam>
									<plx:callInstance type="property" name="Father">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
								<plx:passParam>
									<plx:callInstance type="property" name="BirthOrderNr">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:passParam>
							</plx:callStatic>
						</plx:right>
					</plx:assign>
				</plx:branch>
				<plx:fallbackBranch>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="FatherAndBirthOrderNrAndMotherOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:fallbackBranch>
				<plx:callThis name="OnFatherAndBirthOrderNrAndMotherChanged">
					<plx:passParam>
						<plx:nameRef type="parameter" name="instance" />
					</plx:passParam>
					<plx:passParam>
						<plx:nameRef name="FatherAndBirthOrderNrAndMotherOldValueTuple" />
					</plx:passParam>
					<plx:passParam>
						<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
							<plx:passMemberTypeParam dataTypeName="MalePerson" />
							<plx:passMemberTypeParam dataTypeName=".u4" />
							<plx:passMemberTypeParam dataTypeName="FemalePerson" />
							<plx:passParam>
								<plx:callInstance type="property" name="Father">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:callInstance type="property" name="BirthOrderNr">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:callInstance type="property" name="Mother">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
						</plx:callStatic>
					</plx:passParam>
				</plx:callThis>
			</plx:function>
			<plx:function visibility="private" name="OnChildPersonPersonChanging">
				<plx:param name="instance" dataTypeName="ChildPerson" />
				<plx:param name="newValue" dataTypeName="Person" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:thisKeyword />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="Context">
										<plx:callObject>
											<plx:nameRef type="parameter" name="newValue" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetDifferentContextsException" dataTypeName="SampleModelContext" />
					</plx:throw>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnChildPersonPersonChanged">
				<plx:param name="instance" dataTypeName="ChildPerson" />
				<plx:param name="oldValue" dataTypeName="Person" />
				<plx:assign>
					<plx:left>
						<plx:callInstance type="property" name="ChildPerson">
							<plx:callObject>
								<plx:callInstance type="property" name="Person">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:callObject>
						</plx:callInstance>
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="instance" />
					</plx:right>
				</plx:assign>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:callInstance type="property" name="ChildPerson">
								<plx:callObject>
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:branch>
			</plx:function>
			<plx:field visibility="private" readOnly="true" name="_ChildPersonList" dataTypeName="List">
				<plx:passTypeParam dataTypeName="ChildPerson" />
			</plx:field>
			<plx:field visibility="private" readOnly="true" name="_ChildPersonReadOnlyCollection" dataTypeName="ReadOnlyCollection">
				<plx:passTypeParam dataTypeName="ChildPerson" />
			</plx:field>
			<plx:property visibility="public" name="ChildPersonCollection">
				<plx:interfaceMember memberName="ChildPersonCollection" dataTypeName="ISampleModelContext" />
				<plx:returns dataTypeName="IEnumerable">
					<plx:passTypeParam dataTypeName="ChildPerson" />
				</plx:returns>
				<plx:get>
					<plx:return>
						<plx:callThis type="field" name="_ChildPersonReadOnlyCollection" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:class visibility="private" modifier="sealed" name="ChildPersonImpl">
				<plx:leadingInfo>
					<plx:pragma type="region" data="ChildPersonImpl" />
				</plx:leadingInfo>
				<plx:trailingInfo>
					<plx:pragma type="closeRegion" data="ChildPersonImpl" />
				</plx:trailingInfo>
				<plx:attribute dataTypeName="StructLayoutAttribute" dataTypeQualifier="System.Runtime.InteropServices">
					<plx:passParam>
						<plx:callStatic type="field" name="Auto" dataTypeName="LayoutKind" dataTypeQualifier="System.Runtime.InteropServices" />
					</plx:passParam>
					<plx:passParam>
						<plx:binaryOperator type="assignNamed">
							<plx:left>
								<plx:nameRef type="namedParameter" name="CharSet" />
							</plx:left>
							<plx:right>
								<plx:callStatic type="field" name="Auto" dataTypeName="CharSet" dataTypeQualifier="System.Runtime.InteropServices" />
							</plx:right>
						</plx:binaryOperator>
					</plx:passParam>
				</plx:attribute>
				<plx:derivesFromClass dataTypeName="ChildPerson" />
				<plx:function visibility="public" name=".construct">
					<plx:param name="context" dataTypeName="SampleModelContext" />
					<plx:param name="birthOrderNr" dataTypeName=".u4" />
					<plx:param name="father" dataTypeName="MalePerson" />
					<plx:param name="mother" dataTypeName="FemalePerson" />
					<plx:param name="person" dataTypeName="Person" />
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_Context" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="context" />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_BirthOrderNr" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="birthOrderNr" />
						</plx:right>
					</plx:assign>
					<plx:callInstance name="OnChildPersonBirthOrderNrChanged">
						<plx:callObject>
							<plx:nameRef type="parameter" name="context" />
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callInstance>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_Father" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="father" />
						</plx:right>
					</plx:assign>
					<plx:callInstance name="OnChildPersonFatherChanged">
						<plx:callObject>
							<plx:nameRef type="parameter" name="context" />
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callInstance>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_Mother" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="mother" />
						</plx:right>
					</plx:assign>
					<plx:callInstance name="OnChildPersonMotherChanged">
						<plx:callObject>
							<plx:nameRef type="parameter" name="context" />
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callInstance>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_Person" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="person" />
						</plx:right>
					</plx:assign>
					<plx:callInstance name="OnChildPersonPersonChanged">
						<plx:callObject>
							<plx:nameRef type="parameter" name="context" />
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callInstance>
					<plx:callInstance name="Add">
						<plx:callObject>
							<plx:callInstance type="field" name="_ChildPersonList">
								<plx:callObject>
									<plx:nameRef type="parameter" name="context" />
								</plx:callObject>
							</plx:callInstance>
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
					</plx:callInstance>
				</plx:function>
				<plx:field visibility="private" readOnly="true" name="_Context" dataTypeName="SampleModelContext" />
				<plx:property visibility="public" modifier="sealedOverride" name="Context">
					<plx:returns dataTypeName="SampleModelContext" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_Context" />
						</plx:return>
					</plx:get>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_BirthOrderNr" dataTypeName=".u4" />
				<plx:property visibility="public" modifier="sealedOverride" name="BirthOrderNr">
					<plx:returns dataTypeName=".u4" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_BirthOrderNr" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:local name="oldValue" dataTypeName=".u4">
							<plx:initialize>
								<plx:callThis type="field" name="_BirthOrderNr" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="inequality">
									<plx:left>
										<plx:nameRef name="oldValue" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnChildPersonBirthOrderNrChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnBirthOrderNrChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_BirthOrderNr" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnChildPersonBirthOrderNrChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnBirthOrderNrChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_Father" dataTypeName="MalePerson" />
				<plx:property visibility="public" modifier="sealedOverride" name="Father">
					<plx:returns dataTypeName="MalePerson" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_Father" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:throw>
								<plx:callNew dataTypeName="ArgumentNullException">
									<plx:passParam>
										<plx:valueKeyword stringize="true" />
									</plx:passParam>
								</plx:callNew>
							</plx:throw>
						</plx:branch>
						<plx:local name="oldValue" dataTypeName="MalePerson">
							<plx:initialize>
								<plx:callThis type="field" name="_Father" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityInequality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:nameRef name="oldValue" />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnChildPersonFatherChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnFatherChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_Father" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnChildPersonFatherChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnFatherChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_Mother" dataTypeName="FemalePerson" />
				<plx:property visibility="public" modifier="sealedOverride" name="Mother">
					<plx:returns dataTypeName="FemalePerson" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_Mother" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:throw>
								<plx:callNew dataTypeName="ArgumentNullException">
									<plx:passParam>
										<plx:valueKeyword stringize="true" />
									</plx:passParam>
								</plx:callNew>
							</plx:throw>
						</plx:branch>
						<plx:local name="oldValue" dataTypeName="FemalePerson">
							<plx:initialize>
								<plx:callThis type="field" name="_Mother" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityInequality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:nameRef name="oldValue" />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnChildPersonMotherChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnMotherChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_Mother" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnChildPersonMotherChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnMotherChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_Person" dataTypeName="Person" />
				<plx:property visibility="public" modifier="sealedOverride" name="Person">
					<plx:returns dataTypeName="Person" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_Person" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:throw>
								<plx:callNew dataTypeName="ArgumentNullException">
									<plx:passParam>
										<plx:valueKeyword stringize="true" />
									</plx:passParam>
								</plx:callNew>
							</plx:throw>
						</plx:branch>
						<plx:local name="oldValue" dataTypeName="Person">
							<plx:initialize>
								<plx:callThis type="field" name="_Person" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityInequality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:nameRef name="oldValue" />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnChildPersonPersonChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnPersonChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_Person" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnChildPersonPersonChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnPersonChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
			</plx:class>
			<plx:pragma type="closeRegion" data="ChildPerson" />
			<plx:pragma type="region" data="PersonDrivesCar" />
			<plx:function visibility="public" name="CreatePersonDrivesCar">
				<plx:interfaceMember memberName="CreatePersonDrivesCar" dataTypeName="ISampleModelContext" />
				<plx:param name="vin" dataTypeName=".u4" />
				<plx:param name="drivenByPerson" dataTypeName="Person" />
				<plx:returns dataTypeName="PersonDrivesCar" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="drivenByPerson" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="ArgumentNullException">
							<plx:passParam>
								<plx:string>drivenByPerson</plx:string>
							</plx:passParam>
						</plx:callNew>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnPersonDrivesCarVinChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="vin" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="SampleModelContext">
							<plx:passParam>
								<plx:string>vin</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnPersonDrivesCarDrivenByPersonChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="drivenByPerson" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="SampleModelContext">
							<plx:passParam>
								<plx:string>drivenByPerson</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:return>
					<plx:callNew dataTypeName="PersonDrivesCarImpl">
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="vin" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="drivenByPerson" />
						</plx:passParam>
					</plx:callNew>
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnPersonDrivesCarVinChanging">
				<plx:param name="instance" dataTypeName="PersonDrivesCar" />
				<plx:param name="newValue" dataTypeName=".u4" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="instance" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:branch>
						<plx:condition>
							<plx:unaryOperator type="booleanNot">
								<plx:callThis name="OnVinAndDrivenByPersonChanging">
									<plx:passParam>
										<plx:nameRef type="parameter" name="instance" />
									</plx:passParam>
									<plx:passParam>
										<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
											<plx:passMemberTypeParam dataTypeName=".u4" />
											<plx:passMemberTypeParam dataTypeName="Person" />
											<plx:passParam>
												<plx:nameRef type="parameter" name="newValue" />
											</plx:passParam>
											<plx:passParam>
												<plx:callInstance type="property" name="DrivenByPerson">
													<plx:callObject>
														<plx:nameRef type="parameter" name="instance" />
													</plx:callObject>
												</plx:callInstance>
											</plx:passParam>
										</plx:callStatic>
									</plx:passParam>
								</plx:callThis>
							</plx:unaryOperator>
						</plx:condition>
						<plx:return>
							<plx:falseKeyword />
						</plx:return>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnPersonDrivesCarVinChanged">
				<plx:param name="instance" dataTypeName="PersonDrivesCar" />
				<plx:param name="oldValue" dataTypeName="Nullable">
					<plx:passTypeParam dataTypeName=".u4" />
				</plx:param>
				<plx:local name="VinAndDrivenByPersonOldValueTuple" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".u4" />
					<plx:passTypeParam dataTypeName="Person" />
				</plx:local>
				<plx:branch>
					<plx:condition>
						<plx:callInstance type="property" name="HasValue">
							<plx:callObject>
								<plx:nameRef type="parameter" name="oldValue" />
							</plx:callObject>
						</plx:callInstance>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="VinAndDrivenByPersonOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
								<plx:passMemberTypeParam dataTypeName=".u4" />
								<plx:passMemberTypeParam dataTypeName="Person" />
								<plx:passParam>
									<plx:callInstance name="GetValueOrDefault">
										<plx:callObject>
											<plx:nameRef type="parameter" name="oldValue" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
								<plx:passParam>
									<plx:callInstance type="property" name="DrivenByPerson">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
							</plx:callStatic>
						</plx:right>
					</plx:assign>
				</plx:branch>
				<plx:fallbackBranch>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="VinAndDrivenByPersonOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:fallbackBranch>
				<plx:callThis name="OnVinAndDrivenByPersonChanged">
					<plx:passParam>
						<plx:nameRef type="parameter" name="instance" />
					</plx:passParam>
					<plx:passParam>
						<plx:nameRef name="VinAndDrivenByPersonOldValueTuple" />
					</plx:passParam>
					<plx:passParam>
						<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
							<plx:passMemberTypeParam dataTypeName=".u4" />
							<plx:passMemberTypeParam dataTypeName="Person" />
							<plx:passParam>
								<plx:callInstance type="property" name="Vin">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:callInstance type="property" name="DrivenByPerson">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
						</plx:callStatic>
					</plx:passParam>
				</plx:callThis>
			</plx:function>
			<plx:function visibility="private" name="OnPersonDrivesCarDrivenByPersonChanging">
				<plx:param name="instance" dataTypeName="PersonDrivesCar" />
				<plx:param name="newValue" dataTypeName="Person" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:thisKeyword />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="Context">
										<plx:callObject>
											<plx:nameRef type="parameter" name="newValue" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetDifferentContextsException" dataTypeName="SampleModelContext" />
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="instance" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:branch>
						<plx:condition>
							<plx:unaryOperator type="booleanNot">
								<plx:callThis name="OnVinAndDrivenByPersonChanging">
									<plx:passParam>
										<plx:nameRef type="parameter" name="instance" />
									</plx:passParam>
									<plx:passParam>
										<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
											<plx:passMemberTypeParam dataTypeName=".u4" />
											<plx:passMemberTypeParam dataTypeName="Person" />
											<plx:passParam>
												<plx:callInstance type="property" name="Vin">
													<plx:callObject>
														<plx:nameRef type="parameter" name="instance" />
													</plx:callObject>
												</plx:callInstance>
											</plx:passParam>
											<plx:passParam>
												<plx:nameRef type="parameter" name="newValue" />
											</plx:passParam>
										</plx:callStatic>
									</plx:passParam>
								</plx:callThis>
							</plx:unaryOperator>
						</plx:condition>
						<plx:return>
							<plx:falseKeyword />
						</plx:return>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnPersonDrivesCarDrivenByPersonChanged">
				<plx:param name="instance" dataTypeName="PersonDrivesCar" />
				<plx:param name="oldValue" dataTypeName="Person" />
				<plx:callInstance name="Add">
					<plx:callObject>
						<plx:cast type="exceptionCast" dataTypeName="ICollection">
							<plx:passTypeParam dataTypeName="PersonDrivesCar" />
							<plx:callInstance type="property" name="PersonDrivesCarViaDrivenByPersonCollection">
								<plx:callObject>
									<plx:callInstance type="property" name="DrivenByPerson">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:callObject>
							</plx:callInstance>
						</plx:cast>
					</plx:callObject>
					<plx:passParam>
						<plx:nameRef type="parameter" name="instance" />
					</plx:passParam>
				</plx:callInstance>
				<plx:local name="VinAndDrivenByPersonOldValueTuple" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".u4" />
					<plx:passTypeParam dataTypeName="Person" />
				</plx:local>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:callInstance name="Remove">
						<plx:callObject>
							<plx:cast type="exceptionCast" dataTypeName="ICollection">
								<plx:passTypeParam dataTypeName="PersonDrivesCar" />
								<plx:callInstance type="property" name="PersonDrivesCarViaDrivenByPersonCollection">
									<plx:callObject>
										<plx:nameRef type="parameter" name="oldValue" />
									</plx:callObject>
								</plx:callInstance>
							</plx:cast>
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="instance" />
						</plx:passParam>
					</plx:callInstance>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="VinAndDrivenByPersonOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
								<plx:passMemberTypeParam dataTypeName=".u4" />
								<plx:passMemberTypeParam dataTypeName="Person" />
								<plx:passParam>
									<plx:callInstance type="property" name="Vin">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:passParam>
							</plx:callStatic>
						</plx:right>
					</plx:assign>
				</plx:branch>
				<plx:fallbackBranch>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="VinAndDrivenByPersonOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:fallbackBranch>
				<plx:callThis name="OnVinAndDrivenByPersonChanged">
					<plx:passParam>
						<plx:nameRef type="parameter" name="instance" />
					</plx:passParam>
					<plx:passParam>
						<plx:nameRef name="VinAndDrivenByPersonOldValueTuple" />
					</plx:passParam>
					<plx:passParam>
						<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
							<plx:passMemberTypeParam dataTypeName=".u4" />
							<plx:passMemberTypeParam dataTypeName="Person" />
							<plx:passParam>
								<plx:callInstance type="property" name="Vin">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:callInstance type="property" name="DrivenByPerson">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
						</plx:callStatic>
					</plx:passParam>
				</plx:callThis>
			</plx:function>
			<plx:field visibility="private" readOnly="true" name="_PersonDrivesCarList" dataTypeName="List">
				<plx:passTypeParam dataTypeName="PersonDrivesCar" />
			</plx:field>
			<plx:field visibility="private" readOnly="true" name="_PersonDrivesCarReadOnlyCollection" dataTypeName="ReadOnlyCollection">
				<plx:passTypeParam dataTypeName="PersonDrivesCar" />
			</plx:field>
			<plx:property visibility="public" name="PersonDrivesCarCollection">
				<plx:interfaceMember memberName="PersonDrivesCarCollection" dataTypeName="ISampleModelContext" />
				<plx:returns dataTypeName="IEnumerable">
					<plx:passTypeParam dataTypeName="PersonDrivesCar" />
				</plx:returns>
				<plx:get>
					<plx:return>
						<plx:callThis type="field" name="_PersonDrivesCarReadOnlyCollection" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:class visibility="private" modifier="sealed" name="PersonDrivesCarImpl">
				<plx:leadingInfo>
					<plx:pragma type="region" data="PersonDrivesCarImpl" />
				</plx:leadingInfo>
				<plx:trailingInfo>
					<plx:pragma type="closeRegion" data="PersonDrivesCarImpl" />
				</plx:trailingInfo>
				<plx:attribute dataTypeName="StructLayoutAttribute" dataTypeQualifier="System.Runtime.InteropServices">
					<plx:passParam>
						<plx:callStatic type="field" name="Auto" dataTypeName="LayoutKind" dataTypeQualifier="System.Runtime.InteropServices" />
					</plx:passParam>
					<plx:passParam>
						<plx:binaryOperator type="assignNamed">
							<plx:left>
								<plx:nameRef type="namedParameter" name="CharSet" />
							</plx:left>
							<plx:right>
								<plx:callStatic type="field" name="Auto" dataTypeName="CharSet" dataTypeQualifier="System.Runtime.InteropServices" />
							</plx:right>
						</plx:binaryOperator>
					</plx:passParam>
				</plx:attribute>
				<plx:derivesFromClass dataTypeName="PersonDrivesCar" />
				<plx:function visibility="public" name=".construct">
					<plx:param name="context" dataTypeName="SampleModelContext" />
					<plx:param name="vin" dataTypeName=".u4" />
					<plx:param name="drivenByPerson" dataTypeName="Person" />
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_Context" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="context" />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_Vin" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="vin" />
						</plx:right>
					</plx:assign>
					<plx:callInstance name="OnPersonDrivesCarVinChanged">
						<plx:callObject>
							<plx:nameRef type="parameter" name="context" />
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callInstance>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_DrivenByPerson" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="drivenByPerson" />
						</plx:right>
					</plx:assign>
					<plx:callInstance name="OnPersonDrivesCarDrivenByPersonChanged">
						<plx:callObject>
							<plx:nameRef type="parameter" name="context" />
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callInstance>
					<plx:callInstance name="Add">
						<plx:callObject>
							<plx:callInstance type="field" name="_PersonDrivesCarList">
								<plx:callObject>
									<plx:nameRef type="parameter" name="context" />
								</plx:callObject>
							</plx:callInstance>
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
					</plx:callInstance>
				</plx:function>
				<plx:field visibility="private" readOnly="true" name="_Context" dataTypeName="SampleModelContext" />
				<plx:property visibility="public" modifier="sealedOverride" name="Context">
					<plx:returns dataTypeName="SampleModelContext" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_Context" />
						</plx:return>
					</plx:get>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_Vin" dataTypeName=".u4" />
				<plx:property visibility="public" modifier="sealedOverride" name="Vin">
					<plx:returns dataTypeName=".u4" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_Vin" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:local name="oldValue" dataTypeName=".u4">
							<plx:initialize>
								<plx:callThis type="field" name="_Vin" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="inequality">
									<plx:left>
										<plx:nameRef name="oldValue" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnPersonDrivesCarVinChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnVinChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_Vin" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnPersonDrivesCarVinChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnVinChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_DrivenByPerson" dataTypeName="Person" />
				<plx:property visibility="public" modifier="sealedOverride" name="DrivenByPerson">
					<plx:returns dataTypeName="Person" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_DrivenByPerson" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:throw>
								<plx:callNew dataTypeName="ArgumentNullException">
									<plx:passParam>
										<plx:valueKeyword stringize="true" />
									</plx:passParam>
								</plx:callNew>
							</plx:throw>
						</plx:branch>
						<plx:local name="oldValue" dataTypeName="Person">
							<plx:initialize>
								<plx:callThis type="field" name="_DrivenByPerson" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityInequality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:nameRef name="oldValue" />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnPersonDrivesCarDrivenByPersonChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnDrivenByPersonChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_DrivenByPerson" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnPersonDrivesCarDrivenByPersonChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnDrivenByPersonChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
			</plx:class>
			<plx:pragma type="closeRegion" data="PersonDrivesCar" />
			<plx:pragma type="region" data="PersonBoughtCarFromPersonOnDate" />
			<plx:function visibility="public" name="CreatePersonBoughtCarFromPersonOnDate">
				<plx:interfaceMember memberName="CreatePersonBoughtCarFromPersonOnDate" dataTypeName="ISampleModelContext" />
				<plx:param name="vin" dataTypeName=".u4" />
				<plx:param name="YMD" dataTypeName=".date" />
				<plx:param name="buyer" dataTypeName="Person" />
				<plx:param name="seller" dataTypeName="Person" />
				<plx:returns dataTypeName="PersonBoughtCarFromPersonOnDate" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="buyer" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="ArgumentNullException">
							<plx:passParam>
								<plx:string>buyer</plx:string>
							</plx:passParam>
						</plx:callNew>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="seller" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="ArgumentNullException">
							<plx:passParam>
								<plx:string>seller</plx:string>
							</plx:passParam>
						</plx:callNew>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnPersonBoughtCarFromPersonOnDateVinChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="vin" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="SampleModelContext">
							<plx:passParam>
								<plx:string>vin</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnPersonBoughtCarFromPersonOnDateYMDChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="YMD" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="SampleModelContext">
							<plx:passParam>
								<plx:string>YMD</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnPersonBoughtCarFromPersonOnDateBuyerChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="buyer" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="SampleModelContext">
							<plx:passParam>
								<plx:string>buyer</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnPersonBoughtCarFromPersonOnDateSellerChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="seller" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="SampleModelContext">
							<plx:passParam>
								<plx:string>seller</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:return>
					<plx:callNew dataTypeName="PersonBoughtCarFromPersonOnDateImpl">
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="vin" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="YMD" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="buyer" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="seller" />
						</plx:passParam>
					</plx:callNew>
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnPersonBoughtCarFromPersonOnDateVinChanging">
				<plx:param name="instance" dataTypeName="PersonBoughtCarFromPersonOnDate" />
				<plx:param name="newValue" dataTypeName=".u4" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="instance" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:branch>
						<plx:condition>
							<plx:unaryOperator type="booleanNot">
								<plx:callThis name="OnBuyerAndVinAndSellerChanging">
									<plx:passParam>
										<plx:nameRef type="parameter" name="instance" />
									</plx:passParam>
									<plx:passParam>
										<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
											<plx:passMemberTypeParam dataTypeName="Person" />
											<plx:passMemberTypeParam dataTypeName=".u4" />
											<plx:passMemberTypeParam dataTypeName="Person" />
											<plx:passParam>
												<plx:callInstance type="property" name="Buyer">
													<plx:callObject>
														<plx:nameRef type="parameter" name="instance" />
													</plx:callObject>
												</plx:callInstance>
											</plx:passParam>
											<plx:passParam>
												<plx:nameRef type="parameter" name="newValue" />
											</plx:passParam>
											<plx:passParam>
												<plx:callInstance type="property" name="Seller">
													<plx:callObject>
														<plx:nameRef type="parameter" name="instance" />
													</plx:callObject>
												</plx:callInstance>
											</plx:passParam>
										</plx:callStatic>
									</plx:passParam>
								</plx:callThis>
							</plx:unaryOperator>
						</plx:condition>
						<plx:return>
							<plx:falseKeyword />
						</plx:return>
					</plx:branch>
					<plx:branch>
						<plx:condition>
							<plx:unaryOperator type="booleanNot">
								<plx:callThis name="OnVinAndYMDAndBuyerChanging">
									<plx:passParam>
										<plx:nameRef type="parameter" name="instance" />
									</plx:passParam>
									<plx:passParam>
										<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
											<plx:passMemberTypeParam dataTypeName=".u4" />
											<plx:passMemberTypeParam dataTypeName=".date" />
											<plx:passMemberTypeParam dataTypeName="Person" />
											<plx:passParam>
												<plx:nameRef type="parameter" name="newValue" />
											</plx:passParam>
											<plx:passParam>
												<plx:callInstance type="property" name="YMD">
													<plx:callObject>
														<plx:nameRef type="parameter" name="instance" />
													</plx:callObject>
												</plx:callInstance>
											</plx:passParam>
											<plx:passParam>
												<plx:callInstance type="property" name="Buyer">
													<plx:callObject>
														<plx:nameRef type="parameter" name="instance" />
													</plx:callObject>
												</plx:callInstance>
											</plx:passParam>
										</plx:callStatic>
									</plx:passParam>
								</plx:callThis>
							</plx:unaryOperator>
						</plx:condition>
						<plx:return>
							<plx:falseKeyword />
						</plx:return>
					</plx:branch>
					<plx:branch>
						<plx:condition>
							<plx:unaryOperator type="booleanNot">
								<plx:callThis name="OnYMDAndSellerAndVinChanging">
									<plx:passParam>
										<plx:nameRef type="parameter" name="instance" />
									</plx:passParam>
									<plx:passParam>
										<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
											<plx:passMemberTypeParam dataTypeName=".date" />
											<plx:passMemberTypeParam dataTypeName="Person" />
											<plx:passMemberTypeParam dataTypeName=".u4" />
											<plx:passParam>
												<plx:callInstance type="property" name="YMD">
													<plx:callObject>
														<plx:nameRef type="parameter" name="instance" />
													</plx:callObject>
												</plx:callInstance>
											</plx:passParam>
											<plx:passParam>
												<plx:callInstance type="property" name="Seller">
													<plx:callObject>
														<plx:nameRef type="parameter" name="instance" />
													</plx:callObject>
												</plx:callInstance>
											</plx:passParam>
											<plx:passParam>
												<plx:nameRef type="parameter" name="newValue" />
											</plx:passParam>
										</plx:callStatic>
									</plx:passParam>
								</plx:callThis>
							</plx:unaryOperator>
						</plx:condition>
						<plx:return>
							<plx:falseKeyword />
						</plx:return>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnPersonBoughtCarFromPersonOnDateVinChanged">
				<plx:param name="instance" dataTypeName="PersonBoughtCarFromPersonOnDate" />
				<plx:param name="oldValue" dataTypeName="Nullable">
					<plx:passTypeParam dataTypeName=".u4" />
				</plx:param>
				<plx:local name="BuyerAndVinAndSellerOldValueTuple" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="Person" />
					<plx:passTypeParam dataTypeName=".u4" />
					<plx:passTypeParam dataTypeName="Person" />
				</plx:local>
				<plx:local name="VinAndYMDAndBuyerOldValueTuple" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".u4" />
					<plx:passTypeParam dataTypeName=".date" />
					<plx:passTypeParam dataTypeName="Person" />
				</plx:local>
				<plx:local name="YMDAndSellerAndVinOldValueTuple" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".date" />
					<plx:passTypeParam dataTypeName="Person" />
					<plx:passTypeParam dataTypeName=".u4" />
				</plx:local>
				<plx:branch>
					<plx:condition>
						<plx:callInstance type="property" name="HasValue">
							<plx:callObject>
								<plx:nameRef type="parameter" name="oldValue" />
							</plx:callObject>
						</plx:callInstance>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="BuyerAndVinAndSellerOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
								<plx:passMemberTypeParam dataTypeName="Person" />
								<plx:passMemberTypeParam dataTypeName=".u4" />
								<plx:passMemberTypeParam dataTypeName="Person" />
								<plx:passParam>
									<plx:callInstance type="property" name="Buyer">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
								<plx:passParam>
									<plx:callInstance name="GetValueOrDefault">
										<plx:callObject>
											<plx:nameRef type="parameter" name="oldValue" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
								<plx:passParam>
									<plx:callInstance type="property" name="Seller">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
							</plx:callStatic>
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="VinAndYMDAndBuyerOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
								<plx:passMemberTypeParam dataTypeName=".u4" />
								<plx:passMemberTypeParam dataTypeName=".date" />
								<plx:passMemberTypeParam dataTypeName="Person" />
								<plx:passParam>
									<plx:callInstance name="GetValueOrDefault">
										<plx:callObject>
											<plx:nameRef type="parameter" name="oldValue" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
								<plx:passParam>
									<plx:callInstance type="property" name="YMD">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
								<plx:passParam>
									<plx:callInstance type="property" name="Buyer">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
							</plx:callStatic>
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="YMDAndSellerAndVinOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
								<plx:passMemberTypeParam dataTypeName=".date" />
								<plx:passMemberTypeParam dataTypeName="Person" />
								<plx:passMemberTypeParam dataTypeName=".u4" />
								<plx:passParam>
									<plx:callInstance type="property" name="YMD">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
								<plx:passParam>
									<plx:callInstance type="property" name="Seller">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
								<plx:passParam>
									<plx:callInstance name="GetValueOrDefault">
										<plx:callObject>
											<plx:nameRef type="parameter" name="oldValue" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
							</plx:callStatic>
						</plx:right>
					</plx:assign>
				</plx:branch>
				<plx:fallbackBranch>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="BuyerAndVinAndSellerOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="VinAndYMDAndBuyerOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="YMDAndSellerAndVinOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:fallbackBranch>
				<plx:callThis name="OnBuyerAndVinAndSellerChanged">
					<plx:passParam>
						<plx:nameRef type="parameter" name="instance" />
					</plx:passParam>
					<plx:passParam>
						<plx:nameRef name="BuyerAndVinAndSellerOldValueTuple" />
					</plx:passParam>
					<plx:passParam>
						<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
							<plx:passMemberTypeParam dataTypeName="Person" />
							<plx:passMemberTypeParam dataTypeName=".u4" />
							<plx:passMemberTypeParam dataTypeName="Person" />
							<plx:passParam>
								<plx:callInstance type="property" name="Buyer">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:callInstance type="property" name="Vin">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:callInstance type="property" name="Seller">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
						</plx:callStatic>
					</plx:passParam>
				</plx:callThis>
				<plx:callThis name="OnVinAndYMDAndBuyerChanged">
					<plx:passParam>
						<plx:nameRef type="parameter" name="instance" />
					</plx:passParam>
					<plx:passParam>
						<plx:nameRef name="VinAndYMDAndBuyerOldValueTuple" />
					</plx:passParam>
					<plx:passParam>
						<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
							<plx:passMemberTypeParam dataTypeName=".u4" />
							<plx:passMemberTypeParam dataTypeName=".date" />
							<plx:passMemberTypeParam dataTypeName="Person" />
							<plx:passParam>
								<plx:callInstance type="property" name="Vin">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:callInstance type="property" name="YMD">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:callInstance type="property" name="Buyer">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
						</plx:callStatic>
					</plx:passParam>
				</plx:callThis>
				<plx:callThis name="OnYMDAndSellerAndVinChanged">
					<plx:passParam>
						<plx:nameRef type="parameter" name="instance" />
					</plx:passParam>
					<plx:passParam>
						<plx:nameRef name="YMDAndSellerAndVinOldValueTuple" />
					</plx:passParam>
					<plx:passParam>
						<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
							<plx:passMemberTypeParam dataTypeName=".date" />
							<plx:passMemberTypeParam dataTypeName="Person" />
							<plx:passMemberTypeParam dataTypeName=".u4" />
							<plx:passParam>
								<plx:callInstance type="property" name="YMD">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:callInstance type="property" name="Seller">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:callInstance type="property" name="Vin">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
						</plx:callStatic>
					</plx:passParam>
				</plx:callThis>
			</plx:function>
			<plx:function visibility="private" name="OnPersonBoughtCarFromPersonOnDateYMDChanging">
				<plx:param name="instance" dataTypeName="PersonBoughtCarFromPersonOnDate" />
				<plx:param name="newValue" dataTypeName=".date" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="instance" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:branch>
						<plx:condition>
							<plx:unaryOperator type="booleanNot">
								<plx:callThis name="OnVinAndYMDAndBuyerChanging">
									<plx:passParam>
										<plx:nameRef type="parameter" name="instance" />
									</plx:passParam>
									<plx:passParam>
										<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
											<plx:passMemberTypeParam dataTypeName=".u4" />
											<plx:passMemberTypeParam dataTypeName=".date" />
											<plx:passMemberTypeParam dataTypeName="Person" />
											<plx:passParam>
												<plx:callInstance type="property" name="Vin">
													<plx:callObject>
														<plx:nameRef type="parameter" name="instance" />
													</plx:callObject>
												</plx:callInstance>
											</plx:passParam>
											<plx:passParam>
												<plx:nameRef type="parameter" name="newValue" />
											</plx:passParam>
											<plx:passParam>
												<plx:callInstance type="property" name="Buyer">
													<plx:callObject>
														<plx:nameRef type="parameter" name="instance" />
													</plx:callObject>
												</plx:callInstance>
											</plx:passParam>
										</plx:callStatic>
									</plx:passParam>
								</plx:callThis>
							</plx:unaryOperator>
						</plx:condition>
						<plx:return>
							<plx:falseKeyword />
						</plx:return>
					</plx:branch>
					<plx:branch>
						<plx:condition>
							<plx:unaryOperator type="booleanNot">
								<plx:callThis name="OnYMDAndSellerAndVinChanging">
									<plx:passParam>
										<plx:nameRef type="parameter" name="instance" />
									</plx:passParam>
									<plx:passParam>
										<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
											<plx:passMemberTypeParam dataTypeName=".date" />
											<plx:passMemberTypeParam dataTypeName="Person" />
											<plx:passMemberTypeParam dataTypeName=".u4" />
											<plx:passParam>
												<plx:nameRef type="parameter" name="newValue" />
											</plx:passParam>
											<plx:passParam>
												<plx:callInstance type="property" name="Seller">
													<plx:callObject>
														<plx:nameRef type="parameter" name="instance" />
													</plx:callObject>
												</plx:callInstance>
											</plx:passParam>
											<plx:passParam>
												<plx:callInstance type="property" name="Vin">
													<plx:callObject>
														<plx:nameRef type="parameter" name="instance" />
													</plx:callObject>
												</plx:callInstance>
											</plx:passParam>
										</plx:callStatic>
									</plx:passParam>
								</plx:callThis>
							</plx:unaryOperator>
						</plx:condition>
						<plx:return>
							<plx:falseKeyword />
						</plx:return>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnPersonBoughtCarFromPersonOnDateYMDChanged">
				<plx:param name="instance" dataTypeName="PersonBoughtCarFromPersonOnDate" />
				<plx:param name="oldValue" dataTypeName="Nullable">
					<plx:passTypeParam dataTypeName=".date" />
				</plx:param>
				<plx:local name="VinAndYMDAndBuyerOldValueTuple" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".u4" />
					<plx:passTypeParam dataTypeName=".date" />
					<plx:passTypeParam dataTypeName="Person" />
				</plx:local>
				<plx:local name="YMDAndSellerAndVinOldValueTuple" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".date" />
					<plx:passTypeParam dataTypeName="Person" />
					<plx:passTypeParam dataTypeName=".u4" />
				</plx:local>
				<plx:branch>
					<plx:condition>
						<plx:callInstance type="property" name="HasValue">
							<plx:callObject>
								<plx:nameRef type="parameter" name="oldValue" />
							</plx:callObject>
						</plx:callInstance>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="VinAndYMDAndBuyerOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
								<plx:passMemberTypeParam dataTypeName=".u4" />
								<plx:passMemberTypeParam dataTypeName=".date" />
								<plx:passMemberTypeParam dataTypeName="Person" />
								<plx:passParam>
									<plx:callInstance type="property" name="Vin">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
								<plx:passParam>
									<plx:callInstance name="GetValueOrDefault">
										<plx:callObject>
											<plx:nameRef type="parameter" name="oldValue" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
								<plx:passParam>
									<plx:callInstance type="property" name="Buyer">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
							</plx:callStatic>
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="YMDAndSellerAndVinOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
								<plx:passMemberTypeParam dataTypeName=".date" />
								<plx:passMemberTypeParam dataTypeName="Person" />
								<plx:passMemberTypeParam dataTypeName=".u4" />
								<plx:passParam>
									<plx:callInstance name="GetValueOrDefault">
										<plx:callObject>
											<plx:nameRef type="parameter" name="oldValue" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
								<plx:passParam>
									<plx:callInstance type="property" name="Seller">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
								<plx:passParam>
									<plx:callInstance type="property" name="Vin">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
							</plx:callStatic>
						</plx:right>
					</plx:assign>
				</plx:branch>
				<plx:fallbackBranch>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="VinAndYMDAndBuyerOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="YMDAndSellerAndVinOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:fallbackBranch>
				<plx:callThis name="OnVinAndYMDAndBuyerChanged">
					<plx:passParam>
						<plx:nameRef type="parameter" name="instance" />
					</plx:passParam>
					<plx:passParam>
						<plx:nameRef name="VinAndYMDAndBuyerOldValueTuple" />
					</plx:passParam>
					<plx:passParam>
						<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
							<plx:passMemberTypeParam dataTypeName=".u4" />
							<plx:passMemberTypeParam dataTypeName=".date" />
							<plx:passMemberTypeParam dataTypeName="Person" />
							<plx:passParam>
								<plx:callInstance type="property" name="Vin">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:callInstance type="property" name="YMD">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:callInstance type="property" name="Buyer">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
						</plx:callStatic>
					</plx:passParam>
				</plx:callThis>
				<plx:callThis name="OnYMDAndSellerAndVinChanged">
					<plx:passParam>
						<plx:nameRef type="parameter" name="instance" />
					</plx:passParam>
					<plx:passParam>
						<plx:nameRef name="YMDAndSellerAndVinOldValueTuple" />
					</plx:passParam>
					<plx:passParam>
						<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
							<plx:passMemberTypeParam dataTypeName=".date" />
							<plx:passMemberTypeParam dataTypeName="Person" />
							<plx:passMemberTypeParam dataTypeName=".u4" />
							<plx:passParam>
								<plx:callInstance type="property" name="YMD">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:callInstance type="property" name="Seller">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:callInstance type="property" name="Vin">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
						</plx:callStatic>
					</plx:passParam>
				</plx:callThis>
			</plx:function>
			<plx:function visibility="private" name="OnPersonBoughtCarFromPersonOnDateBuyerChanging">
				<plx:param name="instance" dataTypeName="PersonBoughtCarFromPersonOnDate" />
				<plx:param name="newValue" dataTypeName="Person" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:thisKeyword />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="Context">
										<plx:callObject>
											<plx:nameRef type="parameter" name="newValue" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetDifferentContextsException" dataTypeName="SampleModelContext" />
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="instance" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:branch>
						<plx:condition>
							<plx:unaryOperator type="booleanNot">
								<plx:callThis name="OnBuyerAndVinAndSellerChanging">
									<plx:passParam>
										<plx:nameRef type="parameter" name="instance" />
									</plx:passParam>
									<plx:passParam>
										<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
											<plx:passMemberTypeParam dataTypeName="Person" />
											<plx:passMemberTypeParam dataTypeName=".u4" />
											<plx:passMemberTypeParam dataTypeName="Person" />
											<plx:passParam>
												<plx:nameRef type="parameter" name="newValue" />
											</plx:passParam>
											<plx:passParam>
												<plx:callInstance type="property" name="Vin">
													<plx:callObject>
														<plx:nameRef type="parameter" name="instance" />
													</plx:callObject>
												</plx:callInstance>
											</plx:passParam>
											<plx:passParam>
												<plx:callInstance type="property" name="Seller">
													<plx:callObject>
														<plx:nameRef type="parameter" name="instance" />
													</plx:callObject>
												</plx:callInstance>
											</plx:passParam>
										</plx:callStatic>
									</plx:passParam>
								</plx:callThis>
							</plx:unaryOperator>
						</plx:condition>
						<plx:return>
							<plx:falseKeyword />
						</plx:return>
					</plx:branch>
					<plx:branch>
						<plx:condition>
							<plx:unaryOperator type="booleanNot">
								<plx:callThis name="OnVinAndYMDAndBuyerChanging">
									<plx:passParam>
										<plx:nameRef type="parameter" name="instance" />
									</plx:passParam>
									<plx:passParam>
										<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
											<plx:passMemberTypeParam dataTypeName=".u4" />
											<plx:passMemberTypeParam dataTypeName=".date" />
											<plx:passMemberTypeParam dataTypeName="Person" />
											<plx:passParam>
												<plx:callInstance type="property" name="Vin">
													<plx:callObject>
														<plx:nameRef type="parameter" name="instance" />
													</plx:callObject>
												</plx:callInstance>
											</plx:passParam>
											<plx:passParam>
												<plx:callInstance type="property" name="YMD">
													<plx:callObject>
														<plx:nameRef type="parameter" name="instance" />
													</plx:callObject>
												</plx:callInstance>
											</plx:passParam>
											<plx:passParam>
												<plx:nameRef type="parameter" name="newValue" />
											</plx:passParam>
										</plx:callStatic>
									</plx:passParam>
								</plx:callThis>
							</plx:unaryOperator>
						</plx:condition>
						<plx:return>
							<plx:falseKeyword />
						</plx:return>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnPersonBoughtCarFromPersonOnDateBuyerChanged">
				<plx:param name="instance" dataTypeName="PersonBoughtCarFromPersonOnDate" />
				<plx:param name="oldValue" dataTypeName="Person" />
				<plx:callInstance name="Add">
					<plx:callObject>
						<plx:cast type="exceptionCast" dataTypeName="ICollection">
							<plx:passTypeParam dataTypeName="PersonBoughtCarFromPersonOnDate" />
							<plx:callInstance type="property" name="PersonBoughtCarFromPersonOnDateViaBuyerCollection">
								<plx:callObject>
									<plx:callInstance type="property" name="Buyer">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:callObject>
							</plx:callInstance>
						</plx:cast>
					</plx:callObject>
					<plx:passParam>
						<plx:nameRef type="parameter" name="instance" />
					</plx:passParam>
				</plx:callInstance>
				<plx:local name="BuyerAndVinAndSellerOldValueTuple" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="Person" />
					<plx:passTypeParam dataTypeName=".u4" />
					<plx:passTypeParam dataTypeName="Person" />
				</plx:local>
				<plx:local name="VinAndYMDAndBuyerOldValueTuple" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".u4" />
					<plx:passTypeParam dataTypeName=".date" />
					<plx:passTypeParam dataTypeName="Person" />
				</plx:local>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:callInstance name="Remove">
						<plx:callObject>
							<plx:cast type="exceptionCast" dataTypeName="ICollection">
								<plx:passTypeParam dataTypeName="PersonBoughtCarFromPersonOnDate" />
								<plx:callInstance type="property" name="PersonBoughtCarFromPersonOnDateViaBuyerCollection">
									<plx:callObject>
										<plx:nameRef type="parameter" name="oldValue" />
									</plx:callObject>
								</plx:callInstance>
							</plx:cast>
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="instance" />
						</plx:passParam>
					</plx:callInstance>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="BuyerAndVinAndSellerOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
								<plx:passMemberTypeParam dataTypeName="Person" />
								<plx:passMemberTypeParam dataTypeName=".u4" />
								<plx:passMemberTypeParam dataTypeName="Person" />
								<plx:passParam>
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:passParam>
								<plx:passParam>
									<plx:callInstance type="property" name="Vin">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
								<plx:passParam>
									<plx:callInstance type="property" name="Seller">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
							</plx:callStatic>
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="VinAndYMDAndBuyerOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
								<plx:passMemberTypeParam dataTypeName=".u4" />
								<plx:passMemberTypeParam dataTypeName=".date" />
								<plx:passMemberTypeParam dataTypeName="Person" />
								<plx:passParam>
									<plx:callInstance type="property" name="Vin">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
								<plx:passParam>
									<plx:callInstance type="property" name="YMD">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:passParam>
							</plx:callStatic>
						</plx:right>
					</plx:assign>
				</plx:branch>
				<plx:fallbackBranch>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="BuyerAndVinAndSellerOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="VinAndYMDAndBuyerOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:fallbackBranch>
				<plx:callThis name="OnBuyerAndVinAndSellerChanged">
					<plx:passParam>
						<plx:nameRef type="parameter" name="instance" />
					</plx:passParam>
					<plx:passParam>
						<plx:nameRef name="BuyerAndVinAndSellerOldValueTuple" />
					</plx:passParam>
					<plx:passParam>
						<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
							<plx:passMemberTypeParam dataTypeName="Person" />
							<plx:passMemberTypeParam dataTypeName=".u4" />
							<plx:passMemberTypeParam dataTypeName="Person" />
							<plx:passParam>
								<plx:callInstance type="property" name="Buyer">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:callInstance type="property" name="Vin">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:callInstance type="property" name="Seller">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
						</plx:callStatic>
					</plx:passParam>
				</plx:callThis>
				<plx:callThis name="OnVinAndYMDAndBuyerChanged">
					<plx:passParam>
						<plx:nameRef type="parameter" name="instance" />
					</plx:passParam>
					<plx:passParam>
						<plx:nameRef name="VinAndYMDAndBuyerOldValueTuple" />
					</plx:passParam>
					<plx:passParam>
						<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
							<plx:passMemberTypeParam dataTypeName=".u4" />
							<plx:passMemberTypeParam dataTypeName=".date" />
							<plx:passMemberTypeParam dataTypeName="Person" />
							<plx:passParam>
								<plx:callInstance type="property" name="Vin">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:callInstance type="property" name="YMD">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:callInstance type="property" name="Buyer">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
						</plx:callStatic>
					</plx:passParam>
				</plx:callThis>
			</plx:function>
			<plx:function visibility="private" name="OnPersonBoughtCarFromPersonOnDateSellerChanging">
				<plx:param name="instance" dataTypeName="PersonBoughtCarFromPersonOnDate" />
				<plx:param name="newValue" dataTypeName="Person" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:thisKeyword />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="Context">
										<plx:callObject>
											<plx:nameRef type="parameter" name="newValue" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetDifferentContextsException" dataTypeName="SampleModelContext" />
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="instance" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:branch>
						<plx:condition>
							<plx:unaryOperator type="booleanNot">
								<plx:callThis name="OnBuyerAndVinAndSellerChanging">
									<plx:passParam>
										<plx:nameRef type="parameter" name="instance" />
									</plx:passParam>
									<plx:passParam>
										<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
											<plx:passMemberTypeParam dataTypeName="Person" />
											<plx:passMemberTypeParam dataTypeName=".u4" />
											<plx:passMemberTypeParam dataTypeName="Person" />
											<plx:passParam>
												<plx:callInstance type="property" name="Buyer">
													<plx:callObject>
														<plx:nameRef type="parameter" name="instance" />
													</plx:callObject>
												</plx:callInstance>
											</plx:passParam>
											<plx:passParam>
												<plx:callInstance type="property" name="Vin">
													<plx:callObject>
														<plx:nameRef type="parameter" name="instance" />
													</plx:callObject>
												</plx:callInstance>
											</plx:passParam>
											<plx:passParam>
												<plx:nameRef type="parameter" name="newValue" />
											</plx:passParam>
										</plx:callStatic>
									</plx:passParam>
								</plx:callThis>
							</plx:unaryOperator>
						</plx:condition>
						<plx:return>
							<plx:falseKeyword />
						</plx:return>
					</plx:branch>
					<plx:branch>
						<plx:condition>
							<plx:unaryOperator type="booleanNot">
								<plx:callThis name="OnYMDAndSellerAndVinChanging">
									<plx:passParam>
										<plx:nameRef type="parameter" name="instance" />
									</plx:passParam>
									<plx:passParam>
										<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
											<plx:passMemberTypeParam dataTypeName=".date" />
											<plx:passMemberTypeParam dataTypeName="Person" />
											<plx:passMemberTypeParam dataTypeName=".u4" />
											<plx:passParam>
												<plx:callInstance type="property" name="YMD">
													<plx:callObject>
														<plx:nameRef type="parameter" name="instance" />
													</plx:callObject>
												</plx:callInstance>
											</plx:passParam>
											<plx:passParam>
												<plx:nameRef type="parameter" name="newValue" />
											</plx:passParam>
											<plx:passParam>
												<plx:callInstance type="property" name="Vin">
													<plx:callObject>
														<plx:nameRef type="parameter" name="instance" />
													</plx:callObject>
												</plx:callInstance>
											</plx:passParam>
										</plx:callStatic>
									</plx:passParam>
								</plx:callThis>
							</plx:unaryOperator>
						</plx:condition>
						<plx:return>
							<plx:falseKeyword />
						</plx:return>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnPersonBoughtCarFromPersonOnDateSellerChanged">
				<plx:param name="instance" dataTypeName="PersonBoughtCarFromPersonOnDate" />
				<plx:param name="oldValue" dataTypeName="Person" />
				<plx:callInstance name="Add">
					<plx:callObject>
						<plx:cast type="exceptionCast" dataTypeName="ICollection">
							<plx:passTypeParam dataTypeName="PersonBoughtCarFromPersonOnDate" />
							<plx:callInstance type="property" name="PersonBoughtCarFromPersonOnDateViaSellerCollection">
								<plx:callObject>
									<plx:callInstance type="property" name="Seller">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:callObject>
							</plx:callInstance>
						</plx:cast>
					</plx:callObject>
					<plx:passParam>
						<plx:nameRef type="parameter" name="instance" />
					</plx:passParam>
				</plx:callInstance>
				<plx:local name="BuyerAndVinAndSellerOldValueTuple" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="Person" />
					<plx:passTypeParam dataTypeName=".u4" />
					<plx:passTypeParam dataTypeName="Person" />
				</plx:local>
				<plx:local name="YMDAndSellerAndVinOldValueTuple" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".date" />
					<plx:passTypeParam dataTypeName="Person" />
					<plx:passTypeParam dataTypeName=".u4" />
				</plx:local>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:callInstance name="Remove">
						<plx:callObject>
							<plx:cast type="exceptionCast" dataTypeName="ICollection">
								<plx:passTypeParam dataTypeName="PersonBoughtCarFromPersonOnDate" />
								<plx:callInstance type="property" name="PersonBoughtCarFromPersonOnDateViaSellerCollection">
									<plx:callObject>
										<plx:nameRef type="parameter" name="oldValue" />
									</plx:callObject>
								</plx:callInstance>
							</plx:cast>
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="instance" />
						</plx:passParam>
					</plx:callInstance>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="BuyerAndVinAndSellerOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
								<plx:passMemberTypeParam dataTypeName="Person" />
								<plx:passMemberTypeParam dataTypeName=".u4" />
								<plx:passMemberTypeParam dataTypeName="Person" />
								<plx:passParam>
									<plx:callInstance type="property" name="Buyer">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
								<plx:passParam>
									<plx:callInstance type="property" name="Vin">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:passParam>
							</plx:callStatic>
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="YMDAndSellerAndVinOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
								<plx:passMemberTypeParam dataTypeName=".date" />
								<plx:passMemberTypeParam dataTypeName="Person" />
								<plx:passMemberTypeParam dataTypeName=".u4" />
								<plx:passParam>
									<plx:callInstance type="property" name="YMD">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:passParam>
								<plx:passParam>
									<plx:callInstance type="property" name="Vin">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
							</plx:callStatic>
						</plx:right>
					</plx:assign>
				</plx:branch>
				<plx:fallbackBranch>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="BuyerAndVinAndSellerOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="YMDAndSellerAndVinOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:fallbackBranch>
				<plx:callThis name="OnBuyerAndVinAndSellerChanged">
					<plx:passParam>
						<plx:nameRef type="parameter" name="instance" />
					</plx:passParam>
					<plx:passParam>
						<plx:nameRef name="BuyerAndVinAndSellerOldValueTuple" />
					</plx:passParam>
					<plx:passParam>
						<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
							<plx:passMemberTypeParam dataTypeName="Person" />
							<plx:passMemberTypeParam dataTypeName=".u4" />
							<plx:passMemberTypeParam dataTypeName="Person" />
							<plx:passParam>
								<plx:callInstance type="property" name="Buyer">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:callInstance type="property" name="Vin">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:callInstance type="property" name="Seller">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
						</plx:callStatic>
					</plx:passParam>
				</plx:callThis>
				<plx:callThis name="OnYMDAndSellerAndVinChanged">
					<plx:passParam>
						<plx:nameRef type="parameter" name="instance" />
					</plx:passParam>
					<plx:passParam>
						<plx:nameRef name="YMDAndSellerAndVinOldValueTuple" />
					</plx:passParam>
					<plx:passParam>
						<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
							<plx:passMemberTypeParam dataTypeName=".date" />
							<plx:passMemberTypeParam dataTypeName="Person" />
							<plx:passMemberTypeParam dataTypeName=".u4" />
							<plx:passParam>
								<plx:callInstance type="property" name="YMD">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:callInstance type="property" name="Seller">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:callInstance type="property" name="Vin">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
						</plx:callStatic>
					</plx:passParam>
				</plx:callThis>
			</plx:function>
			<plx:field visibility="private" readOnly="true" name="_PersonBoughtCarFromPersonOnDateList" dataTypeName="List">
				<plx:passTypeParam dataTypeName="PersonBoughtCarFromPersonOnDate" />
			</plx:field>
			<plx:field visibility="private" readOnly="true" name="_PersonBoughtCarFromPersonOnDateReadOnlyCollection" dataTypeName="ReadOnlyCollection">
				<plx:passTypeParam dataTypeName="PersonBoughtCarFromPersonOnDate" />
			</plx:field>
			<plx:property visibility="public" name="PersonBoughtCarFromPersonOnDateCollection">
				<plx:interfaceMember memberName="PersonBoughtCarFromPersonOnDateCollection" dataTypeName="ISampleModelContext" />
				<plx:returns dataTypeName="IEnumerable">
					<plx:passTypeParam dataTypeName="PersonBoughtCarFromPersonOnDate" />
				</plx:returns>
				<plx:get>
					<plx:return>
						<plx:callThis type="field" name="_PersonBoughtCarFromPersonOnDateReadOnlyCollection" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:class visibility="private" modifier="sealed" name="PersonBoughtCarFromPersonOnDateImpl">
				<plx:leadingInfo>
					<plx:pragma type="region" data="PersonBoughtCarFromPersonOnDateImpl" />
				</plx:leadingInfo>
				<plx:trailingInfo>
					<plx:pragma type="closeRegion" data="PersonBoughtCarFromPersonOnDateImpl" />
				</plx:trailingInfo>
				<plx:attribute dataTypeName="StructLayoutAttribute" dataTypeQualifier="System.Runtime.InteropServices">
					<plx:passParam>
						<plx:callStatic type="field" name="Auto" dataTypeName="LayoutKind" dataTypeQualifier="System.Runtime.InteropServices" />
					</plx:passParam>
					<plx:passParam>
						<plx:binaryOperator type="assignNamed">
							<plx:left>
								<plx:nameRef type="namedParameter" name="CharSet" />
							</plx:left>
							<plx:right>
								<plx:callStatic type="field" name="Auto" dataTypeName="CharSet" dataTypeQualifier="System.Runtime.InteropServices" />
							</plx:right>
						</plx:binaryOperator>
					</plx:passParam>
				</plx:attribute>
				<plx:derivesFromClass dataTypeName="PersonBoughtCarFromPersonOnDate" />
				<plx:function visibility="public" name=".construct">
					<plx:param name="context" dataTypeName="SampleModelContext" />
					<plx:param name="vin" dataTypeName=".u4" />
					<plx:param name="YMD" dataTypeName=".date" />
					<plx:param name="buyer" dataTypeName="Person" />
					<plx:param name="seller" dataTypeName="Person" />
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_Context" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="context" />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_Vin" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="vin" />
						</plx:right>
					</plx:assign>
					<plx:callInstance name="OnPersonBoughtCarFromPersonOnDateVinChanged">
						<plx:callObject>
							<plx:nameRef type="parameter" name="context" />
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callInstance>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_YMD" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="YMD" />
						</plx:right>
					</plx:assign>
					<plx:callInstance name="OnPersonBoughtCarFromPersonOnDateYMDChanged">
						<plx:callObject>
							<plx:nameRef type="parameter" name="context" />
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callInstance>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_Buyer" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="buyer" />
						</plx:right>
					</plx:assign>
					<plx:callInstance name="OnPersonBoughtCarFromPersonOnDateBuyerChanged">
						<plx:callObject>
							<plx:nameRef type="parameter" name="context" />
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callInstance>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_Seller" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="seller" />
						</plx:right>
					</plx:assign>
					<plx:callInstance name="OnPersonBoughtCarFromPersonOnDateSellerChanged">
						<plx:callObject>
							<plx:nameRef type="parameter" name="context" />
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callInstance>
					<plx:callInstance name="Add">
						<plx:callObject>
							<plx:callInstance type="field" name="_PersonBoughtCarFromPersonOnDateList">
								<plx:callObject>
									<plx:nameRef type="parameter" name="context" />
								</plx:callObject>
							</plx:callInstance>
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
					</plx:callInstance>
				</plx:function>
				<plx:field visibility="private" readOnly="true" name="_Context" dataTypeName="SampleModelContext" />
				<plx:property visibility="public" modifier="sealedOverride" name="Context">
					<plx:returns dataTypeName="SampleModelContext" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_Context" />
						</plx:return>
					</plx:get>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_Vin" dataTypeName=".u4" />
				<plx:property visibility="public" modifier="sealedOverride" name="Vin">
					<plx:returns dataTypeName=".u4" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_Vin" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:local name="oldValue" dataTypeName=".u4">
							<plx:initialize>
								<plx:callThis type="field" name="_Vin" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="inequality">
									<plx:left>
										<plx:nameRef name="oldValue" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnPersonBoughtCarFromPersonOnDateVinChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnVinChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_Vin" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnPersonBoughtCarFromPersonOnDateVinChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnVinChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_YMD" dataTypeName=".date" />
				<plx:property visibility="public" modifier="sealedOverride" name="YMD">
					<plx:returns dataTypeName=".date" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_YMD" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:local name="oldValue" dataTypeName=".date">
							<plx:initialize>
								<plx:callThis type="field" name="_YMD" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="inequality">
									<plx:left>
										<plx:nameRef name="oldValue" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnPersonBoughtCarFromPersonOnDateYMDChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnYMDChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_YMD" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnPersonBoughtCarFromPersonOnDateYMDChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnYMDChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_Buyer" dataTypeName="Person" />
				<plx:property visibility="public" modifier="sealedOverride" name="Buyer">
					<plx:returns dataTypeName="Person" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_Buyer" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:throw>
								<plx:callNew dataTypeName="ArgumentNullException">
									<plx:passParam>
										<plx:valueKeyword stringize="true" />
									</plx:passParam>
								</plx:callNew>
							</plx:throw>
						</plx:branch>
						<plx:local name="oldValue" dataTypeName="Person">
							<plx:initialize>
								<plx:callThis type="field" name="_Buyer" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityInequality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:nameRef name="oldValue" />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnPersonBoughtCarFromPersonOnDateBuyerChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnBuyerChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_Buyer" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnPersonBoughtCarFromPersonOnDateBuyerChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnBuyerChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_Seller" dataTypeName="Person" />
				<plx:property visibility="public" modifier="sealedOverride" name="Seller">
					<plx:returns dataTypeName="Person" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_Seller" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:throw>
								<plx:callNew dataTypeName="ArgumentNullException">
									<plx:passParam>
										<plx:valueKeyword stringize="true" />
									</plx:passParam>
								</plx:callNew>
							</plx:throw>
						</plx:branch>
						<plx:local name="oldValue" dataTypeName="Person">
							<plx:initialize>
								<plx:callThis type="field" name="_Seller" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityInequality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:nameRef name="oldValue" />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnPersonBoughtCarFromPersonOnDateSellerChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnSellerChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_Seller" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnPersonBoughtCarFromPersonOnDateSellerChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnSellerChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
			</plx:class>
			<plx:pragma type="closeRegion" data="PersonBoughtCarFromPersonOnDate" />
			<plx:pragma type="region" data="Review" />
			<plx:function visibility="public" name="CreateReview">
				<plx:interfaceMember memberName="CreateReview" dataTypeName="ISampleModelContext" />
				<plx:param name="vin" dataTypeName=".u4" />
				<plx:param name="integer" dataTypeName=".u4" />
				<plx:param name="name" dataTypeName=".string" />
				<plx:returns dataTypeName="Review" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="name" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="ArgumentNullException">
							<plx:passParam>
								<plx:string>name</plx:string>
							</plx:passParam>
						</plx:callNew>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnReviewVinChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="vin" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="SampleModelContext">
							<plx:passParam>
								<plx:string>vin</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnReviewIntegerChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="integer" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="SampleModelContext">
							<plx:passParam>
								<plx:string>integer</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnReviewNameChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="name" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="SampleModelContext">
							<plx:passParam>
								<plx:string>name</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:return>
					<plx:callNew dataTypeName="ReviewImpl">
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="vin" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="integer" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="name" />
						</plx:passParam>
					</plx:callNew>
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnReviewVinChanging">
				<plx:param name="instance" dataTypeName="Review" />
				<plx:param name="newValue" dataTypeName=".u4" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="instance" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:branch>
						<plx:condition>
							<plx:unaryOperator type="booleanNot">
								<plx:callThis name="OnVinAndNameChanging">
									<plx:passParam>
										<plx:nameRef type="parameter" name="instance" />
									</plx:passParam>
									<plx:passParam>
										<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
											<plx:passMemberTypeParam dataTypeName=".u4" />
											<plx:passMemberTypeParam dataTypeName=".string" />
											<plx:passParam>
												<plx:nameRef type="parameter" name="newValue" />
											</plx:passParam>
											<plx:passParam>
												<plx:callInstance type="property" name="Name">
													<plx:callObject>
														<plx:nameRef type="parameter" name="instance" />
													</plx:callObject>
												</plx:callInstance>
											</plx:passParam>
										</plx:callStatic>
									</plx:passParam>
								</plx:callThis>
							</plx:unaryOperator>
						</plx:condition>
						<plx:return>
							<plx:falseKeyword />
						</plx:return>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnReviewVinChanged">
				<plx:param name="instance" dataTypeName="Review" />
				<plx:param name="oldValue" dataTypeName="Nullable">
					<plx:passTypeParam dataTypeName=".u4" />
				</plx:param>
				<plx:local name="VinAndNameOldValueTuple" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".u4" />
					<plx:passTypeParam dataTypeName=".string" />
				</plx:local>
				<plx:branch>
					<plx:condition>
						<plx:callInstance type="property" name="HasValue">
							<plx:callObject>
								<plx:nameRef type="parameter" name="oldValue" />
							</plx:callObject>
						</plx:callInstance>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="VinAndNameOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
								<plx:passMemberTypeParam dataTypeName=".u4" />
								<plx:passMemberTypeParam dataTypeName=".string" />
								<plx:passParam>
									<plx:callInstance name="GetValueOrDefault">
										<plx:callObject>
											<plx:nameRef type="parameter" name="oldValue" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
								<plx:passParam>
									<plx:callInstance type="property" name="Name">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
							</plx:callStatic>
						</plx:right>
					</plx:assign>
				</plx:branch>
				<plx:fallbackBranch>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="VinAndNameOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:fallbackBranch>
				<plx:callThis name="OnVinAndNameChanged">
					<plx:passParam>
						<plx:nameRef type="parameter" name="instance" />
					</plx:passParam>
					<plx:passParam>
						<plx:nameRef name="VinAndNameOldValueTuple" />
					</plx:passParam>
					<plx:passParam>
						<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
							<plx:passMemberTypeParam dataTypeName=".u4" />
							<plx:passMemberTypeParam dataTypeName=".string" />
							<plx:passParam>
								<plx:callInstance type="property" name="Vin">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:callInstance type="property" name="Name">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
						</plx:callStatic>
					</plx:passParam>
				</plx:callThis>
			</plx:function>
			<plx:function visibility="private" name="OnReviewIntegerChanging">
				<plx:param name="instance" dataTypeName="Review" />
				<plx:param name="newValue" dataTypeName=".u4" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnReviewNameChanging">
				<plx:param name="instance" dataTypeName="Review" />
				<plx:param name="newValue" dataTypeName=".string" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="instance" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:branch>
						<plx:condition>
							<plx:unaryOperator type="booleanNot">
								<plx:callThis name="OnVinAndNameChanging">
									<plx:passParam>
										<plx:nameRef type="parameter" name="instance" />
									</plx:passParam>
									<plx:passParam>
										<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
											<plx:passMemberTypeParam dataTypeName=".u4" />
											<plx:passMemberTypeParam dataTypeName=".string" />
											<plx:passParam>
												<plx:callInstance type="property" name="Vin">
													<plx:callObject>
														<plx:nameRef type="parameter" name="instance" />
													</plx:callObject>
												</plx:callInstance>
											</plx:passParam>
											<plx:passParam>
												<plx:nameRef type="parameter" name="newValue" />
											</plx:passParam>
										</plx:callStatic>
									</plx:passParam>
								</plx:callThis>
							</plx:unaryOperator>
						</plx:condition>
						<plx:return>
							<plx:falseKeyword />
						</plx:return>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnReviewNameChanged">
				<plx:param name="instance" dataTypeName="Review" />
				<plx:param name="oldValue" dataTypeName=".string" />
				<plx:local name="VinAndNameOldValueTuple" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".u4" />
					<plx:passTypeParam dataTypeName=".string" />
				</plx:local>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="VinAndNameOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
								<plx:passMemberTypeParam dataTypeName=".u4" />
								<plx:passMemberTypeParam dataTypeName=".string" />
								<plx:passParam>
									<plx:callInstance type="property" name="Vin">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:passParam>
							</plx:callStatic>
						</plx:right>
					</plx:assign>
				</plx:branch>
				<plx:fallbackBranch>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="VinAndNameOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:fallbackBranch>
				<plx:callThis name="OnVinAndNameChanged">
					<plx:passParam>
						<plx:nameRef type="parameter" name="instance" />
					</plx:passParam>
					<plx:passParam>
						<plx:nameRef name="VinAndNameOldValueTuple" />
					</plx:passParam>
					<plx:passParam>
						<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
							<plx:passMemberTypeParam dataTypeName=".u4" />
							<plx:passMemberTypeParam dataTypeName=".string" />
							<plx:passParam>
								<plx:callInstance type="property" name="Vin">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:callInstance type="property" name="Name">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
						</plx:callStatic>
					</plx:passParam>
				</plx:callThis>
			</plx:function>
			<plx:field visibility="private" readOnly="true" name="_ReviewList" dataTypeName="List">
				<plx:passTypeParam dataTypeName="Review" />
			</plx:field>
			<plx:field visibility="private" readOnly="true" name="_ReviewReadOnlyCollection" dataTypeName="ReadOnlyCollection">
				<plx:passTypeParam dataTypeName="Review" />
			</plx:field>
			<plx:property visibility="public" name="ReviewCollection">
				<plx:interfaceMember memberName="ReviewCollection" dataTypeName="ISampleModelContext" />
				<plx:returns dataTypeName="IEnumerable">
					<plx:passTypeParam dataTypeName="Review" />
				</plx:returns>
				<plx:get>
					<plx:return>
						<plx:callThis type="field" name="_ReviewReadOnlyCollection" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:class visibility="private" modifier="sealed" name="ReviewImpl">
				<plx:leadingInfo>
					<plx:pragma type="region" data="ReviewImpl" />
				</plx:leadingInfo>
				<plx:trailingInfo>
					<plx:pragma type="closeRegion" data="ReviewImpl" />
				</plx:trailingInfo>
				<plx:attribute dataTypeName="StructLayoutAttribute" dataTypeQualifier="System.Runtime.InteropServices">
					<plx:passParam>
						<plx:callStatic type="field" name="Auto" dataTypeName="LayoutKind" dataTypeQualifier="System.Runtime.InteropServices" />
					</plx:passParam>
					<plx:passParam>
						<plx:binaryOperator type="assignNamed">
							<plx:left>
								<plx:nameRef type="namedParameter" name="CharSet" />
							</plx:left>
							<plx:right>
								<plx:callStatic type="field" name="Auto" dataTypeName="CharSet" dataTypeQualifier="System.Runtime.InteropServices" />
							</plx:right>
						</plx:binaryOperator>
					</plx:passParam>
				</plx:attribute>
				<plx:derivesFromClass dataTypeName="Review" />
				<plx:function visibility="public" name=".construct">
					<plx:param name="context" dataTypeName="SampleModelContext" />
					<plx:param name="vin" dataTypeName=".u4" />
					<plx:param name="integer" dataTypeName=".u4" />
					<plx:param name="name" dataTypeName=".string" />
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_Context" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="context" />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_Vin" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="vin" />
						</plx:right>
					</plx:assign>
					<plx:callInstance name="OnReviewVinChanged">
						<plx:callObject>
							<plx:nameRef type="parameter" name="context" />
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callInstance>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_Integer" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="integer" />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_Name" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="name" />
						</plx:right>
					</plx:assign>
					<plx:callInstance name="OnReviewNameChanged">
						<plx:callObject>
							<plx:nameRef type="parameter" name="context" />
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callInstance>
					<plx:callInstance name="Add">
						<plx:callObject>
							<plx:callInstance type="field" name="_ReviewList">
								<plx:callObject>
									<plx:nameRef type="parameter" name="context" />
								</plx:callObject>
							</plx:callInstance>
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
					</plx:callInstance>
				</plx:function>
				<plx:field visibility="private" readOnly="true" name="_Context" dataTypeName="SampleModelContext" />
				<plx:property visibility="public" modifier="sealedOverride" name="Context">
					<plx:returns dataTypeName="SampleModelContext" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_Context" />
						</plx:return>
					</plx:get>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_Vin" dataTypeName=".u4" />
				<plx:property visibility="public" modifier="sealedOverride" name="Vin">
					<plx:returns dataTypeName=".u4" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_Vin" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:local name="oldValue" dataTypeName=".u4">
							<plx:initialize>
								<plx:callThis type="field" name="_Vin" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="inequality">
									<plx:left>
										<plx:nameRef name="oldValue" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnReviewVinChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnVinChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_Vin" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnReviewVinChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnVinChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_Integer" dataTypeName=".u4" />
				<plx:property visibility="public" modifier="sealedOverride" name="Integer">
					<plx:returns dataTypeName=".u4" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_Integer" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:local name="oldValue" dataTypeName=".u4">
							<plx:initialize>
								<plx:callThis type="field" name="_Integer" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="inequality">
									<plx:left>
										<plx:nameRef name="oldValue" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnReviewIntegerChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnIntegerChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_Integer" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callThis accessor="base" name="OnIntegerChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_Name" dataTypeName=".string" />
				<plx:property visibility="public" modifier="sealedOverride" name="Name">
					<plx:returns dataTypeName=".string" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_Name" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:throw>
								<plx:callNew dataTypeName="ArgumentNullException">
									<plx:passParam>
										<plx:valueKeyword stringize="true" />
									</plx:passParam>
								</plx:callNew>
							</plx:throw>
						</plx:branch>
						<plx:local name="oldValue" dataTypeName=".string">
							<plx:initialize>
								<plx:callThis type="field" name="_Name" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="booleanAnd">
									<plx:left>
										<plx:binaryOperator type="identityInequality">
											<plx:left>
												<plx:cast type="exceptionCast" dataTypeName=".object">
													<plx:nameRef name="oldValue" />
												</plx:cast>
											</plx:left>
											<plx:right>
												<plx:cast type="exceptionCast" dataTypeName=".object">
													<plx:valueKeyword />
												</plx:cast>
											</plx:right>
										</plx:binaryOperator>
									</plx:left>
									<plx:right>
										<plx:unaryOperator type="booleanNot">
											<plx:callInstance name="Equals">
												<plx:callObject>
													<plx:valueKeyword />
												</plx:callObject>
												<plx:passParam>
													<plx:nameRef name="oldValue" />
												</plx:passParam>
											</plx:callInstance>
										</plx:unaryOperator>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnReviewNameChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnNameChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_Name" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnReviewNameChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnNameChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
			</plx:class>
			<plx:pragma type="closeRegion" data="Review" />
			<plx:pragma type="region" data="PersonHasNickName" />
			<plx:function visibility="public" name="CreatePersonHasNickName">
				<plx:interfaceMember memberName="CreatePersonHasNickName" dataTypeName="ISampleModelContext" />
				<plx:param name="nickName" dataTypeName=".string" />
				<plx:param name="person" dataTypeName="Person" />
				<plx:returns dataTypeName="PersonHasNickName" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="nickName" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="ArgumentNullException">
							<plx:passParam>
								<plx:string>nickName</plx:string>
							</plx:passParam>
						</plx:callNew>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="person" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="ArgumentNullException">
							<plx:passParam>
								<plx:string>person</plx:string>
							</plx:passParam>
						</plx:callNew>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnPersonHasNickNameNickNameChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="nickName" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="SampleModelContext">
							<plx:passParam>
								<plx:string>nickName</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnPersonHasNickNamePersonChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="person" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="SampleModelContext">
							<plx:passParam>
								<plx:string>person</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:return>
					<plx:callNew dataTypeName="PersonHasNickNameImpl">
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="nickName" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="person" />
						</plx:passParam>
					</plx:callNew>
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnPersonHasNickNameNickNameChanging">
				<plx:param name="instance" dataTypeName="PersonHasNickName" />
				<plx:param name="newValue" dataTypeName=".string" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="instance" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:branch>
						<plx:condition>
							<plx:unaryOperator type="booleanNot">
								<plx:callThis name="OnNickNameAndPersonChanging">
									<plx:passParam>
										<plx:nameRef type="parameter" name="instance" />
									</plx:passParam>
									<plx:passParam>
										<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
											<plx:passMemberTypeParam dataTypeName=".string" />
											<plx:passMemberTypeParam dataTypeName="Person" />
											<plx:passParam>
												<plx:nameRef type="parameter" name="newValue" />
											</plx:passParam>
											<plx:passParam>
												<plx:callInstance type="property" name="Person">
													<plx:callObject>
														<plx:nameRef type="parameter" name="instance" />
													</plx:callObject>
												</plx:callInstance>
											</plx:passParam>
										</plx:callStatic>
									</plx:passParam>
								</plx:callThis>
							</plx:unaryOperator>
						</plx:condition>
						<plx:return>
							<plx:falseKeyword />
						</plx:return>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnPersonHasNickNameNickNameChanged">
				<plx:param name="instance" dataTypeName="PersonHasNickName" />
				<plx:param name="oldValue" dataTypeName=".string" />
				<plx:local name="NickNameAndPersonOldValueTuple" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".string" />
					<plx:passTypeParam dataTypeName="Person" />
				</plx:local>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="NickNameAndPersonOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
								<plx:passMemberTypeParam dataTypeName=".string" />
								<plx:passMemberTypeParam dataTypeName="Person" />
								<plx:passParam>
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:passParam>
								<plx:passParam>
									<plx:callInstance type="property" name="Person">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
							</plx:callStatic>
						</plx:right>
					</plx:assign>
				</plx:branch>
				<plx:fallbackBranch>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="NickNameAndPersonOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:fallbackBranch>
				<plx:callThis name="OnNickNameAndPersonChanged">
					<plx:passParam>
						<plx:nameRef type="parameter" name="instance" />
					</plx:passParam>
					<plx:passParam>
						<plx:nameRef name="NickNameAndPersonOldValueTuple" />
					</plx:passParam>
					<plx:passParam>
						<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
							<plx:passMemberTypeParam dataTypeName=".string" />
							<plx:passMemberTypeParam dataTypeName="Person" />
							<plx:passParam>
								<plx:callInstance type="property" name="NickName">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:callInstance type="property" name="Person">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
						</plx:callStatic>
					</plx:passParam>
				</plx:callThis>
			</plx:function>
			<plx:function visibility="private" name="OnPersonHasNickNamePersonChanging">
				<plx:param name="instance" dataTypeName="PersonHasNickName" />
				<plx:param name="newValue" dataTypeName="Person" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:thisKeyword />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="Context">
										<plx:callObject>
											<plx:nameRef type="parameter" name="newValue" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetDifferentContextsException" dataTypeName="SampleModelContext" />
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="instance" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:branch>
						<plx:condition>
							<plx:unaryOperator type="booleanNot">
								<plx:callThis name="OnNickNameAndPersonChanging">
									<plx:passParam>
										<plx:nameRef type="parameter" name="instance" />
									</plx:passParam>
									<plx:passParam>
										<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
											<plx:passMemberTypeParam dataTypeName=".string" />
											<plx:passMemberTypeParam dataTypeName="Person" />
											<plx:passParam>
												<plx:callInstance type="property" name="NickName">
													<plx:callObject>
														<plx:nameRef type="parameter" name="instance" />
													</plx:callObject>
												</plx:callInstance>
											</plx:passParam>
											<plx:passParam>
												<plx:nameRef type="parameter" name="newValue" />
											</plx:passParam>
										</plx:callStatic>
									</plx:passParam>
								</plx:callThis>
							</plx:unaryOperator>
						</plx:condition>
						<plx:return>
							<plx:falseKeyword />
						</plx:return>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnPersonHasNickNamePersonChanged">
				<plx:param name="instance" dataTypeName="PersonHasNickName" />
				<plx:param name="oldValue" dataTypeName="Person" />
				<plx:callInstance name="Add">
					<plx:callObject>
						<plx:cast type="exceptionCast" dataTypeName="ICollection">
							<plx:passTypeParam dataTypeName="PersonHasNickName" />
							<plx:callInstance type="property" name="PersonHasNickNameViaPersonCollection">
								<plx:callObject>
									<plx:callInstance type="property" name="Person">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:callObject>
							</plx:callInstance>
						</plx:cast>
					</plx:callObject>
					<plx:passParam>
						<plx:nameRef type="parameter" name="instance" />
					</plx:passParam>
				</plx:callInstance>
				<plx:local name="NickNameAndPersonOldValueTuple" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".string" />
					<plx:passTypeParam dataTypeName="Person" />
				</plx:local>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:callInstance name="Remove">
						<plx:callObject>
							<plx:cast type="exceptionCast" dataTypeName="ICollection">
								<plx:passTypeParam dataTypeName="PersonHasNickName" />
								<plx:callInstance type="property" name="PersonHasNickNameViaPersonCollection">
									<plx:callObject>
										<plx:nameRef type="parameter" name="oldValue" />
									</plx:callObject>
								</plx:callInstance>
							</plx:cast>
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="instance" />
						</plx:passParam>
					</plx:callInstance>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="NickNameAndPersonOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
								<plx:passMemberTypeParam dataTypeName=".string" />
								<plx:passMemberTypeParam dataTypeName="Person" />
								<plx:passParam>
									<plx:callInstance type="property" name="NickName">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:passParam>
							</plx:callStatic>
						</plx:right>
					</plx:assign>
				</plx:branch>
				<plx:fallbackBranch>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="NickNameAndPersonOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:fallbackBranch>
				<plx:callThis name="OnNickNameAndPersonChanged">
					<plx:passParam>
						<plx:nameRef type="parameter" name="instance" />
					</plx:passParam>
					<plx:passParam>
						<plx:nameRef name="NickNameAndPersonOldValueTuple" />
					</plx:passParam>
					<plx:passParam>
						<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
							<plx:passMemberTypeParam dataTypeName=".string" />
							<plx:passMemberTypeParam dataTypeName="Person" />
							<plx:passParam>
								<plx:callInstance type="property" name="NickName">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:callInstance type="property" name="Person">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
						</plx:callStatic>
					</plx:passParam>
				</plx:callThis>
			</plx:function>
			<plx:field visibility="private" readOnly="true" name="_PersonHasNickNameList" dataTypeName="List">
				<plx:passTypeParam dataTypeName="PersonHasNickName" />
			</plx:field>
			<plx:field visibility="private" readOnly="true" name="_PersonHasNickNameReadOnlyCollection" dataTypeName="ReadOnlyCollection">
				<plx:passTypeParam dataTypeName="PersonHasNickName" />
			</plx:field>
			<plx:property visibility="public" name="PersonHasNickNameCollection">
				<plx:interfaceMember memberName="PersonHasNickNameCollection" dataTypeName="ISampleModelContext" />
				<plx:returns dataTypeName="IEnumerable">
					<plx:passTypeParam dataTypeName="PersonHasNickName" />
				</plx:returns>
				<plx:get>
					<plx:return>
						<plx:callThis type="field" name="_PersonHasNickNameReadOnlyCollection" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:class visibility="private" modifier="sealed" name="PersonHasNickNameImpl">
				<plx:leadingInfo>
					<plx:pragma type="region" data="PersonHasNickNameImpl" />
				</plx:leadingInfo>
				<plx:trailingInfo>
					<plx:pragma type="closeRegion" data="PersonHasNickNameImpl" />
				</plx:trailingInfo>
				<plx:attribute dataTypeName="StructLayoutAttribute" dataTypeQualifier="System.Runtime.InteropServices">
					<plx:passParam>
						<plx:callStatic type="field" name="Auto" dataTypeName="LayoutKind" dataTypeQualifier="System.Runtime.InteropServices" />
					</plx:passParam>
					<plx:passParam>
						<plx:binaryOperator type="assignNamed">
							<plx:left>
								<plx:nameRef type="namedParameter" name="CharSet" />
							</plx:left>
							<plx:right>
								<plx:callStatic type="field" name="Auto" dataTypeName="CharSet" dataTypeQualifier="System.Runtime.InteropServices" />
							</plx:right>
						</plx:binaryOperator>
					</plx:passParam>
				</plx:attribute>
				<plx:derivesFromClass dataTypeName="PersonHasNickName" />
				<plx:function visibility="public" name=".construct">
					<plx:param name="context" dataTypeName="SampleModelContext" />
					<plx:param name="nickName" dataTypeName=".string" />
					<plx:param name="person" dataTypeName="Person" />
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_Context" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="context" />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_NickName" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="nickName" />
						</plx:right>
					</plx:assign>
					<plx:callInstance name="OnPersonHasNickNameNickNameChanged">
						<plx:callObject>
							<plx:nameRef type="parameter" name="context" />
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callInstance>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_Person" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="person" />
						</plx:right>
					</plx:assign>
					<plx:callInstance name="OnPersonHasNickNamePersonChanged">
						<plx:callObject>
							<plx:nameRef type="parameter" name="context" />
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callInstance>
					<plx:callInstance name="Add">
						<plx:callObject>
							<plx:callInstance type="field" name="_PersonHasNickNameList">
								<plx:callObject>
									<plx:nameRef type="parameter" name="context" />
								</plx:callObject>
							</plx:callInstance>
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
					</plx:callInstance>
				</plx:function>
				<plx:field visibility="private" readOnly="true" name="_Context" dataTypeName="SampleModelContext" />
				<plx:property visibility="public" modifier="sealedOverride" name="Context">
					<plx:returns dataTypeName="SampleModelContext" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_Context" />
						</plx:return>
					</plx:get>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_NickName" dataTypeName=".string" />
				<plx:property visibility="public" modifier="sealedOverride" name="NickName">
					<plx:returns dataTypeName=".string" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_NickName" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:throw>
								<plx:callNew dataTypeName="ArgumentNullException">
									<plx:passParam>
										<plx:valueKeyword stringize="true" />
									</plx:passParam>
								</plx:callNew>
							</plx:throw>
						</plx:branch>
						<plx:local name="oldValue" dataTypeName=".string">
							<plx:initialize>
								<plx:callThis type="field" name="_NickName" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="booleanAnd">
									<plx:left>
										<plx:binaryOperator type="identityInequality">
											<plx:left>
												<plx:cast type="exceptionCast" dataTypeName=".object">
													<plx:nameRef name="oldValue" />
												</plx:cast>
											</plx:left>
											<plx:right>
												<plx:cast type="exceptionCast" dataTypeName=".object">
													<plx:valueKeyword />
												</plx:cast>
											</plx:right>
										</plx:binaryOperator>
									</plx:left>
									<plx:right>
										<plx:unaryOperator type="booleanNot">
											<plx:callInstance name="Equals">
												<plx:callObject>
													<plx:valueKeyword />
												</plx:callObject>
												<plx:passParam>
													<plx:nameRef name="oldValue" />
												</plx:passParam>
											</plx:callInstance>
										</plx:unaryOperator>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnPersonHasNickNameNickNameChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnNickNameChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_NickName" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnPersonHasNickNameNickNameChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnNickNameChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_Person" dataTypeName="Person" />
				<plx:property visibility="public" modifier="sealedOverride" name="Person">
					<plx:returns dataTypeName="Person" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_Person" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:throw>
								<plx:callNew dataTypeName="ArgumentNullException">
									<plx:passParam>
										<plx:valueKeyword stringize="true" />
									</plx:passParam>
								</plx:callNew>
							</plx:throw>
						</plx:branch>
						<plx:local name="oldValue" dataTypeName="Person">
							<plx:initialize>
								<plx:callThis type="field" name="_Person" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityInequality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:nameRef name="oldValue" />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnPersonHasNickNamePersonChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnPersonChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_Person" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnPersonHasNickNamePersonChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnPersonChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
			</plx:class>
			<plx:pragma type="closeRegion" data="PersonHasNickName" />
		</plx:class>
	</plx:namespace>
</plx:root>