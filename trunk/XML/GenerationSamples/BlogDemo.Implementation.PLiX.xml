<?xml version="1.0" encoding="utf-8"?>
<plx:root xmlns:plx="http://schemas.neumont.edu/CodeGeneration/PLiX" xmlns:prop="urn:schemas-orm-net:PLiX:CLI:Properties">
	<plx:namespaceImport name="System" />
	<plx:namespaceImport name="System.Collections.Generic" />
	<plx:namespaceImport name="System.Collections.ObjectModel" />
	<plx:namespaceImport name="System.ComponentModel" />
	<plx:namespaceImport name="System.Xml" />
	<plx:namespace name="BlogDemo">
		<plx:class visibility="public" modifier="sealed" name="BlogDemoContext">
			<plx:leadingInfo>
				<plx:pragma type="region" data="BlogDemoContext" />
			</plx:leadingInfo>
			<plx:trailingInfo>
				<plx:pragma type="closeRegion" data="BlogDemoContext" />
			</plx:trailingInfo>
			<plx:attribute dataTypeName="GeneratedCodeAttribute" dataTypeQualifier="System.CodeDom.Compiler">
				<plx:passParam>
					<plx:string>OIALtoPLiX</plx:string>
				</plx:passParam>
				<plx:passParam>
					<plx:string>1.0</plx:string>
				</plx:passParam>
			</plx:attribute>
			<plx:attribute dataTypeName="StructLayoutAttribute" dataTypeQualifier="System.Runtime.InteropServices">
				<plx:passParam>
					<plx:callStatic type="field" name="Auto" dataTypeName="LayoutKind" dataTypeQualifier="System.Runtime.InteropServices" />
				</plx:passParam>
				<plx:passParam>
					<plx:binaryOperator type="assignNamed">
						<plx:left>
							<plx:nameRef type="namedParameter" name="CharSet" />
						</plx:left>
						<plx:right>
							<plx:callStatic type="field" name="Auto" dataTypeName="CharSet" dataTypeQualifier="System.Runtime.InteropServices" />
						</plx:right>
					</plx:binaryOperator>
				</plx:passParam>
			</plx:attribute>
			<plx:implementsInterface dataTypeName="IBlogDemoContext" />
			<plx:function visibility="public" name=".construct">
				<plx:local name="constraintEnforcementCollectionCallbacksByTypeDictionary" dataTypeName="Dictionary">
					<plx:passTypeParam dataTypeName="RuntimeTypeHandle" />
					<plx:passTypeParam dataTypeName=".object" />
					<plx:initialize>
						<plx:inlineStatement dataTypeName="Dictionary">
							<plx:passTypeParam dataTypeName="RuntimeTypeHandle" />
							<plx:passTypeParam dataTypeName=".object" />
							<plx:assign>
								<plx:left>
									<plx:callThis type="field" name="_ContraintEnforcementCollectionCallbacksByTypeDictionary" />
								</plx:left>
								<plx:right>
									<plx:callNew dataTypeName="Dictionary">
										<plx:passTypeParam dataTypeName="RuntimeTypeHandle" />
										<plx:passTypeParam dataTypeName=".object" />
										<plx:passParam>
											<plx:value type="i4" data="4" />
										</plx:passParam>
										<plx:passParam>
											<plx:callStatic type="field" name="Instance" dataTypeName="RuntimeTypeHandleEqualityComparer" />
										</plx:passParam>
									</plx:callNew>
								</plx:right>
							</plx:assign>
						</plx:inlineStatement>
					</plx:initialize>
				</plx:local>
				<plx:callInstance name="Add">
					<plx:callObject>
						<plx:nameRef name="constraintEnforcementCollectionCallbacksByTypeDictionary" />
					</plx:callObject>
					<plx:passParam>
						<plx:callInstance type="property" name="TypeHandle">
							<plx:callObject>
								<plx:typeOf dataTypeName="ConstraintEnforcementCollection">
									<plx:passTypeParam dataTypeName="BlogEntry" />
									<plx:passTypeParam dataTypeName="BlogEntryLabel" />
								</plx:typeOf>
							</plx:callObject>
						</plx:callInstance>
					</plx:passParam>
					<plx:passParam>
						<plx:callNew dataTypeName="ConstraintEnforcementCollectionCallbacks">
							<plx:passTypeParam dataTypeName="BlogEntry" />
							<plx:passTypeParam dataTypeName="BlogEntryLabel" />
							<plx:passParam>
								<plx:callNew type="newDelegate" dataTypeName="PotentialCollectionModificationCallback">
									<plx:passTypeParam dataTypeName="BlogEntry" />
									<plx:passTypeParam dataTypeName="BlogEntryLabel" />
									<plx:passParam>
										<plx:callThis type="methodReference" name="OnBlogEntryBlogEntryLabelViaBlogEntryIdCollectionAdding" />
									</plx:passParam>
								</plx:callNew>
							</plx:passParam>
							<plx:passParam>
								<plx:callNew type="newDelegate" dataTypeName="CommittedCollectionModificationCallback">
									<plx:passTypeParam dataTypeName="BlogEntry" />
									<plx:passTypeParam dataTypeName="BlogEntryLabel" />
									<plx:passParam>
										<plx:callThis type="methodReference" name="OnBlogEntryBlogEntryLabelViaBlogEntryIdCollectionAdded" />
									</plx:passParam>
								</plx:callNew>
							</plx:passParam>
							<plx:passParam>
								<plx:nullKeyword />
							</plx:passParam>
							<plx:passParam>
								<plx:callNew type="newDelegate" dataTypeName="CommittedCollectionModificationCallback">
									<plx:passTypeParam dataTypeName="BlogEntry" />
									<plx:passTypeParam dataTypeName="BlogEntryLabel" />
									<plx:passParam>
										<plx:callThis type="methodReference" name="OnBlogEntryBlogEntryLabelViaBlogEntryIdCollectionRemoved" />
									</plx:passParam>
								</plx:callNew>
							</plx:passParam>
						</plx:callNew>
					</plx:passParam>
				</plx:callInstance>
				<plx:callInstance name="Add">
					<plx:callObject>
						<plx:nameRef name="constraintEnforcementCollectionCallbacksByTypeDictionary" />
					</plx:callObject>
					<plx:passParam>
						<plx:callInstance type="property" name="TypeHandle">
							<plx:callObject>
								<plx:typeOf dataTypeName="ConstraintEnforcementCollection">
									<plx:passTypeParam dataTypeName="User" />
									<plx:passTypeParam dataTypeName="BlogEntry" />
								</plx:typeOf>
							</plx:callObject>
						</plx:callInstance>
					</plx:passParam>
					<plx:passParam>
						<plx:callNew dataTypeName="ConstraintEnforcementCollectionCallbacks">
							<plx:passTypeParam dataTypeName="User" />
							<plx:passTypeParam dataTypeName="BlogEntry" />
							<plx:passParam>
								<plx:callNew type="newDelegate" dataTypeName="PotentialCollectionModificationCallback">
									<plx:passTypeParam dataTypeName="User" />
									<plx:passTypeParam dataTypeName="BlogEntry" />
									<plx:passParam>
										<plx:callThis type="methodReference" name="OnUserBlogEntryViaUserIdCollectionAdding" />
									</plx:passParam>
								</plx:callNew>
							</plx:passParam>
							<plx:passParam>
								<plx:callNew type="newDelegate" dataTypeName="CommittedCollectionModificationCallback">
									<plx:passTypeParam dataTypeName="User" />
									<plx:passTypeParam dataTypeName="BlogEntry" />
									<plx:passParam>
										<plx:callThis type="methodReference" name="OnUserBlogEntryViaUserIdCollectionAdded" />
									</plx:passParam>
								</plx:callNew>
							</plx:passParam>
							<plx:passParam>
								<plx:nullKeyword />
							</plx:passParam>
							<plx:passParam>
								<plx:callNew type="newDelegate" dataTypeName="CommittedCollectionModificationCallback">
									<plx:passTypeParam dataTypeName="User" />
									<plx:passTypeParam dataTypeName="BlogEntry" />
									<plx:passParam>
										<plx:callThis type="methodReference" name="OnUserBlogEntryViaUserIdCollectionRemoved" />
									</plx:passParam>
								</plx:callNew>
							</plx:passParam>
						</plx:callNew>
					</plx:passParam>
				</plx:callInstance>
				<plx:callInstance name="Add">
					<plx:callObject>
						<plx:nameRef name="constraintEnforcementCollectionCallbacksByTypeDictionary" />
					</plx:callObject>
					<plx:passParam>
						<plx:callInstance type="property" name="TypeHandle">
							<plx:callObject>
								<plx:typeOf dataTypeName="ConstraintEnforcementCollection">
									<plx:passTypeParam dataTypeName="BlogLabel" />
									<plx:passTypeParam dataTypeName="BlogEntryLabel" />
								</plx:typeOf>
							</plx:callObject>
						</plx:callInstance>
					</plx:passParam>
					<plx:passParam>
						<plx:callNew dataTypeName="ConstraintEnforcementCollectionCallbacks">
							<plx:passTypeParam dataTypeName="BlogLabel" />
							<plx:passTypeParam dataTypeName="BlogEntryLabel" />
							<plx:passParam>
								<plx:callNew type="newDelegate" dataTypeName="PotentialCollectionModificationCallback">
									<plx:passTypeParam dataTypeName="BlogLabel" />
									<plx:passTypeParam dataTypeName="BlogEntryLabel" />
									<plx:passParam>
										<plx:callThis type="methodReference" name="OnBlogLabelBlogEntryLabelViaBlogLabelIdCollectionAdding" />
									</plx:passParam>
								</plx:callNew>
							</plx:passParam>
							<plx:passParam>
								<plx:callNew type="newDelegate" dataTypeName="CommittedCollectionModificationCallback">
									<plx:passTypeParam dataTypeName="BlogLabel" />
									<plx:passTypeParam dataTypeName="BlogEntryLabel" />
									<plx:passParam>
										<plx:callThis type="methodReference" name="OnBlogLabelBlogEntryLabelViaBlogLabelIdCollectionAdded" />
									</plx:passParam>
								</plx:callNew>
							</plx:passParam>
							<plx:passParam>
								<plx:nullKeyword />
							</plx:passParam>
							<plx:passParam>
								<plx:callNew type="newDelegate" dataTypeName="CommittedCollectionModificationCallback">
									<plx:passTypeParam dataTypeName="BlogLabel" />
									<plx:passTypeParam dataTypeName="BlogEntryLabel" />
									<plx:passParam>
										<plx:callThis type="methodReference" name="OnBlogLabelBlogEntryLabelViaBlogLabelIdCollectionRemoved" />
									</plx:passParam>
								</plx:callNew>
							</plx:passParam>
						</plx:callNew>
					</plx:passParam>
				</plx:callInstance>
				<plx:callInstance name="Add">
					<plx:callObject>
						<plx:nameRef name="constraintEnforcementCollectionCallbacksByTypeDictionary" />
					</plx:callObject>
					<plx:passParam>
						<plx:callInstance type="property" name="TypeHandle">
							<plx:callObject>
								<plx:typeOf dataTypeName="ConstraintEnforcementCollection">
									<plx:passTypeParam dataTypeName="NonCommentEntry" />
									<plx:passTypeParam dataTypeName="BlogComment" />
								</plx:typeOf>
							</plx:callObject>
						</plx:callInstance>
					</plx:passParam>
					<plx:passParam>
						<plx:callNew dataTypeName="ConstraintEnforcementCollectionCallbacks">
							<plx:passTypeParam dataTypeName="NonCommentEntry" />
							<plx:passTypeParam dataTypeName="BlogComment" />
							<plx:passParam>
								<plx:callNew type="newDelegate" dataTypeName="PotentialCollectionModificationCallback">
									<plx:passTypeParam dataTypeName="NonCommentEntry" />
									<plx:passTypeParam dataTypeName="BlogComment" />
									<plx:passParam>
										<plx:callThis type="methodReference" name="OnNonCommentEntryBlogCommentViaParentEntryIdCollectionAdding" />
									</plx:passParam>
								</plx:callNew>
							</plx:passParam>
							<plx:passParam>
								<plx:callNew type="newDelegate" dataTypeName="CommittedCollectionModificationCallback">
									<plx:passTypeParam dataTypeName="NonCommentEntry" />
									<plx:passTypeParam dataTypeName="BlogComment" />
									<plx:passParam>
										<plx:callThis type="methodReference" name="OnNonCommentEntryBlogCommentViaParentEntryIdCollectionAdded" />
									</plx:passParam>
								</plx:callNew>
							</plx:passParam>
							<plx:passParam>
								<plx:nullKeyword />
							</plx:passParam>
							<plx:passParam>
								<plx:callNew type="newDelegate" dataTypeName="CommittedCollectionModificationCallback">
									<plx:passTypeParam dataTypeName="NonCommentEntry" />
									<plx:passTypeParam dataTypeName="BlogComment" />
									<plx:passParam>
										<plx:callThis type="methodReference" name="OnNonCommentEntryBlogCommentViaParentEntryIdCollectionRemoved" />
									</plx:passParam>
								</plx:callNew>
							</plx:passParam>
						</plx:callNew>
					</plx:passParam>
				</plx:callInstance>
				<plx:assign>
					<plx:left>
						<plx:callThis type="field" name="_BlogEntryReadOnlyCollection" />
					</plx:left>
					<plx:right>
						<plx:callNew dataTypeName="ReadOnlyCollection">
							<plx:passTypeParam dataTypeName="BlogEntry" />
							<plx:passParam>
								<plx:inlineStatement dataTypeName="List">
									<plx:passTypeParam dataTypeName="BlogEntry" />
									<plx:assign>
										<plx:left>
											<plx:callThis type="field" name="_BlogEntryList" />
										</plx:left>
										<plx:right>
											<plx:callNew dataTypeName="List">
												<plx:passTypeParam dataTypeName="BlogEntry" />
											</plx:callNew>
										</plx:right>
									</plx:assign>
								</plx:inlineStatement>
							</plx:passParam>
						</plx:callNew>
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis type="field" name="_UserReadOnlyCollection" />
					</plx:left>
					<plx:right>
						<plx:callNew dataTypeName="ReadOnlyCollection">
							<plx:passTypeParam dataTypeName="User" />
							<plx:passParam>
								<plx:inlineStatement dataTypeName="List">
									<plx:passTypeParam dataTypeName="User" />
									<plx:assign>
										<plx:left>
											<plx:callThis type="field" name="_UserList" />
										</plx:left>
										<plx:right>
											<plx:callNew dataTypeName="List">
												<plx:passTypeParam dataTypeName="User" />
											</plx:callNew>
										</plx:right>
									</plx:assign>
								</plx:inlineStatement>
							</plx:passParam>
						</plx:callNew>
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis type="field" name="_BlogCommentReadOnlyCollection" />
					</plx:left>
					<plx:right>
						<plx:callNew dataTypeName="ReadOnlyCollection">
							<plx:passTypeParam dataTypeName="BlogComment" />
							<plx:passParam>
								<plx:inlineStatement dataTypeName="List">
									<plx:passTypeParam dataTypeName="BlogComment" />
									<plx:assign>
										<plx:left>
											<plx:callThis type="field" name="_BlogCommentList" />
										</plx:left>
										<plx:right>
											<plx:callNew dataTypeName="List">
												<plx:passTypeParam dataTypeName="BlogComment" />
											</plx:callNew>
										</plx:right>
									</plx:assign>
								</plx:inlineStatement>
							</plx:passParam>
						</plx:callNew>
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis type="field" name="_BlogLabelReadOnlyCollection" />
					</plx:left>
					<plx:right>
						<plx:callNew dataTypeName="ReadOnlyCollection">
							<plx:passTypeParam dataTypeName="BlogLabel" />
							<plx:passParam>
								<plx:inlineStatement dataTypeName="List">
									<plx:passTypeParam dataTypeName="BlogLabel" />
									<plx:assign>
										<plx:left>
											<plx:callThis type="field" name="_BlogLabelList" />
										</plx:left>
										<plx:right>
											<plx:callNew dataTypeName="List">
												<plx:passTypeParam dataTypeName="BlogLabel" />
											</plx:callNew>
										</plx:right>
									</plx:assign>
								</plx:inlineStatement>
							</plx:passParam>
						</plx:callNew>
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis type="field" name="_BlogEntryLabelReadOnlyCollection" />
					</plx:left>
					<plx:right>
						<plx:callNew dataTypeName="ReadOnlyCollection">
							<plx:passTypeParam dataTypeName="BlogEntryLabel" />
							<plx:passParam>
								<plx:inlineStatement dataTypeName="List">
									<plx:passTypeParam dataTypeName="BlogEntryLabel" />
									<plx:assign>
										<plx:left>
											<plx:callThis type="field" name="_BlogEntryLabelList" />
										</plx:left>
										<plx:right>
											<plx:callNew dataTypeName="List">
												<plx:passTypeParam dataTypeName="BlogEntryLabel" />
											</plx:callNew>
										</plx:right>
									</plx:assign>
								</plx:inlineStatement>
							</plx:passParam>
						</plx:callNew>
					</plx:right>
				</plx:assign>
				<plx:assign>
					<plx:left>
						<plx:callThis type="field" name="_NonCommentEntryReadOnlyCollection" />
					</plx:left>
					<plx:right>
						<plx:callNew dataTypeName="ReadOnlyCollection">
							<plx:passTypeParam dataTypeName="NonCommentEntry" />
							<plx:passParam>
								<plx:inlineStatement dataTypeName="List">
									<plx:passTypeParam dataTypeName="NonCommentEntry" />
									<plx:assign>
										<plx:left>
											<plx:callThis type="field" name="_NonCommentEntryList" />
										</plx:left>
										<plx:right>
											<plx:callNew dataTypeName="List">
												<plx:passTypeParam dataTypeName="NonCommentEntry" />
											</plx:callNew>
										</plx:right>
									</plx:assign>
								</plx:inlineStatement>
							</plx:passParam>
						</plx:callNew>
					</plx:right>
				</plx:assign>
			</plx:function>
			<plx:pragma type="region" data="Exception Helpers" />
			<plx:function visibility="private" modifier="static" overload="true" name="GetDifferentContextsException">
				<plx:returns dataTypeName="ArgumentException" />
				<plx:return>
					<plx:callStatic name="GetDifferentContextsException" dataTypeName="BlogDemoContext">
						<plx:passParam>
							<plx:valueKeyword stringize="true" />
						</plx:passParam>
					</plx:callStatic>
				</plx:return>
			</plx:function>
			<plx:function visibility="private" modifier="static" overload="true" name="GetDifferentContextsException">
				<plx:attribute dataTypeName="SuppressMessageAttribute" dataTypeQualifier="System.Diagnostics.CodeAnalysis">
					<plx:passParam>
						<plx:string>Microsoft.Usage</plx:string>
					</plx:passParam>
					<plx:passParam>
						<plx:string>CA2208:InstantiateArgumentExceptionsCorrectly</plx:string>
					</plx:passParam>
				</plx:attribute>
				<plx:param name="paramName" dataTypeName=".string" />
				<plx:returns dataTypeName="ArgumentException" />
				<plx:return>
					<plx:callNew dataTypeName="ArgumentException">
						<plx:passParam>
							<plx:string data="All objects in a relationship must be part of the same Context." />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="paramName" />
						</plx:passParam>
					</plx:callNew>
				</plx:return>
			</plx:function>
			<plx:function visibility="private" modifier="static" name="GetConstraintEnforcementFailedException">
				<plx:param name="paramName" dataTypeName=".string" />
				<plx:returns dataTypeName="ArgumentException" />
				<plx:return>
					<plx:callNew dataTypeName="ArgumentException">
						<plx:passParam>
							<plx:string data="Argument failed constraint enforcement." />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="paramName" />
						</plx:passParam>
					</plx:callNew>
				</plx:return>
			</plx:function>
			<plx:pragma type="closeRegion" data="Exception Helpers" />
			<plx:pragma type="region" data="Lookup and External Constraint Enforcement" />
			<plx:field visibility="private" readOnly="true" name="_BlogEntryBlogEntryIdDictionary" dataTypeName="Dictionary">
				<plx:passTypeParam dataTypeName=".i4" />
				<plx:passTypeParam dataTypeName="BlogEntry" />
				<plx:initialize>
					<plx:callNew dataTypeName="Dictionary">
						<plx:passTypeParam dataTypeName=".i4" />
						<plx:passTypeParam dataTypeName="BlogEntry" />
					</plx:callNew>
				</plx:initialize>
			</plx:field>
			<plx:function visibility="public" name="GetBlogEntryByBlogEntryId">
				<plx:interfaceMember memberName="GetBlogEntryByBlogEntryId" dataTypeName="IBlogDemoContext" />
				<plx:param name="blogEntryId" dataTypeName=".i4" />
				<plx:returns dataTypeName="BlogEntry" />
				<plx:return>
					<plx:callInstance type="indexerCall" name=".implied">
						<plx:callObject>
							<plx:callThis type="field" name="_BlogEntryBlogEntryIdDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="blogEntryId" />
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" name="TryGetBlogEntryByBlogEntryId">
				<plx:interfaceMember memberName="TryGetBlogEntryByBlogEntryId" dataTypeName="IBlogDemoContext" />
				<plx:param name="blogEntryId" dataTypeName=".i4" />
				<plx:param type="out" name="blogEntry" dataTypeName="BlogEntry" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:callInstance name="TryGetValue">
						<plx:callObject>
							<plx:callThis type="field" name="_BlogEntryBlogEntryIdDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="blogEntryId" />
						</plx:passParam>
						<plx:passParam type="out">
							<plx:nameRef type="parameter" name="blogEntry" />
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:field visibility="private" readOnly="true" name="_UserFirstNameAndLastNameDictionary" dataTypeName="Dictionary">
				<plx:passTypeParam dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".string" />
					<plx:passTypeParam dataTypeName=".string" />
				</plx:passTypeParam>
				<plx:passTypeParam dataTypeName="User" />
				<plx:initialize>
					<plx:callNew dataTypeName="Dictionary">
						<plx:passTypeParam dataTypeName="Tuple">
							<plx:passTypeParam dataTypeName=".string" />
							<plx:passTypeParam dataTypeName=".string" />
						</plx:passTypeParam>
						<plx:passTypeParam dataTypeName="User" />
					</plx:callNew>
				</plx:initialize>
			</plx:field>
			<plx:function visibility="public" name="GetUserByFirstNameAndLastName">
				<plx:interfaceMember memberName="GetUserByFirstNameAndLastName" dataTypeName="IBlogDemoContext" />
				<plx:param name="firstName" dataTypeName=".string" />
				<plx:param name="lastName" dataTypeName=".string" />
				<plx:returns dataTypeName="User" />
				<plx:return>
					<plx:callInstance type="indexerCall" name=".implied">
						<plx:callObject>
							<plx:callThis type="field" name="_UserFirstNameAndLastNameDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
								<plx:passMemberTypeParam dataTypeName=".string" />
								<plx:passMemberTypeParam dataTypeName=".string" />
								<plx:passParam>
									<plx:nameRef type="parameter" name="firstName" />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="lastName" />
								</plx:passParam>
							</plx:callStatic>
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" name="TryGetUserByFirstNameAndLastName">
				<plx:interfaceMember memberName="TryGetUserByFirstNameAndLastName" dataTypeName="IBlogDemoContext" />
				<plx:param name="firstName" dataTypeName=".string" />
				<plx:param name="lastName" dataTypeName=".string" />
				<plx:param type="out" name="user" dataTypeName="User" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:callInstance name="TryGetValue">
						<plx:callObject>
							<plx:callThis type="field" name="_UserFirstNameAndLastNameDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
								<plx:passMemberTypeParam dataTypeName=".string" />
								<plx:passMemberTypeParam dataTypeName=".string" />
								<plx:passParam>
									<plx:nameRef type="parameter" name="firstName" />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="lastName" />
								</plx:passParam>
							</plx:callStatic>
						</plx:passParam>
						<plx:passParam type="out">
							<plx:nameRef type="parameter" name="user" />
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnFirstNameAndLastNameChanging">
				<plx:param name="instance" dataTypeName="User" />
				<plx:param name="newValue" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".string" />
					<plx:passTypeParam dataTypeName=".string" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="newValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:local name="currentInstance" dataTypeName="User" />
					<plx:branch>
						<plx:condition>
							<plx:callInstance name="TryGetValue">
								<plx:callObject>
									<plx:callThis type="field" name="_UserFirstNameAndLastNameDictionary" />
								</plx:callObject>
								<plx:passParam>
									<plx:nameRef type="parameter" name="newValue" />
								</plx:passParam>
								<plx:passParam type="out">
									<plx:nameRef name="currentInstance" />
								</plx:passParam>
							</plx:callInstance>
						</plx:condition>
						<plx:return>
							<plx:binaryOperator type="identityEquality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef name="currentInstance" />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="instance" />
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:return>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnFirstNameAndLastNameChanged">
				<plx:param name="instance" dataTypeName="User" />
				<plx:param name="oldValue" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".string" />
					<plx:passTypeParam dataTypeName=".string" />
				</plx:param>
				<plx:param name="newValue" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".string" />
					<plx:passTypeParam dataTypeName=".string" />
				</plx:param>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:callInstance name="Remove">
						<plx:callObject>
							<plx:callThis name="_UserFirstNameAndLastNameDictionary" type="field" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="oldValue" />
						</plx:passParam>
					</plx:callInstance>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="newValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:callInstance name="Add">
						<plx:callObject>
							<plx:callThis name="_UserFirstNameAndLastNameDictionary" type="field" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="newValue" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="instance" />
						</plx:passParam>
					</plx:callInstance>
				</plx:branch>
			</plx:function>
			<plx:field visibility="private" readOnly="true" name="_BlogLabelBlogLabelIdDictionary" dataTypeName="Dictionary">
				<plx:passTypeParam dataTypeName=".i4" />
				<plx:passTypeParam dataTypeName="BlogLabel" />
				<plx:initialize>
					<plx:callNew dataTypeName="Dictionary">
						<plx:passTypeParam dataTypeName=".i4" />
						<plx:passTypeParam dataTypeName="BlogLabel" />
					</plx:callNew>
				</plx:initialize>
			</plx:field>
			<plx:function visibility="public" name="GetBlogLabelByBlogLabelId">
				<plx:interfaceMember memberName="GetBlogLabelByBlogLabelId" dataTypeName="IBlogDemoContext" />
				<plx:param name="blogLabelId" dataTypeName=".i4" />
				<plx:returns dataTypeName="BlogLabel" />
				<plx:return>
					<plx:callInstance type="indexerCall" name=".implied">
						<plx:callObject>
							<plx:callThis type="field" name="_BlogLabelBlogLabelIdDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="blogLabelId" />
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" name="TryGetBlogLabelByBlogLabelId">
				<plx:interfaceMember memberName="TryGetBlogLabelByBlogLabelId" dataTypeName="IBlogDemoContext" />
				<plx:param name="blogLabelId" dataTypeName=".i4" />
				<plx:param type="out" name="blogLabel" dataTypeName="BlogLabel" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:callInstance name="TryGetValue">
						<plx:callObject>
							<plx:callThis type="field" name="_BlogLabelBlogLabelIdDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="blogLabelId" />
						</plx:passParam>
						<plx:passParam type="out">
							<plx:nameRef type="parameter" name="blogLabel" />
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:field visibility="private" readOnly="true" name="_BlogEntryLabelBlogEntryIdAndBlogLabelIdDictionary" dataTypeName="Dictionary">
				<plx:passTypeParam dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="BlogEntry" />
					<plx:passTypeParam dataTypeName="BlogLabel" />
				</plx:passTypeParam>
				<plx:passTypeParam dataTypeName="BlogEntryLabel" />
				<plx:initialize>
					<plx:callNew dataTypeName="Dictionary">
						<plx:passTypeParam dataTypeName="Tuple">
							<plx:passTypeParam dataTypeName="BlogEntry" />
							<plx:passTypeParam dataTypeName="BlogLabel" />
						</plx:passTypeParam>
						<plx:passTypeParam dataTypeName="BlogEntryLabel" />
					</plx:callNew>
				</plx:initialize>
			</plx:field>
			<plx:function visibility="public" name="GetBlogEntryLabelByBlogEntryIdAndBlogLabelId">
				<plx:interfaceMember memberName="GetBlogEntryLabelByBlogEntryIdAndBlogLabelId" dataTypeName="IBlogDemoContext" />
				<plx:param name="blogEntryId" dataTypeName="BlogEntry" />
				<plx:param name="blogLabelId" dataTypeName="BlogLabel" />
				<plx:returns dataTypeName="BlogEntryLabel" />
				<plx:return>
					<plx:callInstance type="indexerCall" name=".implied">
						<plx:callObject>
							<plx:callThis type="field" name="_BlogEntryLabelBlogEntryIdAndBlogLabelIdDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
								<plx:passMemberTypeParam dataTypeName="BlogEntry" />
								<plx:passMemberTypeParam dataTypeName="BlogLabel" />
								<plx:passParam>
									<plx:nameRef type="parameter" name="blogEntryId" />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="blogLabelId" />
								</plx:passParam>
							</plx:callStatic>
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:function visibility="public" name="TryGetBlogEntryLabelByBlogEntryIdAndBlogLabelId">
				<plx:interfaceMember memberName="TryGetBlogEntryLabelByBlogEntryIdAndBlogLabelId" dataTypeName="IBlogDemoContext" />
				<plx:param name="blogEntryId" dataTypeName="BlogEntry" />
				<plx:param name="blogLabelId" dataTypeName="BlogLabel" />
				<plx:param type="out" name="blogEntryLabel" dataTypeName="BlogEntryLabel" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:callInstance name="TryGetValue">
						<plx:callObject>
							<plx:callThis type="field" name="_BlogEntryLabelBlogEntryIdAndBlogLabelIdDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
								<plx:passMemberTypeParam dataTypeName="BlogEntry" />
								<plx:passMemberTypeParam dataTypeName="BlogLabel" />
								<plx:passParam>
									<plx:nameRef type="parameter" name="blogEntryId" />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="blogLabelId" />
								</plx:passParam>
							</plx:callStatic>
						</plx:passParam>
						<plx:passParam type="out">
							<plx:nameRef type="parameter" name="blogEntryLabel" />
						</plx:passParam>
					</plx:callInstance>
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnBlogEntryIdAndBlogLabelIdChanging">
				<plx:param name="instance" dataTypeName="BlogEntryLabel" />
				<plx:param name="newValue" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="BlogEntry" />
					<plx:passTypeParam dataTypeName="BlogLabel" />
				</plx:param>
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="newValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:local name="currentInstance" dataTypeName="BlogEntryLabel" />
					<plx:branch>
						<plx:condition>
							<plx:callInstance name="TryGetValue">
								<plx:callObject>
									<plx:callThis type="field" name="_BlogEntryLabelBlogEntryIdAndBlogLabelIdDictionary" />
								</plx:callObject>
								<plx:passParam>
									<plx:nameRef type="parameter" name="newValue" />
								</plx:passParam>
								<plx:passParam type="out">
									<plx:nameRef name="currentInstance" />
								</plx:passParam>
							</plx:callInstance>
						</plx:condition>
						<plx:return>
							<plx:binaryOperator type="identityEquality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef name="currentInstance" />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="instance" />
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:return>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnBlogEntryIdAndBlogLabelIdChanged">
				<plx:param name="instance" dataTypeName="BlogEntryLabel" />
				<plx:param name="oldValue" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="BlogEntry" />
					<plx:passTypeParam dataTypeName="BlogLabel" />
				</plx:param>
				<plx:param name="newValue" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="BlogEntry" />
					<plx:passTypeParam dataTypeName="BlogLabel" />
				</plx:param>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:callInstance name="Remove">
						<plx:callObject>
							<plx:callThis name="_BlogEntryLabelBlogEntryIdAndBlogLabelIdDictionary" type="field" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="oldValue" />
						</plx:passParam>
					</plx:callInstance>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="newValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:callInstance name="Add">
						<plx:callObject>
							<plx:callThis name="_BlogEntryLabelBlogEntryIdAndBlogLabelIdDictionary" type="field" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="newValue" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="instance" />
						</plx:passParam>
					</plx:callInstance>
				</plx:branch>
			</plx:function>
			<plx:pragma type="closeRegion" data="Lookup and External Constraint Enforcement" />
			<plx:pragma type="region" data="ConstraintEnforcementCollection" />
			<plx:delegate visibility="private" name="PotentialCollectionModificationCallback">
				<plx:typeParam requireReferenceType="true" name="TClass">
					<plx:typeConstraint dataTypeName="IHasBlogDemoContext" />
				</plx:typeParam>
				<plx:typeParam name="TProperty" />
				<plx:param name="instance" dataTypeName="TClass" />
				<plx:param name="item" dataTypeName="TProperty" />
				<plx:returns dataTypeName=".boolean" />
			</plx:delegate>
			<plx:delegate visibility="private" name="CommittedCollectionModificationCallback">
				<plx:typeParam requireReferenceType="true" name="TClass">
					<plx:typeConstraint dataTypeName="IHasBlogDemoContext" />
				</plx:typeParam>
				<plx:typeParam name="TProperty" />
				<plx:param name="instance" dataTypeName="TClass" />
				<plx:param name="item" dataTypeName="TProperty" />
			</plx:delegate>
			<plx:class visibility="private" modifier="sealed" name="ConstraintEnforcementCollectionCallbacks">
				<plx:attribute dataTypeName="StructLayoutAttribute" dataTypeQualifier="System.Runtime.InteropServices">
					<plx:passParam>
						<plx:callStatic type="field" name="Auto" dataTypeName="LayoutKind" dataTypeQualifier="System.Runtime.InteropServices" />
					</plx:passParam>
					<plx:passParam>
						<plx:binaryOperator type="assignNamed">
							<plx:left>
								<plx:nameRef type="namedParameter" name="CharSet" />
							</plx:left>
							<plx:right>
								<plx:callStatic type="field" name="Auto" dataTypeName="CharSet" dataTypeQualifier="System.Runtime.InteropServices" />
							</plx:right>
						</plx:binaryOperator>
					</plx:passParam>
				</plx:attribute>
				<plx:typeParam requireReferenceType="true" name="TClass">
					<plx:typeConstraint dataTypeName="IHasBlogDemoContext" />
				</plx:typeParam>
				<plx:typeParam name="TProperty" />
				<plx:function visibility="public" name=".construct">
					<plx:param name="adding" dataTypeName="PotentialCollectionModificationCallback">
						<plx:passTypeParam dataTypeName="TClass" />
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:param>
					<plx:param name="added" dataTypeName="CommittedCollectionModificationCallback">
						<plx:passTypeParam dataTypeName="TClass" />
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:param>
					<plx:param name="removing" dataTypeName="PotentialCollectionModificationCallback">
						<plx:passTypeParam dataTypeName="TClass" />
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:param>
					<plx:param name="removed" dataTypeName="CommittedCollectionModificationCallback">
						<plx:passTypeParam dataTypeName="TClass" />
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:param>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="Adding" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="adding" />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="Added" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="added" />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="Removing" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="removing" />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="Removed" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="removed" />
						</plx:right>
					</plx:assign>
				</plx:function>
				<plx:field visibility="public" readOnly="true" name="Adding" dataTypeName="PotentialCollectionModificationCallback">
					<plx:passTypeParam dataTypeName="TClass" />
					<plx:passTypeParam dataTypeName="TProperty" />
				</plx:field>
				<plx:field visibility="public" readOnly="true" name="Added" dataTypeName="CommittedCollectionModificationCallback">
					<plx:passTypeParam dataTypeName="TClass" />
					<plx:passTypeParam dataTypeName="TProperty" />
				</plx:field>
				<plx:field visibility="public" readOnly="true" name="Removing" dataTypeName="PotentialCollectionModificationCallback">
					<plx:passTypeParam dataTypeName="TClass" />
					<plx:passTypeParam dataTypeName="TProperty" />
				</plx:field>
				<plx:field visibility="public" readOnly="true" name="Removed" dataTypeName="CommittedCollectionModificationCallback">
					<plx:passTypeParam dataTypeName="TClass" />
					<plx:passTypeParam dataTypeName="TProperty" />
				</plx:field>
			</plx:class>
			<plx:function visibility="private" overload="false" name="GetConstraintEnforcementCollectionCallbacks">
				<plx:typeParam requireReferenceType="true" name="TClass">
					<plx:typeConstraint dataTypeName="IHasBlogDemoContext" />
				</plx:typeParam>
				<plx:typeParam name="TProperty" />
				<plx:returns dataTypeName="ConstraintEnforcementCollectionCallbacks">
					<plx:passTypeParam dataTypeName="TClass" />
					<plx:passTypeParam dataTypeName="TProperty" />
				</plx:returns>
				<plx:return>
					<plx:cast type="exceptionCast" dataTypeName="ConstraintEnforcementCollectionCallbacks">
						<plx:passTypeParam dataTypeName="TClass" />
						<plx:passTypeParam dataTypeName="TProperty" />
						<plx:callInstance type="indexerCall" name=".implied">
							<plx:callObject>
								<plx:callThis type="field" name="_ContraintEnforcementCollectionCallbacksByTypeDictionary" />
							</plx:callObject>
							<plx:passParam>
								<plx:callInstance type="property" name="TypeHandle">
									<plx:callObject>
										<plx:typeOf dataTypeName="ConstraintEnforcementCollection">
											<plx:passTypeParam dataTypeName="TClass" />
											<plx:passTypeParam dataTypeName="TProperty" />
										</plx:typeOf>
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
						</plx:callInstance>
					</plx:cast>
				</plx:return>
			</plx:function>
			<plx:class visibility="private" modifier="sealed" name="RuntimeTypeHandleEqualityComparer">
				<plx:attribute dataTypeName="StructLayoutAttribute" dataTypeQualifier="System.Runtime.InteropServices">
					<plx:passParam>
						<plx:callStatic type="field" name="Auto" dataTypeName="LayoutKind" dataTypeQualifier="System.Runtime.InteropServices" />
					</plx:passParam>
					<plx:passParam>
						<plx:binaryOperator type="assignNamed">
							<plx:left>
								<plx:nameRef type="namedParameter" name="CharSet" />
							</plx:left>
							<plx:right>
								<plx:callStatic type="field" name="Auto" dataTypeName="CharSet" dataTypeQualifier="System.Runtime.InteropServices" />
							</plx:right>
						</plx:binaryOperator>
					</plx:passParam>
				</plx:attribute>
				<plx:implementsInterface dataTypeName="IEqualityComparer">
					<plx:passTypeParam dataTypeName="RuntimeTypeHandle" />
				</plx:implementsInterface>
				<plx:field visibility="public" static="true" readOnly="true" name="Instance" dataTypeName="RuntimeTypeHandleEqualityComparer">
					<plx:initialize>
						<plx:callNew dataTypeName="RuntimeTypeHandleEqualityComparer" />
					</plx:initialize>
				</plx:field>
				<plx:function visibility="private" name=".construct" />
				<plx:function visibility="public" overload="true" name="Equals">
					<plx:interfaceMember memberName="Equals" dataTypeName="IEqualityComparer">
						<plx:passTypeParam dataTypeName="RuntimeTypeHandle" />
					</plx:interfaceMember>
					<plx:param name="x" dataTypeName="RuntimeTypeHandle" />
					<plx:param name="y" dataTypeName="RuntimeTypeHandle" />
					<plx:returns dataTypeName=".boolean" />
					<plx:return>
						<plx:callInstance name="Equals">
							<plx:callObject>
								<plx:nameRef type="parameter" name="x" />
							</plx:callObject>
							<plx:passParam>
								<plx:nameRef type="parameter" name="y" />
							</plx:passParam>
						</plx:callInstance>
					</plx:return>
				</plx:function>
				<plx:function visibility="public" overload="true" name="GetHashCode">
					<plx:interfaceMember memberName="GetHashCode" dataTypeName="IEqualityComparer">
						<plx:passTypeParam dataTypeName="RuntimeTypeHandle" />
					</plx:interfaceMember>
					<plx:param name="obj" dataTypeName="RuntimeTypeHandle" />
					<plx:returns dataTypeName=".i4" />
					<plx:return>
						<plx:callInstance name="GetHashCode">
							<plx:callObject>
								<plx:nameRef type="parameter" name="obj" />
							</plx:callObject>
						</plx:callInstance>
					</plx:return>
				</plx:function>
			</plx:class>
			<plx:field visibility="private" readOnly="true" name="_ContraintEnforcementCollectionCallbacksByTypeDictionary" dataTypeName="Dictionary">
				<plx:passTypeParam dataTypeName="RuntimeTypeHandle" />
				<plx:passTypeParam dataTypeName=".object" />
			</plx:field>
			<plx:class visibility="private" modifier="sealed" name="ConstraintEnforcementCollection">
				<plx:attribute dataTypeName="StructLayoutAttribute" dataTypeQualifier="System.Runtime.InteropServices">
					<plx:passParam>
						<plx:callStatic type="field" name="Auto" dataTypeName="LayoutKind" dataTypeQualifier="System.Runtime.InteropServices" />
					</plx:passParam>
					<plx:passParam>
						<plx:binaryOperator type="assignNamed">
							<plx:left>
								<plx:nameRef type="namedParameter" name="CharSet" />
							</plx:left>
							<plx:right>
								<plx:callStatic type="field" name="Auto" dataTypeName="CharSet" dataTypeQualifier="System.Runtime.InteropServices" />
							</plx:right>
						</plx:binaryOperator>
					</plx:passParam>
				</plx:attribute>
				<plx:typeParam requireReferenceType="true" name="TClass">
					<plx:typeConstraint dataTypeName="IHasBlogDemoContext" />
				</plx:typeParam>
				<plx:typeParam name="TProperty" />
				<plx:implementsInterface dataTypeName="ICollection">
					<plx:passTypeParam dataTypeName="TProperty" />
				</plx:implementsInterface>
				<plx:field visibility="private" readOnly="true" name="_Instance" dataTypeName="TClass" />
				<plx:field visibility="private" readOnly="true" name="_List" dataTypeName="List">
					<plx:passTypeParam dataTypeName="TProperty" />
					<plx:initialize>
						<plx:callNew dataTypeName="List">
							<plx:passTypeParam dataTypeName="TProperty" />
						</plx:callNew>
					</plx:initialize>
				</plx:field>
				<plx:function visibility="public" name=".construct">
					<plx:param name="instance" dataTypeName="TClass" />
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_Instance" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="instance" />
						</plx:right>
					</plx:assign>
				</plx:function>
				<plx:function visibility="privateInterfaceMember" name="GetNonGenericEnumerator">
					<plx:interfaceMember memberName="GetEnumerator" dataTypeName="IEnumerable" dataTypeQualifier="System.Collections" />
					<plx:returns dataTypeName="IEnumerator" dataTypeQualifier="System.Collections" />
					<plx:return>
						<plx:callThis name="GetEnumerator" />
					</plx:return>
				</plx:function>
				<plx:function visibility="public" name="GetEnumerator">
					<plx:interfaceMember memberName="GetEnumerator" dataTypeName="IEnumerable">
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:interfaceMember>
					<plx:returns dataTypeName="IEnumerator">
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:returns>
					<plx:return>
						<plx:callInstance name="GetEnumerator">
							<plx:callObject>
								<plx:callThis type="field" name="_List" />
							</plx:callObject>
						</plx:callInstance>
					</plx:return>
				</plx:function>
				<plx:function visibility="public" name="Add">
					<plx:interfaceMember memberName="Add" dataTypeName="ICollection">
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:interfaceMember>
					<plx:param name="item" dataTypeName="TProperty" />
					<plx:branch>
						<plx:condition>
							<plx:binaryOperator type="identityEquality">
								<plx:left>
									<plx:nameRef type="parameter" name="item" />
								</plx:left>
								<plx:right>
									<plx:nullKeyword />
								</plx:right>
							</plx:binaryOperator>
						</plx:condition>
						<plx:throw>
							<plx:callNew dataTypeName="ArgumentNullException">
								<plx:passParam>
									<plx:string data="item" />
								</plx:passParam>
							</plx:callNew>
						</plx:throw>
					</plx:branch>
					<plx:local name="instance" dataTypeName="TClass">
						<plx:initialize>
							<plx:callThis type="field" name="_Instance" />
						</plx:initialize>
					</plx:local>
					<plx:local name="callbacks" dataTypeName="ConstraintEnforcementCollectionCallbacks">
						<plx:passTypeParam dataTypeName="TClass" />
						<plx:passTypeParam dataTypeName="TProperty" />
						<plx:initialize>
							<plx:callInstance name="GetConstraintEnforcementCollectionCallbacks">
								<plx:passMemberTypeParam dataTypeName="TClass" />
								<plx:passMemberTypeParam dataTypeName="TProperty" />
								<plx:callObject>
									<plx:callInstance type="property" name="Context">
										<plx:callObject>
											<plx:nameRef name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:callObject>
							</plx:callInstance>
						</plx:initialize>
					</plx:local>
					<plx:local name="adding" dataTypeName="PotentialCollectionModificationCallback">
						<plx:passTypeParam dataTypeName="TClass" />
						<plx:passTypeParam dataTypeName="TProperty" />
						<plx:initialize>
							<plx:callInstance type="field" name="Adding">
								<plx:callObject>
									<plx:nameRef name="callbacks" />
								</plx:callObject>
							</plx:callInstance>
						</plx:initialize>
					</plx:local>
					<plx:branch>
						<plx:condition>
							<plx:binaryOperator type="booleanOr">
								<plx:left>
									<plx:binaryOperator type="identityEquality">
										<plx:left>
											<plx:cast type="exceptionCast" dataTypeName=".object">
												<plx:nameRef name="adding" />
											</plx:cast>
										</plx:left>
										<plx:right>
											<plx:nullKeyword />
										</plx:right>
									</plx:binaryOperator>
								</plx:left>
								<plx:right>
									<plx:callInstance type="delegateCall" name=".implied">
										<plx:callObject>
											<plx:nameRef name="adding" />
										</plx:callObject>
										<plx:passParam>
											<plx:nameRef name="instance" />
										</plx:passParam>
										<plx:passParam>
											<plx:nameRef type="parameter" name="item" />
										</plx:passParam>
									</plx:callInstance>
								</plx:right>
							</plx:binaryOperator>
						</plx:condition>
						<plx:callInstance name="Add">
							<plx:callObject>
								<plx:callThis type="field" name="_List" />
							</plx:callObject>
							<plx:passParam>
								<plx:nameRef type="parameter" name="item" />
							</plx:passParam>
						</plx:callInstance>
						<plx:local name="added" dataTypeName="CommittedCollectionModificationCallback">
							<plx:passTypeParam dataTypeName="TClass" />
							<plx:passTypeParam dataTypeName="TProperty" />
							<plx:initialize>
								<plx:callInstance type="field" name="Added">
									<plx:callObject>
										<plx:nameRef name="callbacks" />
									</plx:callObject>
								</plx:callInstance>
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityInequality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:nameRef name="added" />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:callInstance type="delegateCall" name=".implied">
								<plx:callObject>
									<plx:nameRef name="added" />
								</plx:callObject>
								<plx:passParam>
									<plx:nameRef name="instance" />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="item" />
								</plx:passParam>
							</plx:callInstance>
						</plx:branch>
					</plx:branch>
				</plx:function>
				<plx:function visibility="public" name="Remove">
					<plx:interfaceMember memberName="Remove" dataTypeName="ICollection">
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:interfaceMember>
					<plx:param name="item" dataTypeName="TProperty" />
					<plx:returns dataTypeName=".boolean" />
					<plx:branch>
						<plx:condition>
							<plx:binaryOperator type="identityEquality">
								<plx:left>
									<plx:nameRef type="parameter" name="item" />
								</plx:left>
								<plx:right>
									<plx:nullKeyword />
								</plx:right>
							</plx:binaryOperator>
						</plx:condition>
						<plx:throw>
							<plx:callNew dataTypeName="ArgumentNullException">
								<plx:passParam>
									<plx:string data="item" />
								</plx:passParam>
							</plx:callNew>
						</plx:throw>
					</plx:branch>
					<plx:local name="instance" dataTypeName="TClass">
						<plx:initialize>
							<plx:callThis type="field" name="_Instance" />
						</plx:initialize>
					</plx:local>
					<plx:local name="callbacks" dataTypeName="ConstraintEnforcementCollectionCallbacks">
						<plx:passTypeParam dataTypeName="TClass" />
						<plx:passTypeParam dataTypeName="TProperty" />
						<plx:initialize>
							<plx:callInstance name="GetConstraintEnforcementCollectionCallbacks">
								<plx:passMemberTypeParam dataTypeName="TClass" />
								<plx:passMemberTypeParam dataTypeName="TProperty" />
								<plx:callObject>
									<plx:callInstance type="property" name="Context">
										<plx:callObject>
											<plx:nameRef name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:callObject>
							</plx:callInstance>
						</plx:initialize>
					</plx:local>
					<plx:local name="removing" dataTypeName="PotentialCollectionModificationCallback">
						<plx:passTypeParam dataTypeName="TClass" />
						<plx:passTypeParam dataTypeName="TProperty" />
						<plx:initialize>
							<plx:callInstance type="field" name="Removing">
								<plx:callObject>
									<plx:nameRef name="callbacks" />
								</plx:callObject>
							</plx:callInstance>
						</plx:initialize>
					</plx:local>
					<plx:branch>
						<plx:condition>
							<plx:binaryOperator type="booleanOr">
								<plx:left>
									<plx:binaryOperator type="identityEquality">
										<plx:left>
											<plx:cast type="exceptionCast" dataTypeName=".object">
												<plx:nameRef name="removing" />
											</plx:cast>
										</plx:left>
										<plx:right>
											<plx:nullKeyword />
										</plx:right>
									</plx:binaryOperator>
								</plx:left>
								<plx:right>
									<plx:callInstance type="delegateCall" name=".implied">
										<plx:callObject>
											<plx:nameRef name="removing" />
										</plx:callObject>
										<plx:passParam>
											<plx:nameRef name="instance" />
										</plx:passParam>
										<plx:passParam>
											<plx:nameRef type="parameter" name="item" />
										</plx:passParam>
									</plx:callInstance>
								</plx:right>
							</plx:binaryOperator>
						</plx:condition>
						<plx:branch>
							<plx:condition>
								<plx:callInstance name="Remove">
									<plx:callObject>
										<plx:callThis type="field" name="_List" />
									</plx:callObject>
									<plx:passParam>
										<plx:nameRef type="parameter" name="item" />
									</plx:passParam>
								</plx:callInstance>
							</plx:condition>
							<plx:local name="removed" dataTypeName="CommittedCollectionModificationCallback">
								<plx:passTypeParam dataTypeName="TClass" />
								<plx:passTypeParam dataTypeName="TProperty" />
								<plx:initialize>
									<plx:callInstance type="field" name="Removed">
										<plx:callObject>
											<plx:nameRef name="callbacks" />
										</plx:callObject>
									</plx:callInstance>
								</plx:initialize>
							</plx:local>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="identityInequality">
										<plx:left>
											<plx:cast type="exceptionCast" dataTypeName=".object">
												<plx:nameRef name="removed" />
											</plx:cast>
										</plx:left>
										<plx:right>
											<plx:nullKeyword />
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:callInstance type="delegateCall" name=".implied">
									<plx:callObject>
										<plx:nameRef name="removed" />
									</plx:callObject>
									<plx:passParam>
										<plx:nameRef name="instance" />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef type="parameter" name="item" />
									</plx:passParam>
								</plx:callInstance>
							</plx:branch>
							<plx:return>
								<plx:trueKeyword />
							</plx:return>
						</plx:branch>
					</plx:branch>
					<plx:return>
						<plx:falseKeyword />
					</plx:return>
				</plx:function>
				<plx:function visibility="public" name="Clear">
					<plx:interfaceMember memberName="Clear" dataTypeName="ICollection">
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:interfaceMember>
					<plx:local name="list" dataTypeName="List">
						<plx:passTypeParam dataTypeName="TProperty" />
						<plx:initialize>
							<plx:callThis type="field" name="_List" />
						</plx:initialize>
					</plx:local>
					<plx:loop>
						<plx:initializeLoop>
							<plx:local name="i" dataTypeName=".i4">
								<plx:initialize>
									<plx:binaryOperator type="subtract">
										<plx:left>
											<plx:callInstance type="property" name="Count">
												<plx:callObject>
													<plx:nameRef name="list" />
												</plx:callObject>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:value type="i4" data="1" />
										</plx:right>
									</plx:binaryOperator>
								</plx:initialize>
							</plx:local>
						</plx:initializeLoop>
						<plx:condition>
							<plx:binaryOperator type="greaterThan">
								<plx:left>
									<plx:nameRef name="i" />
								</plx:left>
								<plx:right>
									<plx:value type="i4" data="0" />
								</plx:right>
							</plx:binaryOperator>
						</plx:condition>
						<plx:beforeLoop>
							<plx:decrement>
								<plx:nameRef name="i" />
							</plx:decrement>
						</plx:beforeLoop>
						<plx:callThis name="Remove">
							<plx:passParam>
								<plx:callInstance type="indexerCall" name=".implied">
									<plx:callObject>
										<plx:nameRef name="list" />
									</plx:callObject>
									<plx:passParam>
										<plx:nameRef name="i" />
									</plx:passParam>
								</plx:callInstance>
							</plx:passParam>
						</plx:callThis>
					</plx:loop>
				</plx:function>
				<plx:function visibility="public" name="Contains">
					<plx:interfaceMember memberName="Contains" dataTypeName="ICollection">
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:interfaceMember>
					<plx:param name="item" dataTypeName="TProperty" />
					<plx:returns dataTypeName=".boolean" />
					<plx:return>
						<plx:binaryOperator type="booleanAnd">
							<plx:left>
								<plx:binaryOperator type="identityInequality">
									<plx:left>
										<plx:nameRef type="parameter" name="item" />
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:left>
							<plx:right>
								<plx:callInstance name="Contains">
									<plx:callObject>
										<plx:callThis type="field" name="_List" />
									</plx:callObject>
									<plx:passParam>
										<plx:nameRef type="parameter" name="item" />
									</plx:passParam>
								</plx:callInstance>
							</plx:right>
						</plx:binaryOperator>
					</plx:return>
				</plx:function>
				<plx:function visibility="public" name="CopyTo">
					<plx:interfaceMember memberName="CopyTo" dataTypeName="ICollection">
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:interfaceMember>
					<plx:param name="array" dataTypeName="TProperty" dataTypeIsSimpleArray="true" />
					<plx:param name="arrayIndex" dataTypeName=".i4" />
					<plx:callInstance name="CopyTo">
						<plx:callObject>
							<plx:callThis type="field" name="_List" />
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="array" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="arrayIndex" />
						</plx:passParam>
					</plx:callInstance>
				</plx:function>
				<plx:property visibility="public" name="Count">
					<plx:interfaceMember memberName="Count" dataTypeName="ICollection">
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:interfaceMember>
					<plx:returns dataTypeName=".i4" />
					<plx:get>
						<plx:return>
							<plx:callInstance type="property" name="Count">
								<plx:callObject>
									<plx:callThis type="field" name="_List" />
								</plx:callObject>
							</plx:callInstance>
						</plx:return>
					</plx:get>
				</plx:property>
				<plx:property visibility="public" name="IsReadOnly">
					<plx:interfaceMember memberName="IsReadOnly" dataTypeName="ICollection">
						<plx:passTypeParam dataTypeName="TProperty" />
					</plx:interfaceMember>
					<plx:returns dataTypeName=".boolean" />
					<plx:get>
						<plx:return>
							<plx:falseKeyword />
						</plx:return>
					</plx:get>
				</plx:property>
			</plx:class>
			<plx:pragma type="closeRegion" data="ConstraintEnforcementCollection" />
			<plx:pragma type="region" data="BlogEntry" />
			<plx:function visibility="public" name="CreateBlogEntry">
				<plx:interfaceMember memberName="CreateBlogEntry" dataTypeName="IBlogDemoContext" />
				<plx:param name="blogEntryId" dataTypeName=".i4" />
				<plx:param name="entryTitle" dataTypeName=".string" />
				<plx:param name="entryBody" dataTypeName=".string" />
				<plx:param name="MDYValue" dataTypeName=".date" />
				<plx:param name="userId" dataTypeName="User" />
				<plx:returns dataTypeName="BlogEntry" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="entryTitle" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="ArgumentNullException">
							<plx:passParam>
								<plx:string>entryTitle</plx:string>
							</plx:passParam>
						</plx:callNew>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="entryBody" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="ArgumentNullException">
							<plx:passParam>
								<plx:string>entryBody</plx:string>
							</plx:passParam>
						</plx:callNew>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="userId" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="ArgumentNullException">
							<plx:passParam>
								<plx:string>userId</plx:string>
							</plx:passParam>
						</plx:callNew>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnBlogEntryBlogEntryIdChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="blogEntryId" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="BlogDemoContext">
							<plx:passParam>
								<plx:string>blogEntryId</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnBlogEntryEntryTitleChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="entryTitle" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="BlogDemoContext">
							<plx:passParam>
								<plx:string>entryTitle</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnBlogEntryEntryBodyChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="entryBody" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="BlogDemoContext">
							<plx:passParam>
								<plx:string>entryBody</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnBlogEntryMDYValueChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="MDYValue" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="BlogDemoContext">
							<plx:passParam>
								<plx:string>MDYValue</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnBlogEntryUserIdChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="userId" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="BlogDemoContext">
							<plx:passParam>
								<plx:string>userId</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:return>
					<plx:callNew dataTypeName="BlogEntryImpl">
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="blogEntryId" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="entryTitle" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="entryBody" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="MDYValue" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="userId" />
						</plx:passParam>
					</plx:callNew>
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnBlogEntryBlogEntryIdChanging">
				<plx:param name="instance" dataTypeName="BlogEntry" />
				<plx:param name="newValue" dataTypeName=".i4" />
				<plx:returns dataTypeName=".boolean" />
				<plx:local name="currentInstance" dataTypeName="BlogEntry" />
				<plx:branch>
					<plx:condition>
						<plx:callInstance name="TryGetValue">
							<plx:callObject>
								<plx:callThis type="field" name="_BlogEntryBlogEntryIdDictionary" />
							</plx:callObject>
							<plx:passParam>
								<plx:nameRef type="parameter" name="newValue" />
							</plx:passParam>
							<plx:passParam type="out">
								<plx:nameRef name="currentInstance" />
							</plx:passParam>
						</plx:callInstance>
					</plx:condition>
					<plx:branch>
						<plx:condition>
							<plx:binaryOperator type="identityInequality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef name="currentInstance" />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:nameRef type="parameter" name="instance" />
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:condition>
						<plx:return>
							<plx:falseKeyword />
						</plx:return>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnBlogEntryBlogEntryIdChanged">
				<plx:param name="instance" dataTypeName="BlogEntry" />
				<plx:param name="oldValue" dataTypeName="Nullable">
					<plx:passTypeParam dataTypeName=".i4" />
				</plx:param>
				<plx:callInstance name="Add">
					<plx:callObject>
						<plx:callThis type="field" name="_BlogEntryBlogEntryIdDictionary" />
					</plx:callObject>
					<plx:passParam>
						<plx:callInstance type="property" name="BlogEntryId">
							<plx:callObject>
								<plx:nameRef type="parameter" name="instance" />
							</plx:callObject>
						</plx:callInstance>
					</plx:passParam>
					<plx:passParam>
						<plx:nameRef type="parameter" name="instance" />
					</plx:passParam>
				</plx:callInstance>
				<plx:branch>
					<plx:condition>
						<plx:callInstance type="property" name="HasValue">
							<plx:callObject>
								<plx:nameRef type="parameter" name="oldValue" />
							</plx:callObject>
						</plx:callInstance>
					</plx:condition>
					<plx:callInstance name="Remove">
						<plx:callObject>
							<plx:callThis type="field" name="_BlogEntryBlogEntryIdDictionary" />
						</plx:callObject>
						<plx:passParam>
							<plx:callInstance name="GetValueOrDefault">
								<plx:callObject>
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:callObject>
							</plx:callInstance>
						</plx:passParam>
					</plx:callInstance>
				</plx:branch>
			</plx:function>
			<plx:function visibility="private" name="OnBlogEntryEntryTitleChanging">
				<plx:param name="instance" dataTypeName="BlogEntry" />
				<plx:param name="newValue" dataTypeName=".string" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnBlogEntryEntryBodyChanging">
				<plx:param name="instance" dataTypeName="BlogEntry" />
				<plx:param name="newValue" dataTypeName=".string" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnBlogEntryMDYValueChanging">
				<plx:param name="instance" dataTypeName="BlogEntry" />
				<plx:param name="newValue" dataTypeName=".date" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnBlogEntryUserIdChanging">
				<plx:param name="instance" dataTypeName="BlogEntry" />
				<plx:param name="newValue" dataTypeName="User" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:thisKeyword />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="Context">
										<plx:callObject>
											<plx:nameRef type="parameter" name="newValue" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetDifferentContextsException" dataTypeName="BlogDemoContext" />
					</plx:throw>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnBlogEntryUserIdChanged">
				<plx:param name="instance" dataTypeName="BlogEntry" />
				<plx:param name="oldValue" dataTypeName="User" />
				<plx:callInstance name="Add">
					<plx:callObject>
						<plx:cast type="exceptionCast" dataTypeName="ICollection">
							<plx:passTypeParam dataTypeName="BlogEntry" />
							<plx:callInstance type="property" name="BlogEntryViaUserIdCollection">
								<plx:callObject>
									<plx:callInstance type="property" name="UserId">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:callObject>
							</plx:callInstance>
						</plx:cast>
					</plx:callObject>
					<plx:passParam>
						<plx:nameRef type="parameter" name="instance" />
					</plx:passParam>
				</plx:callInstance>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:callInstance name="Remove">
						<plx:callObject>
							<plx:cast type="exceptionCast" dataTypeName="ICollection">
								<plx:passTypeParam dataTypeName="BlogEntry" />
								<plx:callInstance type="property" name="BlogEntryViaUserIdCollection">
									<plx:callObject>
										<plx:nameRef type="parameter" name="oldValue" />
									</plx:callObject>
								</plx:callInstance>
							</plx:cast>
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="instance" />
						</plx:passParam>
					</plx:callInstance>
				</plx:branch>
			</plx:function>
			<plx:function visibility="private" name="OnBlogEntryBlogCommentChanging">
				<plx:param name="instance" dataTypeName="BlogEntry" />
				<plx:param name="newValue" dataTypeName="BlogComment" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="newValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:branch>
						<plx:condition>
							<plx:binaryOperator type="identityInequality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:thisKeyword />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:callInstance type="property" name="Context">
											<plx:callObject>
												<plx:nameRef type="parameter" name="newValue" />
											</plx:callObject>
										</plx:callInstance>
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:condition>
						<plx:throw>
							<plx:callStatic name="GetDifferentContextsException" dataTypeName="BlogDemoContext" />
						</plx:throw>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnBlogEntryBlogCommentChanged">
				<plx:param name="instance" dataTypeName="BlogEntry" />
				<plx:param name="oldValue" dataTypeName="BlogComment" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="BlogComment">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:callInstance type="property" name="BlogEntry">
								<plx:callObject>
									<plx:callInstance type="property" name="BlogComment">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="instance" />
						</plx:right>
					</plx:assign>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:callInstance type="property" name="BlogEntry">
								<plx:callObject>
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:branch>
			</plx:function>
			<plx:function visibility="private" name="OnBlogEntryNonCommentEntryChanging">
				<plx:param name="instance" dataTypeName="BlogEntry" />
				<plx:param name="newValue" dataTypeName="NonCommentEntry" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="newValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:branch>
						<plx:condition>
							<plx:binaryOperator type="identityInequality">
								<plx:left>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:thisKeyword />
									</plx:cast>
								</plx:left>
								<plx:right>
									<plx:cast type="exceptionCast" dataTypeName=".object">
										<plx:callInstance type="property" name="Context">
											<plx:callObject>
												<plx:nameRef type="parameter" name="newValue" />
											</plx:callObject>
										</plx:callInstance>
									</plx:cast>
								</plx:right>
							</plx:binaryOperator>
						</plx:condition>
						<plx:throw>
							<plx:callStatic name="GetDifferentContextsException" dataTypeName="BlogDemoContext" />
						</plx:throw>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnBlogEntryNonCommentEntryChanged">
				<plx:param name="instance" dataTypeName="BlogEntry" />
				<plx:param name="oldValue" dataTypeName="NonCommentEntry" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="NonCommentEntry">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:callInstance type="property" name="BlogEntry">
								<plx:callObject>
									<plx:callInstance type="property" name="NonCommentEntry">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="instance" />
						</plx:right>
					</plx:assign>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:callInstance type="property" name="BlogEntry">
								<plx:callObject>
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:branch>
			</plx:function>
			<plx:function visibility="private" name="OnBlogEntryBlogEntryLabelViaBlogEntryIdCollectionAdding">
				<plx:param name="instance" dataTypeName="BlogEntry" />
				<plx:param name="item" dataTypeName="BlogEntryLabel" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:thisKeyword />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="Context">
										<plx:callObject>
											<plx:nameRef type="parameter" name="item" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetDifferentContextsException" dataTypeName="BlogDemoContext">
							<plx:passParam>
								<plx:string data="item" />
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnBlogEntryBlogEntryLabelViaBlogEntryIdCollectionAdded">
				<plx:param name="instance" dataTypeName="BlogEntry" />
				<plx:param name="item" dataTypeName="BlogEntryLabel" />
				<plx:assign>
					<plx:left>
						<plx:callInstance type="property" name="BlogEntryId">
							<plx:callObject>
								<plx:nameRef type="parameter" name="item" />
							</plx:callObject>
						</plx:callInstance>
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="instance" />
					</plx:right>
				</plx:assign>
			</plx:function>
			<plx:function visibility="private" name="OnBlogEntryBlogEntryLabelViaBlogEntryIdCollectionRemoved">
				<plx:param name="instance" dataTypeName="BlogEntry" />
				<plx:param name="item" dataTypeName="BlogEntryLabel" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="BlogEntryId">
										<plx:callObject>
											<plx:nameRef type="parameter" name="item" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="instance" />
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:callInstance type="property" name="BlogEntryId">
								<plx:callObject>
									<plx:nameRef type="parameter" name="item" />
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:branch>
			</plx:function>
			<plx:field visibility="private" readOnly="true" name="_BlogEntryList" dataTypeName="List">
				<plx:passTypeParam dataTypeName="BlogEntry" />
			</plx:field>
			<plx:field visibility="private" readOnly="true" name="_BlogEntryReadOnlyCollection" dataTypeName="ReadOnlyCollection">
				<plx:passTypeParam dataTypeName="BlogEntry" />
			</plx:field>
			<plx:property visibility="public" name="BlogEntryCollection">
				<plx:interfaceMember memberName="BlogEntryCollection" dataTypeName="IBlogDemoContext" />
				<plx:returns dataTypeName="IEnumerable">
					<plx:passTypeParam dataTypeName="BlogEntry" />
				</plx:returns>
				<plx:get>
					<plx:return>
						<plx:callThis type="field" name="_BlogEntryReadOnlyCollection" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:class visibility="private" modifier="sealed" name="BlogEntryImpl">
				<plx:leadingInfo>
					<plx:pragma type="region" data="BlogEntryImpl" />
				</plx:leadingInfo>
				<plx:trailingInfo>
					<plx:pragma type="closeRegion" data="BlogEntryImpl" />
				</plx:trailingInfo>
				<plx:attribute dataTypeName="StructLayoutAttribute" dataTypeQualifier="System.Runtime.InteropServices">
					<plx:passParam>
						<plx:callStatic type="field" name="Auto" dataTypeName="LayoutKind" dataTypeQualifier="System.Runtime.InteropServices" />
					</plx:passParam>
					<plx:passParam>
						<plx:binaryOperator type="assignNamed">
							<plx:left>
								<plx:nameRef type="namedParameter" name="CharSet" />
							</plx:left>
							<plx:right>
								<plx:callStatic type="field" name="Auto" dataTypeName="CharSet" dataTypeQualifier="System.Runtime.InteropServices" />
							</plx:right>
						</plx:binaryOperator>
					</plx:passParam>
				</plx:attribute>
				<plx:derivesFromClass dataTypeName="BlogEntry" />
				<plx:function visibility="public" name=".construct">
					<plx:param name="context" dataTypeName="BlogDemoContext" />
					<plx:param name="blogEntryId" dataTypeName=".i4" />
					<plx:param name="entryTitle" dataTypeName=".string" />
					<plx:param name="entryBody" dataTypeName=".string" />
					<plx:param name="MDYValue" dataTypeName=".date" />
					<plx:param name="userId" dataTypeName="User" />
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_Context" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="context" />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_BlogEntryLabelViaBlogEntryIdCollection" />
						</plx:left>
						<plx:right>
							<plx:callNew dataTypeName="ConstraintEnforcementCollection">
								<plx:passTypeParam dataTypeName="BlogEntry" />
								<plx:passTypeParam dataTypeName="BlogEntryLabel" />
								<plx:passParam>
									<plx:thisKeyword />
								</plx:passParam>
							</plx:callNew>
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_BlogEntryId" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="blogEntryId" />
						</plx:right>
					</plx:assign>
					<plx:callInstance name="OnBlogEntryBlogEntryIdChanged">
						<plx:callObject>
							<plx:nameRef type="parameter" name="context" />
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callInstance>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_EntryTitle" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="entryTitle" />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_EntryBody" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="entryBody" />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_MDYValue" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="MDYValue" />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_UserId" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="userId" />
						</plx:right>
					</plx:assign>
					<plx:callInstance name="OnBlogEntryUserIdChanged">
						<plx:callObject>
							<plx:nameRef type="parameter" name="context" />
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callInstance>
					<plx:callInstance name="Add">
						<plx:callObject>
							<plx:callInstance type="field" name="_BlogEntryList">
								<plx:callObject>
									<plx:nameRef type="parameter" name="context" />
								</plx:callObject>
							</plx:callInstance>
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
					</plx:callInstance>
				</plx:function>
				<plx:field visibility="private" readOnly="true" name="_Context" dataTypeName="BlogDemoContext" />
				<plx:property visibility="public" modifier="sealedOverride" name="Context">
					<plx:returns dataTypeName="BlogDemoContext" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_Context" />
						</plx:return>
					</plx:get>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_BlogEntryId" dataTypeName=".i4" />
				<plx:property visibility="public" modifier="sealedOverride" name="BlogEntryId">
					<plx:returns dataTypeName=".i4" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_BlogEntryId" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:local name="oldValue" dataTypeName=".i4">
							<plx:initialize>
								<plx:callThis type="field" name="_BlogEntryId" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="inequality">
									<plx:left>
										<plx:nameRef name="oldValue" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnBlogEntryBlogEntryIdChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnBlogEntryIdChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_BlogEntryId" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnBlogEntryBlogEntryIdChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnBlogEntryIdChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_EntryTitle" dataTypeName=".string" />
				<plx:property visibility="public" modifier="sealedOverride" name="EntryTitle">
					<plx:returns dataTypeName=".string" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_EntryTitle" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:throw>
								<plx:callNew dataTypeName="ArgumentNullException">
									<plx:passParam>
										<plx:valueKeyword stringize="true" />
									</plx:passParam>
								</plx:callNew>
							</plx:throw>
						</plx:branch>
						<plx:local name="oldValue" dataTypeName=".string">
							<plx:initialize>
								<plx:callThis type="field" name="_EntryTitle" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="booleanAnd">
									<plx:left>
										<plx:binaryOperator type="identityInequality">
											<plx:left>
												<plx:cast type="exceptionCast" dataTypeName=".object">
													<plx:nameRef name="oldValue" />
												</plx:cast>
											</plx:left>
											<plx:right>
												<plx:cast type="exceptionCast" dataTypeName=".object">
													<plx:valueKeyword />
												</plx:cast>
											</plx:right>
										</plx:binaryOperator>
									</plx:left>
									<plx:right>
										<plx:unaryOperator type="booleanNot">
											<plx:callInstance name="Equals">
												<plx:callObject>
													<plx:valueKeyword />
												</plx:callObject>
												<plx:passParam>
													<plx:nameRef name="oldValue" />
												</plx:passParam>
											</plx:callInstance>
										</plx:unaryOperator>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnBlogEntryEntryTitleChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnEntryTitleChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_EntryTitle" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callThis accessor="base" name="OnEntryTitleChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_EntryBody" dataTypeName=".string" />
				<plx:property visibility="public" modifier="sealedOverride" name="EntryBody">
					<plx:returns dataTypeName=".string" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_EntryBody" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:throw>
								<plx:callNew dataTypeName="ArgumentNullException">
									<plx:passParam>
										<plx:valueKeyword stringize="true" />
									</plx:passParam>
								</plx:callNew>
							</plx:throw>
						</plx:branch>
						<plx:local name="oldValue" dataTypeName=".string">
							<plx:initialize>
								<plx:callThis type="field" name="_EntryBody" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="booleanAnd">
									<plx:left>
										<plx:binaryOperator type="identityInequality">
											<plx:left>
												<plx:cast type="exceptionCast" dataTypeName=".object">
													<plx:nameRef name="oldValue" />
												</plx:cast>
											</plx:left>
											<plx:right>
												<plx:cast type="exceptionCast" dataTypeName=".object">
													<plx:valueKeyword />
												</plx:cast>
											</plx:right>
										</plx:binaryOperator>
									</plx:left>
									<plx:right>
										<plx:unaryOperator type="booleanNot">
											<plx:callInstance name="Equals">
												<plx:callObject>
													<plx:valueKeyword />
												</plx:callObject>
												<plx:passParam>
													<plx:nameRef name="oldValue" />
												</plx:passParam>
											</plx:callInstance>
										</plx:unaryOperator>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnBlogEntryEntryBodyChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnEntryBodyChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_EntryBody" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callThis accessor="base" name="OnEntryBodyChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_MDYValue" dataTypeName=".date" />
				<plx:property visibility="public" modifier="sealedOverride" name="MDYValue">
					<plx:returns dataTypeName=".date" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_MDYValue" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:local name="oldValue" dataTypeName=".date">
							<plx:initialize>
								<plx:callThis type="field" name="_MDYValue" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="inequality">
									<plx:left>
										<plx:nameRef name="oldValue" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnBlogEntryMDYValueChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnMDYValueChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_MDYValue" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callThis accessor="base" name="OnMDYValueChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_UserId" dataTypeName="User" />
				<plx:property visibility="public" modifier="sealedOverride" name="UserId">
					<plx:returns dataTypeName="User" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_UserId" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:throw>
								<plx:callNew dataTypeName="ArgumentNullException">
									<plx:passParam>
										<plx:valueKeyword stringize="true" />
									</plx:passParam>
								</plx:callNew>
							</plx:throw>
						</plx:branch>
						<plx:local name="oldValue" dataTypeName="User">
							<plx:initialize>
								<plx:callThis type="field" name="_UserId" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityInequality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:nameRef name="oldValue" />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnBlogEntryUserIdChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnUserIdChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_UserId" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnBlogEntryUserIdChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnUserIdChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_BlogComment" dataTypeName="BlogComment" />
				<plx:property visibility="public" modifier="sealedOverride" name="BlogComment">
					<plx:returns dataTypeName="BlogComment" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_BlogComment" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:local name="oldValue" dataTypeName="BlogComment">
							<plx:initialize>
								<plx:callThis type="field" name="_BlogComment" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityInequality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:nameRef name="oldValue" />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnBlogEntryBlogCommentChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnBlogCommentChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_BlogComment" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnBlogEntryBlogCommentChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnBlogCommentChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_NonCommentEntry" dataTypeName="NonCommentEntry" />
				<plx:property visibility="public" modifier="sealedOverride" name="NonCommentEntry">
					<plx:returns dataTypeName="NonCommentEntry" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_NonCommentEntry" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:local name="oldValue" dataTypeName="NonCommentEntry">
							<plx:initialize>
								<plx:callThis type="field" name="_NonCommentEntry" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityInequality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:nameRef name="oldValue" />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnBlogEntryNonCommentEntryChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnNonCommentEntryChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_NonCommentEntry" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnBlogEntryNonCommentEntryChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnNonCommentEntryChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="true" name="_BlogEntryLabelViaBlogEntryIdCollection" dataTypeName="IEnumerable">
					<plx:passTypeParam dataTypeName="BlogEntryLabel" />
				</plx:field>
				<plx:property visibility="public" modifier="sealedOverride" name="BlogEntryLabelViaBlogEntryIdCollection">
					<plx:returns dataTypeName="IEnumerable">
						<plx:passTypeParam dataTypeName="BlogEntryLabel" />
					</plx:returns>
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_BlogEntryLabelViaBlogEntryIdCollection" />
						</plx:return>
					</plx:get>
				</plx:property>
			</plx:class>
			<plx:pragma type="closeRegion" data="BlogEntry" />
			<plx:pragma type="region" data="User" />
			<plx:function visibility="public" name="CreateUser">
				<plx:interfaceMember memberName="CreateUser" dataTypeName="IBlogDemoContext" />
				<plx:param name="firstName" dataTypeName=".string" />
				<plx:param name="lastName" dataTypeName=".string" />
				<plx:param name="username" dataTypeName=".string" />
				<plx:param name="password" dataTypeName=".string" />
				<plx:returns dataTypeName="User" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="firstName" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="ArgumentNullException">
							<plx:passParam>
								<plx:string>firstName</plx:string>
							</plx:passParam>
						</plx:callNew>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="lastName" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="ArgumentNullException">
							<plx:passParam>
								<plx:string>lastName</plx:string>
							</plx:passParam>
						</plx:callNew>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="username" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="ArgumentNullException">
							<plx:passParam>
								<plx:string>username</plx:string>
							</plx:passParam>
						</plx:callNew>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="password" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="ArgumentNullException">
							<plx:passParam>
								<plx:string>password</plx:string>
							</plx:passParam>
						</plx:callNew>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnUserFirstNameChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="firstName" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="BlogDemoContext">
							<plx:passParam>
								<plx:string>firstName</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnUserLastNameChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="lastName" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="BlogDemoContext">
							<plx:passParam>
								<plx:string>lastName</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnUserUsernameChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="username" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="BlogDemoContext">
							<plx:passParam>
								<plx:string>username</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnUserPasswordChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="password" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="BlogDemoContext">
							<plx:passParam>
								<plx:string>password</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:return>
					<plx:callNew dataTypeName="UserImpl">
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="firstName" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="lastName" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="username" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="password" />
						</plx:passParam>
					</plx:callNew>
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnUserFirstNameChanging">
				<plx:param name="instance" dataTypeName="User" />
				<plx:param name="newValue" dataTypeName=".string" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="instance" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:branch>
						<plx:condition>
							<plx:unaryOperator type="booleanNot">
								<plx:callThis name="OnFirstNameAndLastNameChanging">
									<plx:passParam>
										<plx:nameRef type="parameter" name="instance" />
									</plx:passParam>
									<plx:passParam>
										<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
											<plx:passMemberTypeParam dataTypeName=".string" />
											<plx:passMemberTypeParam dataTypeName=".string" />
											<plx:passParam>
												<plx:nameRef type="parameter" name="newValue" />
											</plx:passParam>
											<plx:passParam>
												<plx:callInstance type="property" name="LastName">
													<plx:callObject>
														<plx:nameRef type="parameter" name="instance" />
													</plx:callObject>
												</plx:callInstance>
											</plx:passParam>
										</plx:callStatic>
									</plx:passParam>
								</plx:callThis>
							</plx:unaryOperator>
						</plx:condition>
						<plx:return>
							<plx:falseKeyword />
						</plx:return>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnUserFirstNameChanged">
				<plx:param name="instance" dataTypeName="User" />
				<plx:param name="oldValue" dataTypeName=".string" />
				<plx:local name="FirstNameAndLastNameOldValueTuple" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".string" />
					<plx:passTypeParam dataTypeName=".string" />
				</plx:local>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="FirstNameAndLastNameOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
								<plx:passMemberTypeParam dataTypeName=".string" />
								<plx:passMemberTypeParam dataTypeName=".string" />
								<plx:passParam>
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:passParam>
								<plx:passParam>
									<plx:callInstance type="property" name="LastName">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
							</plx:callStatic>
						</plx:right>
					</plx:assign>
				</plx:branch>
				<plx:fallbackBranch>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="FirstNameAndLastNameOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:fallbackBranch>
				<plx:callThis name="OnFirstNameAndLastNameChanged">
					<plx:passParam>
						<plx:nameRef type="parameter" name="instance" />
					</plx:passParam>
					<plx:passParam>
						<plx:nameRef name="FirstNameAndLastNameOldValueTuple" />
					</plx:passParam>
					<plx:passParam>
						<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
							<plx:passMemberTypeParam dataTypeName=".string" />
							<plx:passMemberTypeParam dataTypeName=".string" />
							<plx:passParam>
								<plx:callInstance type="property" name="FirstName">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:callInstance type="property" name="LastName">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
						</plx:callStatic>
					</plx:passParam>
				</plx:callThis>
			</plx:function>
			<plx:function visibility="private" name="OnUserLastNameChanging">
				<plx:param name="instance" dataTypeName="User" />
				<plx:param name="newValue" dataTypeName=".string" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="instance" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:branch>
						<plx:condition>
							<plx:unaryOperator type="booleanNot">
								<plx:callThis name="OnFirstNameAndLastNameChanging">
									<plx:passParam>
										<plx:nameRef type="parameter" name="instance" />
									</plx:passParam>
									<plx:passParam>
										<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
											<plx:passMemberTypeParam dataTypeName=".string" />
											<plx:passMemberTypeParam dataTypeName=".string" />
											<plx:passParam>
												<plx:callInstance type="property" name="FirstName">
													<plx:callObject>
														<plx:nameRef type="parameter" name="instance" />
													</plx:callObject>
												</plx:callInstance>
											</plx:passParam>
											<plx:passParam>
												<plx:nameRef type="parameter" name="newValue" />
											</plx:passParam>
										</plx:callStatic>
									</plx:passParam>
								</plx:callThis>
							</plx:unaryOperator>
						</plx:condition>
						<plx:return>
							<plx:falseKeyword />
						</plx:return>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnUserLastNameChanged">
				<plx:param name="instance" dataTypeName="User" />
				<plx:param name="oldValue" dataTypeName=".string" />
				<plx:local name="FirstNameAndLastNameOldValueTuple" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName=".string" />
					<plx:passTypeParam dataTypeName=".string" />
				</plx:local>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="FirstNameAndLastNameOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
								<plx:passMemberTypeParam dataTypeName=".string" />
								<plx:passMemberTypeParam dataTypeName=".string" />
								<plx:passParam>
									<plx:callInstance type="property" name="FirstName">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:passParam>
							</plx:callStatic>
						</plx:right>
					</plx:assign>
				</plx:branch>
				<plx:fallbackBranch>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="FirstNameAndLastNameOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:fallbackBranch>
				<plx:callThis name="OnFirstNameAndLastNameChanged">
					<plx:passParam>
						<plx:nameRef type="parameter" name="instance" />
					</plx:passParam>
					<plx:passParam>
						<plx:nameRef name="FirstNameAndLastNameOldValueTuple" />
					</plx:passParam>
					<plx:passParam>
						<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
							<plx:passMemberTypeParam dataTypeName=".string" />
							<plx:passMemberTypeParam dataTypeName=".string" />
							<plx:passParam>
								<plx:callInstance type="property" name="FirstName">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:callInstance type="property" name="LastName">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
						</plx:callStatic>
					</plx:passParam>
				</plx:callThis>
			</plx:function>
			<plx:function visibility="private" name="OnUserUsernameChanging">
				<plx:param name="instance" dataTypeName="User" />
				<plx:param name="newValue" dataTypeName=".string" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnUserPasswordChanging">
				<plx:param name="instance" dataTypeName="User" />
				<plx:param name="newValue" dataTypeName=".string" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnUserBlogEntryViaUserIdCollectionAdding">
				<plx:param name="instance" dataTypeName="User" />
				<plx:param name="item" dataTypeName="BlogEntry" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:thisKeyword />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="Context">
										<plx:callObject>
											<plx:nameRef type="parameter" name="item" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetDifferentContextsException" dataTypeName="BlogDemoContext">
							<plx:passParam>
								<plx:string data="item" />
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnUserBlogEntryViaUserIdCollectionAdded">
				<plx:param name="instance" dataTypeName="User" />
				<plx:param name="item" dataTypeName="BlogEntry" />
				<plx:assign>
					<plx:left>
						<plx:callInstance type="property" name="UserId">
							<plx:callObject>
								<plx:nameRef type="parameter" name="item" />
							</plx:callObject>
						</plx:callInstance>
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="instance" />
					</plx:right>
				</plx:assign>
			</plx:function>
			<plx:function visibility="private" name="OnUserBlogEntryViaUserIdCollectionRemoved">
				<plx:param name="instance" dataTypeName="User" />
				<plx:param name="item" dataTypeName="BlogEntry" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="UserId">
										<plx:callObject>
											<plx:nameRef type="parameter" name="item" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="instance" />
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:callInstance type="property" name="UserId">
								<plx:callObject>
									<plx:nameRef type="parameter" name="item" />
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:branch>
			</plx:function>
			<plx:field visibility="private" readOnly="true" name="_UserList" dataTypeName="List">
				<plx:passTypeParam dataTypeName="User" />
			</plx:field>
			<plx:field visibility="private" readOnly="true" name="_UserReadOnlyCollection" dataTypeName="ReadOnlyCollection">
				<plx:passTypeParam dataTypeName="User" />
			</plx:field>
			<plx:property visibility="public" name="UserCollection">
				<plx:interfaceMember memberName="UserCollection" dataTypeName="IBlogDemoContext" />
				<plx:returns dataTypeName="IEnumerable">
					<plx:passTypeParam dataTypeName="User" />
				</plx:returns>
				<plx:get>
					<plx:return>
						<plx:callThis type="field" name="_UserReadOnlyCollection" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:class visibility="private" modifier="sealed" name="UserImpl">
				<plx:leadingInfo>
					<plx:pragma type="region" data="UserImpl" />
				</plx:leadingInfo>
				<plx:trailingInfo>
					<plx:pragma type="closeRegion" data="UserImpl" />
				</plx:trailingInfo>
				<plx:attribute dataTypeName="StructLayoutAttribute" dataTypeQualifier="System.Runtime.InteropServices">
					<plx:passParam>
						<plx:callStatic type="field" name="Auto" dataTypeName="LayoutKind" dataTypeQualifier="System.Runtime.InteropServices" />
					</plx:passParam>
					<plx:passParam>
						<plx:binaryOperator type="assignNamed">
							<plx:left>
								<plx:nameRef type="namedParameter" name="CharSet" />
							</plx:left>
							<plx:right>
								<plx:callStatic type="field" name="Auto" dataTypeName="CharSet" dataTypeQualifier="System.Runtime.InteropServices" />
							</plx:right>
						</plx:binaryOperator>
					</plx:passParam>
				</plx:attribute>
				<plx:derivesFromClass dataTypeName="User" />
				<plx:function visibility="public" name=".construct">
					<plx:param name="context" dataTypeName="BlogDemoContext" />
					<plx:param name="firstName" dataTypeName=".string" />
					<plx:param name="lastName" dataTypeName=".string" />
					<plx:param name="username" dataTypeName=".string" />
					<plx:param name="password" dataTypeName=".string" />
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_Context" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="context" />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_BlogEntryViaUserIdCollection" />
						</plx:left>
						<plx:right>
							<plx:callNew dataTypeName="ConstraintEnforcementCollection">
								<plx:passTypeParam dataTypeName="User" />
								<plx:passTypeParam dataTypeName="BlogEntry" />
								<plx:passParam>
									<plx:thisKeyword />
								</plx:passParam>
							</plx:callNew>
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_FirstName" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="firstName" />
						</plx:right>
					</plx:assign>
					<plx:callInstance name="OnUserFirstNameChanged">
						<plx:callObject>
							<plx:nameRef type="parameter" name="context" />
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callInstance>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_LastName" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="lastName" />
						</plx:right>
					</plx:assign>
					<plx:callInstance name="OnUserLastNameChanged">
						<plx:callObject>
							<plx:nameRef type="parameter" name="context" />
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callInstance>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_Username" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="username" />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_Password" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="password" />
						</plx:right>
					</plx:assign>
					<plx:callInstance name="Add">
						<plx:callObject>
							<plx:callInstance type="field" name="_UserList">
								<plx:callObject>
									<plx:nameRef type="parameter" name="context" />
								</plx:callObject>
							</plx:callInstance>
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
					</plx:callInstance>
				</plx:function>
				<plx:field visibility="private" readOnly="true" name="_Context" dataTypeName="BlogDemoContext" />
				<plx:property visibility="public" modifier="sealedOverride" name="Context">
					<plx:returns dataTypeName="BlogDemoContext" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_Context" />
						</plx:return>
					</plx:get>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_FirstName" dataTypeName=".string" />
				<plx:property visibility="public" modifier="sealedOverride" name="FirstName">
					<plx:returns dataTypeName=".string" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_FirstName" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:throw>
								<plx:callNew dataTypeName="ArgumentNullException">
									<plx:passParam>
										<plx:valueKeyword stringize="true" />
									</plx:passParam>
								</plx:callNew>
							</plx:throw>
						</plx:branch>
						<plx:local name="oldValue" dataTypeName=".string">
							<plx:initialize>
								<plx:callThis type="field" name="_FirstName" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="booleanAnd">
									<plx:left>
										<plx:binaryOperator type="identityInequality">
											<plx:left>
												<plx:cast type="exceptionCast" dataTypeName=".object">
													<plx:nameRef name="oldValue" />
												</plx:cast>
											</plx:left>
											<plx:right>
												<plx:cast type="exceptionCast" dataTypeName=".object">
													<plx:valueKeyword />
												</plx:cast>
											</plx:right>
										</plx:binaryOperator>
									</plx:left>
									<plx:right>
										<plx:unaryOperator type="booleanNot">
											<plx:callInstance name="Equals">
												<plx:callObject>
													<plx:valueKeyword />
												</plx:callObject>
												<plx:passParam>
													<plx:nameRef name="oldValue" />
												</plx:passParam>
											</plx:callInstance>
										</plx:unaryOperator>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnUserFirstNameChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnFirstNameChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_FirstName" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnUserFirstNameChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnFirstNameChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_LastName" dataTypeName=".string" />
				<plx:property visibility="public" modifier="sealedOverride" name="LastName">
					<plx:returns dataTypeName=".string" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_LastName" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:throw>
								<plx:callNew dataTypeName="ArgumentNullException">
									<plx:passParam>
										<plx:valueKeyword stringize="true" />
									</plx:passParam>
								</plx:callNew>
							</plx:throw>
						</plx:branch>
						<plx:local name="oldValue" dataTypeName=".string">
							<plx:initialize>
								<plx:callThis type="field" name="_LastName" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="booleanAnd">
									<plx:left>
										<plx:binaryOperator type="identityInequality">
											<plx:left>
												<plx:cast type="exceptionCast" dataTypeName=".object">
													<plx:nameRef name="oldValue" />
												</plx:cast>
											</plx:left>
											<plx:right>
												<plx:cast type="exceptionCast" dataTypeName=".object">
													<plx:valueKeyword />
												</plx:cast>
											</plx:right>
										</plx:binaryOperator>
									</plx:left>
									<plx:right>
										<plx:unaryOperator type="booleanNot">
											<plx:callInstance name="Equals">
												<plx:callObject>
													<plx:valueKeyword />
												</plx:callObject>
												<plx:passParam>
													<plx:nameRef name="oldValue" />
												</plx:passParam>
											</plx:callInstance>
										</plx:unaryOperator>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnUserLastNameChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnLastNameChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_LastName" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnUserLastNameChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnLastNameChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_Username" dataTypeName=".string" />
				<plx:property visibility="public" modifier="sealedOverride" name="Username">
					<plx:returns dataTypeName=".string" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_Username" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:throw>
								<plx:callNew dataTypeName="ArgumentNullException">
									<plx:passParam>
										<plx:valueKeyword stringize="true" />
									</plx:passParam>
								</plx:callNew>
							</plx:throw>
						</plx:branch>
						<plx:local name="oldValue" dataTypeName=".string">
							<plx:initialize>
								<plx:callThis type="field" name="_Username" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="booleanAnd">
									<plx:left>
										<plx:binaryOperator type="identityInequality">
											<plx:left>
												<plx:cast type="exceptionCast" dataTypeName=".object">
													<plx:nameRef name="oldValue" />
												</plx:cast>
											</plx:left>
											<plx:right>
												<plx:cast type="exceptionCast" dataTypeName=".object">
													<plx:valueKeyword />
												</plx:cast>
											</plx:right>
										</plx:binaryOperator>
									</plx:left>
									<plx:right>
										<plx:unaryOperator type="booleanNot">
											<plx:callInstance name="Equals">
												<plx:callObject>
													<plx:valueKeyword />
												</plx:callObject>
												<plx:passParam>
													<plx:nameRef name="oldValue" />
												</plx:passParam>
											</plx:callInstance>
										</plx:unaryOperator>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnUserUsernameChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnUsernameChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_Username" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callThis accessor="base" name="OnUsernameChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_Password" dataTypeName=".string" />
				<plx:property visibility="public" modifier="sealedOverride" name="Password">
					<plx:returns dataTypeName=".string" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_Password" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:throw>
								<plx:callNew dataTypeName="ArgumentNullException">
									<plx:passParam>
										<plx:valueKeyword stringize="true" />
									</plx:passParam>
								</plx:callNew>
							</plx:throw>
						</plx:branch>
						<plx:local name="oldValue" dataTypeName=".string">
							<plx:initialize>
								<plx:callThis type="field" name="_Password" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="booleanAnd">
									<plx:left>
										<plx:binaryOperator type="identityInequality">
											<plx:left>
												<plx:cast type="exceptionCast" dataTypeName=".object">
													<plx:nameRef name="oldValue" />
												</plx:cast>
											</plx:left>
											<plx:right>
												<plx:cast type="exceptionCast" dataTypeName=".object">
													<plx:valueKeyword />
												</plx:cast>
											</plx:right>
										</plx:binaryOperator>
									</plx:left>
									<plx:right>
										<plx:unaryOperator type="booleanNot">
											<plx:callInstance name="Equals">
												<plx:callObject>
													<plx:valueKeyword />
												</plx:callObject>
												<plx:passParam>
													<plx:nameRef name="oldValue" />
												</plx:passParam>
											</plx:callInstance>
										</plx:unaryOperator>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnUserPasswordChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnPasswordChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_Password" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callThis accessor="base" name="OnPasswordChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="true" name="_BlogEntryViaUserIdCollection" dataTypeName="IEnumerable">
					<plx:passTypeParam dataTypeName="BlogEntry" />
				</plx:field>
				<plx:property visibility="public" modifier="sealedOverride" name="BlogEntryViaUserIdCollection">
					<plx:returns dataTypeName="IEnumerable">
						<plx:passTypeParam dataTypeName="BlogEntry" />
					</plx:returns>
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_BlogEntryViaUserIdCollection" />
						</plx:return>
					</plx:get>
				</plx:property>
			</plx:class>
			<plx:pragma type="closeRegion" data="User" />
			<plx:pragma type="region" data="BlogComment" />
			<plx:function visibility="public" name="CreateBlogComment">
				<plx:interfaceMember memberName="CreateBlogComment" dataTypeName="IBlogDemoContext" />
				<plx:param name="parentEntryId" dataTypeName="NonCommentEntry" />
				<plx:param name="blogEntry" dataTypeName="BlogEntry" />
				<plx:returns dataTypeName="BlogComment" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="parentEntryId" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="ArgumentNullException">
							<plx:passParam>
								<plx:string>parentEntryId</plx:string>
							</plx:passParam>
						</plx:callNew>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="blogEntry" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="ArgumentNullException">
							<plx:passParam>
								<plx:string>blogEntry</plx:string>
							</plx:passParam>
						</plx:callNew>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnBlogCommentParentEntryIdChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="parentEntryId" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="BlogDemoContext">
							<plx:passParam>
								<plx:string>parentEntryId</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnBlogCommentBlogEntryChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="blogEntry" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="BlogDemoContext">
							<plx:passParam>
								<plx:string>blogEntry</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:return>
					<plx:callNew dataTypeName="BlogCommentImpl">
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="parentEntryId" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="blogEntry" />
						</plx:passParam>
					</plx:callNew>
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnBlogCommentParentEntryIdChanging">
				<plx:param name="instance" dataTypeName="BlogComment" />
				<plx:param name="newValue" dataTypeName="NonCommentEntry" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:thisKeyword />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="Context">
										<plx:callObject>
											<plx:nameRef type="parameter" name="newValue" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetDifferentContextsException" dataTypeName="BlogDemoContext" />
					</plx:throw>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnBlogCommentParentEntryIdChanged">
				<plx:param name="instance" dataTypeName="BlogComment" />
				<plx:param name="oldValue" dataTypeName="NonCommentEntry" />
				<plx:callInstance name="Add">
					<plx:callObject>
						<plx:cast type="exceptionCast" dataTypeName="ICollection">
							<plx:passTypeParam dataTypeName="BlogComment" />
							<plx:callInstance type="property" name="BlogCommentViaParentEntryIdCollection">
								<plx:callObject>
									<plx:callInstance type="property" name="ParentEntryId">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:callObject>
							</plx:callInstance>
						</plx:cast>
					</plx:callObject>
					<plx:passParam>
						<plx:nameRef type="parameter" name="instance" />
					</plx:passParam>
				</plx:callInstance>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:callInstance name="Remove">
						<plx:callObject>
							<plx:cast type="exceptionCast" dataTypeName="ICollection">
								<plx:passTypeParam dataTypeName="BlogComment" />
								<plx:callInstance type="property" name="BlogCommentViaParentEntryIdCollection">
									<plx:callObject>
										<plx:nameRef type="parameter" name="oldValue" />
									</plx:callObject>
								</plx:callInstance>
							</plx:cast>
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="instance" />
						</plx:passParam>
					</plx:callInstance>
				</plx:branch>
			</plx:function>
			<plx:function visibility="private" name="OnBlogCommentBlogEntryChanging">
				<plx:param name="instance" dataTypeName="BlogComment" />
				<plx:param name="newValue" dataTypeName="BlogEntry" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:thisKeyword />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="Context">
										<plx:callObject>
											<plx:nameRef type="parameter" name="newValue" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetDifferentContextsException" dataTypeName="BlogDemoContext" />
					</plx:throw>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnBlogCommentBlogEntryChanged">
				<plx:param name="instance" dataTypeName="BlogComment" />
				<plx:param name="oldValue" dataTypeName="BlogEntry" />
				<plx:assign>
					<plx:left>
						<plx:callInstance type="property" name="BlogComment">
							<plx:callObject>
								<plx:callInstance type="property" name="BlogEntry">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:callObject>
						</plx:callInstance>
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="instance" />
					</plx:right>
				</plx:assign>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:callInstance type="property" name="BlogComment">
								<plx:callObject>
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:branch>
			</plx:function>
			<plx:field visibility="private" readOnly="true" name="_BlogCommentList" dataTypeName="List">
				<plx:passTypeParam dataTypeName="BlogComment" />
			</plx:field>
			<plx:field visibility="private" readOnly="true" name="_BlogCommentReadOnlyCollection" dataTypeName="ReadOnlyCollection">
				<plx:passTypeParam dataTypeName="BlogComment" />
			</plx:field>
			<plx:property visibility="public" name="BlogCommentCollection">
				<plx:interfaceMember memberName="BlogCommentCollection" dataTypeName="IBlogDemoContext" />
				<plx:returns dataTypeName="IEnumerable">
					<plx:passTypeParam dataTypeName="BlogComment" />
				</plx:returns>
				<plx:get>
					<plx:return>
						<plx:callThis type="field" name="_BlogCommentReadOnlyCollection" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:class visibility="private" modifier="sealed" name="BlogCommentImpl">
				<plx:leadingInfo>
					<plx:pragma type="region" data="BlogCommentImpl" />
				</plx:leadingInfo>
				<plx:trailingInfo>
					<plx:pragma type="closeRegion" data="BlogCommentImpl" />
				</plx:trailingInfo>
				<plx:attribute dataTypeName="StructLayoutAttribute" dataTypeQualifier="System.Runtime.InteropServices">
					<plx:passParam>
						<plx:callStatic type="field" name="Auto" dataTypeName="LayoutKind" dataTypeQualifier="System.Runtime.InteropServices" />
					</plx:passParam>
					<plx:passParam>
						<plx:binaryOperator type="assignNamed">
							<plx:left>
								<plx:nameRef type="namedParameter" name="CharSet" />
							</plx:left>
							<plx:right>
								<plx:callStatic type="field" name="Auto" dataTypeName="CharSet" dataTypeQualifier="System.Runtime.InteropServices" />
							</plx:right>
						</plx:binaryOperator>
					</plx:passParam>
				</plx:attribute>
				<plx:derivesFromClass dataTypeName="BlogComment" />
				<plx:function visibility="public" name=".construct">
					<plx:param name="context" dataTypeName="BlogDemoContext" />
					<plx:param name="parentEntryId" dataTypeName="NonCommentEntry" />
					<plx:param name="blogEntry" dataTypeName="BlogEntry" />
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_Context" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="context" />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_ParentEntryId" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="parentEntryId" />
						</plx:right>
					</plx:assign>
					<plx:callInstance name="OnBlogCommentParentEntryIdChanged">
						<plx:callObject>
							<plx:nameRef type="parameter" name="context" />
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callInstance>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_BlogEntry" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="blogEntry" />
						</plx:right>
					</plx:assign>
					<plx:callInstance name="OnBlogCommentBlogEntryChanged">
						<plx:callObject>
							<plx:nameRef type="parameter" name="context" />
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callInstance>
					<plx:callInstance name="Add">
						<plx:callObject>
							<plx:callInstance type="field" name="_BlogCommentList">
								<plx:callObject>
									<plx:nameRef type="parameter" name="context" />
								</plx:callObject>
							</plx:callInstance>
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
					</plx:callInstance>
				</plx:function>
				<plx:field visibility="private" readOnly="true" name="_Context" dataTypeName="BlogDemoContext" />
				<plx:property visibility="public" modifier="sealedOverride" name="Context">
					<plx:returns dataTypeName="BlogDemoContext" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_Context" />
						</plx:return>
					</plx:get>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_ParentEntryId" dataTypeName="NonCommentEntry" />
				<plx:property visibility="public" modifier="sealedOverride" name="ParentEntryId">
					<plx:returns dataTypeName="NonCommentEntry" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_ParentEntryId" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:throw>
								<plx:callNew dataTypeName="ArgumentNullException">
									<plx:passParam>
										<plx:valueKeyword stringize="true" />
									</plx:passParam>
								</plx:callNew>
							</plx:throw>
						</plx:branch>
						<plx:local name="oldValue" dataTypeName="NonCommentEntry">
							<plx:initialize>
								<plx:callThis type="field" name="_ParentEntryId" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityInequality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:nameRef name="oldValue" />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnBlogCommentParentEntryIdChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnParentEntryIdChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_ParentEntryId" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnBlogCommentParentEntryIdChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnParentEntryIdChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_BlogEntry" dataTypeName="BlogEntry" />
				<plx:property visibility="public" modifier="sealedOverride" name="BlogEntry">
					<plx:returns dataTypeName="BlogEntry" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_BlogEntry" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:throw>
								<plx:callNew dataTypeName="ArgumentNullException">
									<plx:passParam>
										<plx:valueKeyword stringize="true" />
									</plx:passParam>
								</plx:callNew>
							</plx:throw>
						</plx:branch>
						<plx:local name="oldValue" dataTypeName="BlogEntry">
							<plx:initialize>
								<plx:callThis type="field" name="_BlogEntry" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityInequality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:nameRef name="oldValue" />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnBlogCommentBlogEntryChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnBlogEntryChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_BlogEntry" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnBlogCommentBlogEntryChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnBlogEntryChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
			</plx:class>
			<plx:pragma type="closeRegion" data="BlogComment" />
			<plx:pragma type="region" data="BlogLabel" />
			<plx:function visibility="public" name="CreateBlogLabel">
				<plx:interfaceMember memberName="CreateBlogLabel" dataTypeName="IBlogDemoContext" />
				<plx:returns dataTypeName="BlogLabel" />
				<plx:return>
					<plx:callNew dataTypeName="BlogLabelImpl">
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
					</plx:callNew>
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnBlogLabelTitleChanging">
				<plx:param name="instance" dataTypeName="BlogLabel" />
				<plx:param name="newValue" dataTypeName=".string" />
				<plx:returns dataTypeName=".boolean" />
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnBlogLabelBlogEntryLabelViaBlogLabelIdCollectionAdding">
				<plx:param name="instance" dataTypeName="BlogLabel" />
				<plx:param name="item" dataTypeName="BlogEntryLabel" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:thisKeyword />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="Context">
										<plx:callObject>
											<plx:nameRef type="parameter" name="item" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetDifferentContextsException" dataTypeName="BlogDemoContext">
							<plx:passParam>
								<plx:string data="item" />
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnBlogLabelBlogEntryLabelViaBlogLabelIdCollectionAdded">
				<plx:param name="instance" dataTypeName="BlogLabel" />
				<plx:param name="item" dataTypeName="BlogEntryLabel" />
				<plx:assign>
					<plx:left>
						<plx:callInstance type="property" name="BlogLabelId">
							<plx:callObject>
								<plx:nameRef type="parameter" name="item" />
							</plx:callObject>
						</plx:callInstance>
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="instance" />
					</plx:right>
				</plx:assign>
			</plx:function>
			<plx:function visibility="private" name="OnBlogLabelBlogEntryLabelViaBlogLabelIdCollectionRemoved">
				<plx:param name="instance" dataTypeName="BlogLabel" />
				<plx:param name="item" dataTypeName="BlogEntryLabel" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="BlogLabelId">
										<plx:callObject>
											<plx:nameRef type="parameter" name="item" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="instance" />
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:callInstance type="property" name="BlogLabelId">
								<plx:callObject>
									<plx:nameRef type="parameter" name="item" />
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:branch>
			</plx:function>
			<plx:field visibility="private" readOnly="true" name="_BlogLabelList" dataTypeName="List">
				<plx:passTypeParam dataTypeName="BlogLabel" />
			</plx:field>
			<plx:field visibility="private" readOnly="true" name="_BlogLabelReadOnlyCollection" dataTypeName="ReadOnlyCollection">
				<plx:passTypeParam dataTypeName="BlogLabel" />
			</plx:field>
			<plx:property visibility="public" name="BlogLabelCollection">
				<plx:interfaceMember memberName="BlogLabelCollection" dataTypeName="IBlogDemoContext" />
				<plx:returns dataTypeName="IEnumerable">
					<plx:passTypeParam dataTypeName="BlogLabel" />
				</plx:returns>
				<plx:get>
					<plx:return>
						<plx:callThis type="field" name="_BlogLabelReadOnlyCollection" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:class visibility="private" modifier="sealed" name="BlogLabelImpl">
				<plx:leadingInfo>
					<plx:pragma type="region" data="BlogLabelImpl" />
				</plx:leadingInfo>
				<plx:trailingInfo>
					<plx:pragma type="closeRegion" data="BlogLabelImpl" />
				</plx:trailingInfo>
				<plx:attribute dataTypeName="StructLayoutAttribute" dataTypeQualifier="System.Runtime.InteropServices">
					<plx:passParam>
						<plx:callStatic type="field" name="Auto" dataTypeName="LayoutKind" dataTypeQualifier="System.Runtime.InteropServices" />
					</plx:passParam>
					<plx:passParam>
						<plx:binaryOperator type="assignNamed">
							<plx:left>
								<plx:nameRef type="namedParameter" name="CharSet" />
							</plx:left>
							<plx:right>
								<plx:callStatic type="field" name="Auto" dataTypeName="CharSet" dataTypeQualifier="System.Runtime.InteropServices" />
							</plx:right>
						</plx:binaryOperator>
					</plx:passParam>
				</plx:attribute>
				<plx:derivesFromClass dataTypeName="BlogLabel" />
				<plx:function visibility="public" name=".construct">
					<plx:param name="context" dataTypeName="BlogDemoContext" />
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_Context" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="context" />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_BlogEntryLabelViaBlogLabelIdCollection" />
						</plx:left>
						<plx:right>
							<plx:callNew dataTypeName="ConstraintEnforcementCollection">
								<plx:passTypeParam dataTypeName="BlogLabel" />
								<plx:passTypeParam dataTypeName="BlogEntryLabel" />
								<plx:passParam>
									<plx:thisKeyword />
								</plx:passParam>
							</plx:callNew>
						</plx:right>
					</plx:assign>
					<plx:callInstance name="Add">
						<plx:callObject>
							<plx:callInstance type="field" name="_BlogLabelList">
								<plx:callObject>
									<plx:nameRef type="parameter" name="context" />
								</plx:callObject>
							</plx:callInstance>
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
					</plx:callInstance>
				</plx:function>
				<plx:field visibility="private" readOnly="true" name="_Context" dataTypeName="BlogDemoContext" />
				<plx:property visibility="public" modifier="sealedOverride" name="Context">
					<plx:returns dataTypeName="BlogDemoContext" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_Context" />
						</plx:return>
					</plx:get>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_Title" dataTypeName=".string" />
				<plx:property visibility="public" modifier="sealedOverride" name="Title">
					<plx:returns dataTypeName=".string" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_Title" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:local name="oldValue" dataTypeName=".string">
							<plx:initialize>
								<plx:callThis type="field" name="_Title" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:unaryOperator type="booleanNot">
									<plx:callStatic name="Equals" dataTypeName=".object">
										<plx:passParam>
											<plx:nameRef name="oldValue" />
										</plx:passParam>
										<plx:passParam>
											<plx:valueKeyword />
										</plx:passParam>
									</plx:callStatic>
								</plx:unaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnBlogLabelTitleChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnTitleChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_Title" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callThis accessor="base" name="OnTitleChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="true" name="_BlogEntryLabelViaBlogLabelIdCollection" dataTypeName="IEnumerable">
					<plx:passTypeParam dataTypeName="BlogEntryLabel" />
				</plx:field>
				<plx:property visibility="public" modifier="sealedOverride" name="BlogEntryLabelViaBlogLabelIdCollection">
					<plx:returns dataTypeName="IEnumerable">
						<plx:passTypeParam dataTypeName="BlogEntryLabel" />
					</plx:returns>
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_BlogEntryLabelViaBlogLabelIdCollection" />
						</plx:return>
					</plx:get>
				</plx:property>
			</plx:class>
			<plx:pragma type="closeRegion" data="BlogLabel" />
			<plx:pragma type="region" data="BlogEntryLabel" />
			<plx:function visibility="public" name="CreateBlogEntryLabel">
				<plx:interfaceMember memberName="CreateBlogEntryLabel" dataTypeName="IBlogDemoContext" />
				<plx:param name="blogEntryId" dataTypeName="BlogEntry" />
				<plx:param name="blogLabelId" dataTypeName="BlogLabel" />
				<plx:returns dataTypeName="BlogEntryLabel" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="blogEntryId" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="ArgumentNullException">
							<plx:passParam>
								<plx:string>blogEntryId</plx:string>
							</plx:passParam>
						</plx:callNew>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="blogLabelId" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="ArgumentNullException">
							<plx:passParam>
								<plx:string>blogLabelId</plx:string>
							</plx:passParam>
						</plx:callNew>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnBlogEntryLabelBlogEntryIdChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="blogEntryId" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="BlogDemoContext">
							<plx:passParam>
								<plx:string>blogEntryId</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnBlogEntryLabelBlogLabelIdChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="blogLabelId" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="BlogDemoContext">
							<plx:passParam>
								<plx:string>blogLabelId</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:return>
					<plx:callNew dataTypeName="BlogEntryLabelImpl">
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="blogEntryId" />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="blogLabelId" />
						</plx:passParam>
					</plx:callNew>
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnBlogEntryLabelBlogEntryIdChanging">
				<plx:param name="instance" dataTypeName="BlogEntryLabel" />
				<plx:param name="newValue" dataTypeName="BlogEntry" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:thisKeyword />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="Context">
										<plx:callObject>
											<plx:nameRef type="parameter" name="newValue" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetDifferentContextsException" dataTypeName="BlogDemoContext" />
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="instance" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:branch>
						<plx:condition>
							<plx:unaryOperator type="booleanNot">
								<plx:callThis name="OnBlogEntryIdAndBlogLabelIdChanging">
									<plx:passParam>
										<plx:nameRef type="parameter" name="instance" />
									</plx:passParam>
									<plx:passParam>
										<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
											<plx:passMemberTypeParam dataTypeName="BlogEntry" />
											<plx:passMemberTypeParam dataTypeName="BlogLabel" />
											<plx:passParam>
												<plx:nameRef type="parameter" name="newValue" />
											</plx:passParam>
											<plx:passParam>
												<plx:callInstance type="property" name="BlogLabelId">
													<plx:callObject>
														<plx:nameRef type="parameter" name="instance" />
													</plx:callObject>
												</plx:callInstance>
											</plx:passParam>
										</plx:callStatic>
									</plx:passParam>
								</plx:callThis>
							</plx:unaryOperator>
						</plx:condition>
						<plx:return>
							<plx:falseKeyword />
						</plx:return>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnBlogEntryLabelBlogEntryIdChanged">
				<plx:param name="instance" dataTypeName="BlogEntryLabel" />
				<plx:param name="oldValue" dataTypeName="BlogEntry" />
				<plx:callInstance name="Add">
					<plx:callObject>
						<plx:cast type="exceptionCast" dataTypeName="ICollection">
							<plx:passTypeParam dataTypeName="BlogEntryLabel" />
							<plx:callInstance type="property" name="BlogEntryLabelViaBlogEntryIdCollection">
								<plx:callObject>
									<plx:callInstance type="property" name="BlogEntryId">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:callObject>
							</plx:callInstance>
						</plx:cast>
					</plx:callObject>
					<plx:passParam>
						<plx:nameRef type="parameter" name="instance" />
					</plx:passParam>
				</plx:callInstance>
				<plx:local name="BlogEntryIdAndBlogLabelIdOldValueTuple" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="BlogEntry" />
					<plx:passTypeParam dataTypeName="BlogLabel" />
				</plx:local>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:callInstance name="Remove">
						<plx:callObject>
							<plx:cast type="exceptionCast" dataTypeName="ICollection">
								<plx:passTypeParam dataTypeName="BlogEntryLabel" />
								<plx:callInstance type="property" name="BlogEntryLabelViaBlogEntryIdCollection">
									<plx:callObject>
										<plx:nameRef type="parameter" name="oldValue" />
									</plx:callObject>
								</plx:callInstance>
							</plx:cast>
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="instance" />
						</plx:passParam>
					</plx:callInstance>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="BlogEntryIdAndBlogLabelIdOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
								<plx:passMemberTypeParam dataTypeName="BlogEntry" />
								<plx:passMemberTypeParam dataTypeName="BlogLabel" />
								<plx:passParam>
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:passParam>
								<plx:passParam>
									<plx:callInstance type="property" name="BlogLabelId">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
							</plx:callStatic>
						</plx:right>
					</plx:assign>
				</plx:branch>
				<plx:fallbackBranch>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="BlogEntryIdAndBlogLabelIdOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:fallbackBranch>
				<plx:callThis name="OnBlogEntryIdAndBlogLabelIdChanged">
					<plx:passParam>
						<plx:nameRef type="parameter" name="instance" />
					</plx:passParam>
					<plx:passParam>
						<plx:nameRef name="BlogEntryIdAndBlogLabelIdOldValueTuple" />
					</plx:passParam>
					<plx:passParam>
						<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
							<plx:passMemberTypeParam dataTypeName="BlogEntry" />
							<plx:passMemberTypeParam dataTypeName="BlogLabel" />
							<plx:passParam>
								<plx:callInstance type="property" name="BlogEntryId">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:callInstance type="property" name="BlogLabelId">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
						</plx:callStatic>
					</plx:passParam>
				</plx:callThis>
			</plx:function>
			<plx:function visibility="private" name="OnBlogEntryLabelBlogLabelIdChanging">
				<plx:param name="instance" dataTypeName="BlogEntryLabel" />
				<plx:param name="newValue" dataTypeName="BlogLabel" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:thisKeyword />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="Context">
										<plx:callObject>
											<plx:nameRef type="parameter" name="newValue" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetDifferentContextsException" dataTypeName="BlogDemoContext" />
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="instance" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:branch>
						<plx:condition>
							<plx:unaryOperator type="booleanNot">
								<plx:callThis name="OnBlogEntryIdAndBlogLabelIdChanging">
									<plx:passParam>
										<plx:nameRef type="parameter" name="instance" />
									</plx:passParam>
									<plx:passParam>
										<plx:callStatic name="CreateTuple" dataTypeName="Tuple">
											<plx:passMemberTypeParam dataTypeName="BlogEntry" />
											<plx:passMemberTypeParam dataTypeName="BlogLabel" />
											<plx:passParam>
												<plx:callInstance type="property" name="BlogEntryId">
													<plx:callObject>
														<plx:nameRef type="parameter" name="instance" />
													</plx:callObject>
												</plx:callInstance>
											</plx:passParam>
											<plx:passParam>
												<plx:nameRef type="parameter" name="newValue" />
											</plx:passParam>
										</plx:callStatic>
									</plx:passParam>
								</plx:callThis>
							</plx:unaryOperator>
						</plx:condition>
						<plx:return>
							<plx:falseKeyword />
						</plx:return>
					</plx:branch>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnBlogEntryLabelBlogLabelIdChanged">
				<plx:param name="instance" dataTypeName="BlogEntryLabel" />
				<plx:param name="oldValue" dataTypeName="BlogLabel" />
				<plx:callInstance name="Add">
					<plx:callObject>
						<plx:cast type="exceptionCast" dataTypeName="ICollection">
							<plx:passTypeParam dataTypeName="BlogEntryLabel" />
							<plx:callInstance type="property" name="BlogEntryLabelViaBlogLabelIdCollection">
								<plx:callObject>
									<plx:callInstance type="property" name="BlogLabelId">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:callObject>
							</plx:callInstance>
						</plx:cast>
					</plx:callObject>
					<plx:passParam>
						<plx:nameRef type="parameter" name="instance" />
					</plx:passParam>
				</plx:callInstance>
				<plx:local name="BlogEntryIdAndBlogLabelIdOldValueTuple" dataTypeName="Tuple">
					<plx:passTypeParam dataTypeName="BlogEntry" />
					<plx:passTypeParam dataTypeName="BlogLabel" />
				</plx:local>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:callInstance name="Remove">
						<plx:callObject>
							<plx:cast type="exceptionCast" dataTypeName="ICollection">
								<plx:passTypeParam dataTypeName="BlogEntryLabel" />
								<plx:callInstance type="property" name="BlogEntryLabelViaBlogLabelIdCollection">
									<plx:callObject>
										<plx:nameRef type="parameter" name="oldValue" />
									</plx:callObject>
								</plx:callInstance>
							</plx:cast>
						</plx:callObject>
						<plx:passParam>
							<plx:nameRef type="parameter" name="instance" />
						</plx:passParam>
					</plx:callInstance>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="BlogEntryIdAndBlogLabelIdOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
								<plx:passMemberTypeParam dataTypeName="BlogEntry" />
								<plx:passMemberTypeParam dataTypeName="BlogLabel" />
								<plx:passParam>
									<plx:callInstance type="property" name="BlogEntryId">
										<plx:callObject>
											<plx:nameRef type="parameter" name="instance" />
										</plx:callObject>
									</plx:callInstance>
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:passParam>
							</plx:callStatic>
						</plx:right>
					</plx:assign>
				</plx:branch>
				<plx:fallbackBranch>
					<plx:assign>
						<plx:left>
							<plx:nameRef name="BlogEntryIdAndBlogLabelIdOldValueTuple" />
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:fallbackBranch>
				<plx:callThis name="OnBlogEntryIdAndBlogLabelIdChanged">
					<plx:passParam>
						<plx:nameRef type="parameter" name="instance" />
					</plx:passParam>
					<plx:passParam>
						<plx:nameRef name="BlogEntryIdAndBlogLabelIdOldValueTuple" />
					</plx:passParam>
					<plx:passParam>
						<plx:callStatic dataTypeName="Tuple" name="CreateTuple">
							<plx:passMemberTypeParam dataTypeName="BlogEntry" />
							<plx:passMemberTypeParam dataTypeName="BlogLabel" />
							<plx:passParam>
								<plx:callInstance type="property" name="BlogEntryId">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
							<plx:passParam>
								<plx:callInstance type="property" name="BlogLabelId">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:passParam>
						</plx:callStatic>
					</plx:passParam>
				</plx:callThis>
			</plx:function>
			<plx:field visibility="private" readOnly="true" name="_BlogEntryLabelList" dataTypeName="List">
				<plx:passTypeParam dataTypeName="BlogEntryLabel" />
			</plx:field>
			<plx:field visibility="private" readOnly="true" name="_BlogEntryLabelReadOnlyCollection" dataTypeName="ReadOnlyCollection">
				<plx:passTypeParam dataTypeName="BlogEntryLabel" />
			</plx:field>
			<plx:property visibility="public" name="BlogEntryLabelCollection">
				<plx:interfaceMember memberName="BlogEntryLabelCollection" dataTypeName="IBlogDemoContext" />
				<plx:returns dataTypeName="IEnumerable">
					<plx:passTypeParam dataTypeName="BlogEntryLabel" />
				</plx:returns>
				<plx:get>
					<plx:return>
						<plx:callThis type="field" name="_BlogEntryLabelReadOnlyCollection" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:class visibility="private" modifier="sealed" name="BlogEntryLabelImpl">
				<plx:leadingInfo>
					<plx:pragma type="region" data="BlogEntryLabelImpl" />
				</plx:leadingInfo>
				<plx:trailingInfo>
					<plx:pragma type="closeRegion" data="BlogEntryLabelImpl" />
				</plx:trailingInfo>
				<plx:attribute dataTypeName="StructLayoutAttribute" dataTypeQualifier="System.Runtime.InteropServices">
					<plx:passParam>
						<plx:callStatic type="field" name="Auto" dataTypeName="LayoutKind" dataTypeQualifier="System.Runtime.InteropServices" />
					</plx:passParam>
					<plx:passParam>
						<plx:binaryOperator type="assignNamed">
							<plx:left>
								<plx:nameRef type="namedParameter" name="CharSet" />
							</plx:left>
							<plx:right>
								<plx:callStatic type="field" name="Auto" dataTypeName="CharSet" dataTypeQualifier="System.Runtime.InteropServices" />
							</plx:right>
						</plx:binaryOperator>
					</plx:passParam>
				</plx:attribute>
				<plx:derivesFromClass dataTypeName="BlogEntryLabel" />
				<plx:function visibility="public" name=".construct">
					<plx:param name="context" dataTypeName="BlogDemoContext" />
					<plx:param name="blogEntryId" dataTypeName="BlogEntry" />
					<plx:param name="blogLabelId" dataTypeName="BlogLabel" />
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_Context" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="context" />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_BlogEntryId" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="blogEntryId" />
						</plx:right>
					</plx:assign>
					<plx:callInstance name="OnBlogEntryLabelBlogEntryIdChanged">
						<plx:callObject>
							<plx:nameRef type="parameter" name="context" />
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callInstance>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_BlogLabelId" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="blogLabelId" />
						</plx:right>
					</plx:assign>
					<plx:callInstance name="OnBlogEntryLabelBlogLabelIdChanged">
						<plx:callObject>
							<plx:nameRef type="parameter" name="context" />
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callInstance>
					<plx:callInstance name="Add">
						<plx:callObject>
							<plx:callInstance type="field" name="_BlogEntryLabelList">
								<plx:callObject>
									<plx:nameRef type="parameter" name="context" />
								</plx:callObject>
							</plx:callInstance>
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
					</plx:callInstance>
				</plx:function>
				<plx:field visibility="private" readOnly="true" name="_Context" dataTypeName="BlogDemoContext" />
				<plx:property visibility="public" modifier="sealedOverride" name="Context">
					<plx:returns dataTypeName="BlogDemoContext" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_Context" />
						</plx:return>
					</plx:get>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_BlogEntryId" dataTypeName="BlogEntry" />
				<plx:property visibility="public" modifier="sealedOverride" name="BlogEntryId">
					<plx:returns dataTypeName="BlogEntry" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_BlogEntryId" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:throw>
								<plx:callNew dataTypeName="ArgumentNullException">
									<plx:passParam>
										<plx:valueKeyword stringize="true" />
									</plx:passParam>
								</plx:callNew>
							</plx:throw>
						</plx:branch>
						<plx:local name="oldValue" dataTypeName="BlogEntry">
							<plx:initialize>
								<plx:callThis type="field" name="_BlogEntryId" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityInequality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:nameRef name="oldValue" />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnBlogEntryLabelBlogEntryIdChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnBlogEntryIdChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_BlogEntryId" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnBlogEntryLabelBlogEntryIdChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnBlogEntryIdChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_BlogLabelId" dataTypeName="BlogLabel" />
				<plx:property visibility="public" modifier="sealedOverride" name="BlogLabelId">
					<plx:returns dataTypeName="BlogLabel" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_BlogLabelId" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:throw>
								<plx:callNew dataTypeName="ArgumentNullException">
									<plx:passParam>
										<plx:valueKeyword stringize="true" />
									</plx:passParam>
								</plx:callNew>
							</plx:throw>
						</plx:branch>
						<plx:local name="oldValue" dataTypeName="BlogLabel">
							<plx:initialize>
								<plx:callThis type="field" name="_BlogLabelId" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityInequality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:nameRef name="oldValue" />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnBlogEntryLabelBlogLabelIdChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnBlogLabelIdChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_BlogLabelId" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnBlogEntryLabelBlogLabelIdChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnBlogLabelIdChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
			</plx:class>
			<plx:pragma type="closeRegion" data="BlogEntryLabel" />
			<plx:pragma type="region" data="NonCommentEntry" />
			<plx:function visibility="public" name="CreateNonCommentEntry">
				<plx:interfaceMember memberName="CreateNonCommentEntry" dataTypeName="IBlogDemoContext" />
				<plx:param name="blogEntry" dataTypeName="BlogEntry" />
				<plx:returns dataTypeName="NonCommentEntry" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="blogEntry" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callNew dataTypeName="ArgumentNullException">
							<plx:passParam>
								<plx:string>blogEntry</plx:string>
							</plx:passParam>
						</plx:callNew>
					</plx:throw>
				</plx:branch>
				<plx:branch>
					<plx:condition>
						<plx:unaryOperator type="booleanNot">
							<plx:callThis name="OnNonCommentEntryBlogEntryChanging">
								<plx:passParam>
									<plx:nullKeyword />
								</plx:passParam>
								<plx:passParam>
									<plx:nameRef type="parameter" name="blogEntry" />
								</plx:passParam>
							</plx:callThis>
						</plx:unaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetConstraintEnforcementFailedException" dataTypeName="BlogDemoContext">
							<plx:passParam>
								<plx:string>blogEntry</plx:string>
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:return>
					<plx:callNew dataTypeName="NonCommentEntryImpl">
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nameRef type="parameter" name="blogEntry" />
						</plx:passParam>
					</plx:callNew>
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnNonCommentEntryBlogEntryChanging">
				<plx:param name="instance" dataTypeName="NonCommentEntry" />
				<plx:param name="newValue" dataTypeName="BlogEntry" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:thisKeyword />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="Context">
										<plx:callObject>
											<plx:nameRef type="parameter" name="newValue" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetDifferentContextsException" dataTypeName="BlogDemoContext" />
					</plx:throw>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" overload="true" name="OnNonCommentEntryBlogEntryChanged">
				<plx:param name="instance" dataTypeName="NonCommentEntry" />
				<plx:param name="oldValue" dataTypeName="BlogEntry" />
				<plx:assign>
					<plx:left>
						<plx:callInstance type="property" name="NonCommentEntry">
							<plx:callObject>
								<plx:callInstance type="property" name="BlogEntry">
									<plx:callObject>
										<plx:nameRef type="parameter" name="instance" />
									</plx:callObject>
								</plx:callInstance>
							</plx:callObject>
						</plx:callInstance>
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="instance" />
					</plx:right>
				</plx:assign>
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:nullKeyword />
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:callInstance type="property" name="NonCommentEntry">
								<plx:callObject>
									<plx:nameRef type="parameter" name="oldValue" />
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:branch>
			</plx:function>
			<plx:function visibility="private" name="OnNonCommentEntryBlogCommentViaParentEntryIdCollectionAdding">
				<plx:param name="instance" dataTypeName="NonCommentEntry" />
				<plx:param name="item" dataTypeName="BlogComment" />
				<plx:returns dataTypeName=".boolean" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityInequality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:thisKeyword />
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="Context">
										<plx:callObject>
											<plx:nameRef type="parameter" name="item" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:throw>
						<plx:callStatic name="GetDifferentContextsException" dataTypeName="BlogDemoContext">
							<plx:passParam>
								<plx:string data="item" />
							</plx:passParam>
						</plx:callStatic>
					</plx:throw>
				</plx:branch>
				<plx:return>
					<plx:trueKeyword />
				</plx:return>
			</plx:function>
			<plx:function visibility="private" name="OnNonCommentEntryBlogCommentViaParentEntryIdCollectionAdded">
				<plx:param name="instance" dataTypeName="NonCommentEntry" />
				<plx:param name="item" dataTypeName="BlogComment" />
				<plx:assign>
					<plx:left>
						<plx:callInstance type="property" name="ParentEntryId">
							<plx:callObject>
								<plx:nameRef type="parameter" name="item" />
							</plx:callObject>
						</plx:callInstance>
					</plx:left>
					<plx:right>
						<plx:nameRef type="parameter" name="instance" />
					</plx:right>
				</plx:assign>
			</plx:function>
			<plx:function visibility="private" name="OnNonCommentEntryBlogCommentViaParentEntryIdCollectionRemoved">
				<plx:param name="instance" dataTypeName="NonCommentEntry" />
				<plx:param name="item" dataTypeName="BlogComment" />
				<plx:branch>
					<plx:condition>
						<plx:binaryOperator type="identityEquality">
							<plx:left>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:callInstance type="property" name="ParentEntryId">
										<plx:callObject>
											<plx:nameRef type="parameter" name="item" />
										</plx:callObject>
									</plx:callInstance>
								</plx:cast>
							</plx:left>
							<plx:right>
								<plx:cast type="exceptionCast" dataTypeName=".object">
									<plx:nameRef type="parameter" name="instance" />
								</plx:cast>
							</plx:right>
						</plx:binaryOperator>
					</plx:condition>
					<plx:assign>
						<plx:left>
							<plx:callInstance type="property" name="ParentEntryId">
								<plx:callObject>
									<plx:nameRef type="parameter" name="item" />
								</plx:callObject>
							</plx:callInstance>
						</plx:left>
						<plx:right>
							<plx:nullKeyword />
						</plx:right>
					</plx:assign>
				</plx:branch>
			</plx:function>
			<plx:field visibility="private" readOnly="true" name="_NonCommentEntryList" dataTypeName="List">
				<plx:passTypeParam dataTypeName="NonCommentEntry" />
			</plx:field>
			<plx:field visibility="private" readOnly="true" name="_NonCommentEntryReadOnlyCollection" dataTypeName="ReadOnlyCollection">
				<plx:passTypeParam dataTypeName="NonCommentEntry" />
			</plx:field>
			<plx:property visibility="public" name="NonCommentEntryCollection">
				<plx:interfaceMember memberName="NonCommentEntryCollection" dataTypeName="IBlogDemoContext" />
				<plx:returns dataTypeName="IEnumerable">
					<plx:passTypeParam dataTypeName="NonCommentEntry" />
				</plx:returns>
				<plx:get>
					<plx:return>
						<plx:callThis type="field" name="_NonCommentEntryReadOnlyCollection" />
					</plx:return>
				</plx:get>
			</plx:property>
			<plx:class visibility="private" modifier="sealed" name="NonCommentEntryImpl">
				<plx:leadingInfo>
					<plx:pragma type="region" data="NonCommentEntryImpl" />
				</plx:leadingInfo>
				<plx:trailingInfo>
					<plx:pragma type="closeRegion" data="NonCommentEntryImpl" />
				</plx:trailingInfo>
				<plx:attribute dataTypeName="StructLayoutAttribute" dataTypeQualifier="System.Runtime.InteropServices">
					<plx:passParam>
						<plx:callStatic type="field" name="Auto" dataTypeName="LayoutKind" dataTypeQualifier="System.Runtime.InteropServices" />
					</plx:passParam>
					<plx:passParam>
						<plx:binaryOperator type="assignNamed">
							<plx:left>
								<plx:nameRef type="namedParameter" name="CharSet" />
							</plx:left>
							<plx:right>
								<plx:callStatic type="field" name="Auto" dataTypeName="CharSet" dataTypeQualifier="System.Runtime.InteropServices" />
							</plx:right>
						</plx:binaryOperator>
					</plx:passParam>
				</plx:attribute>
				<plx:derivesFromClass dataTypeName="NonCommentEntry" />
				<plx:function visibility="public" name=".construct">
					<plx:param name="context" dataTypeName="BlogDemoContext" />
					<plx:param name="blogEntry" dataTypeName="BlogEntry" />
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_Context" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="context" />
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_BlogCommentViaParentEntryIdCollection" />
						</plx:left>
						<plx:right>
							<plx:callNew dataTypeName="ConstraintEnforcementCollection">
								<plx:passTypeParam dataTypeName="NonCommentEntry" />
								<plx:passTypeParam dataTypeName="BlogComment" />
								<plx:passParam>
									<plx:thisKeyword />
								</plx:passParam>
							</plx:callNew>
						</plx:right>
					</plx:assign>
					<plx:assign>
						<plx:left>
							<plx:callThis type="field" name="_BlogEntry" />
						</plx:left>
						<plx:right>
							<plx:nameRef type="parameter" name="blogEntry" />
						</plx:right>
					</plx:assign>
					<plx:callInstance name="OnNonCommentEntryBlogEntryChanged">
						<plx:callObject>
							<plx:nameRef type="parameter" name="context" />
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
						<plx:passParam>
							<plx:nullKeyword />
						</plx:passParam>
					</plx:callInstance>
					<plx:callInstance name="Add">
						<plx:callObject>
							<plx:callInstance type="field" name="_NonCommentEntryList">
								<plx:callObject>
									<plx:nameRef type="parameter" name="context" />
								</plx:callObject>
							</plx:callInstance>
						</plx:callObject>
						<plx:passParam>
							<plx:thisKeyword />
						</plx:passParam>
					</plx:callInstance>
				</plx:function>
				<plx:field visibility="private" readOnly="true" name="_Context" dataTypeName="BlogDemoContext" />
				<plx:property visibility="public" modifier="sealedOverride" name="Context">
					<plx:returns dataTypeName="BlogDemoContext" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_Context" />
						</plx:return>
					</plx:get>
				</plx:property>
				<plx:field visibility="private" readOnly="false" name="_BlogEntry" dataTypeName="BlogEntry" />
				<plx:property visibility="public" modifier="sealedOverride" name="BlogEntry">
					<plx:returns dataTypeName="BlogEntry" />
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_BlogEntry" />
						</plx:return>
					</plx:get>
					<plx:set>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityEquality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:nullKeyword />
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:throw>
								<plx:callNew dataTypeName="ArgumentNullException">
									<plx:passParam>
										<plx:valueKeyword stringize="true" />
									</plx:passParam>
								</plx:callNew>
							</plx:throw>
						</plx:branch>
						<plx:local name="oldValue" dataTypeName="BlogEntry">
							<plx:initialize>
								<plx:callThis type="field" name="_BlogEntry" />
							</plx:initialize>
						</plx:local>
						<plx:branch>
							<plx:condition>
								<plx:binaryOperator type="identityInequality">
									<plx:left>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:nameRef name="oldValue" />
										</plx:cast>
									</plx:left>
									<plx:right>
										<plx:cast type="exceptionCast" dataTypeName=".object">
											<plx:valueKeyword />
										</plx:cast>
									</plx:right>
								</plx:binaryOperator>
							</plx:condition>
							<plx:branch>
								<plx:condition>
									<plx:binaryOperator type="booleanAnd">
										<plx:left>
											<plx:callInstance name="OnNonCommentEntryBlogEntryChanging">
												<plx:callObject>
													<plx:callThis type="field" name="_Context" />
												</plx:callObject>
												<plx:passParam>
													<plx:thisKeyword />
												</plx:passParam>
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callInstance>
										</plx:left>
										<plx:right>
											<plx:callThis accessor="base" name="OnBlogEntryChanging">
												<plx:passParam>
													<plx:valueKeyword />
												</plx:passParam>
											</plx:callThis>
										</plx:right>
									</plx:binaryOperator>
								</plx:condition>
								<plx:assign>
									<plx:left>
										<plx:callThis type="field" name="_BlogEntry" />
									</plx:left>
									<plx:right>
										<plx:valueKeyword />
									</plx:right>
								</plx:assign>
								<plx:callInstance name="OnNonCommentEntryBlogEntryChanged">
									<plx:callObject>
										<plx:callThis type="field" name="_Context" />
									</plx:callObject>
									<plx:passParam>
										<plx:thisKeyword />
									</plx:passParam>
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callInstance>
								<plx:callThis accessor="base" name="OnBlogEntryChanged">
									<plx:passParam>
										<plx:nameRef name="oldValue" />
									</plx:passParam>
								</plx:callThis>
							</plx:branch>
						</plx:branch>
					</plx:set>
				</plx:property>
				<plx:field visibility="private" readOnly="true" name="_BlogCommentViaParentEntryIdCollection" dataTypeName="IEnumerable">
					<plx:passTypeParam dataTypeName="BlogComment" />
				</plx:field>
				<plx:property visibility="public" modifier="sealedOverride" name="BlogCommentViaParentEntryIdCollection">
					<plx:returns dataTypeName="IEnumerable">
						<plx:passTypeParam dataTypeName="BlogComment" />
					</plx:returns>
					<plx:get>
						<plx:return>
							<plx:callThis type="field" name="_BlogCommentViaParentEntryIdCollection" />
						</plx:return>
					</plx:get>
				</plx:property>
			</plx:class>
			<plx:pragma type="closeRegion" data="NonCommentEntry" />
		</plx:class>
	</plx:namespace>
</plx:root>