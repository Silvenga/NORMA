<?xml version="1.0" encoding="utf-8"?>
<root>
	<metadata name="Common Public License Copyright Notice">
		<value>
			Neumont Object-Role Modeling Architect for Visual Studio

			Copyright © Neumont University. All rights reserved.

			The use and distribution terms for this software are covered by the
			Common Public License 1.0 (http://opensource.org/licenses/cpl) which
			can be found in the file CPL.txt at the root of this distribution.
			By using this software in any fashion, you are agreeing to be bound by
			the terms of this license.

			You must not remove this notice, or any other, from this software.
		</value>
	</metadata>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="AlignShapes.TransactionName">
    <value xml:space="preserve">Align Diagram Shapes</value>
    <comment xml:space="preserve">The transaction name used by shape alignment commands. The text appears in the undo dropdown in the VS IDE.</comment>
  </data>
  <data name="AutoLayout.TransactionName">
    <value xml:space="preserve">Layout Diagram Shapes</value>
    <comment xml:space="preserve">The transaction name used by AutoLayout command. The text appears in the undo dropdown in the VS IDE.</comment>
  </data>
  <data name="Command.DeleteConstraint.Text">
    <value xml:space="preserve">&amp;Delete Constraint</value>
    <comment xml:space="preserve">This text appears in the edit menu when constraint types are selected in the diagram.</comment>
  </data>
  <data name="Command.DeleteFactType.Text">
    <value xml:space="preserve">&amp;Delete Fact Type</value>
    <comment xml:space="preserve">This text appears in the edit menu when fact types are selected in the diagram.</comment>
  </data>
  <data name="Command.DeleteMultipleElements.Text">
    <value xml:space="preserve">&amp;Delete From Model</value>
    <comment xml:space="preserve">This text appears in the edit menu when multiple elements of different types are selected in the diagram.</comment>
  </data>
  <data name="Command.DeleteMultipleShapes.Text">
    <value xml:space="preserve">Delete &amp;Shapes</value>
    <comment xml:space="preserve">This text appears in the edit menu when multiple shapes of different types are selected in the diagram.</comment>
  </data>
  <data name="Command.DeleteObjectType.Text">
    <value xml:space="preserve">&amp;Delete Object Type</value>
    <comment xml:space="preserve">This text appears in the edit menu when object types are selected in the diagram.</comment>
  </data>
  <data name="Command.DeleteConstraintShape.Text">
    <value xml:space="preserve">Delete Constraint &amp;Shape</value>
    <comment xml:space="preserve">This text appears in the edit menu when constraint types are selected in the diagram.</comment>
  </data>
  <data name="Command.DeleteFactTypeShape.Text">
    <value xml:space="preserve">Delete Fact Type &amp;Shape</value>
    <comment xml:space="preserve">This text appears in the edit menu when fact types are selected in the diagram.</comment>
  </data>
  <data name="Command.DeleteModelNote.Text">
    <value xml:space="preserve">&amp;Delete Note</value>
    <comment xml:space="preserve">This text appears in the edit menu when model notes are selected in the diagram.</comment>
  </data>
  <data name="Command.DeleteModelNoteReference.Text">
    <value xml:space="preserve">&amp;Delete Note Reference</value>
    <comment xml:space="preserve">This text appears in the edit menu when reference to model notes are selected in the diagram.</comment>
  </data>
  <data name="Command.DeleteModelNoteShape.Text">
    <value xml:space="preserve">Delete Note &amp;Shape</value>
    <comment xml:space="preserve">This text appears in the edit menu when model notes are selected in the diagram.</comment>
  </data>
  <data name="Command.DeleteMultipleShape.Text">
    <value xml:space="preserve">Delete Selected &amp;Shapes</value>
    <comment xml:space="preserve">This text appears in the edit menu when multiple elements of different types are selected in the diagram.</comment>
  </data>
  <data name="Command.DeleteObjectTypeShape.Text">
    <value xml:space="preserve">Delete Object Type &amp;Shape</value>
    <comment xml:space="preserve">This text appears in the edit menu when object types are selected in the diagram.</comment>
  </data>
  <data name="Command.DeleteRole.Text">
    <value xml:space="preserve">&amp;Delete Role</value>
    <comment xml:space="preserve">This text appears in the edit menu when roles are selected in the diagram.</comment>
  </data>
  <data name="Command.DeleteReading.Text">
    <value xml:space="preserve">Delete Reading</value>
    <comment xml:space="preserve">This text appears on the undo/redo menu when a reading is deleted.</comment>
  </data>
  <data name="Command.EditReading.Text">
    <value xml:space="preserve">Edit Reading</value>
    <comment xml:space="preserve">This text appears on the undo/redo menu when a reading is edited.</comment>
  </data>
  <data name="Command.SwapRoleOrder.Text">
    <value xml:space="preserve">Swap Role Order</value>
    <comment xml:space="preserve">This text appears on the move role left/right when the fact type is binary.</comment>
  </data>
  <data name="ConstraintDisplayPosition.Bottom" xml:space="preserve">
    <value>Bottom</value>
  </data>
  <data name="ConstraintDisplayPosition.Top" xml:space="preserve">
    <value>Top</value>
  </data>
  <data name="DeleteRoleSequence.TransactionName">
    <value xml:space="preserve">Delete Role Sequence</value>
    <comment xml:space="preserve">The transaction name used for deleting a role sequence from a multi column external uniqueness constraint. The text appears in the undo dropdown in the VS IDE.</comment>
  </data>
  <data name="Diagram.Command.DeletePage">
    <value xml:space="preserve">&amp;Delete Page</value>
    <comment xml:space="preserve">The context menu command text and transaction name for deleting diagram.</comment>
  </data>
  <data name="Diagram.Command.NewPage">
    <value xml:space="preserve">&amp;New Page</value>
    <comment xml:space="preserve">The default name for new diagrams and the context menu command text and transaction name for creating a new diagram.</comment>
  </data>
  <data name="Diagram.Command.RenamePage">
    <value xml:space="preserve">&amp;Rename Page</value>
    <comment xml:space="preserve">The context menu command text and transaction name for renaming a diagram.</comment>
  </data>
  <data name="Diagram.TabImage" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>../Resources/DiagramTabImage.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
    <comment xml:space="preserve">The image shown on the tab for ORM diagrams.</comment>
  </data>
  <data name="DisplayOrientation.Horizontal">
    <value xml:space="preserve">Horizontal</value>
  </data>
  <data name="DisplayOrientation.VerticalRotatedLeft">
    <value xml:space="preserve">RotatedLeft</value>
  </data>
  <data name="DisplayOrientation.VerticalRotatedRight">
    <value xml:space="preserve">RotatedRight</value>
  </data>
  <data name="DisplayRoleNames.Off">
    <value xml:space="preserve">Off</value>
  </data>
  <data name="DisplayRoleNames.On">
    <value xml:space="preserve">On</value>
  </data>
  <data name="DisplayRoleNames.UserDefault">
    <value xml:space="preserve">User Default</value>
  </data>
  <data name="ExclusiveOrCoupler.TransactionName">
    <value xml:space="preserve">Combine Exclusive Or Constraint</value>
    <comment xml:space="preserve">The transaction name used by ExclusiveOrCoupler command. The text appears in the undo dropdown in the VS IDE.</comment>
  </data>
  <data name="ExclusiveOrDecoupler.TransactionName">
    <value xml:space="preserve">Split Exclusive Or Constraint</value>
    <comment xml:space="preserve">The transaction name used by ExclusiveOrDecoupler command. The text appears in the undo dropdown in the VS IDE.</comment>
  </data>
  <data name="ExtensionLoadFailure.Message">
    <value xml:space="preserve">ORM Designer extension '{1}' failed to load.{0}{0}{0}----BEGIN EXCEPTION----{0}{0}{2}{0}----END EXCEPTION----{0}{0}{0}Abort  = Allow ORM Designer package load to fail and signal a breakpoint{0}Retry  = Retry loading the extension{0}Ignore = Ignore the extension load failure and continue with the next extension{0}</value>
    <comment xml:space="preserve">The format string for the content of the message shown when a registered extension fails to load. {0} will be System.Environment.NewLine. {1} will be the registered name of the extension that failed to load. {2} will be the result of calling ToString() on the Exception that caused the load failure.</comment>
  </data>
  <data name="ExtensionLoadFailure.Title">
    <value xml:space="preserve">Extension Load Failure</value>
    <comment xml:space="preserve">The title of the message shown when a registered extension fails to load.</comment>
  </data>
  <data name="ExternalConstraintConnectAction.Instructions">
    <value xml:space="preserve">To select role sequences to populate the constraint:
-Click a role to add it to an argument set
-Control-Click a role to remove it from the active set
-Double-Click a role to commit and move to the next set
-Click the diagram background or press Escape when you're finish connecting roles</value>
    <comment xml:space="preserve">The text shown to explain how to hook up an external constraint to its associated roles.</comment>
  </data>
  <data name="ExternalConstraintConnectAction.TransactionName">
    <value xml:space="preserve">Add Constraint Role Sequence</value>
    <comment xml:space="preserve">The transaction name used by the external constraint connect action. The text appears in the undo dropdown in the VS IDE.</comment>
  </data>
  <data name="ExternalConstraintLink.Accessible.Description">
    <value xml:space="preserve">Connects a fact with roles used in a constraint displayed outside the fact</value>
    <comment xml:space="preserve">Returned as the accessible description for an external constraint link</comment>
  </data>
  <data name="ExternalConstraintLink.Accessible.Name">
    <value xml:space="preserve">ConstraintLink</value>
    <comment xml:space="preserve">Returned as the accessible name for an external constraint link</comment>
  </data>
  <data name="FactEditor.Intellisense.ImageList" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFpTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMzYw
        MC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZT
        eXN0ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMA
        AACcCAAAAk1TRnQBSQFMAgEBAwEAAQQBAAEEAQABEAEAARABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQC
        AAEoAwABQAMAARADAAEBAQABCAYAAQQYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB
        3AHAAQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IB
        AAM5AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8B
        MwMAAWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYC
        AAFmAZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMC
        AAHMAWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQAB
        ZgEAATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8B
        AAEzAWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQAB
        MwGZAWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQAB
        MwLMAQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQAB
        MwEAAWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMB
        mQEAAWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQAB
        ZgGZAWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYB
        zAH/AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMB
        mQEAAZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgAB
        mQFmATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwB
        AAKZAf8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB
        /wEzAQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQAB
        mQEAAcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYC
        AAHMAWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYB
        AAHMApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8C
        AAHMAf8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQAB
        mQEAAcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMB
        AAHMAmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB
        /wGZAcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC
        /wEzAQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC
        /wFmAQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gB
        AAHwAfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/0YABgQLAAEEAQAB
        BAEAAQQoAAIEBv8CBAcAAQQG/wEAAQQlAAEECv8BBAQAAQQK/wYACf8VAAEEDP8BBAMADP8BBAMAC/8T
        AAEEDv8CBA7/AwAL/xMAAQQO/wEEAQAO/wEEAQAC/wkAAv8SAAEEDv8CBA7/AgAC/wEAA/8BAAP/AQAC
        /xIAAQQO/wEEAQAO/wEEAQAC/wEAA/8BAAP/AQAC/xIAAQQO/wIEDv8CAAL/AQAD/wEAA/8BAAL/EwAB
        BAz/AQQDAAz/AQQCAAL/CQAC/xQAAQQK/wEEBAABBAr/BQAL/xYAAgQG/wIEBwABBAb/AQABBAUAAv8H
        /QL/GAAGBAsAAQQBAAEEAQABBAgACf+UAAFCAU0BPgcAAT4DAAEoAwABQAMAARADAAEBAQABAQUAAYAX
        AAP/AQAG/wIAAfgBHwH9AV8C/wIAAeABBwHwARcB4AEPAgABwAEDAcABBwHAAQcCAAGAAQEBwAEBAYAB
        AwUAAQEBgAEDBAABgAIAAQEFAAEBAQABAQQAAYACAAEBBQABAQEAAQECAAGAAQEBwAEBAQABAQIAAcAB
        AwHAAQcBgAEDAgAB4AEHAfABFwGAAQMCAAH4AR8B/QFfAcABBwIABP8B4AEPAgAG/wIACw==
</value>
  </data>
  <data name="FactEditorColors.Delimiter">
    <value xml:space="preserve">ORM Fact Delimiter</value>
    <comment xml:space="preserve">Display Name of the Delimiter color</comment>
  </data>
  <data name="FactEditorColors.ObjectName">
    <value xml:space="preserve">ORM Fact Object</value>
    <comment xml:space="preserve">Display Name of the Object Name color</comment>
  </data>
  <data name="FactEditorColors.PredicateText">
    <value xml:space="preserve">ORM Fact Predicate</value>
    <comment xml:space="preserve">Display Name of the Predicate Text color</comment>
  </data>
  <data name="FactEditorColors.Quantifier">
    <value xml:space="preserve">ORM Fact Quantifier</value>
    <comment xml:space="preserve">Display name for color setting for logical and existential quantifiers in the fact editor.</comment>
  </data>
  <data name="FactEditorColors.ReferenceModeName">
    <value xml:space="preserve">ORM Fact Reference Mode</value>
    <comment xml:space="preserve">Display Name of the Reference Mode Name color</comment>
  </data>
  <data name="FactEditorToolWindow.Caption">
    <value xml:space="preserve">ORM Fact Editor</value>
    <comment xml:space="preserve">This is the caption that appears in the title bar of the Fact Editor tool window.</comment>
  </data>
  <data name="FontsAndColors.ActiveConstraintColor">
    <value xml:space="preserve">Constraint (Activated)</value>
    <comment xml:space="preserve">Display name for the color used to draw an active ORM constraint and associated roles</comment>
  </data>
  <data name="FontsAndColors.ConstraintColor">
    <value xml:space="preserve">Constraint</value>
    <comment xml:space="preserve">Display name for the color used to draw an ORM constraint</comment>
  </data>
  <data name="FontsAndColors.ConstraintErrorColor">
    <value xml:space="preserve">Constraint (Error)</value>
    <comment xml:space="preserve">Display name for the color used to draw an ORM error constraint</comment>
  </data>
  <data name="FontsAndColors.DeonticConstraintColor">
    <value xml:space="preserve">Constraint (Deontic Modality)</value>
    <comment xml:space="preserve">Display name for the color used to draw an ORM constraint with deontic modality</comment>
  </data>
  <data name="FontsAndColors.EditorCategoryName">
    <value xml:space="preserve">ORM Designer</value>
    <comment xml:space="preserve">Display name for the ORM Designer fonts and colors category</comment>
  </data>
  <data name="FontsAndColors.RoleNameColor">
    <value xml:space="preserve">Role Name</value>
    <comment xml:space="preserve">Display name for the color used to draw an ORM role name</comment>
  </data>
  <data name="FontsAndColors.RolePickerColor">
    <value xml:space="preserve">Role Picker</value>
    <comment xml:space="preserve">Display name for the color used to draw the constraint box for role sequence editing</comment>
  </data>
  <data name="FontsAndColors.VerbalizerCategoryName">
    <value xml:space="preserve">ORM Verbalizer</value>
    <comment xml:space="preserve">Display name for the ORM Verbalizer fonts and colors category</comment>
  </data>
  <data name="FontsAndColors.VerbalizerPredicateTextColor">
    <value xml:space="preserve">Predicate Text</value>
    <comment xml:space="preserve">Display name for the color used to draw predicate text in the verbalizer</comment>
  </data>
  <data name="FontsAndColors.VerbalizerObjectNameColor">
    <value xml:space="preserve">Object Name</value>
    <comment xml:space="preserve">Display name for the color used to draw object names in the verbalizer</comment>
  </data>
  <data name="FontsAndColors.VerbalizerFormalItemColor">
    <value xml:space="preserve">Formal Items</value>
    <comment xml:space="preserve">Display name for the color used to draw formal items in the verbalizer</comment>
  </data>
  <data name="FontsAndColors.VerbalizerNotesItemColorId">
    <value xml:space="preserve">Notes</value>
    <comment xml:space="preserve">Display name for the color used to draw notes in the verbalizer</comment>
  </data>
  <data name="FontsAndColors.VerbalizerRefModeColorId">
     <value xml:space="preserve">Reference Mode</value>
     <comment xml:space="preserve">Display name for the color used to draw the reference mode in the verbalizer</comment>
  </data>
  <data name="FrequencyConstraint.Between.FormatString">
    <value xml:space="preserve">{0}..{1}</value>
    <comment xml:space="preserve">The format to be used in frequency constraints to represent a range of values (eg: Between {0} and {1}).</comment>
  </data>
  <data name="FrequencyConstraint.Minimum.FormatString">
    <value xml:space="preserve">≥{0}</value>
    <comment xml:space="preserve">The format to be used in frequency constraints for a minimum value (eg: Minimum of {0}).</comment>
  </data>
  <data name="FrequencyConstraint.MinimumOne.FormatString">
    <value xml:space="preserve">≤{0}</value>
    <comment xml:space="preserve">The format to be used in frequency constraints with a minimum value of 1 (eg: Maximum of {0}).</comment>
  </data>
  <data name="AddInternalUniquenessConstraint.TransactionName">
    <value xml:space="preserve">Add Internal Uniqueness Constraint</value>
    <comment xml:space="preserve">The name given to the transaction used when adding an internal uniqueness constraint.</comment>
  </data>
  <data name="DropShape.TransactionName">
    <value xml:space="preserve">Add Shape</value>
    <comment xml:space="preserve">The name given to the transaction used when adding a shape element for an existing object.</comment>
  </data>
  <data name="InsertRole.TransactionName">
    <value xml:space="preserve">Insert Role</value>
    <comment xml:space="preserve">The transaction name used by the InsertRoleBefore/InsertRoleAfter commands. The text appears in the undo dropdown in the VS IDE.</comment>
  </data>
  <data name="InternalUniquenessConstraintConnectAction.Instructions">
    <value xml:space="preserve">Select the roles this constraint should span.</value>
    <comment xml:space="preserve">The text shown to explain how to hook up an internal uniqueness constraint to its associated roles.</comment>
  </data>
  <data name="InternalUniquenessConstraintConnectAction.TransactionName">
    <value xml:space="preserve">Add Constraint Role Sequence</value>
    <comment xml:space="preserve">The transaction name used by the internal uniqueness constraint connect action. The text appears in the undo dropdown in the VS IDE.</comment>
  </data>
  <data name="InterpretFactEditorLine.TransactionName">
    <value xml:space="preserve">Interpret Fact Editor Line</value>
    <comment xml:space="preserve">The transaction name used for changes made in response to committing a modified line in the fact editor. The text appears in the undo dropdown in the VS IDE.</comment>
  </data>
  <data name="MessageBox.ImpliedInternalUniquenessConstraint.Message">
    <value xml:space="preserve">One or more of the internal uniqueness constraints are implied by other internal uniqueness constraints. Do you wish to remove the implied constraints?</value>
    <comment xml:space="preserve">The message for the auto-fix implied internal uniqueness constraint message box.</comment>
  </data>
  <data name="MessageBox.FinalShapeDeletion.Message">
    <value xml:space="preserve">The only shape representing this element is being deleted. Delete the underlying '{0}' element '{1}' as well?</value>
    <comment xml:space="preserve">The message for the prompt to delete an element from the model when the final shape representing it is delete. Replacement field 0 gets the class name and 1 the component name.</comment>
  </data>
  <data name="ModelNoteConnectAction.TransactionName">
    <value xml:space="preserve">Associate Note</value>
    <comment xml:space="preserve">The transaction name used by the modelnote connect action. The text appears in the undo dropdown in the VS IDE.</comment>
  </data>
  <data name="ModelNoteLink.Accessible.Description">
    <value xml:space="preserve">Connects a model note with associated fact types and object types</value>
    <comment xml:space="preserve">Returned as the accessible description for a model note link</comment>
  </data>
  <data name="ModelNoteLink.Accessible.Name">
    <value xml:space="preserve">NoteReference</value>
    <comment xml:space="preserve">Returned as the accessible name for a model note link</comment>
  </data>
  <data name="MoveRoleOrder.TransactionName">
    <value xml:space="preserve">Move Role Order</value>
    <comment xml:space="preserve">The transaction name used for moving a role order in a fact type shape.</comment>
  </data>
  <data name="MoveRoleSequenceDown.TransactionName">
    <value xml:space="preserve">Move Role Sequence Down</value>
    <comment xml:space="preserve">The transaction name used for moving a role sequence down in a multi column external uniqueness constraint. The text appears in the undo dropdown in the VS IDE.</comment>
  </data>
  <data name="MoveRoleSequenceUp.TransactionName">
    <value xml:space="preserve">Move Role Sequence Up</value>
    <comment xml:space="preserve">The transaction name used for moving a role sequence up in a multi column external uniqueness constraint. The text appears in the undo dropdown in the VS IDE.</comment>
  </data>
  <data name="ObjectTypeShape.IndependentFormatString">
    <value xml:space="preserve">{0} !</value>
    <comment xml:space="preserve">The string used to display that an object is independent.</comment>
  </data>
  <data name="ObjectTypeShape.ReferenceModeFormatString">
    <value xml:space="preserve">({0})</value>
    <comment xml:space="preserve">The string used to display a reference mode.</comment>
  </data>
  <data name="ObjectifiedFactTypeNameShape.RefModeIndependentFormatString">
    <value xml:space="preserve">"{0} ({1})!"</value>
    <comment xml:space="preserve">The string used to display an objectified type name for an independent object with a reference mode.</comment>
  </data>
  <data name="ObjectifiedFactTypeNameShape.RefModeFormatString">
    <value xml:space="preserve">"{0} ({1})"</value>
    <comment xml:space="preserve">The string used to display an objectified type name for an object with a reference mode.</comment>
  </data>
  <data name="ObjectifiedFactTypeNameShape.StandardFormatString">
    <value xml:space="preserve">"{0}"</value>
    <comment xml:space="preserve">The string used to display an objectified type name.</comment>
  </data>
  <data name="ObjectifiedFactTypeNameShape.IndependentFormatString">
    <value xml:space="preserve">"{0} !"</value>
    <comment xml:space="preserve">The string used to display an objectified type name for an independent object.</comment>
  </data>
  <data name="ObjectifyFactType.TransactionName">
    <value xml:space="preserve">Objectify Fact Type</value>
    <comment xml:space="preserve">The name given to the transaction used when objectifying a fact type.</comment>
  </data>
  <data name="OptionsPage.Category.Appearance">
    <value xml:space="preserve">Appearance</value>
    <comment xml:space="preserve">This is the title of the category on the options page (appearance).</comment>
  </data>
  <data name="OptionsPage.Category.DataTypes">
    <value xml:space="preserve">Data Types</value>
    <comment xml:space="preserve">This is the title of the category on the options page (data types).</comment>
  </data>
  <data name="OptionsPage.Category.DeleteBehavior">
    <value xml:space="preserve">Delete Behavior</value>
    <comment xml:space="preserve">This is the title of the category on the options page (delete behavior).</comment>
  </data>
  <data name="OptionsPage.Category.VerbalizationBehavior">
    <value xml:space="preserve">Verbalization</value>
    <comment xml:space="preserve">This is the title of the category on the options page (verbalization).</comment>
  </data>
  <data name="OptionsPage.Property.CombineMandatoryAndUniqueVerbalization.Description">
    <value xml:space="preserve">Should verbalization of single-role uniqueness constraints be combined with the verbalization of a simple mandatory constraint on the same role?</value>
    <comment xml:space="preserve">The description of the Combine Mandatory And Unique Verbalization option.</comment>
  </data>
  <data name="OptionsPage.Property.CombineMandatoryAndUniqueVerbalization.DisplayName">
    <value xml:space="preserve">Combine Mandatory and Uniqueness Constraint</value>
    <comment xml:space="preserve">The display name of the Combine Mandatory And Unique Verbalization option.</comment>
  </data>
  <data name="OptionsPage.Property.ShowDefaultConstraintVerbalization.Description">
    <value xml:space="preserve">Should verbalization be shown for constraints implied by the lack of a constraint?</value>
    <comment xml:space="preserve">The description of the Show Default Constraint Verbalization option.</comment>
  </data>
  <data name="OptionsPage.Property.ShowDefaultConstraintVerbalization.DisplayName">
    <value xml:space="preserve">Verbalize Default Constraint</value>
    <comment xml:space="preserve">The display name of the Show Default Constraint Verbalization option.</comment>
  </data>
  <data name="OptionsPage.Property.CustomVerbalizationSnippets.Description">
    <value xml:space="preserve">Choose alternate verbalization text patterns for the core model and extension packages.</value>
    <comment xml:space="preserve">The custom verbalization snippets property description.</comment>
  </data>
  <data name="OptionsPage.Property.CustomVerbalizationSnippets.DisplayName">
    <value xml:space="preserve">Alternate Verbalization Text</value>
    <comment xml:space="preserve">The display name for the custom verbalization snippets property.</comment>
  </data>
  <data name="OptionsPage.Property.CustomVerbalizationSnippets.DisplayValue.Custom">
    <value xml:space="preserve">(Custom)</value>
    <comment xml:space="preserve">Value displayed for any modified state of the Custom Verbalization Snippets option.</comment>
  </data>
  <data name="OptionsPage.Property.CustomVerbalizationSnippets.DisplayValue.Default">
    <value xml:space="preserve">(Default)</value>
    <comment xml:space="preserve">Value displayed for the default state of the Custom Verbalization Snippets option.</comment>
  </data>
  <data name="OptionsPage.Property.CustomVerbalizationSnippets.DisplayValue.LanguageFormat">
    <value xml:space="preserve">{0} ({1})</value>
    <comment xml:space="preserve">Language format string for the Custom Verbalization Snippets option dropdown.</comment>
  </data>
  <data name="OptionsPage.Property.DataType.Description">
    <value xml:space="preserve">The data type for objects. This will be the default data type used when creating new value types.</value>
    <comment xml:space="preserve">The data type property description.</comment>
  </data>
  <data name="OptionsPage.Property.DataType.DisplayName">
    <value xml:space="preserve">Initial Data Type</value>
    <comment xml:space="preserve">The display name for the data type property.</comment>
  </data>
  <data name="OptionsPage.Property.ExternalConstraintRoleBarDisplay.Description">
    <value xml:space="preserve">The style used to draw external constraint role  bars. Role bars appear at the end of lines attaching an external constraint to roles in a fact.</value>
    <comment xml:space="preserve">Description of the external constraint role bar display option.</comment>
  </data>
  <data name="OptionsPage.Property.ExternalConstraintRoleBarDisplay.DisplayName">
    <value xml:space="preserve">Constraint Role Bar Display</value>
    <comment xml:space="preserve">Description of the external constraint role bar display option.</comment>
  </data>
  <data name="OptionsPage.Property.MandatoryDot.Description">
    <value xml:space="preserve">Specify which end of the role connector you wish to place mandatory dots.</value>
    <comment xml:space="preserve">The description for the mandatory dot property.</comment>
  </data>
  <data name="OptionsPage.Property.MandatoryDot.DisplayName">
    <value xml:space="preserve">Mandatory Dot Placement</value>
    <comment xml:space="preserve">The display name for the mandatory dot property.</comment>
  </data>
  <data name="OptionsPage.Property.ObjectifiedShape.Description">
    <value xml:space="preserve">The shape for objectified fact types. This will be the default shape for objectified fact types when creating new ORM models.</value>
    <comment xml:space="preserve">The description for the objectified fact shape property</comment>
  </data>
  <data name="OptionsPage.Property.ObjectifiedShape.DisplayName">
    <value xml:space="preserve">Objectified Fact Shape</value>
    <comment xml:space="preserve">The display name for the objectified fact shape property</comment>
  </data>
  <data name="OptionsPage.Property.ObjectTypeShape.Description">
    <value xml:space="preserve">The shape for object types. This will be the default shape when creating new ORM models.</value>
    <comment xml:space="preserve">The object type shape description</comment>
  </data>
  <data name="OptionsPage.Property.ObjectTypeShape.DisplayName">
    <value xml:space="preserve">Object Type Shape</value>
    <comment xml:space="preserve">The human readable name for the object shape property</comment>
  </data>
  <data name="OptionsPage.Property.PreferredInternalUniquenessConstraintDisplay.Description">
    <value xml:space="preserve">Internal uniqueness constraints can be the preferred identifier for role players of a fact type and the objectifying entity type on a fact type. In addition, some fact type and internal uniqueness constraint patterns result in implied objectification. This option determines when we display internal constraints as preferred on the design surface.</value>
    <comment xml:space="preserve">The description for the Internal Uniqueness Constraint Display option.</comment>
  </data>
  <data name="OptionsPage.Property.PreferredInternalUniquenessConstraintDisplay.DisplayName">
    <value xml:space="preserve">Display Internal Preferred</value>
    <comment xml:space="preserve">The display name for the Internal Uniqueness Constraint Display option.</comment>
  </data>
  <data name="OptionsPage.Property.ReadingDirectionIndicatorDisplay.Description">
    <value xml:space="preserve">Reading direction indicators are shown when the reading is taking a direction opposite to the displayed fact type. This option determines when direction indicators are displayed with readings on the design surface.</value>
    <comment xml:space="preserve">The description for the Reading Direction Indicator Display option.</comment>
  </data>
  <data name="OptionsPage.Property.ReadingDirectionIndicatorDisplay.DisplayName">
    <value xml:space="preserve">Display Reading Indicator</value>
    <comment xml:space="preserve">The display name for the Reading Direction Indicator Display option.</comment>
  </data>
  <data name="OptionsPage.Property.RoleNameDisplay.Description">
    <value xml:space="preserve">Object Types can have Role Names associated with them. This option set the default value of the DisplayRoleNames property on a Fact to On or Off.</value>
    <comment xml:space="preserve">The description for the Display Role Names option.</comment>
  </data>
  <data name="OptionsPage.Property.RoleNameDisplay.DisplayName">
    <value xml:space="preserve">Display Role Names Default</value>
    <comment xml:space="preserve">The display name for the Display Role Names option.</comment>
  </data>
  <data name="OptionsPage.Property.PrimaryDeleteBehavior.Description">
    <value xml:space="preserve">The Delete key can either delete shapes or underlying model elements. Pressing Control-Delete will map to the alternate value.</value>
    <comment xml:space="preserve">The description for the Primary Delete Behavior option.</comment>
  </data>
  <data name="OptionsPage.Property.PrimaryDeleteBehavior.DisplayName">
    <value xml:space="preserve">Delete Key Behavior</value>
    <comment xml:space="preserve">The display name for the Primary Delete Behavior option.</comment>
  </data>
  <data name="OptionsPage.Property.FinalShapeDeleteBehavior.Description">
    <value xml:space="preserve">Determine if deleting the final shape representing a model element should also remove the underlying element from the model.</value>
    <comment xml:space="preserve">The description for the Final Shape Delete Behavior option.</comment>
  </data>
  <data name="OptionsPage.Property.FinalShapeDeleteBehavior.DisplayName">
    <value xml:space="preserve">Final Shape Deletion</value>
    <comment xml:space="preserve">The display name for the Final Shape Delete Behavior option.</comment>
  </data>
  <data name="OptionsPageChange.TransactionName">
    <value xml:space="preserve">Update Diagram Layout</value>
    <comment xml:space="preserve">The transaction name used when an options page change modifies diagram layout and connections. The text appears in the undo dropdown in the VS IDE.</comment>
  </data>
  <data name="ORMBaseBinaryLinkShape.Accessible.ValueFormat">
    <value xml:space="preserve">{{{0}, {1}}}</value>
    <comment xml:space="preserve">Return the default format string for any link shape. Replacement field {0} is the accessible name for the from object, field {1} is the accessible name for the to object.</comment>
  </data>
  <data name="ORMModelBrowser.WindowTitle">
    <value xml:space="preserve">ORM Model Browser</value>
    <comment xml:space="preserve">The window title for the ORM model browser window</comment>
  </data>
  <data name="Package.OfficialName">
    <value xml:space="preserve">Neumont ORM Architect</value>
    <comment xml:space="preserve">The official name of the package</comment>
  </data>
  <data name="Package.ProductDetails">
    <value xml:space="preserve">NORMA - Neumont Object-Role Modeling Architect</value>
    <comment xml:space="preserve">The extra information that appears in the about box of Visual Studio</comment>
  </data>
  <data name="ReadingShape.AttachedRoleDisplay">
    <value xml:space="preserve">[{0}]</value>
    <comment xml:space="preserve">The string used to display a reading with a non-primary order when the role is attached.</comment>
  </data>
  <data name="ReadingShape.Ellipsis">
    <value xml:space="preserve">…</value>
    <comment xml:space="preserve">The character to use as the object placeholder in a ReadingShape.</comment>
  </data>
  <data name="ReadingShape.ReadingSeparator">
    <value xml:space="preserve"> / </value>
    <comment xml:space="preserve">The string used to divide multiple readings shown in a ReadingShape.</comment>
  </data>
  <data name="ReadingShape.UnattachedRoleDisplay">
    <value xml:space="preserve">[Missing{0}]</value>
    <comment xml:space="preserve">The string used to display a reading with a non-primary order when the role is not attached.</comment>
  </data>
  <data name="ReverseRoleOrder.TransactionName">
    <value xml:space="preserve">Reverse Role Order</value>
    <comment xml:space="preserve">The transaction name used for reversing the role order in a fact type shape.</comment>
  </data>
  <data name="RoleConnectAction.TransactionName">
    <value xml:space="preserve">Set Role Player</value>
    <comment xml:space="preserve">The transaction name used by the role connect action. The text appears in the undo dropdown in the VS IDE.</comment>
  </data>
  <data name="RolePlayerLink.Accessible.Description">
    <value xml:space="preserve">Connects a role to its role player</value>
    <comment xml:space="preserve">Returned as the accessible description for a role player link</comment>
  </data>
  <data name="RolePlayerLink.Accessible.Name">
    <value xml:space="preserve">RolePlayerLink</value>
    <comment xml:space="preserve">Returned as the accessible name for a role player link</comment>
  </data>
  <data name="RolePlayerLink.Accessible.FromValueFormat">
    <value xml:space="preserve">{0}.{1}(Role {2})</value>
    <comment xml:space="preserve">The end point of a role player link is described in terms of the fact name and the role name. Replacement field {0} is the fact name, {1} is the role name, and {2} is the role position.</comment>
  </data>
  <data name="SubtypeConnectAction.TransactionName">
    <value xml:space="preserve">Set Super Type</value>
    <comment xml:space="preserve">The transaction name used by the subtype connect action. The text appears in the undo dropdown in the VS IDE.</comment>
  </data>
  <data name="SetConstraintStickyRole.DisplayFormatString">
    <value xml:space="preserve">{0}.{1}</value>
    <comment xml:space="preserve">The format string used to combine the sequence and column numbers in the role box of an active set (multicolumn) constraint.</comment>
  </data>
  <data name="SetConstraintStickyRole.DisplayTooltipFormatString">
    <value xml:space="preserve">{0}.{1} (Sequence {0}, Role {1})</value>
    <comment xml:space="preserve">The format string used to combine the sequence and column numbers in the tooltip of the role box of an active set (multicolumn) constraint.</comment>
  </data>
  <data name="SetConstraintStickyRole.DisplayOverlapping">
    <value xml:space="preserve">{..}</value>
    <comment xml:space="preserve">The string to display when role sequences in the active set (multicolumn) constraint overlap on a single role.</comment>
  </data>
  <data name="SubtypeLink.Accessible.Description">
    <value xml:space="preserve">Connects a subtype to its supertype</value>
    <comment xml:space="preserve">Returned as the accessible description for a subtype link</comment>
  </data>
  <data name="SubtypeLink.Accessible.Name">
    <value xml:space="preserve">SubtypeLink</value>
    <comment xml:space="preserve">Returned as the accessible name for a subtype link</comment>
  </data>
  <data name="ValueRangeLink.Accessible.Description">
    <value xml:space="preserve">Connects a ValueType or Role with an element displaying its valid range of values.</value>
    <comment xml:space="preserve">Returned as the accessible description for a value range link</comment>
  </data>
  <data name="ValueRangeLink.Accessible.Name">
    <value xml:space="preserve">ValueRangeLink</value>
    <comment xml:space="preserve">Returned as the accessible name for a value range link</comment>
  </data>
</root>