<?xml version="1.0" encoding="utf-8"?>
<!-- 
Natural Object-Role Modeling Architect for Visual Studio

Copyright © Neumont University. All rights reserved.
Copyright © ORM Solutions, LLC. All rights reserved.

The use and distribution terms for this software are covered by the
Common Public License 1.0 (http://opensource.org/licenses/cpl) which
can be found in the file CPL.txt at the root of this distribution.
By using this software in any fashion, you are agreeing to be bound by
the terms of this license.

You must not remove this notice, or any other, from this software.
-->
<Languages xmlns="http://schemas.neumont.edu/ORM/SDK/Verbalization" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://schemas.neumont.edu/ORM/SDK/Verbalization VerbalizationCoreSnippets.xsd">
	<Language xml:lang="en-US">
		<Snippets name="_default" description="Built-in verbalization snippets">
			<Snippet type="IndependentVerbalization"><![CDATA[<span class="smallIndent">{0} <span class="quantifier">is independent (it may have instances that play no other roles)</span></span>]]></Snippet>
			<Snippet type="PortableDataTypeVerbalization"><![CDATA[<span class="smallIndent"><span class="quantifier">Portable data type:</span> {0}</span>]]></Snippet>
			<Snippet type="ReferenceModeVerbalization"><![CDATA[<span class="smallIndent"><span class="quantifier">Reference Mode:</span> <span class="referenceMode">{0}</span></span>]]></Snippet>
			<Snippet type="ReferenceSchemeVerbalization"><![CDATA[<span class="smallIndent"><span class="quantifier">Reference Scheme:</span> {0}</span>]]></Snippet>
			<Snippet type="ObjectifiesFactTypeVerbalization"><![CDATA[<span class="smallIndent">{0} <span class="quantifier">objectifies</span> "{1}"</span>]]></Snippet>
			<Snippet type="EntityTypeVerbalization"><![CDATA[{0} <span class="quantifier">is an entity type</span>]]></Snippet>
			<Snippet type="ValueTypeVerbalization"><![CDATA[{0} <span class="quantifier">is a value type</span>]]></Snippet>
			<Snippet type="ModelVerbalization"><![CDATA[<span class="quantifier">Object-Role Model:</span> {0}]]></Snippet>
			<Snippet type="NotesVerbalization"><![CDATA[<span class="quantifier">Notes:</span> <span class="note">{0}</span>]]></Snippet>
			<Snippet type="DescriptionVerbalization"><![CDATA[<span class="quantifier">Informal Description:</span> <span class="definition">{0}</span>]]></Snippet>
			<Snippet type="DerivationNoteVerbalization"><![CDATA[<span class="quantifier">Derivation Note:</span> <span class="definition">{0}</span>]]></Snippet>
			<Snippet type="ConstraintProvidesPreferredIdentifier"><![CDATA[<span class="smallIndent"><span class="quantifier">this association with</span> {0} <span class="quantifier">provides the preferred identification scheme for</span> {1}</span>]]></Snippet>
 
			<!-- All object type names are wrapped with this style automatically.
					 The objectType class should not be used in other quantifiers because
					 it will interfere with hyphen-binding and possible other features. -->
			<Snippet type="ObjectType"><![CDATA[<a class="objectType" href="elementid:{1}">{0}</a>]]></Snippet>
			<Snippet type="ObjectTypeWithSubscript"><![CDATA[<a class="objectType" href="elementid:{1}">{0}<sub style="font-size:smaller;">{2}</sub></a>]]></Snippet>
			<Snippet type="ObjectTypeMissing"><![CDATA[<span class="objectTypeMissing">Missing<sub style="font-size:smaller;">{0}</sub></span>]]></Snippet>
			<Snippet type="HyphenBoundPredicatePart"><![CDATA[{0}{{0}}{1}]]></Snippet>
			<Snippet type="PredicatePart"><![CDATA[<a class="predicateText" href="elementid:{1}">{{0}}</a>]]></Snippet>
			<Snippet type="DefiniteArticle"><![CDATA[<span class="quantifier">that</span> {0}]]></Snippet>

			<Snippet type="ImpersonalPronoun"><![CDATA[<span class="quantifier">that</span>]]></Snippet>
			<Snippet type="PersonalPronoun"><![CDATA[<span class="quantifier">who</span>]]></Snippet>

			<Snippet type="UniversalQuantifier" sign="positive"><![CDATA[<span class="quantifier">each</span> {0}]]></Snippet>
			<Snippet type="UniversalQuantifier" sign="negative"><![CDATA[<span class="quantifier">any</span> {0}]]></Snippet>
			<Snippet type="AtMostOneQuantifier"><![CDATA[<span class="quantifier">at most one</span> {0}]]></Snippet>
			<Snippet type="EachInstanceQuantifier"><![CDATA[<span class="quantifier">each instance of</span> {0} <span class="quantifier">occurs only once</span>]]></Snippet>
			<Snippet type="ForEachCompactQuantifier"><![CDATA[<span class="quantifier">for each</span> {0}, {1}]]></Snippet>
			<Snippet type="ForEachIndentedQuantifier"><![CDATA[<span class="quantifier">for each</span> {0},<br/><span class="smallIndent">{1}</span>]]></Snippet>
			<Snippet type="ExistentialQuantifier" sign="positive"><![CDATA[<span class="quantifier">some</span> {0}]]></Snippet>
			<Snippet type="ExistentialQuantifier" sign="negative"><![CDATA[<span class="quantifier">no</span> {0}]]></Snippet>
			<Snippet type="ExactlyOneQuantifier"><![CDATA[<span class="quantifier">exactly one</span> {0}]]></Snippet>

			<!-- UNDONE:
					<Form condition="PreConsonant"><![CDATA[<span class="quantifier">a</span> {0}]]></Form>
					<Form condition="PreVowel"><![CDATA[<span class="quantifier">an</span> {0}]]></Form>
				-->
			<Snippet type="IdentityReferenceQuantifier"><![CDATA[<span class="quantifier">the same</span> {0}]]></Snippet>
			<Snippet type="MoreThanOneQuantifier"><![CDATA[<span class="quantifier">more than one</span> {0}]]></Snippet>

			<Snippet type="CombinationIdentifier"><![CDATA[{0} <span class="quantifier">combination</span>]]></Snippet>
			<Snippet type="OneQuantifier" sign="positive"><![CDATA[<span class="quantifier">at most one</span> {0}]]></Snippet>
			<Snippet type="OneQuantifier" sign="negative"><![CDATA[<span class="quantifier">more than one</span> {0}]]></Snippet>


			<Snippet type="OccursInPopulation" sign="positive"><![CDATA[<span class="quantifier">in each population of</span> {1}<span class="listSeparator">, </span>{0} <span class="quantifier">occurs at most once</span>]]></Snippet>
			<Snippet type="OccursInPopulation" sign="negative"><![CDATA[{0} <span class="quantifier">occurs more than once in the same population of</span> {1}]]></Snippet>

			<Snippet type="ModalPossibilityOperator" modality="alethic" sign="positive"><![CDATA[<span class="quantifier">it is possible that</span> {0}]]></Snippet>
			<Snippet type="ModalPossibilityOperator" modality="deontic" sign="positive"><![CDATA[<span class="quantifier">it is permitted that</span> {0}]]></Snippet>
			<Snippet type="ModalPossibilityOperator" modality="alethic" sign="negative"><![CDATA[<span class="quantifier">it is impossible that</span> {0}]]></Snippet>
			<Snippet type="ModalPossibilityOperator" modality="deontic" sign="negative"><![CDATA[<span class="quantifier">it is forbidden that</span> {0}]]></Snippet>
			<Snippet type="ModalNecessityOperator" modality="alethic"><![CDATA[<span class="quantifier">it is necessary that</span> {0}]]></Snippet>
			<Snippet type="ModalNecessityOperator" modality="deontic"><![CDATA[<span class="quantifier">it is obligatory that</span> {0}]]></Snippet>
			<Snippet type="ImpliedModalNecessityOperator" modality="alethic" sign="positive"><![CDATA[{0}]]></Snippet>
			<Snippet type="ImpliedModalNecessityOperator" modality="deontic" sign="positive"><![CDATA[<span class="quantifier">it is obligatory that</span> {0}]]></Snippet>
			<Snippet type="ImpliedModalNecessityOperator" modality="alethic" sign="negative"><![CDATA[<span class="quantifier">it is impossible that</span> {0}]]></Snippet>
			<Snippet type="ImpliedModalNecessityOperator" modality="deontic" sign="negative"><![CDATA[<span class="quantifier">it is forbidden that</span> {0}]]></Snippet>

			<Snippet type="ContextScope"><![CDATA[<table class="hidden"><tr class="hidden"><td class="hidden"><span class="quantifier">context:&nbsp;</span></td><td class="hidden">{0}</td></tr></table>]]></Snippet>
			<Snippet type="ContextScopeReference"><![CDATA[<span class="quantifier">in this context</span><span class="listSeparator">,</span> {0}]]></Snippet>
			<Snippet type="CombinationAssociation"><![CDATA[{0} <span class="quantifier">combination is associated with</span> {1}]]></Snippet>
			<Snippet type="CombinationOccurrence"><![CDATA[{0} <span class="quantifier">combination occurs</span> {1}]]></Snippet>
			<Snippet type="CombinationUniqueness"><![CDATA[{0} <span class="quantifier">combination is unique</span>]]></Snippet>

			<!-- Snippets related to derivation rules and join paths -->
			<Snippet type="FullFactTypeDerivation"><![CDATA[<span class="quantifier">*</span>{0} <span class="quantifier">if and only if</span></br>{1}<br/>]]></Snippet>
			<Snippet type="PartialFactTypeDerivation"><![CDATA[<span class="quantifier">+</span>{0} <span class="quantifier">if</span><br/>{1}<br/>]]></Snippet>
			<Snippet type="FullSubtypeDerivation"><![CDATA[<span class="quantifier">*Each</span> {0} <span class="quantifier">is</span> {1}]]></Snippet>

			<!-- Used inside a ModalOperator -->
			<Snippet type="NegativeReadingForUnaryOnlyDisjunctiveMandatory" sign="negative"><![CDATA[<span class="quantifier">some</span> {0} <span class="quantifier">participates in none of the following:</span>{1}]]></Snippet>

			<!-- Snippets related to value constraint verbalization -->
			<Snippet type="ReferenceScheme"><![CDATA[{0}<span class="listSeparator">(</span><span class="referenceMode">{1}</span><span class="listSeparator">)</span>]]></Snippet>
			<Snippet type="InQuantifier"><![CDATA[{0} <span class="quantifier">in</span> {1}]]></Snippet>
			<Snippet type="PeriodSeparator"><![CDATA[{0}<span class="listSeparator">.</span>{1}]]></Snippet>
			<Snippet type="SelfReference"><![CDATA[{0}]]></Snippet>
			<Snippet type="SingleValueValueConstraint"><![CDATA[<span class="quantifier">the possible value of</span> {0} <span class="quantifier">is</span> {1}]]></Snippet>
			<Snippet type="MultiValueValueConstraint"><![CDATA[<span class="quantifier">the possible values of</span> {0} <span class="quantifier">are</span> {1}]]></Snippet>
			<Snippet type="MinClosedMaxClosed"><![CDATA[<span class="quantifier">at least {0} to at most {1}</span>]]></Snippet>
			<Snippet type="MinClosedMaxOpen"><![CDATA[<span class="quantifier">at least {0} to below {1}</span>]]></Snippet>
			<Snippet type="MinClosedMaxUnbounded"><![CDATA[<span class="quantifier">at least {0}</span>]]></Snippet>
			<Snippet type="MinOpenMaxClosed"><![CDATA[<span class="quantifier">above {0} to at most {1}</span>]]></Snippet>
			<Snippet type="MinOpenMaxOpen"><![CDATA[<span class="quantifier">above {0} to below {1}</span>]]></Snippet>
			<Snippet type="MinOpenMaxUnbounded"><![CDATA[<span class="quantifier">above {0}</span>]]></Snippet>
			<Snippet type="MinUnboundedMaxClosed"><![CDATA[<span class="quantifier">at most {1}</span>]]></Snippet>
			<Snippet type="MinUnboundedMaxOpen"><![CDATA[<span class="quantifier">below {1}</span>]]></Snippet>
			<Snippet type="IdentityEqualityListOpen"><![CDATA[]]></Snippet>
			<Snippet type="IdentityEqualityListPairSeparator"><![CDATA[<span class="logicalOperator"> that is a </span>]]></Snippet>
			<Snippet type="IdentityEqualityListSeparator"><![CDATA[<span class="logicalOperator"> that is a </span>]]></Snippet>
			<Snippet type="IdentityEqualityListFinalSeparator"><![CDATA[<span class="logicalOperator"> that is a </span>]]></Snippet>
			<Snippet type="IdentityEqualityListClose"><![CDATA[]]></Snippet>
			<Snippet type="IndentedCompoundListOpen"><![CDATA[<br/><span class="smallIndent">]]></Snippet>
			<Snippet type="IndentedCompoundListPairSeparator"><![CDATA[<span class="listSeparator">; </span>]]></Snippet>
			<Snippet type="IndentedCompoundListSeparator"><![CDATA[<span class="listSeparator">; </span>]]></Snippet>
			<Snippet type="IndentedCompoundListFinalSeparator"><![CDATA[<span class="listSeparator">; </span>]]></Snippet>
			<Snippet type="IndentedCompoundListClose"><![CDATA[</span>]]></Snippet>
			<Snippet type="IndentedListOpen"><![CDATA[<br/><span class="smallIndent">]]></Snippet>
			<Snippet type="IndentedListPairSeparator"><![CDATA[<span class="logicalOperator"> and </span><br/>]]></Snippet>
			<Snippet type="IndentedListSeparator"><![CDATA[<span class="logicalOperator"> and </span><br/>]]></Snippet>
			<Snippet type="IndentedListFinalSeparator"><![CDATA[<span class="logicalOperator"> and </span><br/>]]></Snippet>
			<Snippet type="IndentedListClose"><![CDATA[</span>]]></Snippet>
			<Snippet type="IndentedLogicalOrListOpen"><![CDATA[<br/><span class="smallIndent">]]></Snippet>
			<Snippet type="IndentedLogicalOrListPairSeparator"><![CDATA[<br/><span class="logicalOperator">or </span>]]></Snippet>
			<Snippet type="IndentedLogicalOrListSeparator"><![CDATA[<br/><span class="logicalOperator">or </span>]]></Snippet>
			<Snippet type="IndentedLogicalOrListFinalSeparator"><![CDATA[<br/><span class="logicalOperator">or </span>]]></Snippet>
			<Snippet type="IndentedLogicalOrListClose"><![CDATA[</span>]]></Snippet>
			<Snippet type="SimpleLogicalOrListOpen"><![CDATA[]]></Snippet>
			<Snippet type="SimpleLogicalOrListPairSeparator"><![CDATA[<span class="logicalOperator"> or </span>]]></Snippet>
			<Snippet type="SimpleLogicalOrListSeparator"><![CDATA[<span class="logicalOperator"> or </span>]]></Snippet>
			<Snippet type="SimpleLogicalOrListFinalSeparator"><![CDATA[<span class="logicalOperator"> or </span>]]></Snippet>
			<Snippet type="SimpleLogicalOrListClose"><![CDATA[]]></Snippet>
			<Snippet type="TopLevelIndentedLogicalOrListOpen"><![CDATA[<span>]]></Snippet>
			<Snippet type="TopLevelIndentedLogicalOrListPairSeparator"><![CDATA[</span><span class="smallIndent"><br/><span class="logicalOperator">or </span>]]></Snippet>
			<Snippet type="TopLevelIndentedLogicalOrListSeparator"><![CDATA[</span><span class="smallIndent"><br/><span class="logicalOperator">or </span>]]></Snippet>
			<Snippet type="TopLevelIndentedLogicalOrListFinalSeparator"><![CDATA[</span><span class="smallIndent"><br/><span class="logicalOperator">or </span>]]></Snippet>
			<Snippet type="TopLevelIndentedLogicalOrListClose"><![CDATA[</span>]]></Snippet>
			<Snippet type="IndentedLogicalAndListOpen"><![CDATA[<br/><span class="smallIndent">]]></Snippet>
			<Snippet type="IndentedLogicalAndListPairSeparator"><![CDATA[<br/><span class="logicalOperator">and that </span>]]></Snippet>
			<Snippet type="IndentedLogicalAndListSeparator"><![CDATA[<br/><span class="logicalOperator">and that </span>]]></Snippet>
			<Snippet type="IndentedLogicalAndListFinalSeparator"><![CDATA[<br/><span class="logicalOperator">and that </span>]]></Snippet>
			<Snippet type="IndentedLogicalAndListClose"><![CDATA[</span>]]></Snippet>
			<Snippet type="SimpleLogicalAndListOpen"><![CDATA[]]></Snippet>
			<Snippet type="SimpleLogicalAndListPairSeparator"><![CDATA[<span class="logicalOperator"> and </span>]]></Snippet>
			<Snippet type="SimpleLogicalAndListSeparator"><![CDATA[<span class="logicalOperator"> and </span>]]></Snippet>
			<Snippet type="SimpleLogicalAndListFinalSeparator"><![CDATA[<span class="logicalOperator"> and </span>]]></Snippet>
			<Snippet type="SimpleLogicalAndListClose"><![CDATA[]]></Snippet>
			<Snippet type="SubtypeMetaReading" sign="positive"><![CDATA[<span class="quantifier">each </span>{0} <a class="predicateText" href="elementid:{2}">is an instance of</a> {1}]]></Snippet>
			<Snippet type="SubtypeMetaReading" sign="negative"><![CDATA[<span class="quantifier">some </span>{0} <a class="predicateText" href="elementid:{2}">is not an instance of</a> {1}]]></Snippet>
			<Snippet type="TopLevelIndentedLogicalAndListOpen"><![CDATA[<span>]]></Snippet>
			<Snippet type="TopLevelIndentedLogicalAndListPairSeparator"><![CDATA[</span><span class="smallIndent"><br/><span class="logicalOperator">and that </span>]]></Snippet>
			<Snippet type="TopLevelIndentedLogicalAndListSeparator"><![CDATA[</span><span class="smallIndent"><br/><span class="logicalOperator">and that </span>]]></Snippet>
			<Snippet type="TopLevelIndentedLogicalAndListFinalSeparator"><![CDATA[</span><span class="smallIndent"><br/><span class="logicalOperator">and that </span>]]></Snippet>
			<Snippet type="TopLevelIndentedLogicalAndListClose"><![CDATA[</span>]]></Snippet>

			<Snippet type="CompoundListOpen"><![CDATA[]]></Snippet>
			<Snippet type="CompoundListPairSeparator"><![CDATA[; ]]></Snippet>
			<Snippet type="CompoundListSeparator"><![CDATA[; ]]></Snippet>
			<Snippet type="CompoundListFinalSeparator"><![CDATA[; ]]></Snippet>
			<Snippet type="CompoundListClose"><![CDATA[]]></Snippet>
			
			<Snippet type="SimpleListOpen"><![CDATA[]]></Snippet>
			<Snippet type="SimpleListPairSeparator"><![CDATA[<span class="logicalOperator"> and </span>]]></Snippet>
			<Snippet type="SimpleListSeparator"><![CDATA[<span class="listSeparator">, </span>]]></Snippet>
			<Snippet type="SimpleListFinalSeparator"><![CDATA[<span class="listSeparator">,</span><span class="logicalOperator"> and </span>]]></Snippet>
			<Snippet type="SimpleListClose"><![CDATA[]]></Snippet>
			<Snippet type="CompactSimpleListOpen"><![CDATA[]]></Snippet>
			<Snippet type="CompactSimpleListPairSeparator"><![CDATA[<span class="listSeparator">, </span>]]></Snippet>
			<Snippet type="CompactSimpleListSeparator"><![CDATA[<span class="listSeparator">, </span>]]></Snippet>
			<Snippet type="CompactSimpleListFinalSeparator"><![CDATA[<span class="listSeparator">, </span>]]></Snippet>
			<Snippet type="CompactSimpleListClose"><![CDATA[]]></Snippet>
			<Snippet type="ErrorOpenPrimaryReport"><![CDATA[<span class="primaryErrorReport">]]></Snippet>
			<Snippet type="ErrorClosePrimaryReport"><![CDATA[</span>]]></Snippet>
			<Snippet type="ErrorOpenSecondaryReport"><![CDATA[<span class="secondaryErrorReport">]]></Snippet>
			<Snippet type="ErrorCloseSecondaryReport"><![CDATA[</span>]]></Snippet>
			<Snippet type="ErrorPrimary"><![CDATA[Model Error: <a class="primaryErrorReport" href="elementid:{1}">{0}</a>]]></Snippet>
			<Snippet type="ErrorSecondary"><![CDATA[Model Error: <a class="secondaryErrorReport" href="elementid:{1}">{0}</a>]]></Snippet>
			<Snippet type="CloseVerbalizationSentence"><![CDATA[<span class="listSeparator">.</span>]]></Snippet>
			<Snippet type="VerbalizerNewLine"><![CDATA[<br/>]]></Snippet>
			<Snippet type="VerbalizerIncreaseIndent"><![CDATA[<span class="indent">]]></Snippet>
			<Snippet type="VerbalizerDecreaseIndent"><![CDATA[</span>]]></Snippet>
			<Snippet type="VerbalizerOpenVerbalization"><![CDATA[<div class="verbalization">]]></Snippet>
			<Snippet type="VerbalizerCloseVerbalization"><![CDATA[</div>]]></Snippet>
			<Snippet type="VerbalizerDocumentHeader">
			<![CDATA[<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<title>ORM2 Verbalization</title>
	<style type="text/css">
		body, table {{ font-family: {0}; font-size: {1}pt; color: {2}; {3} }}
		body {{ padding: 0em .1em; }}
		table.hidden, tr.hidden, td.hidden {{ margin: 0em; padding: 0em; border-collapse: collapse;}}
		td.hidden {{ vertical-align: top; }}
		table.hidden {{ display:inline; }}
		a {{text-decoration:none; }}
		a:hover {{background-color:infobackground; }}
		.objectType {{ color: {4}; {5} }}
		.objectTypeMissing {{ color: {4}; {5} }}
		.referenceMode {{ color: {10}; {11} }}
		.predicateText {{ color: {2}; {3} }}
		.quantifier {{ color: {6}; {7} }}
		.primaryErrorReport {{ color: red; font-weight: bolder; }}
		.secondaryErrorReport {{ color: red; }}
		.verbalization {{ }}
		.indent {{ left: 20px; position: relative; }}
		.smallIndent {{ left: 8px; position: relative;}}
		.listSeparator {{ color: windowtext; font-weight: 200;}}
		.logicalOperator {{ color: {6}; {7}}}
		.note {{ color: {8}; font-style: italic; {9} }}
		.definition {{ color: {8}; font-style: italic; {9} }}
		.notAvailable {{ font-style: italic; }}
		.instance {{ color: {12}; {13} }}
	</style>
</head>
<body>]]></Snippet>
			<Snippet type="VerbalizerDocumentFooter"><![CDATA[</body></html>]]></Snippet>
			<Snippet type="VerbalizerFontWeightBold"><![CDATA[font-weight: bold;]]></Snippet>
			<Snippet type="VerbalizerFontWeightNormal"><![CDATA[font-weight: normal;]]></Snippet>
			<Snippet type="CombinedObjectAndInstance"><![CDATA[{0} <span class="instance">{1}</span>]]></Snippet>
			<Snippet type="CombinedObjectAndInstanceTypeMissing"><![CDATA[Missing {0}]]></Snippet>
			<Snippet type="TextInstanceValue"><![CDATA[<span class="instance">'{0}'</span>]]></Snippet>
			<Snippet type="NonTextInstanceValue"><![CDATA[<span class="instance">{0}</span>]]></Snippet>
			<Snippet type="FactTypeInstanceBlockStart"><![CDATA[<br/><span class="quantifier">Examples: </span><span class="smallIndent">]]></Snippet>
			<Snippet type="FactTypeInstanceBlockEnd"><![CDATA[</span>]]></Snippet>
			<Snippet type="FactTypeInstanceIdentifier"><![CDATA[<span class="smallIndent"><span class="quantifier">Identifier: <span class="instance">{0}</span></span></span>]]></Snippet>
			<Snippet type="ObjectTypeInstanceListOpen"><![CDATA[<br/><span class="quantifier">Examples:</span> ]]></Snippet>
			<Snippet type="ObjectTypeInstanceListPairSeparator"><![CDATA[<span class="listSeparator">, </span>]]></Snippet>
			<Snippet type="ObjectTypeInstanceListSeparator"><![CDATA[<span class="listSeparator">, </span>]]></Snippet>
			<Snippet type="ObjectTypeInstanceListFinalSeparator"><![CDATA[<span class="listSeparator">, </span>]]></Snippet>
			<Snippet type="ObjectTypeInstanceListClose"><![CDATA[]]></Snippet>
			<Snippet type="FactTypeListOpen"><![CDATA[<br/><span class="indent"><span class="quantifier">Fact Types:</span><span class="smallIndent"><br/>]]></Snippet>
			<Snippet type="FactTypeListPairSeparator"><![CDATA[<br/>]]></Snippet>
			<Snippet type="FactTypeListSeparator"><![CDATA[<br/>]]></Snippet>
			<Snippet type="FactTypeListFinalSeparator"><![CDATA[<br/>]]></Snippet>
			<Snippet type="FactTypeListClose"><![CDATA[</span></span>]]></Snippet>
			<Snippet type="GroupEquality"><![CDATA[<span class="quantifier">all or none of the following hold:</span> {0}]]></Snippet>
			<Snippet type="MultilineIndentedCompoundListOpen"><![CDATA[<br/><span class="smallIndent">]]></Snippet>
			<Snippet type="MultilineIndentedCompoundListPairSeparator"><![CDATA[<span class="listSeparator">; </span><br/>]]></Snippet>
			<Snippet type="MultilineIndentedCompoundListSeparator"><![CDATA[<span class="listSeparator">; </span><br/>]]></Snippet>
			<Snippet type="MultilineIndentedCompoundListFinalSeparator"><![CDATA[<span class="listSeparator">; </span><br/>]]></Snippet>
			<Snippet type="MultilineIndentedCompoundListClose"><![CDATA[</span>]]></Snippet>
			<Snippet type="GroupExclusion"><![CDATA[<span class="quantifier">at most one of the following holds:</span> {0}]]></Snippet>
			<Snippet type="GroupExclusiveOr"><![CDATA[<span class="quantifier">exactly one of the following holds:</span> {0}]]></Snippet>
			<Snippet type="Conditional"><![CDATA[<span class="quantifier">if </span>{0}<span class="quantifier"> then </span>{1}]]></Snippet>
			<Snippet type="ConditionalMultiLine"><![CDATA[<span class="quantifier">if </span>{0}<br/><span class="smallIndent"><span class="quantifier">then </span>{1}</span>]]></Snippet>
			<Snippet type="Equality"><![CDATA[{0}<span class="quantifier"> if and only if </span>{1}]]></Snippet>
			<Snippet type="ExclusionBinaryLeadReading"><![CDATA[<span class="quantifier">no</span> {0}<span class="quantifier"> the same </span>{1}]]></Snippet>
			<Snippet type="ExclusionCombined"><![CDATA[{0} {1}]]></Snippet>
			<Snippet type="FrequencyPopulation"><![CDATA[<span class="quantifier">each {0} in the population of “{1}” occurs there {2}</span>]]></Snippet>
			<Snippet type="FrequencyTypedOccurrences"><![CDATA[<span class="quantifier">{1} instances of</span> {0}]]></Snippet>
			<Snippet type="FrequencyUntypedOccurrences"><![CDATA[<span class="quantifier">{0} times</span>]]></Snippet>
			<Snippet type="FrequencyRangeExact"><![CDATA[exactly <span class="instance">{0}</span>]]></Snippet>
			<Snippet type="FrequencyRangeMinAndMax"><![CDATA[at least <span class="instance">{0}</span> and at most <span class="instance">{1}</span>]]></Snippet>
			<Snippet type="FrequencyRangeMaxUnbounded"><![CDATA[at least <span class="instance">{0}</span>]]></Snippet>
			<Snippet type="FrequencyRangeMinUnbounded"><![CDATA[at most <span class="instance">{1}</span>]]></Snippet>
			<Snippet type="LogicalAndOperator"><![CDATA[{0}<span class="logicalOperator"> and </span>{1}]]></Snippet>
			<Snippet type="SameTypeIdentityInequalityOperator"><![CDATA[{0}<span class="logicalOperator"> is not </span>{1}]]></Snippet>
			<Snippet type="CompatibleTypesIdentityInequalityOperator"><![CDATA[<span class="logicalOperator">that </span>{0}<span class="logicalOperator"> is not that </span>{1}]]></Snippet>
			<Snippet type="Acyclicity"><![CDATA[<span class="quantifier">no {0} may cycle back to itself via one or more traversals through </span>{1}]]></Snippet>
			<Snippet type="AcyclicityWithRoleNumbers"><![CDATA[<span class="quantifier">no {0} may cycle back to itself via one or more instances of the role pair:</span></br><span class="smallIndent"><span class="quantifier">roles <span class="objectType">{2}</span> and <span class="objectType">{3}</span> of </span>{1}</span>]]></Snippet>
		</Snippets>
	</Language>
</Languages>
