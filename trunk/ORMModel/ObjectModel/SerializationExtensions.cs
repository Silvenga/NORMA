//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version:2.0.40607.85
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace Northface.Tools.ORM.ObjectModel
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using Microsoft.VisualStudio.Modeling;
    using Microsoft.VisualStudio.Modeling.Diagrams;
    using Northface.Tools.ORM.Shell;
    
    /// <summary>
    ///</summary>
    public partial class ORMMetaModel : IORMCustomSerializedMetaModel
    {
        private Dictionary<MetaClassInfo, object> myCustomSerializationOmissions;
        /// <summary>
        ///</summary>
        protected string DefaultElementPrefix
        {
            get
            {
                return "orm";
            }
        }
        string IORMCustomSerializedMetaModel.DefaultElementPrefix
        {
            get
            {
                return this.DefaultElementPrefix;
            }
        }
        /// <summary>
        ///</summary>
        protected string[,] GetCustomElementNamespaces()
        {
            string[,] ret = new string[2, 2];
            ret[0, 0] = "orm";
            ret[0, 1] = "http://Schemas.Northface.edu/ORM/ORMCore";
            ret[1, 0] = "ormDerived";
            ret[1, 1] = "http://Schemas.Northface.edu/ORM/ORMDerived";
            return ret;
        }
        string[,] IORMCustomSerializedMetaModel.GetCustomElementNamespaces()
        {
            return this.GetCustomElementNamespaces();
        }
        private Dictionary<MetaClassInfo, object> BuildCustomSerializationOmissions(Store store)
        {
            Dictionary<MetaClassInfo, object> retVal = new Dictionary<MetaClassInfo, object>();
            MetaDataDirectory dataDir = store.MetaDataDirectory;
            retVal[dataDir.FindMetaRelationship(ExternalFactConstraint.MetaRelationshipGuid)] = null;
            retVal[dataDir.FindMetaRelationship(ExternalRoleConstraint.MetaRelationshipGuid)] = null;
            retVal[dataDir.FindMetaClass(IntrinsicReferenceMode.MetaClassGuid)] = null;
            retVal[dataDir.FindMetaRelationship(Microsoft.VisualStudio.Modeling.SubjectHasPresentation.MetaRelationshipGuid)] = null;
            return retVal;
        }
        /// <summary>
        ///</summary>
        protected bool ShouldSerializeMetaClass(Store store, MetaClassInfo classInfo)
        {
            Dictionary<MetaClassInfo, object> omissions = this.myCustomSerializationOmissions;
            if ((omissions == null))
            {
                omissions = this.BuildCustomSerializationOmissions(store);
                this.myCustomSerializationOmissions = omissions;
            }
            return !(omissions.ContainsKey(classInfo));
        }
        bool IORMCustomSerializedMetaModel.ShouldSerializeMetaClass(Store store, MetaClassInfo classInfo)
        {
            return this.ShouldSerializeMetaClass(store, classInfo);
        }
    }
    /// <summary>
    ///</summary>
    public partial class ORMModel : IORMCustomSerializedElement
    {
        private static Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] myCustomSerializedChildElementInfo;
        private static IComparer<MetaRoleInfo> myCustomSortChildComparer;
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations SupportedCustomSerializedOperations
        {
            get
            {
                return (ORMCustomSerializedElementSupportedOperations.ChildElementInfo 
                            | (ORMCustomSerializedElementSupportedOperations.ElementInfo | ORMCustomSerializedElementSupportedOperations.CustomSortChildRoles));
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations IORMCustomSerializedElement.SupportedCustomSerializedOperations
        {
            get
            {
                return this.SupportedCustomSerializedOperations;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo CustomSerializedElementInfo
        {
            get
            {
                return new ORMCustomSerializedElementInfo(null, "ORMModel", null, ORMCustomSerializedElementWriteStyle.Element, null);
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.CustomSerializedElementInfo
        {
            get
            {
                return this.CustomSerializedElementInfo;
            }
        }
        /// <summary>
        ///</summary>
        [CLSCompliant(false)]
        protected IComparer<MetaRoleInfo> CustomSerializedChildRoleComparer
        {
            get
            {
                IComparer<MetaRoleInfo> retVal = ORMModel.myCustomSortChildComparer;
                if ((null == retVal))
                {
                    retVal = new CustomSortChildComparer(this.Store);
                    ORMModel.myCustomSortChildComparer = retVal;
                }
                return retVal;
            }
        }
        IComparer<MetaRoleInfo> IORMCustomSerializedElement.CustomSerializedChildRoleComparer
        {
            get
            {
                return this.CustomSerializedChildRoleComparer;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] GetCustomSerializedChildElementInfo()
        {
            Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] ret = ORMModel.myCustomSerializedChildElementInfo;
            if ((ret == null))
            {
                ret = new Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[7];
                System.Guid[] guids0 = new System.Guid[1];
                guids0[0] = ModelHasObjectType.ObjectTypeCollectionMetaRoleGuid;
                ret[0] = new Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo(null, "Objects", null, ORMCustomSerializedElementWriteStyle.Element, null, guids0);
                System.Guid[] guids1 = new System.Guid[1];
                guids1[0] = ModelHasFactType.FactTypeCollectionMetaRoleGuid;
                ret[1] = new Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo(null, "Facts", null, ORMCustomSerializedElementWriteStyle.Element, null, guids1);
                System.Guid[] guids2 = new System.Guid[2];
                guids2[0] = ModelHasMultiColumnExternalConstraint.MultiColumnExternalConstraintCollectionMetaRoleGuid;
                guids2[1] = ModelHasSingleColumnExternalConstraint.SingleColumnExternalConstraintCollectionMetaRoleGuid;
                ret[2] = new Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo(null, "ExternalConstraints", null, ORMCustomSerializedElementWriteStyle.Element, null, guids2);
                System.Guid[] guids3 = new System.Guid[1];
                guids3[0] = ModelHasDataType.DataTypeCollectionMetaRoleGuid;
                ret[3] = new Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo(null, "DataTypes", null, ORMCustomSerializedElementWriteStyle.Element, null, guids3);
                System.Guid[] guids4 = new System.Guid[1];
                guids4[0] = ModelHasReferenceMode.ReferenceModeCollectionMetaRoleGuid;
                ret[4] = new Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo(null, "CustomReferenceModes", null, ORMCustomSerializedElementWriteStyle.Element, null, guids4);
                System.Guid[] guids5 = new System.Guid[1];
                guids5[0] = ModelHasError.ErrorCollectionMetaRoleGuid;
                ret[5] = new Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo(null, "ModelErrors", null, ORMCustomSerializedElementWriteStyle.Element, null, guids5);
                System.Guid[] guids6 = new System.Guid[1];
                guids6[0] = ModelHasReferenceModeKind.ReferenceModeKindCollectionMetaRoleGuid;
                ret[6] = new Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo(null, "ReferenceModeKinds", null, ORMCustomSerializedElementWriteStyle.Element, null, guids6);
                ORMModel.myCustomSerializedChildElementInfo = ret;
            }
            return ret;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] IORMCustomSerializedElement.GetCustomSerializedChildElementInfo()
        {
            return this.GetCustomSerializedChildElementInfo();
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo IORMCustomSerializedElement.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedAttributeInfo(attributeInfo, rolePlayedInfo);
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedLinkInfo(rolePlayedInfo);
        }
        private class CustomSortChildComparer : IComparer<MetaRoleInfo>
        {
            private Dictionary<MetaRoleInfo, int> myRoleOrderDictionary;
            /// <summary>
            ///</summary>
            public CustomSortChildComparer(Store store)
            {
                MetaDataDirectory metaDataDir = store.MetaDataDirectory;
                Dictionary<MetaRoleInfo, int> roleOrderDictionary = new Dictionary<MetaRoleInfo, int>();
                MetaRoleInfo metaRole;
                metaRole = metaDataDir.FindMetaRole(ModelHasObjectType.ObjectTypeCollectionMetaRoleGuid);
                roleOrderDictionary[metaRole.OppositeMetaRole] = 0;
                metaRole = metaDataDir.FindMetaRole(ModelHasFactType.FactTypeCollectionMetaRoleGuid);
                roleOrderDictionary[metaRole.OppositeMetaRole] = 1;
                metaRole = metaDataDir.FindMetaRole(ModelHasMultiColumnExternalConstraint.MultiColumnExternalConstraintCollectionMetaRoleGuid);
                roleOrderDictionary[metaRole.OppositeMetaRole] = 2;
                metaRole = metaDataDir.FindMetaRole(ModelHasSingleColumnExternalConstraint.SingleColumnExternalConstraintCollectionMetaRoleGuid);
                roleOrderDictionary[metaRole.OppositeMetaRole] = 2;
                metaRole = metaDataDir.FindMetaRole(ModelHasDataType.DataTypeCollectionMetaRoleGuid);
                roleOrderDictionary[metaRole.OppositeMetaRole] = 3;
                metaRole = metaDataDir.FindMetaRole(ModelHasReferenceMode.ReferenceModeCollectionMetaRoleGuid);
                roleOrderDictionary[metaRole.OppositeMetaRole] = 4;
                metaRole = metaDataDir.FindMetaRole(ModelHasError.ErrorCollectionMetaRoleGuid);
                roleOrderDictionary[metaRole.OppositeMetaRole] = 5;
                metaRole = metaDataDir.FindMetaRole(ModelHasReferenceModeKind.ReferenceModeKindCollectionMetaRoleGuid);
                roleOrderDictionary[metaRole.OppositeMetaRole] = 6;
                this.myRoleOrderDictionary = roleOrderDictionary;
            }
            /// <summary>
            ///</summary>
            public int Compare(MetaRoleInfo x, MetaRoleInfo y)
            {
                int xPos;
                if (!(this.myRoleOrderDictionary.TryGetValue(x, out xPos)))
                {
                    xPos = int.MaxValue;
                }
                int yPos;
                if (!(this.myRoleOrderDictionary.TryGetValue(y, out yPos)))
                {
                    yPos = int.MaxValue;
                }
                if ((xPos == yPos))
                {
                    return 0;
                }
                else
                {
                    if ((xPos < yPos))
                    {
                        return -1;
                    }
                }
                return 1;
            }
            /// <summary>
            ///</summary>
            public bool Equals(MetaRoleInfo x, MetaRoleInfo y)
            {
                return object.ReferenceEquals(x, y);
            }
            /// <summary>
            ///</summary>
            public int GetHashCode(MetaRoleInfo obj)
            {
                return obj.GetHashCode();
            }
        }
    }
    /// <summary>
    ///</summary>
    public partial class ObjectType : IORMCustomSerializedElement
    {
        private static Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] myCustomSerializedChildElementInfo;
        private static IComparer<MetaRoleInfo> myCustomSortChildComparer;
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations SupportedCustomSerializedOperations
        {
            get
            {
                return (ORMCustomSerializedElementSupportedOperations.ChildElementInfo 
                            | (ORMCustomSerializedElementSupportedOperations.ElementInfo 
                            | (ORMCustomSerializedElementSupportedOperations.AttributeInfo 
                            | (ORMCustomSerializedElementSupportedOperations.LinkInfo | ORMCustomSerializedElementSupportedOperations.CustomSortChildRoles))));
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations IORMCustomSerializedElement.SupportedCustomSerializedOperations
        {
            get
            {
                return this.SupportedCustomSerializedOperations;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo CustomSerializedElementInfo
        {
            get
            {
                string name = "EntityType";
                if (this.IsValueType)
                {
                    name = "ValueType";
                }
                else
                {
                    if ((this.NestedFactType != null))
                    {
                        name = "ObjectifiedType";
                    }
                }
                return new ORMCustomSerializedElementInfo(null, name, null, ORMCustomSerializedElementWriteStyle.Element, null);
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.CustomSerializedElementInfo
        {
            get
            {
                return this.CustomSerializedElementInfo;
            }
        }
        /// <summary>
        ///</summary>
        [CLSCompliant(false)]
        protected IComparer<MetaRoleInfo> CustomSerializedChildRoleComparer
        {
            get
            {
                IComparer<MetaRoleInfo> retVal = ObjectType.myCustomSortChildComparer;
                if ((null == retVal))
                {
                    retVal = new CustomSortChildComparer(this.Store);
                    ObjectType.myCustomSortChildComparer = retVal;
                }
                return retVal;
            }
        }
        IComparer<MetaRoleInfo> IORMCustomSerializedElement.CustomSerializedChildRoleComparer
        {
            get
            {
                return this.CustomSerializedChildRoleComparer;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] GetCustomSerializedChildElementInfo()
        {
            Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] ret = ObjectType.myCustomSerializedChildElementInfo;
            if ((ret == null))
            {
                ret = new Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[1];
                System.Guid[] guids0 = new System.Guid[1];
                guids0[0] = ObjectTypePlaysRole.PlayedRoleCollectionMetaRoleGuid;
                ret[0] = new Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo(null, "PlayedRoles", null, ORMCustomSerializedElementWriteStyle.Element, null, guids0);
                ObjectType.myCustomSerializedChildElementInfo = ret;
            }
            return ret;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] IORMCustomSerializedElement.GetCustomSerializedChildElementInfo()
        {
            return this.GetCustomSerializedChildElementInfo();
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            if ((attributeInfo.Id == ObjectType.ReferenceModeStringMetaAttributeGuid))
            {
                if (this.IsValueType)
                {
                    return new ORMCustomSerializedAttributeInfo(null, null, null, false, ORMCustomSerializedAttributeWriteStyle.NotWritten, null);
                }
                if ((this.NestedFactType != null))
                {
                    return new ORMCustomSerializedAttributeInfo(null, null, null, false, ORMCustomSerializedAttributeWriteStyle.NotWritten, null);
                }
                return new ORMCustomSerializedAttributeInfo(null, "ReferenceMode", null, true, ORMCustomSerializedAttributeWriteStyle.Attribute, null);
            }
            return ORMCustomSerializedAttributeInfo.Default;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo IORMCustomSerializedElement.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedAttributeInfo(attributeInfo, rolePlayedInfo);
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            if ((rolePlayedInfo.Id == ObjectTypePlaysRole.PlayedRoleCollectionMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, "Role", null, ORMCustomSerializedElementWriteStyle.Element, null);
            }
            if ((rolePlayedInfo.Id == ValueTypeHasDataType.DataTypeMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, "ConceptualDataType", null, ORMCustomSerializedElementWriteStyle.PrimaryLinkElement, null);
            }
            if ((rolePlayedInfo.Id == NestingEntityTypeHasFactType.NestedFactTypeMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, "NestedPredicate", null, ORMCustomSerializedElementWriteStyle.Element, null);
            }
            if ((rolePlayedInfo.Id == EntityTypeHasPreferredIdentifier.PreferredIdentifierMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, null, null, ORMCustomSerializedElementWriteStyle.NotWritten, null);
            }
            return ORMCustomSerializedElementInfo.Default;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedLinkInfo(rolePlayedInfo);
        }
        private class CustomSortChildComparer : IComparer<MetaRoleInfo>
        {
            private Dictionary<MetaRoleInfo, int> myRoleOrderDictionary;
            /// <summary>
            ///</summary>
            public CustomSortChildComparer(Store store)
            {
                MetaDataDirectory metaDataDir = store.MetaDataDirectory;
                Dictionary<MetaRoleInfo, int> roleOrderDictionary = new Dictionary<MetaRoleInfo, int>();
                MetaRoleInfo metaRole;
                metaRole = metaDataDir.FindMetaRole(ObjectTypePlaysRole.PlayedRoleCollectionMetaRoleGuid);
                roleOrderDictionary[metaRole.OppositeMetaRole] = 0;
                metaRole = metaDataDir.FindMetaRole(ObjectTypePlaysRole.PlayedRoleCollectionMetaRoleGuid);
                roleOrderDictionary[metaRole.OppositeMetaRole] = 1;
                metaRole = metaDataDir.FindMetaRole(ValueTypeHasDataType.DataTypeMetaRoleGuid);
                roleOrderDictionary[metaRole.OppositeMetaRole] = 2;
                metaRole = metaDataDir.FindMetaRole(NestingEntityTypeHasFactType.NestedFactTypeMetaRoleGuid);
                roleOrderDictionary[metaRole.OppositeMetaRole] = 3;
                metaRole = metaDataDir.FindMetaRole(EntityTypeHasPreferredIdentifier.PreferredIdentifierMetaRoleGuid);
                roleOrderDictionary[metaRole.OppositeMetaRole] = 4;
                this.myRoleOrderDictionary = roleOrderDictionary;
            }
            /// <summary>
            ///</summary>
            public int Compare(MetaRoleInfo x, MetaRoleInfo y)
            {
                int xPos;
                if (!(this.myRoleOrderDictionary.TryGetValue(x, out xPos)))
                {
                    xPos = int.MaxValue;
                }
                int yPos;
                if (!(this.myRoleOrderDictionary.TryGetValue(y, out yPos)))
                {
                    yPos = int.MaxValue;
                }
                if ((xPos == yPos))
                {
                    return 0;
                }
                else
                {
                    if ((xPos < yPos))
                    {
                        return -1;
                    }
                }
                return 1;
            }
            /// <summary>
            ///</summary>
            public bool Equals(MetaRoleInfo x, MetaRoleInfo y)
            {
                return object.ReferenceEquals(x, y);
            }
            /// <summary>
            ///</summary>
            public int GetHashCode(MetaRoleInfo obj)
            {
                return obj.GetHashCode();
            }
        }
    }
    /// <summary>
    ///</summary>
    public partial class CustomReferenceMode : IORMCustomSerializedElement
    {
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations SupportedCustomSerializedOperations
        {
            get
            {
                return (ORMCustomSerializedElementSupportedOperations.AttributeInfo 
                            | (ORMCustomSerializedElementSupportedOperations.LinkInfo | ORMCustomSerializedElementSupportedOperations.MixedTypedAttributes));
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations IORMCustomSerializedElement.SupportedCustomSerializedOperations
        {
            get
            {
                return this.SupportedCustomSerializedOperations;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo CustomSerializedElementInfo
        {
            get
            {
                throw new System.NotSupportedException();
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.CustomSerializedElementInfo
        {
            get
            {
                return this.CustomSerializedElementInfo;
            }
        }
        /// <summary>
        ///</summary>
        [CLSCompliant(false)]
        protected IComparer<MetaRoleInfo> CustomSerializedChildRoleComparer
        {
            get
            {
                return null;
            }
        }
        IComparer<MetaRoleInfo> IORMCustomSerializedElement.CustomSerializedChildRoleComparer
        {
            get
            {
                return this.CustomSerializedChildRoleComparer;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] GetCustomSerializedChildElementInfo()
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] IORMCustomSerializedElement.GetCustomSerializedChildElementInfo()
        {
            return this.GetCustomSerializedChildElementInfo();
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            if ((attributeInfo.Id == CustomReferenceMode.CustomFormatStringMetaAttributeGuid))
            {
                return new ORMCustomSerializedAttributeInfo(null, null, null, false, ORMCustomSerializedAttributeWriteStyle.Element, null);
            }
            return ORMCustomSerializedAttributeInfo.Default;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo IORMCustomSerializedElement.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedAttributeInfo(attributeInfo, rolePlayedInfo);
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            if ((rolePlayedInfo.Id == ReferenceModeHasReferenceModeKind.KindMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, "Kind", null, ORMCustomSerializedElementWriteStyle.Element, null);
            }
            return ORMCustomSerializedElementInfo.Default;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedLinkInfo(rolePlayedInfo);
        }
    }
    /// <summary>
    ///</summary>
    public partial class ValueTypeHasDataType : IORMCustomSerializedElement
    {
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations SupportedCustomSerializedOperations
        {
            get
            {
                return (ORMCustomSerializedElementSupportedOperations.AttributeInfo | ORMCustomSerializedElementSupportedOperations.MixedTypedAttributes);
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations IORMCustomSerializedElement.SupportedCustomSerializedOperations
        {
            get
            {
                return this.SupportedCustomSerializedOperations;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo CustomSerializedElementInfo
        {
            get
            {
                throw new System.NotSupportedException();
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.CustomSerializedElementInfo
        {
            get
            {
                return this.CustomSerializedElementInfo;
            }
        }
        /// <summary>
        ///</summary>
        [CLSCompliant(false)]
        protected IComparer<MetaRoleInfo> CustomSerializedChildRoleComparer
        {
            get
            {
                return null;
            }
        }
        IComparer<MetaRoleInfo> IORMCustomSerializedElement.CustomSerializedChildRoleComparer
        {
            get
            {
                return this.CustomSerializedChildRoleComparer;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] GetCustomSerializedChildElementInfo()
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] IORMCustomSerializedElement.GetCustomSerializedChildElementInfo()
        {
            return this.GetCustomSerializedChildElementInfo();
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            if ((attributeInfo.Id == ValueTypeHasDataType.ScaleMetaAttributeGuid))
            {
                if ((rolePlayedInfo.Id == ValueTypeHasDataType.ValueTypeCollectionMetaRoleGuid))
                {
                    return new ORMCustomSerializedAttributeInfo(null, "Scale", null, false, ORMCustomSerializedAttributeWriteStyle.Attribute, null);
                }
                return new ORMCustomSerializedAttributeInfo(null, null, null, false, ORMCustomSerializedAttributeWriteStyle.Attribute, null);
            }
            return ORMCustomSerializedAttributeInfo.Default;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo IORMCustomSerializedElement.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedAttributeInfo(attributeInfo, rolePlayedInfo);
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedLinkInfo(rolePlayedInfo);
        }
    }
    /// <summary>
    ///</summary>
    public partial class DataType : IORMCustomSerializedElement
    {
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations SupportedCustomSerializedOperations
        {
            get
            {
                return ORMCustomSerializedElementSupportedOperations.LinkInfo;
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations IORMCustomSerializedElement.SupportedCustomSerializedOperations
        {
            get
            {
                return this.SupportedCustomSerializedOperations;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo CustomSerializedElementInfo
        {
            get
            {
                throw new System.NotSupportedException();
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.CustomSerializedElementInfo
        {
            get
            {
                return this.CustomSerializedElementInfo;
            }
        }
        /// <summary>
        ///</summary>
        [CLSCompliant(false)]
        protected IComparer<MetaRoleInfo> CustomSerializedChildRoleComparer
        {
            get
            {
                return null;
            }
        }
        IComparer<MetaRoleInfo> IORMCustomSerializedElement.CustomSerializedChildRoleComparer
        {
            get
            {
                return this.CustomSerializedChildRoleComparer;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] GetCustomSerializedChildElementInfo()
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] IORMCustomSerializedElement.GetCustomSerializedChildElementInfo()
        {
            return this.GetCustomSerializedChildElementInfo();
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo IORMCustomSerializedElement.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedAttributeInfo(attributeInfo, rolePlayedInfo);
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            if ((rolePlayedInfo.Id == ValueTypeHasDataType.ValueTypeCollectionMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, null, null, ORMCustomSerializedElementWriteStyle.NotWritten, null);
            }
            return ORMCustomSerializedElementInfo.Default;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedLinkInfo(rolePlayedInfo);
        }
    }
    /// <summary>
    ///</summary>
    public partial class ReferenceModeKindCollection : IORMCustomSerializedElement
    {
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations SupportedCustomSerializedOperations
        {
            get
            {
                return ORMCustomSerializedElementSupportedOperations.ElementInfo;
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations IORMCustomSerializedElement.SupportedCustomSerializedOperations
        {
            get
            {
                return this.SupportedCustomSerializedOperations;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo CustomSerializedElementInfo
        {
            get
            {
                return new ORMCustomSerializedElementInfo(null, "ReferenceModeKinds", null, ORMCustomSerializedElementWriteStyle.Element, null);
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.CustomSerializedElementInfo
        {
            get
            {
                return this.CustomSerializedElementInfo;
            }
        }
        /// <summary>
        ///</summary>
        [CLSCompliant(false)]
        protected IComparer<MetaRoleInfo> CustomSerializedChildRoleComparer
        {
            get
            {
                return null;
            }
        }
        IComparer<MetaRoleInfo> IORMCustomSerializedElement.CustomSerializedChildRoleComparer
        {
            get
            {
                return this.CustomSerializedChildRoleComparer;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] GetCustomSerializedChildElementInfo()
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] IORMCustomSerializedElement.GetCustomSerializedChildElementInfo()
        {
            return this.GetCustomSerializedChildElementInfo();
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo IORMCustomSerializedElement.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedAttributeInfo(attributeInfo, rolePlayedInfo);
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedLinkInfo(rolePlayedInfo);
        }
    }
    /// <summary>
    ///</summary>
    public partial class ReferenceModeKind : IORMCustomSerializedElement
    {
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations SupportedCustomSerializedOperations
        {
            get
            {
                return (ORMCustomSerializedElementSupportedOperations.ElementInfo | ORMCustomSerializedElementSupportedOperations.LinkInfo);
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations IORMCustomSerializedElement.SupportedCustomSerializedOperations
        {
            get
            {
                return this.SupportedCustomSerializedOperations;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo CustomSerializedElementInfo
        {
            get
            {
                return new ORMCustomSerializedElementInfo(null, "ReferenceModeKind", null, ORMCustomSerializedElementWriteStyle.Element, null);
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.CustomSerializedElementInfo
        {
            get
            {
                return this.CustomSerializedElementInfo;
            }
        }
        /// <summary>
        ///</summary>
        [CLSCompliant(false)]
        protected IComparer<MetaRoleInfo> CustomSerializedChildRoleComparer
        {
            get
            {
                return null;
            }
        }
        IComparer<MetaRoleInfo> IORMCustomSerializedElement.CustomSerializedChildRoleComparer
        {
            get
            {
                return this.CustomSerializedChildRoleComparer;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] GetCustomSerializedChildElementInfo()
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] IORMCustomSerializedElement.GetCustomSerializedChildElementInfo()
        {
            return this.GetCustomSerializedChildElementInfo();
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo IORMCustomSerializedElement.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedAttributeInfo(attributeInfo, rolePlayedInfo);
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            if ((rolePlayedInfo.Id == ReferenceModeHasReferenceModeKind.ReferenceModeCollectionMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, null, null, ORMCustomSerializedElementWriteStyle.NotWritten, null);
            }
            return ORMCustomSerializedElementInfo.Default;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedLinkInfo(rolePlayedInfo);
        }
    }
    /// <summary>
    ///</summary>
    public partial class FactType : IORMCustomSerializedElement
    {
        private static Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] myCustomSerializedChildElementInfo;
        private static IComparer<MetaRoleInfo> myCustomSortChildComparer;
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations SupportedCustomSerializedOperations
        {
            get
            {
                return (ORMCustomSerializedElementSupportedOperations.ChildElementInfo 
                            | (ORMCustomSerializedElementSupportedOperations.ElementInfo 
                            | (ORMCustomSerializedElementSupportedOperations.LinkInfo | ORMCustomSerializedElementSupportedOperations.CustomSortChildRoles)));
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations IORMCustomSerializedElement.SupportedCustomSerializedOperations
        {
            get
            {
                return this.SupportedCustomSerializedOperations;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo CustomSerializedElementInfo
        {
            get
            {
                return new ORMCustomSerializedElementInfo(null, "Fact", null, ORMCustomSerializedElementWriteStyle.Element, null);
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.CustomSerializedElementInfo
        {
            get
            {
                return this.CustomSerializedElementInfo;
            }
        }
        /// <summary>
        ///</summary>
        [CLSCompliant(false)]
        protected IComparer<MetaRoleInfo> CustomSerializedChildRoleComparer
        {
            get
            {
                IComparer<MetaRoleInfo> retVal = FactType.myCustomSortChildComparer;
                if ((null == retVal))
                {
                    retVal = new CustomSortChildComparer(this.Store);
                    FactType.myCustomSortChildComparer = retVal;
                }
                return retVal;
            }
        }
        IComparer<MetaRoleInfo> IORMCustomSerializedElement.CustomSerializedChildRoleComparer
        {
            get
            {
                return this.CustomSerializedChildRoleComparer;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] GetCustomSerializedChildElementInfo()
        {
            Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] ret = FactType.myCustomSerializedChildElementInfo;
            if ((ret == null))
            {
                ret = new Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[4];
                System.Guid[] guids0 = new System.Guid[1];
                guids0[0] = FactTypeHasRole.RoleCollectionMetaRoleGuid;
                ret[0] = new Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo(null, "FactRoles", null, ORMCustomSerializedElementWriteStyle.Element, null, guids0);
                System.Guid[] guids1 = new System.Guid[1];
                guids1[0] = FactTypeHasReadingOrder.ReadingOrderCollectionMetaRoleGuid;
                ret[1] = new Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo(null, "ReadingOrders", null, ORMCustomSerializedElementWriteStyle.Element, null, guids1);
                System.Guid[] guids2 = new System.Guid[1];
                guids2[0] = FactTypeHasReadingOrder.ReadingOrderCollectionMetaRoleGuid;
                ret[2] = new Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo(null, "ReadingOrders", null, ORMCustomSerializedElementWriteStyle.Element, null, guids2);
                System.Guid[] guids3 = new System.Guid[1];
                guids3[0] = FactTypeHasInternalConstraint.InternalConstraintCollectionMetaRoleGuid;
                ret[3] = new Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo(null, "InternalConstraints", null, ORMCustomSerializedElementWriteStyle.Element, null, guids3);
                FactType.myCustomSerializedChildElementInfo = ret;
            }
            return ret;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] IORMCustomSerializedElement.GetCustomSerializedChildElementInfo()
        {
            return this.GetCustomSerializedChildElementInfo();
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo IORMCustomSerializedElement.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedAttributeInfo(attributeInfo, rolePlayedInfo);
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            if ((rolePlayedInfo.Id == NestingEntityTypeHasFactType.NestingTypeMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, null, null, ORMCustomSerializedElementWriteStyle.NotWritten, null);
            }
            if ((rolePlayedInfo.Id == SingleColumnExternalFactConstraint.SingleColumnExternalConstraintCollectionMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, null, null, ORMCustomSerializedElementWriteStyle.NotWritten, null);
            }
            if ((rolePlayedInfo.Id == MultiColumnExternalFactConstraint.MultiColumnExternalConstraintCollectionMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, null, null, ORMCustomSerializedElementWriteStyle.NotWritten, null);
            }
            if ((rolePlayedInfo.Id == FactTypeHasFactTypeRequiresInternalUniquenessConstraintError.InternalUniquenessConstraintRequiredErrorMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, null, null, ORMCustomSerializedElementWriteStyle.NotWritten, null);
            }
            if ((rolePlayedInfo.Id == FactTypeHasFactTypeRequiresReadingError.ReadingRequiredErrorMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, null, null, ORMCustomSerializedElementWriteStyle.NotWritten, null);
            }
            return ORMCustomSerializedElementInfo.Default;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedLinkInfo(rolePlayedInfo);
        }
        private class CustomSortChildComparer : IComparer<MetaRoleInfo>
        {
            private Dictionary<MetaRoleInfo, int> myRoleOrderDictionary;
            /// <summary>
            ///</summary>
            public CustomSortChildComparer(Store store)
            {
                MetaDataDirectory metaDataDir = store.MetaDataDirectory;
                Dictionary<MetaRoleInfo, int> roleOrderDictionary = new Dictionary<MetaRoleInfo, int>();
                MetaRoleInfo metaRole;
                metaRole = metaDataDir.FindMetaRole(FactTypeHasRole.RoleCollectionMetaRoleGuid);
                roleOrderDictionary[metaRole.OppositeMetaRole] = 0;
                metaRole = metaDataDir.FindMetaRole(FactTypeHasReadingOrder.ReadingOrderCollectionMetaRoleGuid);
                roleOrderDictionary[metaRole.OppositeMetaRole] = 1;
                metaRole = metaDataDir.FindMetaRole(FactTypeHasReadingOrder.ReadingOrderCollectionMetaRoleGuid);
                roleOrderDictionary[metaRole.OppositeMetaRole] = 2;
                metaRole = metaDataDir.FindMetaRole(FactTypeHasInternalConstraint.InternalConstraintCollectionMetaRoleGuid);
                roleOrderDictionary[metaRole.OppositeMetaRole] = 3;
                metaRole = metaDataDir.FindMetaRole(NestingEntityTypeHasFactType.NestingTypeMetaRoleGuid);
                roleOrderDictionary[metaRole.OppositeMetaRole] = 4;
                metaRole = metaDataDir.FindMetaRole(SingleColumnExternalFactConstraint.SingleColumnExternalConstraintCollectionMetaRoleGuid);
                roleOrderDictionary[metaRole.OppositeMetaRole] = 5;
                metaRole = metaDataDir.FindMetaRole(MultiColumnExternalFactConstraint.MultiColumnExternalConstraintCollectionMetaRoleGuid);
                roleOrderDictionary[metaRole.OppositeMetaRole] = 6;
                metaRole = metaDataDir.FindMetaRole(FactTypeHasFactTypeRequiresInternalUniquenessConstraintError.InternalUniquenessConstraintRequiredErrorMetaRoleGuid);
                roleOrderDictionary[metaRole.OppositeMetaRole] = 7;
                metaRole = metaDataDir.FindMetaRole(FactTypeHasFactTypeRequiresReadingError.ReadingRequiredErrorMetaRoleGuid);
                roleOrderDictionary[metaRole.OppositeMetaRole] = 8;
                this.myRoleOrderDictionary = roleOrderDictionary;
            }
            /// <summary>
            ///</summary>
            public int Compare(MetaRoleInfo x, MetaRoleInfo y)
            {
                int xPos;
                if (!(this.myRoleOrderDictionary.TryGetValue(x, out xPos)))
                {
                    xPos = int.MaxValue;
                }
                int yPos;
                if (!(this.myRoleOrderDictionary.TryGetValue(y, out yPos)))
                {
                    yPos = int.MaxValue;
                }
                if ((xPos == yPos))
                {
                    return 0;
                }
                else
                {
                    if ((xPos < yPos))
                    {
                        return -1;
                    }
                }
                return 1;
            }
            /// <summary>
            ///</summary>
            public bool Equals(MetaRoleInfo x, MetaRoleInfo y)
            {
                return object.ReferenceEquals(x, y);
            }
            /// <summary>
            ///</summary>
            public int GetHashCode(MetaRoleInfo obj)
            {
                return obj.GetHashCode();
            }
        }
    }
    /// <summary>
    ///</summary>
    public partial class ReadingOrder : IORMCustomSerializedElement
    {
        private static Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] myCustomSerializedChildElementInfo;
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations SupportedCustomSerializedOperations
        {
            get
            {
                return (ORMCustomSerializedElementSupportedOperations.ChildElementInfo | ORMCustomSerializedElementSupportedOperations.LinkInfo);
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations IORMCustomSerializedElement.SupportedCustomSerializedOperations
        {
            get
            {
                return this.SupportedCustomSerializedOperations;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo CustomSerializedElementInfo
        {
            get
            {
                throw new System.NotSupportedException();
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.CustomSerializedElementInfo
        {
            get
            {
                return this.CustomSerializedElementInfo;
            }
        }
        /// <summary>
        ///</summary>
        [CLSCompliant(false)]
        protected IComparer<MetaRoleInfo> CustomSerializedChildRoleComparer
        {
            get
            {
                return null;
            }
        }
        IComparer<MetaRoleInfo> IORMCustomSerializedElement.CustomSerializedChildRoleComparer
        {
            get
            {
                return this.CustomSerializedChildRoleComparer;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] GetCustomSerializedChildElementInfo()
        {
            Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] ret = ReadingOrder.myCustomSerializedChildElementInfo;
            if ((ret == null))
            {
                ret = new Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[2];
                System.Guid[] guids0 = new System.Guid[1];
                guids0[0] = ReadingOrderHasReading.ReadingCollectionMetaRoleGuid;
                ret[0] = new Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo(null, "Readings", null, ORMCustomSerializedElementWriteStyle.Element, null, guids0);
                System.Guid[] guids1 = new System.Guid[1];
                guids1[0] = ReadingOrderHasRole.RoleCollectionMetaRoleGuid;
                ret[1] = new Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo(null, "RoleSequence", null, ORMCustomSerializedElementWriteStyle.Element, null, guids1);
                ReadingOrder.myCustomSerializedChildElementInfo = ret;
            }
            return ret;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] IORMCustomSerializedElement.GetCustomSerializedChildElementInfo()
        {
            return this.GetCustomSerializedChildElementInfo();
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo IORMCustomSerializedElement.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedAttributeInfo(attributeInfo, rolePlayedInfo);
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            if ((rolePlayedInfo.Id == ReadingOrderHasRole.RoleCollectionMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, "Role", null, ORMCustomSerializedElementWriteStyle.Element, null);
            }
            return ORMCustomSerializedElementInfo.Default;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedLinkInfo(rolePlayedInfo);
        }
    }
    /// <summary>
    ///</summary>
    public partial class Reading : IORMCustomSerializedElement
    {
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations SupportedCustomSerializedOperations
        {
            get
            {
                return (ORMCustomSerializedElementSupportedOperations.AttributeInfo | ORMCustomSerializedElementSupportedOperations.MixedTypedAttributes);
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations IORMCustomSerializedElement.SupportedCustomSerializedOperations
        {
            get
            {
                return this.SupportedCustomSerializedOperations;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo CustomSerializedElementInfo
        {
            get
            {
                throw new System.NotSupportedException();
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.CustomSerializedElementInfo
        {
            get
            {
                return this.CustomSerializedElementInfo;
            }
        }
        /// <summary>
        ///</summary>
        [CLSCompliant(false)]
        protected IComparer<MetaRoleInfo> CustomSerializedChildRoleComparer
        {
            get
            {
                return null;
            }
        }
        IComparer<MetaRoleInfo> IORMCustomSerializedElement.CustomSerializedChildRoleComparer
        {
            get
            {
                return this.CustomSerializedChildRoleComparer;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] GetCustomSerializedChildElementInfo()
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] IORMCustomSerializedElement.GetCustomSerializedChildElementInfo()
        {
            return this.GetCustomSerializedChildElementInfo();
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            if ((attributeInfo.Id == Reading.TextMetaAttributeGuid))
            {
                return new ORMCustomSerializedAttributeInfo(null, "Data", null, false, ORMCustomSerializedAttributeWriteStyle.Element, null);
            }
            if ((attributeInfo.Id == Reading.LanguageMetaAttributeGuid))
            {
                return new ORMCustomSerializedAttributeInfo(null, null, null, false, ORMCustomSerializedAttributeWriteStyle.NotWritten, null);
            }
            return ORMCustomSerializedAttributeInfo.Default;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo IORMCustomSerializedElement.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedAttributeInfo(attributeInfo, rolePlayedInfo);
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedLinkInfo(rolePlayedInfo);
        }
    }
    /// <summary>
    ///</summary>
    public partial class Role : IORMCustomSerializedElement
    {
        private static Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] myCustomSerializedChildElementInfo;
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations SupportedCustomSerializedOperations
        {
            get
            {
                return (ORMCustomSerializedElementSupportedOperations.ChildElementInfo 
                            | (ORMCustomSerializedElementSupportedOperations.AttributeInfo | ORMCustomSerializedElementSupportedOperations.LinkInfo));
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations IORMCustomSerializedElement.SupportedCustomSerializedOperations
        {
            get
            {
                return this.SupportedCustomSerializedOperations;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo CustomSerializedElementInfo
        {
            get
            {
                throw new System.NotSupportedException();
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.CustomSerializedElementInfo
        {
            get
            {
                return this.CustomSerializedElementInfo;
            }
        }
        /// <summary>
        ///</summary>
        [CLSCompliant(false)]
        protected IComparer<MetaRoleInfo> CustomSerializedChildRoleComparer
        {
            get
            {
                return null;
            }
        }
        IComparer<MetaRoleInfo> IORMCustomSerializedElement.CustomSerializedChildRoleComparer
        {
            get
            {
                return this.CustomSerializedChildRoleComparer;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] GetCustomSerializedChildElementInfo()
        {
            Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] ret = Role.myCustomSerializedChildElementInfo;
            if ((ret == null))
            {
                ret = new Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[1];
                System.Guid[] guids0 = new System.Guid[1];
                guids0[0] = FactTypeHasReadingOrder.ReadingOrderCollectionMetaRoleGuid;
                ret[0] = new Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo(null, "ReadingOrders", null, ORMCustomSerializedElementWriteStyle.Element, null, guids0);
                Role.myCustomSerializedChildElementInfo = ret;
            }
            return ret;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] IORMCustomSerializedElement.GetCustomSerializedChildElementInfo()
        {
            return this.GetCustomSerializedChildElementInfo();
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            if ((attributeInfo.Id == Role.IsMandatoryMetaAttributeGuid))
            {
                return new ORMCustomSerializedAttributeInfo(null, "IsMandatory", null, true, ORMCustomSerializedAttributeWriteStyle.Attribute, null);
            }
            if ((attributeInfo.Id == Role.MultiplicityMetaAttributeGuid))
            {
                return new ORMCustomSerializedAttributeInfo(null, "Multiplicity", null, true, ORMCustomSerializedAttributeWriteStyle.Attribute, null);
            }
            return ORMCustomSerializedAttributeInfo.Default;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo IORMCustomSerializedElement.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedAttributeInfo(attributeInfo, rolePlayedInfo);
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            if ((rolePlayedInfo.Id == ObjectTypePlaysRole.RolePlayerMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, "RolePlayer", null, ORMCustomSerializedElementWriteStyle.Element, null);
            }
            if ((rolePlayedInfo.Id == ConstraintRoleSequenceHasRole.ConstraintRoleSequenceCollectionMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, null, null, ORMCustomSerializedElementWriteStyle.NotWritten, null);
            }
            if ((rolePlayedInfo.Id == ReadingOrderHasRole.ReadingOrderMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, null, null, ORMCustomSerializedElementWriteStyle.NotWritten, null);
            }
            return ORMCustomSerializedElementInfo.Default;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedLinkInfo(rolePlayedInfo);
        }
    }
    /// <summary>
    ///</summary>
    public partial class EqualityConstraint : IORMCustomSerializedElement
    {
        private static Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] myCustomSerializedChildElementInfo;
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations SupportedCustomSerializedOperations
        {
            get
            {
                return (ORMCustomSerializedElementSupportedOperations.ChildElementInfo | ORMCustomSerializedElementSupportedOperations.LinkInfo);
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations IORMCustomSerializedElement.SupportedCustomSerializedOperations
        {
            get
            {
                return this.SupportedCustomSerializedOperations;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo CustomSerializedElementInfo
        {
            get
            {
                throw new System.NotSupportedException();
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.CustomSerializedElementInfo
        {
            get
            {
                return this.CustomSerializedElementInfo;
            }
        }
        /// <summary>
        ///</summary>
        [CLSCompliant(false)]
        protected IComparer<MetaRoleInfo> CustomSerializedChildRoleComparer
        {
            get
            {
                return null;
            }
        }
        IComparer<MetaRoleInfo> IORMCustomSerializedElement.CustomSerializedChildRoleComparer
        {
            get
            {
                return this.CustomSerializedChildRoleComparer;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] GetCustomSerializedChildElementInfo()
        {
            Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] ret = EqualityConstraint.myCustomSerializedChildElementInfo;
            if ((ret == null))
            {
                ret = new Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[1];
                System.Guid[] guids0 = new System.Guid[1];
                guids0[0] = MultiColumnExternalConstraintHasRoleSequence.RoleSequenceCollectionMetaRoleGuid;
                ret[0] = new Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo(null, "RoleSequences", null, ORMCustomSerializedElementWriteStyle.Element, null, guids0);
                EqualityConstraint.myCustomSerializedChildElementInfo = ret;
            }
            return ret;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] IORMCustomSerializedElement.GetCustomSerializedChildElementInfo()
        {
            return this.GetCustomSerializedChildElementInfo();
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo IORMCustomSerializedElement.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedAttributeInfo(attributeInfo, rolePlayedInfo);
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            if ((rolePlayedInfo.Id == MultiColumnExternalFactConstraint.FactTypeCollectionMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, null, null, ORMCustomSerializedElementWriteStyle.NotWritten, null);
            }
            if ((rolePlayedInfo.Id == MultiColumnExternalConstraintHasCompatibleRolePlayerTypeError.CompatibleRolePlayerTypeErrorCollectionMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, null, null, ORMCustomSerializedElementWriteStyle.NotWritten, null);
            }
            return ORMCustomSerializedElementInfo.Default;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedLinkInfo(rolePlayedInfo);
        }
    }
    /// <summary>
    ///</summary>
    public partial class ExclusionConstraint : IORMCustomSerializedElement
    {
        private static Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] myCustomSerializedChildElementInfo;
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations SupportedCustomSerializedOperations
        {
            get
            {
                return (ORMCustomSerializedElementSupportedOperations.ChildElementInfo | ORMCustomSerializedElementSupportedOperations.LinkInfo);
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations IORMCustomSerializedElement.SupportedCustomSerializedOperations
        {
            get
            {
                return this.SupportedCustomSerializedOperations;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo CustomSerializedElementInfo
        {
            get
            {
                throw new System.NotSupportedException();
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.CustomSerializedElementInfo
        {
            get
            {
                return this.CustomSerializedElementInfo;
            }
        }
        /// <summary>
        ///</summary>
        [CLSCompliant(false)]
        protected IComparer<MetaRoleInfo> CustomSerializedChildRoleComparer
        {
            get
            {
                return null;
            }
        }
        IComparer<MetaRoleInfo> IORMCustomSerializedElement.CustomSerializedChildRoleComparer
        {
            get
            {
                return this.CustomSerializedChildRoleComparer;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] GetCustomSerializedChildElementInfo()
        {
            Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] ret = ExclusionConstraint.myCustomSerializedChildElementInfo;
            if ((ret == null))
            {
                ret = new Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[1];
                System.Guid[] guids0 = new System.Guid[1];
                guids0[0] = MultiColumnExternalConstraintHasRoleSequence.RoleSequenceCollectionMetaRoleGuid;
                ret[0] = new Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo(null, "RoleSequences", null, ORMCustomSerializedElementWriteStyle.Element, null, guids0);
                ExclusionConstraint.myCustomSerializedChildElementInfo = ret;
            }
            return ret;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] IORMCustomSerializedElement.GetCustomSerializedChildElementInfo()
        {
            return this.GetCustomSerializedChildElementInfo();
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo IORMCustomSerializedElement.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedAttributeInfo(attributeInfo, rolePlayedInfo);
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            if ((rolePlayedInfo.Id == MultiColumnExternalFactConstraint.FactTypeCollectionMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, null, null, ORMCustomSerializedElementWriteStyle.NotWritten, null);
            }
            if ((rolePlayedInfo.Id == MultiColumnExternalConstraintHasCompatibleRolePlayerTypeError.CompatibleRolePlayerTypeErrorCollectionMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, null, null, ORMCustomSerializedElementWriteStyle.NotWritten, null);
            }
            return ORMCustomSerializedElementInfo.Default;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedLinkInfo(rolePlayedInfo);
        }
    }
    /// <summary>
    ///</summary>
    public partial class SubsetConstraint : IORMCustomSerializedElement
    {
        private static Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] myCustomSerializedChildElementInfo;
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations SupportedCustomSerializedOperations
        {
            get
            {
                return (ORMCustomSerializedElementSupportedOperations.ChildElementInfo | ORMCustomSerializedElementSupportedOperations.LinkInfo);
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations IORMCustomSerializedElement.SupportedCustomSerializedOperations
        {
            get
            {
                return this.SupportedCustomSerializedOperations;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo CustomSerializedElementInfo
        {
            get
            {
                throw new System.NotSupportedException();
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.CustomSerializedElementInfo
        {
            get
            {
                return this.CustomSerializedElementInfo;
            }
        }
        /// <summary>
        ///</summary>
        [CLSCompliant(false)]
        protected IComparer<MetaRoleInfo> CustomSerializedChildRoleComparer
        {
            get
            {
                return null;
            }
        }
        IComparer<MetaRoleInfo> IORMCustomSerializedElement.CustomSerializedChildRoleComparer
        {
            get
            {
                return this.CustomSerializedChildRoleComparer;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] GetCustomSerializedChildElementInfo()
        {
            Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] ret = SubsetConstraint.myCustomSerializedChildElementInfo;
            if ((ret == null))
            {
                ret = new Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[1];
                System.Guid[] guids0 = new System.Guid[1];
                guids0[0] = MultiColumnExternalConstraintHasRoleSequence.RoleSequenceCollectionMetaRoleGuid;
                ret[0] = new Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo(null, "RoleSequences", null, ORMCustomSerializedElementWriteStyle.Element, null, guids0);
                SubsetConstraint.myCustomSerializedChildElementInfo = ret;
            }
            return ret;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] IORMCustomSerializedElement.GetCustomSerializedChildElementInfo()
        {
            return this.GetCustomSerializedChildElementInfo();
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo IORMCustomSerializedElement.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedAttributeInfo(attributeInfo, rolePlayedInfo);
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            if ((rolePlayedInfo.Id == MultiColumnExternalFactConstraint.FactTypeCollectionMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, null, null, ORMCustomSerializedElementWriteStyle.NotWritten, null);
            }
            if ((rolePlayedInfo.Id == MultiColumnExternalConstraintHasCompatibleRolePlayerTypeError.CompatibleRolePlayerTypeErrorCollectionMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, null, null, ORMCustomSerializedElementWriteStyle.NotWritten, null);
            }
            return ORMCustomSerializedElementInfo.Default;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedLinkInfo(rolePlayedInfo);
        }
    }
    /// <summary>
    ///</summary>
    public partial class MultiColumnExternalConstraintRoleSequence : IORMCustomSerializedElement
    {
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations SupportedCustomSerializedOperations
        {
            get
            {
                return (ORMCustomSerializedElementSupportedOperations.ElementInfo | ORMCustomSerializedElementSupportedOperations.LinkInfo);
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations IORMCustomSerializedElement.SupportedCustomSerializedOperations
        {
            get
            {
                return this.SupportedCustomSerializedOperations;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo CustomSerializedElementInfo
        {
            get
            {
                return new ORMCustomSerializedElementInfo(null, "RoleSequence", null, ORMCustomSerializedElementWriteStyle.Element, null);
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.CustomSerializedElementInfo
        {
            get
            {
                return this.CustomSerializedElementInfo;
            }
        }
        /// <summary>
        ///</summary>
        [CLSCompliant(false)]
        protected IComparer<MetaRoleInfo> CustomSerializedChildRoleComparer
        {
            get
            {
                return null;
            }
        }
        IComparer<MetaRoleInfo> IORMCustomSerializedElement.CustomSerializedChildRoleComparer
        {
            get
            {
                return this.CustomSerializedChildRoleComparer;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] GetCustomSerializedChildElementInfo()
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] IORMCustomSerializedElement.GetCustomSerializedChildElementInfo()
        {
            return this.GetCustomSerializedChildElementInfo();
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo IORMCustomSerializedElement.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedAttributeInfo(attributeInfo, rolePlayedInfo);
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            if ((rolePlayedInfo.Id == ConstraintRoleSequenceHasRole.RoleCollectionMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, "Role", null, ORMCustomSerializedElementWriteStyle.Element, null);
            }
            return ORMCustomSerializedElementInfo.Default;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedLinkInfo(rolePlayedInfo);
        }
    }
    /// <summary>
    ///</summary>
    public partial class FrequencyConstraint : IORMCustomSerializedElement
    {
        private static Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] myCustomSerializedChildElementInfo;
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations SupportedCustomSerializedOperations
        {
            get
            {
                return (ORMCustomSerializedElementSupportedOperations.ChildElementInfo | ORMCustomSerializedElementSupportedOperations.LinkInfo);
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations IORMCustomSerializedElement.SupportedCustomSerializedOperations
        {
            get
            {
                return this.SupportedCustomSerializedOperations;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo CustomSerializedElementInfo
        {
            get
            {
                throw new System.NotSupportedException();
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.CustomSerializedElementInfo
        {
            get
            {
                return this.CustomSerializedElementInfo;
            }
        }
        /// <summary>
        ///</summary>
        [CLSCompliant(false)]
        protected IComparer<MetaRoleInfo> CustomSerializedChildRoleComparer
        {
            get
            {
                return null;
            }
        }
        IComparer<MetaRoleInfo> IORMCustomSerializedElement.CustomSerializedChildRoleComparer
        {
            get
            {
                return this.CustomSerializedChildRoleComparer;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] GetCustomSerializedChildElementInfo()
        {
            Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] ret = FrequencyConstraint.myCustomSerializedChildElementInfo;
            if ((ret == null))
            {
                ret = new Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[1];
                System.Guid[] guids0 = new System.Guid[1];
                guids0[0] = ConstraintRoleSequenceHasRole.RoleCollectionMetaRoleGuid;
                ret[0] = new Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo(null, "RoleSequence", null, ORMCustomSerializedElementWriteStyle.Element, null, guids0);
                FrequencyConstraint.myCustomSerializedChildElementInfo = ret;
            }
            return ret;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] IORMCustomSerializedElement.GetCustomSerializedChildElementInfo()
        {
            return this.GetCustomSerializedChildElementInfo();
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo IORMCustomSerializedElement.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedAttributeInfo(attributeInfo, rolePlayedInfo);
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            if ((rolePlayedInfo.Id == ConstraintRoleSequenceHasRole.RoleCollectionMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, "Role", null, ORMCustomSerializedElementWriteStyle.Element, null);
            }
            if ((rolePlayedInfo.Id == SingleColumnExternalFactConstraint.FactTypeCollectionMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, null, null, ORMCustomSerializedElementWriteStyle.NotWritten, null);
            }
            return ORMCustomSerializedElementInfo.Default;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedLinkInfo(rolePlayedInfo);
        }
    }
    /// <summary>
    ///</summary>
    public partial class DisjunctiveMandatoryConstraint : IORMCustomSerializedElement
    {
        private static Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] myCustomSerializedChildElementInfo;
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations SupportedCustomSerializedOperations
        {
            get
            {
                return (ORMCustomSerializedElementSupportedOperations.ChildElementInfo | ORMCustomSerializedElementSupportedOperations.LinkInfo);
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations IORMCustomSerializedElement.SupportedCustomSerializedOperations
        {
            get
            {
                return this.SupportedCustomSerializedOperations;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo CustomSerializedElementInfo
        {
            get
            {
                throw new System.NotSupportedException();
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.CustomSerializedElementInfo
        {
            get
            {
                return this.CustomSerializedElementInfo;
            }
        }
        /// <summary>
        ///</summary>
        [CLSCompliant(false)]
        protected IComparer<MetaRoleInfo> CustomSerializedChildRoleComparer
        {
            get
            {
                return null;
            }
        }
        IComparer<MetaRoleInfo> IORMCustomSerializedElement.CustomSerializedChildRoleComparer
        {
            get
            {
                return this.CustomSerializedChildRoleComparer;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] GetCustomSerializedChildElementInfo()
        {
            Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] ret = DisjunctiveMandatoryConstraint.myCustomSerializedChildElementInfo;
            if ((ret == null))
            {
                ret = new Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[1];
                System.Guid[] guids0 = new System.Guid[1];
                guids0[0] = ConstraintRoleSequenceHasRole.RoleCollectionMetaRoleGuid;
                ret[0] = new Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo(null, "RoleSequence", null, ORMCustomSerializedElementWriteStyle.Element, null, guids0);
                DisjunctiveMandatoryConstraint.myCustomSerializedChildElementInfo = ret;
            }
            return ret;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] IORMCustomSerializedElement.GetCustomSerializedChildElementInfo()
        {
            return this.GetCustomSerializedChildElementInfo();
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo IORMCustomSerializedElement.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedAttributeInfo(attributeInfo, rolePlayedInfo);
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            if ((rolePlayedInfo.Id == ConstraintRoleSequenceHasRole.RoleCollectionMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, "Role", null, ORMCustomSerializedElementWriteStyle.Element, null);
            }
            if ((rolePlayedInfo.Id == SingleColumnExternalFactConstraint.FactTypeCollectionMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, null, null, ORMCustomSerializedElementWriteStyle.NotWritten, null);
            }
            return ORMCustomSerializedElementInfo.Default;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedLinkInfo(rolePlayedInfo);
        }
    }
    /// <summary>
    ///</summary>
    public partial class ExternalUniquenessConstraint : IORMCustomSerializedElement
    {
        private static Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] myCustomSerializedChildElementInfo;
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations SupportedCustomSerializedOperations
        {
            get
            {
                return (ORMCustomSerializedElementSupportedOperations.ChildElementInfo | ORMCustomSerializedElementSupportedOperations.LinkInfo);
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations IORMCustomSerializedElement.SupportedCustomSerializedOperations
        {
            get
            {
                return this.SupportedCustomSerializedOperations;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo CustomSerializedElementInfo
        {
            get
            {
                throw new System.NotSupportedException();
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.CustomSerializedElementInfo
        {
            get
            {
                return this.CustomSerializedElementInfo;
            }
        }
        /// <summary>
        ///</summary>
        [CLSCompliant(false)]
        protected IComparer<MetaRoleInfo> CustomSerializedChildRoleComparer
        {
            get
            {
                return null;
            }
        }
        IComparer<MetaRoleInfo> IORMCustomSerializedElement.CustomSerializedChildRoleComparer
        {
            get
            {
                return this.CustomSerializedChildRoleComparer;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] GetCustomSerializedChildElementInfo()
        {
            Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] ret = ExternalUniquenessConstraint.myCustomSerializedChildElementInfo;
            if ((ret == null))
            {
                ret = new Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[1];
                System.Guid[] guids0 = new System.Guid[1];
                guids0[0] = ConstraintRoleSequenceHasRole.RoleCollectionMetaRoleGuid;
                ret[0] = new Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo(null, "RoleSequence", null, ORMCustomSerializedElementWriteStyle.Element, null, guids0);
                ExternalUniquenessConstraint.myCustomSerializedChildElementInfo = ret;
            }
            return ret;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] IORMCustomSerializedElement.GetCustomSerializedChildElementInfo()
        {
            return this.GetCustomSerializedChildElementInfo();
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo IORMCustomSerializedElement.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedAttributeInfo(attributeInfo, rolePlayedInfo);
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            if ((rolePlayedInfo.Id == ConstraintRoleSequenceHasRole.RoleCollectionMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, "Role", null, ORMCustomSerializedElementWriteStyle.Element, null);
            }
            if ((rolePlayedInfo.Id == SingleColumnExternalFactConstraint.FactTypeCollectionMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, null, null, ORMCustomSerializedElementWriteStyle.NotWritten, null);
            }
            return ORMCustomSerializedElementInfo.Default;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedLinkInfo(rolePlayedInfo);
        }
    }
    /// <summary>
    ///</summary>
    public partial class InternalUniquenessConstraint : IORMCustomSerializedElement
    {
        private static Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] myCustomSerializedChildElementInfo;
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations SupportedCustomSerializedOperations
        {
            get
            {
                return (ORMCustomSerializedElementSupportedOperations.ChildElementInfo 
                            | (ORMCustomSerializedElementSupportedOperations.AttributeInfo | ORMCustomSerializedElementSupportedOperations.LinkInfo));
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations IORMCustomSerializedElement.SupportedCustomSerializedOperations
        {
            get
            {
                return this.SupportedCustomSerializedOperations;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo CustomSerializedElementInfo
        {
            get
            {
                throw new System.NotSupportedException();
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.CustomSerializedElementInfo
        {
            get
            {
                return this.CustomSerializedElementInfo;
            }
        }
        /// <summary>
        ///</summary>
        [CLSCompliant(false)]
        protected IComparer<MetaRoleInfo> CustomSerializedChildRoleComparer
        {
            get
            {
                return null;
            }
        }
        IComparer<MetaRoleInfo> IORMCustomSerializedElement.CustomSerializedChildRoleComparer
        {
            get
            {
                return this.CustomSerializedChildRoleComparer;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] GetCustomSerializedChildElementInfo()
        {
            Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] ret = InternalUniquenessConstraint.myCustomSerializedChildElementInfo;
            if ((ret == null))
            {
                ret = new Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[1];
                System.Guid[] guids0 = new System.Guid[1];
                guids0[0] = ConstraintRoleSequenceHasRole.RoleCollectionMetaRoleGuid;
                ret[0] = new Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo(null, "RoleSequence", null, ORMCustomSerializedElementWriteStyle.Element, null, guids0);
                InternalUniquenessConstraint.myCustomSerializedChildElementInfo = ret;
            }
            return ret;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] IORMCustomSerializedElement.GetCustomSerializedChildElementInfo()
        {
            return this.GetCustomSerializedChildElementInfo();
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            if ((attributeInfo.Id == InternalUniquenessConstraint.NameMetaAttributeGuid))
            {
                return new ORMCustomSerializedAttributeInfo(null, "Name", null, false, ORMCustomSerializedAttributeWriteStyle.NotWritten, null);
            }
            return ORMCustomSerializedAttributeInfo.Default;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo IORMCustomSerializedElement.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedAttributeInfo(attributeInfo, rolePlayedInfo);
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            if ((rolePlayedInfo.Id == ConstraintRoleSequenceHasRole.RoleCollectionMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, "Role", null, ORMCustomSerializedElementWriteStyle.Element, null);
            }
            if ((rolePlayedInfo.Id == EntityTypeHasPreferredIdentifier.PreferredIdentifierForMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, null, null, ORMCustomSerializedElementWriteStyle.NotWritten, null);
            }
            if ((rolePlayedInfo.Id == InternalUniquenessConstraintHasNMinusOneError.NMinusOneErrorMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, null, null, ORMCustomSerializedElementWriteStyle.NotWritten, null);
            }
            return ORMCustomSerializedElementInfo.Default;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedLinkInfo(rolePlayedInfo);
        }
    }
    /// <summary>
    ///</summary>
    public partial class SimpleMandatoryConstraint : IORMCustomSerializedElement
    {
        private static Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] myCustomSerializedChildElementInfo;
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations SupportedCustomSerializedOperations
        {
            get
            {
                return (ORMCustomSerializedElementSupportedOperations.ChildElementInfo | ORMCustomSerializedElementSupportedOperations.LinkInfo);
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations IORMCustomSerializedElement.SupportedCustomSerializedOperations
        {
            get
            {
                return this.SupportedCustomSerializedOperations;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo CustomSerializedElementInfo
        {
            get
            {
                throw new System.NotSupportedException();
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.CustomSerializedElementInfo
        {
            get
            {
                return this.CustomSerializedElementInfo;
            }
        }
        /// <summary>
        ///</summary>
        [CLSCompliant(false)]
        protected IComparer<MetaRoleInfo> CustomSerializedChildRoleComparer
        {
            get
            {
                return null;
            }
        }
        IComparer<MetaRoleInfo> IORMCustomSerializedElement.CustomSerializedChildRoleComparer
        {
            get
            {
                return this.CustomSerializedChildRoleComparer;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] GetCustomSerializedChildElementInfo()
        {
            Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] ret = SimpleMandatoryConstraint.myCustomSerializedChildElementInfo;
            if ((ret == null))
            {
                ret = new Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[1];
                System.Guid[] guids0 = new System.Guid[1];
                guids0[0] = ConstraintRoleSequenceHasRole.RoleCollectionMetaRoleGuid;
                ret[0] = new Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo(null, "RoleSequence", null, ORMCustomSerializedElementWriteStyle.Element, null, guids0);
                SimpleMandatoryConstraint.myCustomSerializedChildElementInfo = ret;
            }
            return ret;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] IORMCustomSerializedElement.GetCustomSerializedChildElementInfo()
        {
            return this.GetCustomSerializedChildElementInfo();
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo IORMCustomSerializedElement.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedAttributeInfo(attributeInfo, rolePlayedInfo);
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            if ((rolePlayedInfo.Id == ConstraintRoleSequenceHasRole.RoleCollectionMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, "Role", null, ORMCustomSerializedElementWriteStyle.Element, null);
            }
            return ORMCustomSerializedElementInfo.Default;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedLinkInfo(rolePlayedInfo);
        }
    }
    /// <summary>
    ///</summary>
    public partial class ConstraintDuplicateNameError : IORMCustomSerializedElement
    {
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations SupportedCustomSerializedOperations
        {
            get
            {
                return ORMCustomSerializedElementSupportedOperations.LinkInfo;
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations IORMCustomSerializedElement.SupportedCustomSerializedOperations
        {
            get
            {
                return this.SupportedCustomSerializedOperations;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo CustomSerializedElementInfo
        {
            get
            {
                throw new System.NotSupportedException();
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.CustomSerializedElementInfo
        {
            get
            {
                return this.CustomSerializedElementInfo;
            }
        }
        /// <summary>
        ///</summary>
        [CLSCompliant(false)]
        protected IComparer<MetaRoleInfo> CustomSerializedChildRoleComparer
        {
            get
            {
                return null;
            }
        }
        IComparer<MetaRoleInfo> IORMCustomSerializedElement.CustomSerializedChildRoleComparer
        {
            get
            {
                return this.CustomSerializedChildRoleComparer;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] GetCustomSerializedChildElementInfo()
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] IORMCustomSerializedElement.GetCustomSerializedChildElementInfo()
        {
            return this.GetCustomSerializedChildElementInfo();
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo IORMCustomSerializedElement.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedAttributeInfo(attributeInfo, rolePlayedInfo);
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            if ((rolePlayedInfo.Id == MultiColumnExternalConstraintHasDuplicateNameError.MultiColumnExternalConstraintCollectionMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, "Constraint", null, ORMCustomSerializedElementWriteStyle.Element, null);
            }
            return ORMCustomSerializedElementInfo.Default;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedLinkInfo(rolePlayedInfo);
        }
    }
    /// <summary>
    ///</summary>
    public partial class FactTypeDuplicateNameError : IORMCustomSerializedElement
    {
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations SupportedCustomSerializedOperations
        {
            get
            {
                return ORMCustomSerializedElementSupportedOperations.LinkInfo;
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations IORMCustomSerializedElement.SupportedCustomSerializedOperations
        {
            get
            {
                return this.SupportedCustomSerializedOperations;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo CustomSerializedElementInfo
        {
            get
            {
                throw new System.NotSupportedException();
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.CustomSerializedElementInfo
        {
            get
            {
                return this.CustomSerializedElementInfo;
            }
        }
        /// <summary>
        ///</summary>
        [CLSCompliant(false)]
        protected IComparer<MetaRoleInfo> CustomSerializedChildRoleComparer
        {
            get
            {
                return null;
            }
        }
        IComparer<MetaRoleInfo> IORMCustomSerializedElement.CustomSerializedChildRoleComparer
        {
            get
            {
                return this.CustomSerializedChildRoleComparer;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] GetCustomSerializedChildElementInfo()
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] IORMCustomSerializedElement.GetCustomSerializedChildElementInfo()
        {
            return this.GetCustomSerializedChildElementInfo();
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo IORMCustomSerializedElement.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedAttributeInfo(attributeInfo, rolePlayedInfo);
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            if ((rolePlayedInfo.Id == FactTypeHasDuplicateNameError.FactTypeCollectionMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, "Facts", null, ORMCustomSerializedElementWriteStyle.Element, null);
            }
            return ORMCustomSerializedElementInfo.Default;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedLinkInfo(rolePlayedInfo);
        }
    }
    /// <summary>
    ///</summary>
    public partial class ObjectTypeDuplicateNameError : IORMCustomSerializedElement
    {
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations SupportedCustomSerializedOperations
        {
            get
            {
                return ORMCustomSerializedElementSupportedOperations.LinkInfo;
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations IORMCustomSerializedElement.SupportedCustomSerializedOperations
        {
            get
            {
                return this.SupportedCustomSerializedOperations;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo CustomSerializedElementInfo
        {
            get
            {
                throw new System.NotSupportedException();
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.CustomSerializedElementInfo
        {
            get
            {
                return this.CustomSerializedElementInfo;
            }
        }
        /// <summary>
        ///</summary>
        [CLSCompliant(false)]
        protected IComparer<MetaRoleInfo> CustomSerializedChildRoleComparer
        {
            get
            {
                return null;
            }
        }
        IComparer<MetaRoleInfo> IORMCustomSerializedElement.CustomSerializedChildRoleComparer
        {
            get
            {
                return this.CustomSerializedChildRoleComparer;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] GetCustomSerializedChildElementInfo()
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] IORMCustomSerializedElement.GetCustomSerializedChildElementInfo()
        {
            return this.GetCustomSerializedChildElementInfo();
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo IORMCustomSerializedElement.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedAttributeInfo(attributeInfo, rolePlayedInfo);
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            if ((rolePlayedInfo.Id == ObjectTypeHasDuplicateNameError.ObjectTypeCollectionMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, "Objects", null, ORMCustomSerializedElementWriteStyle.Element, null);
            }
            return ORMCustomSerializedElementInfo.Default;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedLinkInfo(rolePlayedInfo);
        }
    }
    /// <summary>
    ///</summary>
    public partial class ExternalConstraintRoleSequenceArityMismatch : IORMCustomSerializedElement
    {
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations SupportedCustomSerializedOperations
        {
            get
            {
                return ORMCustomSerializedElementSupportedOperations.LinkInfo;
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations IORMCustomSerializedElement.SupportedCustomSerializedOperations
        {
            get
            {
                return this.SupportedCustomSerializedOperations;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo CustomSerializedElementInfo
        {
            get
            {
                throw new System.NotSupportedException();
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.CustomSerializedElementInfo
        {
            get
            {
                return this.CustomSerializedElementInfo;
            }
        }
        /// <summary>
        ///</summary>
        [CLSCompliant(false)]
        protected IComparer<MetaRoleInfo> CustomSerializedChildRoleComparer
        {
            get
            {
                return null;
            }
        }
        IComparer<MetaRoleInfo> IORMCustomSerializedElement.CustomSerializedChildRoleComparer
        {
            get
            {
                return this.CustomSerializedChildRoleComparer;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] GetCustomSerializedChildElementInfo()
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] IORMCustomSerializedElement.GetCustomSerializedChildElementInfo()
        {
            return this.GetCustomSerializedChildElementInfo();
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo IORMCustomSerializedElement.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedAttributeInfo(attributeInfo, rolePlayedInfo);
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            if ((rolePlayedInfo.Id == MultiColumnExternalConstraintHasExternalConstraintRoleSequenceArityMismatch.ConstraintMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, "Constraint", null, ORMCustomSerializedElementWriteStyle.Element, null);
            }
            return ORMCustomSerializedElementInfo.Default;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedLinkInfo(rolePlayedInfo);
        }
    }
    /// <summary>
    ///</summary>
    public partial class FactTypeRequiresInternalUniquenessConstraintError : IORMCustomSerializedElement
    {
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations SupportedCustomSerializedOperations
        {
            get
            {
                return ORMCustomSerializedElementSupportedOperations.LinkInfo;
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations IORMCustomSerializedElement.SupportedCustomSerializedOperations
        {
            get
            {
                return this.SupportedCustomSerializedOperations;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo CustomSerializedElementInfo
        {
            get
            {
                throw new System.NotSupportedException();
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.CustomSerializedElementInfo
        {
            get
            {
                return this.CustomSerializedElementInfo;
            }
        }
        /// <summary>
        ///</summary>
        [CLSCompliant(false)]
        protected IComparer<MetaRoleInfo> CustomSerializedChildRoleComparer
        {
            get
            {
                return null;
            }
        }
        IComparer<MetaRoleInfo> IORMCustomSerializedElement.CustomSerializedChildRoleComparer
        {
            get
            {
                return this.CustomSerializedChildRoleComparer;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] GetCustomSerializedChildElementInfo()
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] IORMCustomSerializedElement.GetCustomSerializedChildElementInfo()
        {
            return this.GetCustomSerializedChildElementInfo();
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo IORMCustomSerializedElement.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedAttributeInfo(attributeInfo, rolePlayedInfo);
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            if ((rolePlayedInfo.Id == FactTypeHasFactTypeRequiresInternalUniquenessConstraintError.FactTypeMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, "Fact", null, ORMCustomSerializedElementWriteStyle.Element, null);
            }
            return ORMCustomSerializedElementInfo.Default;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedLinkInfo(rolePlayedInfo);
        }
    }
    /// <summary>
    ///</summary>
    public partial class FactTypeRequiresReadingError : IORMCustomSerializedElement
    {
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations SupportedCustomSerializedOperations
        {
            get
            {
                return ORMCustomSerializedElementSupportedOperations.LinkInfo;
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations IORMCustomSerializedElement.SupportedCustomSerializedOperations
        {
            get
            {
                return this.SupportedCustomSerializedOperations;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo CustomSerializedElementInfo
        {
            get
            {
                throw new System.NotSupportedException();
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.CustomSerializedElementInfo
        {
            get
            {
                return this.CustomSerializedElementInfo;
            }
        }
        /// <summary>
        ///</summary>
        [CLSCompliant(false)]
        protected IComparer<MetaRoleInfo> CustomSerializedChildRoleComparer
        {
            get
            {
                return null;
            }
        }
        IComparer<MetaRoleInfo> IORMCustomSerializedElement.CustomSerializedChildRoleComparer
        {
            get
            {
                return this.CustomSerializedChildRoleComparer;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] GetCustomSerializedChildElementInfo()
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] IORMCustomSerializedElement.GetCustomSerializedChildElementInfo()
        {
            return this.GetCustomSerializedChildElementInfo();
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo IORMCustomSerializedElement.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedAttributeInfo(attributeInfo, rolePlayedInfo);
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            if ((rolePlayedInfo.Id == FactTypeHasFactTypeRequiresReadingError.FactTypeMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, "Fact", null, ORMCustomSerializedElementWriteStyle.Element, null);
            }
            return ORMCustomSerializedElementInfo.Default;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedLinkInfo(rolePlayedInfo);
        }
    }
    /// <summary>
    ///</summary>
    public partial class TooFewReadingRolesError : IORMCustomSerializedElement
    {
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations SupportedCustomSerializedOperations
        {
            get
            {
                return ORMCustomSerializedElementSupportedOperations.LinkInfo;
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations IORMCustomSerializedElement.SupportedCustomSerializedOperations
        {
            get
            {
                return this.SupportedCustomSerializedOperations;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo CustomSerializedElementInfo
        {
            get
            {
                throw new System.NotSupportedException();
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.CustomSerializedElementInfo
        {
            get
            {
                return this.CustomSerializedElementInfo;
            }
        }
        /// <summary>
        ///</summary>
        [CLSCompliant(false)]
        protected IComparer<MetaRoleInfo> CustomSerializedChildRoleComparer
        {
            get
            {
                return null;
            }
        }
        IComparer<MetaRoleInfo> IORMCustomSerializedElement.CustomSerializedChildRoleComparer
        {
            get
            {
                return this.CustomSerializedChildRoleComparer;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] GetCustomSerializedChildElementInfo()
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] IORMCustomSerializedElement.GetCustomSerializedChildElementInfo()
        {
            return this.GetCustomSerializedChildElementInfo();
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo IORMCustomSerializedElement.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedAttributeInfo(attributeInfo, rolePlayedInfo);
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            if ((rolePlayedInfo.Id == ReadingHasTooFewRolesError.ReadingMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, "Reading", null, ORMCustomSerializedElementWriteStyle.Element, null);
            }
            return ORMCustomSerializedElementInfo.Default;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedLinkInfo(rolePlayedInfo);
        }
    }
    /// <summary>
    ///</summary>
    public partial class TooFewRoleSequencesError : IORMCustomSerializedElement
    {
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations SupportedCustomSerializedOperations
        {
            get
            {
                return ORMCustomSerializedElementSupportedOperations.LinkInfo;
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations IORMCustomSerializedElement.SupportedCustomSerializedOperations
        {
            get
            {
                return this.SupportedCustomSerializedOperations;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo CustomSerializedElementInfo
        {
            get
            {
                throw new System.NotSupportedException();
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.CustomSerializedElementInfo
        {
            get
            {
                return this.CustomSerializedElementInfo;
            }
        }
        /// <summary>
        ///</summary>
        [CLSCompliant(false)]
        protected IComparer<MetaRoleInfo> CustomSerializedChildRoleComparer
        {
            get
            {
                return null;
            }
        }
        IComparer<MetaRoleInfo> IORMCustomSerializedElement.CustomSerializedChildRoleComparer
        {
            get
            {
                return this.CustomSerializedChildRoleComparer;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] GetCustomSerializedChildElementInfo()
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] IORMCustomSerializedElement.GetCustomSerializedChildElementInfo()
        {
            return this.GetCustomSerializedChildElementInfo();
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo IORMCustomSerializedElement.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedAttributeInfo(attributeInfo, rolePlayedInfo);
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            if ((rolePlayedInfo.Id == ExternalConstraintHasTooFewRoleSequencesError.ConstraintMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, "Constraint", null, ORMCustomSerializedElementWriteStyle.Element, null);
            }
            return ORMCustomSerializedElementInfo.Default;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedLinkInfo(rolePlayedInfo);
        }
    }
    /// <summary>
    ///</summary>
    public partial class TooManyReadingRolesError : IORMCustomSerializedElement
    {
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations SupportedCustomSerializedOperations
        {
            get
            {
                return ORMCustomSerializedElementSupportedOperations.LinkInfo;
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations IORMCustomSerializedElement.SupportedCustomSerializedOperations
        {
            get
            {
                return this.SupportedCustomSerializedOperations;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo CustomSerializedElementInfo
        {
            get
            {
                throw new System.NotSupportedException();
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.CustomSerializedElementInfo
        {
            get
            {
                return this.CustomSerializedElementInfo;
            }
        }
        /// <summary>
        ///</summary>
        [CLSCompliant(false)]
        protected IComparer<MetaRoleInfo> CustomSerializedChildRoleComparer
        {
            get
            {
                return null;
            }
        }
        IComparer<MetaRoleInfo> IORMCustomSerializedElement.CustomSerializedChildRoleComparer
        {
            get
            {
                return this.CustomSerializedChildRoleComparer;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] GetCustomSerializedChildElementInfo()
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] IORMCustomSerializedElement.GetCustomSerializedChildElementInfo()
        {
            return this.GetCustomSerializedChildElementInfo();
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo IORMCustomSerializedElement.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedAttributeInfo(attributeInfo, rolePlayedInfo);
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            if ((rolePlayedInfo.Id == ReadingHasTooManyRolesError.ReadingMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, "Reading", null, ORMCustomSerializedElementWriteStyle.Element, null);
            }
            return ORMCustomSerializedElementInfo.Default;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedLinkInfo(rolePlayedInfo);
        }
    }
    /// <summary>
    ///</summary>
    public partial class TooManyRoleSequenceError : IORMCustomSerializedElement
    {
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations SupportedCustomSerializedOperations
        {
            get
            {
                return ORMCustomSerializedElementSupportedOperations.LinkInfo;
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations IORMCustomSerializedElement.SupportedCustomSerializedOperations
        {
            get
            {
                return this.SupportedCustomSerializedOperations;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo CustomSerializedElementInfo
        {
            get
            {
                throw new System.NotSupportedException();
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.CustomSerializedElementInfo
        {
            get
            {
                return this.CustomSerializedElementInfo;
            }
        }
        /// <summary>
        ///</summary>
        [CLSCompliant(false)]
        protected IComparer<MetaRoleInfo> CustomSerializedChildRoleComparer
        {
            get
            {
                return null;
            }
        }
        IComparer<MetaRoleInfo> IORMCustomSerializedElement.CustomSerializedChildRoleComparer
        {
            get
            {
                return this.CustomSerializedChildRoleComparer;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] GetCustomSerializedChildElementInfo()
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] IORMCustomSerializedElement.GetCustomSerializedChildElementInfo()
        {
            return this.GetCustomSerializedChildElementInfo();
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo IORMCustomSerializedElement.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedAttributeInfo(attributeInfo, rolePlayedInfo);
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            if ((rolePlayedInfo.Id == ExternalConstraintHasTooManyRoleSequencesError.ConstraintMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, "Constraint", null, ORMCustomSerializedElementWriteStyle.Element, null);
            }
            return ORMCustomSerializedElementInfo.Default;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedLinkInfo(rolePlayedInfo);
        }
    }
    /// <summary>
    ///</summary>
    public partial class DataTypeNotSpecifiedError : IORMCustomSerializedElement
    {
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations SupportedCustomSerializedOperations
        {
            get
            {
                return ORMCustomSerializedElementSupportedOperations.LinkInfo;
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations IORMCustomSerializedElement.SupportedCustomSerializedOperations
        {
            get
            {
                return this.SupportedCustomSerializedOperations;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo CustomSerializedElementInfo
        {
            get
            {
                throw new System.NotSupportedException();
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.CustomSerializedElementInfo
        {
            get
            {
                return this.CustomSerializedElementInfo;
            }
        }
        /// <summary>
        ///</summary>
        [CLSCompliant(false)]
        protected IComparer<MetaRoleInfo> CustomSerializedChildRoleComparer
        {
            get
            {
                return null;
            }
        }
        IComparer<MetaRoleInfo> IORMCustomSerializedElement.CustomSerializedChildRoleComparer
        {
            get
            {
                return this.CustomSerializedChildRoleComparer;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] GetCustomSerializedChildElementInfo()
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] IORMCustomSerializedElement.GetCustomSerializedChildElementInfo()
        {
            return this.GetCustomSerializedChildElementInfo();
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo IORMCustomSerializedElement.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedAttributeInfo(attributeInfo, rolePlayedInfo);
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            if ((rolePlayedInfo.Id == ValueTypeHasUnspecifiedDataTypeError.ValueTypeHasDataTypeMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, "ConceptualDataType", null, ORMCustomSerializedElementWriteStyle.Element, null);
            }
            return ORMCustomSerializedElementInfo.Default;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedLinkInfo(rolePlayedInfo);
        }
    }
    /// <summary>
    ///</summary>
    public partial class NMinusOneError : IORMCustomSerializedElement
    {
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations SupportedCustomSerializedOperations
        {
            get
            {
                return ORMCustomSerializedElementSupportedOperations.LinkInfo;
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations IORMCustomSerializedElement.SupportedCustomSerializedOperations
        {
            get
            {
                return this.SupportedCustomSerializedOperations;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo CustomSerializedElementInfo
        {
            get
            {
                throw new System.NotSupportedException();
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.CustomSerializedElementInfo
        {
            get
            {
                return this.CustomSerializedElementInfo;
            }
        }
        /// <summary>
        ///</summary>
        [CLSCompliant(false)]
        protected IComparer<MetaRoleInfo> CustomSerializedChildRoleComparer
        {
            get
            {
                return null;
            }
        }
        IComparer<MetaRoleInfo> IORMCustomSerializedElement.CustomSerializedChildRoleComparer
        {
            get
            {
                return this.CustomSerializedChildRoleComparer;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] GetCustomSerializedChildElementInfo()
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] IORMCustomSerializedElement.GetCustomSerializedChildElementInfo()
        {
            return this.GetCustomSerializedChildElementInfo();
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo IORMCustomSerializedElement.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedAttributeInfo(attributeInfo, rolePlayedInfo);
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            if ((rolePlayedInfo.Id == InternalUniquenessConstraintHasNMinusOneError.ConstraintMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, "InternalUniquenessConstraint", null, ORMCustomSerializedElementWriteStyle.Element, null);
            }
            return ORMCustomSerializedElementInfo.Default;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedLinkInfo(rolePlayedInfo);
        }
    }
    /// <summary>
    ///</summary>
    public partial class CompatibleRolePlayerTypeError : IORMCustomSerializedElement
    {
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations SupportedCustomSerializedOperations
        {
            get
            {
                return ORMCustomSerializedElementSupportedOperations.LinkInfo;
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations IORMCustomSerializedElement.SupportedCustomSerializedOperations
        {
            get
            {
                return this.SupportedCustomSerializedOperations;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo CustomSerializedElementInfo
        {
            get
            {
                throw new System.NotSupportedException();
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.CustomSerializedElementInfo
        {
            get
            {
                return this.CustomSerializedElementInfo;
            }
        }
        /// <summary>
        ///</summary>
        [CLSCompliant(false)]
        protected IComparer<MetaRoleInfo> CustomSerializedChildRoleComparer
        {
            get
            {
                return null;
            }
        }
        IComparer<MetaRoleInfo> IORMCustomSerializedElement.CustomSerializedChildRoleComparer
        {
            get
            {
                return this.CustomSerializedChildRoleComparer;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] GetCustomSerializedChildElementInfo()
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] IORMCustomSerializedElement.GetCustomSerializedChildElementInfo()
        {
            return this.GetCustomSerializedChildElementInfo();
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo IORMCustomSerializedElement.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedAttributeInfo(attributeInfo, rolePlayedInfo);
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            if ((rolePlayedInfo.Id == MultiColumnExternalConstraintHasCompatibleRolePlayerTypeError.MultiColumnExternalConstraintMetaRoleGuid))
            {
                return new ORMCustomSerializedElementInfo(null, "Constraint", null, ORMCustomSerializedElementWriteStyle.Element, null);
            }
            return ORMCustomSerializedElementInfo.Default;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedLinkInfo(rolePlayedInfo);
        }
    }
}
namespace Northface.Tools.ORM.ShapeModel
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using Microsoft.VisualStudio.Modeling;
    using Microsoft.VisualStudio.Modeling.Diagrams;
    using Northface.Tools.ORM.Shell;
    
    /// <summary>
    ///</summary>
    public partial class ORMShapeModel : IORMCustomSerializedMetaModel
    {
        private Dictionary<MetaClassInfo, object> myCustomSerializationOmissions;
        /// <summary>
        ///</summary>
        protected string DefaultElementPrefix
        {
            get
            {
                return "ormDiagram";
            }
        }
        string IORMCustomSerializedMetaModel.DefaultElementPrefix
        {
            get
            {
                return this.DefaultElementPrefix;
            }
        }
        /// <summary>
        ///</summary>
        protected string[,] GetCustomElementNamespaces()
        {
            string[,] ret = new string[1, 2];
            ret[0, 0] = "ormDiagram";
            ret[0, 1] = "http://Schemas.Northface.edu/ORM/ORMDiagram";
            return ret;
        }
        string[,] IORMCustomSerializedMetaModel.GetCustomElementNamespaces()
        {
            return this.GetCustomElementNamespaces();
        }
        private Dictionary<MetaClassInfo, object> BuildCustomSerializationOmissions(Store store)
        {
            Dictionary<MetaClassInfo, object> retVal = new Dictionary<MetaClassInfo, object>();
            MetaDataDirectory dataDir = store.MetaDataDirectory;
            retVal[dataDir.FindMetaClass(ExternalConstraintLink.MetaClassGuid)] = null;
            retVal[dataDir.FindMetaClass(ValueRangeLink.MetaClassGuid)] = null;
            retVal[dataDir.FindMetaClass(RolePlayerLink.MetaClassGuid)] = null;
            retVal[dataDir.FindMetaClass(SubtypeLink.MetaClassGuid)] = null;
            retVal[dataDir.FindMetaRelationship(Microsoft.VisualStudio.Modeling.Diagrams.LinkConnectsToNode.MetaRelationshipGuid)] = null;
            return retVal;
        }
        /// <summary>
        ///</summary>
        protected bool ShouldSerializeMetaClass(Store store, MetaClassInfo classInfo)
        {
            Dictionary<MetaClassInfo, object> omissions = this.myCustomSerializationOmissions;
            if ((omissions == null))
            {
                omissions = this.BuildCustomSerializationOmissions(store);
                this.myCustomSerializationOmissions = omissions;
            }
            return !(omissions.ContainsKey(classInfo));
        }
        bool IORMCustomSerializedMetaModel.ShouldSerializeMetaClass(Store store, MetaClassInfo classInfo)
        {
            return this.ShouldSerializeMetaClass(store, classInfo);
        }
    }
    /// <summary>
    ///</summary>
    public partial class ObjectTypeShape : IORMCustomSerializedElement
    {
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations SupportedCustomSerializedOperations
        {
            get
            {
                return ORMCustomSerializedElementSupportedOperations.AttributeInfo;
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations IORMCustomSerializedElement.SupportedCustomSerializedOperations
        {
            get
            {
                return this.SupportedCustomSerializedOperations;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo CustomSerializedElementInfo
        {
            get
            {
                throw new System.NotSupportedException();
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.CustomSerializedElementInfo
        {
            get
            {
                return this.CustomSerializedElementInfo;
            }
        }
        /// <summary>
        ///</summary>
        [CLSCompliant(false)]
        protected IComparer<MetaRoleInfo> CustomSerializedChildRoleComparer
        {
            get
            {
                return null;
            }
        }
        IComparer<MetaRoleInfo> IORMCustomSerializedElement.CustomSerializedChildRoleComparer
        {
            get
            {
                return this.CustomSerializedChildRoleComparer;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] GetCustomSerializedChildElementInfo()
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] IORMCustomSerializedElement.GetCustomSerializedChildElementInfo()
        {
            return this.GetCustomSerializedChildElementInfo();
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            if ((attributeInfo.Id == ObjectTypeShape.IsExpandedMetaAttributeGuid))
            {
                return new ORMCustomSerializedAttributeInfo(null, null, null, true, ORMCustomSerializedAttributeWriteStyle.Attribute, null);
            }
            if ((attributeInfo.Id == ObjectTypeShape.AbsoluteBoundsMetaAttributeGuid))
            {
                return new ORMCustomSerializedAttributeInfo(null, null, null, true, ORMCustomSerializedAttributeWriteStyle.Attribute, null);
            }
            return ORMCustomSerializedAttributeInfo.Default;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo IORMCustomSerializedElement.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedAttributeInfo(attributeInfo, rolePlayedInfo);
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedLinkInfo(rolePlayedInfo);
        }
    }
    /// <summary>
    ///</summary>
    public partial class FactTypeShape : IORMCustomSerializedElement
    {
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations SupportedCustomSerializedOperations
        {
            get
            {
                return ORMCustomSerializedElementSupportedOperations.AttributeInfo;
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations IORMCustomSerializedElement.SupportedCustomSerializedOperations
        {
            get
            {
                return this.SupportedCustomSerializedOperations;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo CustomSerializedElementInfo
        {
            get
            {
                throw new System.NotSupportedException();
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.CustomSerializedElementInfo
        {
            get
            {
                return this.CustomSerializedElementInfo;
            }
        }
        /// <summary>
        ///</summary>
        [CLSCompliant(false)]
        protected IComparer<MetaRoleInfo> CustomSerializedChildRoleComparer
        {
            get
            {
                return null;
            }
        }
        IComparer<MetaRoleInfo> IORMCustomSerializedElement.CustomSerializedChildRoleComparer
        {
            get
            {
                return this.CustomSerializedChildRoleComparer;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] GetCustomSerializedChildElementInfo()
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] IORMCustomSerializedElement.GetCustomSerializedChildElementInfo()
        {
            return this.GetCustomSerializedChildElementInfo();
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            if ((attributeInfo.Id == FactTypeShape.IsExpandedMetaAttributeGuid))
            {
                return new ORMCustomSerializedAttributeInfo(null, null, null, true, ORMCustomSerializedAttributeWriteStyle.Attribute, null);
            }
            if ((attributeInfo.Id == FactTypeShape.AbsoluteBoundsMetaAttributeGuid))
            {
                return new ORMCustomSerializedAttributeInfo(null, null, null, true, ORMCustomSerializedAttributeWriteStyle.Attribute, null);
            }
            return ORMCustomSerializedAttributeInfo.Default;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo IORMCustomSerializedElement.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedAttributeInfo(attributeInfo, rolePlayedInfo);
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedLinkInfo(rolePlayedInfo);
        }
    }
    /// <summary>
    ///</summary>
    public partial class ObjectifiedFactTypeNameShape : IORMCustomSerializedElement
    {
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations SupportedCustomSerializedOperations
        {
            get
            {
                return ORMCustomSerializedElementSupportedOperations.AttributeInfo;
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations IORMCustomSerializedElement.SupportedCustomSerializedOperations
        {
            get
            {
                return this.SupportedCustomSerializedOperations;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo CustomSerializedElementInfo
        {
            get
            {
                throw new System.NotSupportedException();
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.CustomSerializedElementInfo
        {
            get
            {
                return this.CustomSerializedElementInfo;
            }
        }
        /// <summary>
        ///</summary>
        [CLSCompliant(false)]
        protected IComparer<MetaRoleInfo> CustomSerializedChildRoleComparer
        {
            get
            {
                return null;
            }
        }
        IComparer<MetaRoleInfo> IORMCustomSerializedElement.CustomSerializedChildRoleComparer
        {
            get
            {
                return this.CustomSerializedChildRoleComparer;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] GetCustomSerializedChildElementInfo()
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] IORMCustomSerializedElement.GetCustomSerializedChildElementInfo()
        {
            return this.GetCustomSerializedChildElementInfo();
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            if ((attributeInfo.Id == ObjectifiedFactTypeNameShape.IsExpandedMetaAttributeGuid))
            {
                return new ORMCustomSerializedAttributeInfo(null, null, null, true, ORMCustomSerializedAttributeWriteStyle.Attribute, null);
            }
            if ((attributeInfo.Id == ObjectifiedFactTypeNameShape.AbsoluteBoundsMetaAttributeGuid))
            {
                return new ORMCustomSerializedAttributeInfo(null, null, null, true, ORMCustomSerializedAttributeWriteStyle.Attribute, null);
            }
            return ORMCustomSerializedAttributeInfo.Default;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo IORMCustomSerializedElement.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedAttributeInfo(attributeInfo, rolePlayedInfo);
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedLinkInfo(rolePlayedInfo);
        }
    }
    /// <summary>
    ///</summary>
    public partial class ReadingShape : IORMCustomSerializedElement
    {
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations SupportedCustomSerializedOperations
        {
            get
            {
                return ORMCustomSerializedElementSupportedOperations.AttributeInfo;
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations IORMCustomSerializedElement.SupportedCustomSerializedOperations
        {
            get
            {
                return this.SupportedCustomSerializedOperations;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo CustomSerializedElementInfo
        {
            get
            {
                throw new System.NotSupportedException();
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.CustomSerializedElementInfo
        {
            get
            {
                return this.CustomSerializedElementInfo;
            }
        }
        /// <summary>
        ///</summary>
        [CLSCompliant(false)]
        protected IComparer<MetaRoleInfo> CustomSerializedChildRoleComparer
        {
            get
            {
                return null;
            }
        }
        IComparer<MetaRoleInfo> IORMCustomSerializedElement.CustomSerializedChildRoleComparer
        {
            get
            {
                return this.CustomSerializedChildRoleComparer;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] GetCustomSerializedChildElementInfo()
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] IORMCustomSerializedElement.GetCustomSerializedChildElementInfo()
        {
            return this.GetCustomSerializedChildElementInfo();
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            if ((attributeInfo.Id == ReadingShape.IsExpandedMetaAttributeGuid))
            {
                return new ORMCustomSerializedAttributeInfo(null, null, null, true, ORMCustomSerializedAttributeWriteStyle.Attribute, null);
            }
            if ((attributeInfo.Id == ReadingShape.AbsoluteBoundsMetaAttributeGuid))
            {
                return new ORMCustomSerializedAttributeInfo(null, null, null, true, ORMCustomSerializedAttributeWriteStyle.Attribute, null);
            }
            return ORMCustomSerializedAttributeInfo.Default;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo IORMCustomSerializedElement.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedAttributeInfo(attributeInfo, rolePlayedInfo);
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedLinkInfo(rolePlayedInfo);
        }
    }
    /// <summary>
    ///</summary>
    public partial class ExternalConstraintShape : IORMCustomSerializedElement
    {
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations SupportedCustomSerializedOperations
        {
            get
            {
                return ORMCustomSerializedElementSupportedOperations.AttributeInfo;
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations IORMCustomSerializedElement.SupportedCustomSerializedOperations
        {
            get
            {
                return this.SupportedCustomSerializedOperations;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo CustomSerializedElementInfo
        {
            get
            {
                throw new System.NotSupportedException();
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.CustomSerializedElementInfo
        {
            get
            {
                return this.CustomSerializedElementInfo;
            }
        }
        /// <summary>
        ///</summary>
        [CLSCompliant(false)]
        protected IComparer<MetaRoleInfo> CustomSerializedChildRoleComparer
        {
            get
            {
                return null;
            }
        }
        IComparer<MetaRoleInfo> IORMCustomSerializedElement.CustomSerializedChildRoleComparer
        {
            get
            {
                return this.CustomSerializedChildRoleComparer;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] GetCustomSerializedChildElementInfo()
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] IORMCustomSerializedElement.GetCustomSerializedChildElementInfo()
        {
            return this.GetCustomSerializedChildElementInfo();
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            if ((attributeInfo.Id == ExternalConstraintShape.IsExpandedMetaAttributeGuid))
            {
                return new ORMCustomSerializedAttributeInfo(null, null, null, true, ORMCustomSerializedAttributeWriteStyle.Attribute, null);
            }
            if ((attributeInfo.Id == ExternalConstraintShape.AbsoluteBoundsMetaAttributeGuid))
            {
                return new ORMCustomSerializedAttributeInfo(null, null, null, true, ORMCustomSerializedAttributeWriteStyle.Attribute, null);
            }
            return ORMCustomSerializedAttributeInfo.Default;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo IORMCustomSerializedElement.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedAttributeInfo(attributeInfo, rolePlayedInfo);
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedLinkInfo(rolePlayedInfo);
        }
    }
    /// <summary>
    ///</summary>
    public partial class ValueRangeShape : IORMCustomSerializedElement
    {
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations SupportedCustomSerializedOperations
        {
            get
            {
                return ORMCustomSerializedElementSupportedOperations.AttributeInfo;
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementSupportedOperations IORMCustomSerializedElement.SupportedCustomSerializedOperations
        {
            get
            {
                return this.SupportedCustomSerializedOperations;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo CustomSerializedElementInfo
        {
            get
            {
                throw new System.NotSupportedException();
            }
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.CustomSerializedElementInfo
        {
            get
            {
                return this.CustomSerializedElementInfo;
            }
        }
        /// <summary>
        ///</summary>
        [CLSCompliant(false)]
        protected IComparer<MetaRoleInfo> CustomSerializedChildRoleComparer
        {
            get
            {
                return null;
            }
        }
        IComparer<MetaRoleInfo> IORMCustomSerializedElement.CustomSerializedChildRoleComparer
        {
            get
            {
                return this.CustomSerializedChildRoleComparer;
            }
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] GetCustomSerializedChildElementInfo()
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedChildElementInfo[] IORMCustomSerializedElement.GetCustomSerializedChildElementInfo()
        {
            return this.GetCustomSerializedChildElementInfo();
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            if ((attributeInfo.Id == ValueRangeShape.IsExpandedMetaAttributeGuid))
            {
                return new ORMCustomSerializedAttributeInfo(null, null, null, true, ORMCustomSerializedAttributeWriteStyle.Attribute, null);
            }
            if ((attributeInfo.Id == ValueRangeShape.AbsoluteBoundsMetaAttributeGuid))
            {
                return new ORMCustomSerializedAttributeInfo(null, null, null, true, ORMCustomSerializedAttributeWriteStyle.Attribute, null);
            }
            return ORMCustomSerializedAttributeInfo.Default;
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedAttributeInfo IORMCustomSerializedElement.GetCustomSerializedAttributeInfo(Microsoft.VisualStudio.Modeling.MetaAttributeInfo attributeInfo, Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedAttributeInfo(attributeInfo, rolePlayedInfo);
        }
        /// <summary>
        ///</summary>
        protected Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            throw new System.NotSupportedException();
        }
        Northface.Tools.ORM.Shell.ORMCustomSerializedElementInfo IORMCustomSerializedElement.GetCustomSerializedLinkInfo(Microsoft.VisualStudio.Modeling.MetaRoleInfo rolePlayedInfo)
        {
            return this.GetCustomSerializedLinkInfo(rolePlayedInfo);
        }
    }
}
