<?xml version="1.0" encoding="utf-8"?>
<!-- Todo: Is external on object type?  What am I supposed to do with object shapes and data types? -->
<xs:schema targetNamespace="http://schemas.neumont.edu/ORM/2006-01/ORMCore" 
	elementFormDefault="qualified" attributeFormDefault="unqualified" 
	xmlns="http://schemas.neumont.edu/ORM/2006-01/ORMCore" 
	xmlns:xs="http://www.w3.org/2001/XMLSchema">
	<xs:annotation>
		<xs:appinfo source="zlib/libpng License Copyright Notice">
			Copyright Â© Neumont University. All rights reserved.

			This software is provided 'as-is', without any express or implied warranty. In no event will the authors be held liable for any damages arising from the use of this software.
			Permission is granted to anyone to use this software for any purpose, including commercial applications, and to alter it and redistribute it freely, subject to the following restrictions:
			1. The origin of this software must not be misrepresented; you must not claim that you wrote the original software. If you use this software in a product, an acknowledgment in the product documentation would be appreciated but is not required.
			2. Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software.
			3. This notice may not be removed or altered from any source distribution.
		</xs:appinfo>
	</xs:annotation>
	<xs:complexType name="Extensions">
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:any namespace="##other" processContents="strict"/>
		</xs:sequence>
	</xs:complexType>
	<!--ORMModel-->
	<xs:element name="ORMModel" type="ORMModel"/>
	<xs:complexType name="ORMModel">
		<xs:all>
			<xs:element name="Objects" type="Objects" minOccurs="0"/>
			<xs:element name="Facts" type="Facts" minOccurs="0"/>
			<xs:element name="ExternalConstraints" type="ExternalConstraints" minOccurs="0"/>
			<xs:element name="DataTypes" type="DataTypes" minOccurs="0"/>
			<xs:element name="CustomReferenceModes" type="CustomReferenceModes" minOccurs="0"/>
			<xs:element name="ModelErrors" type="ModelErrors" minOccurs="0"/>
			<xs:element name="ReferenceModeKinds" type="ReferenceModeKinds" minOccurs="0"/>
			<xs:element name="Extensions" type="Extensions" minOccurs="0"/>
		</xs:all>
		<xs:attribute name="Name" type="xs:string"/>
		<xs:attribute name="id" type="xs:ID"/>
	</xs:complexType>
	<!--End ORMModel-->
	<xs:complexType name="NotesType">
		<xs:sequence minOccurs="0">
			<xs:element name="Note" type="NoteType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="NoteType">
		<xs:sequence>
			<xs:element name="Text" type="xs:string" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="id" type="xs:ID"/>
	</xs:complexType>
	<!--Objects and Object Types-->
	<!--ObjectRef and  ObjectRefs define references to constrains and collections of constraints-->
	<xs:complexType name="ObjectRefs">
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Object" type="ObjectRef" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ObjectRef">
		<xs:attribute name="ref" type="xs:IDREF"/>
	</xs:complexType>
	<!--end ObjectRef and  ObjectRefs-->
	<xs:complexType name="Objects">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="EntityType" type="EntityType"/>
			<xs:element name="ObjectifiedType" type="ObjectifiedType"/>
			<xs:element name="ValueType" type="ValueType"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="ObjectType" abstract="true">
		<xs:sequence>
			<xs:element name="Notes" type="NotesType" minOccurs="0" />
			<xs:element name="PlayedRoles" type="PlayedRoles" minOccurs="0"/>
			<!--Subtypes is derived.-->
			<!--We need to be able to reference elements from the derived schema without introducing ambiguity.-->
			<!--<xs:element ref="derived:test"></xs:element>-->
			<!--<xs:element ref="derived:Subtypes"/>-->
			<!--Supertypes is derived.-->
			<xs:element name="Supertypes" type="ObjectRefs" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="Name" use="required" type="xs:string"/>
		<xs:attribute name="id" use="required" type="xs:ID"/>
		<xs:attribute name="IsIndependent" type="xs:boolean" default="false"/>
		<xs:attribute name="IsExternal" type="xs:boolean" default="false"/>
		<xs:attribute name="IsPersonal" type="xs:boolean" default="false"/>
	</xs:complexType>
	<xs:complexType name="EntityType">
		<xs:complexContent>
			<xs:extension base="ObjectType">
				<xs:sequence>
					<xs:element name="PreferredIdentifier" type="ConstraintRef" minOccurs="0"/>
					<xs:element name="Extensions" type="Extensions" minOccurs="0"/>
				</xs:sequence>
				<!--ReferenceMode is derived.-->
				<xs:attribute name="_ReferenceMode" type="xs:string"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--The fact that an object is an ObjectifiedType is derrived.-->
	<xs:complexType name="ObjectifiedType">
		<xs:complexContent>
			<xs:extension base="ObjectType">
				<xs:sequence>
					<xs:element name="NestedPredicate" type="ObjectifiedFactRef"/>
					<xs:element name="Extensions" type="Extensions" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--The fact that an object is a valuetype is derrived-->
	<xs:complexType name="ValueType">
		<xs:complexContent>
			<xs:extension base="ObjectType">
				<xs:sequence>
					<xs:element name="ConceptualDataType" type="DataTypeRef" minOccurs="1" maxOccurs="1"/>
					<xs:element name="ValueRestriction" type="ValueRestriction" minOccurs="0" maxOccurs="1"/>
					<xs:element name="Extensions" type="Extensions" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--End Objects and Object Types-->
	<!--DataType -->
	<!--DataTypeRef indicates a reference to a datatype -->
	<xs:complexType name="DataTypeRef">
		<xs:attribute name="id" type="xs:ID"/>
		<xs:attribute name="ref" type="xs:IDREF"/>
		<xs:attribute name="Scale" type="xs:int"/>
		<xs:attribute name="Length" type="xs:int"/>
	</xs:complexType>
	<xs:complexType name="DataTypeRefRef">
		<xs:attribute name="ref" type="xs:IDREF" />
	</xs:complexType>
	<!--end DataTypeRef-->
	<xs:complexType name="DataTypes">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="UnspecifiedDataType" type="UnspecifiedDataType"/>
			<xs:element name="FixedLengthTextDataType" type="FixedLengthTextDataType"/>
			<xs:element name="VariableLengthTextDataType" type="VariableLengthTextDataType"/>
			<xs:element name="LargeLengthTextDataType" type="LargeLengthTextDataType"/>
			<xs:element name="SignedIntegerNumericDataType" type="SignedIntegerNumericDataType"/>
			<xs:element name="UnsignedIntegerNumericDataType" type="UnsignedIntegerNumericDataType"/>
			<xs:element name="AutoCounterNumericDataType" type="AutoCounterNumericDataType"/>
			<xs:element name="FloatingPointNumericDataType" type="FloatingPointNumericDataType"/>
			<xs:element name="DecimalNumericDataType" type="DecimalNumericDataType"/>
			<xs:element name="MoneyNumericDataType" type="MoneyNumericDataType"/>
			<xs:element name="FixedLengthRawDataDataType" type="FixedLengthRawDataDataType"/>
			<xs:element name="VariableLengthRawDataDataType" type="VariableLengthRawDataDataType"/>
			<xs:element name="LargeLengthRawDataDataType" type="LargeLengthRawDataDataType"/>
			<xs:element name="PictureRawDataDataType" type="PictureRawDataDataType"/>
			<xs:element name="OleObjectRawDataDataType" type="OleObjectRawDataDataType"/>
			<xs:element name="AutoTimestampTemporalDataType" type="AutoTimestampTemporalDataType"/>
			<xs:element name="TimeTemporalDataType" type="TimeTemporalDataType"/>
			<xs:element name="DateTemporalDataType" type="DateTemporalDataType"/>
			<xs:element name="DateAndTimeTemporalDataType" type="DateAndTimeTemporalDataType"/>
			<xs:element name="TrueOrFalseLogicalDataType" type="TrueOrFalseLogicalDataType"/>
			<xs:element name="YesOrNoLogicalDataType" type="YesOrNoLogicalDataType"/>
			<xs:element name="RowIdOtherDataType" type="RowIdOtherDataType"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="DataType" abstract="true">
		<xs:choice>
			<xs:element name="Extensions" type="Extensions" minOccurs="0"/>
		</xs:choice>
		<xs:attribute name="id" type="xs:ID" use="required"/>
	</xs:complexType>
	<xs:complexType name="UnspecifiedDataType">
		<xs:complexContent>
			<xs:extension base="DataType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="FixedLengthTextDataType">
		<xs:complexContent>
			<xs:extension base="DataType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="VariableLengthTextDataType">
		<xs:complexContent>
			<xs:extension base="DataType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="LargeLengthTextDataType">
		<xs:complexContent>
			<xs:extension base="DataType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SignedIntegerNumericDataType">
		<xs:complexContent>
			<xs:extension base="DataType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="UnsignedIntegerNumericDataType">
		<xs:complexContent>
			<xs:extension base="DataType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="AutoCounterNumericDataType">
		<xs:complexContent>
			<xs:extension base="DataType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="FloatingPointNumericDataType">
		<xs:complexContent>
			<xs:extension base="DataType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DecimalNumericDataType">
		<xs:complexContent>
			<xs:extension base="DataType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="MoneyNumericDataType">
		<xs:complexContent>
			<xs:extension base="DataType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="FixedLengthRawDataDataType">
		<xs:complexContent>
			<xs:extension base="DataType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="VariableLengthRawDataDataType">
		<xs:complexContent>
			<xs:extension base="DataType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="LargeLengthRawDataDataType">
		<xs:complexContent>
			<xs:extension base="DataType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="PictureRawDataDataType">
		<xs:complexContent>
			<xs:extension base="DataType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="OleObjectRawDataDataType">
		<xs:complexContent>
			<xs:extension base="DataType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="AutoTimestampTemporalDataType">
		<xs:complexContent>
			<xs:extension base="DataType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="TimeTemporalDataType">
		<xs:complexContent>
			<xs:extension base="DataType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DateTemporalDataType">
		<xs:complexContent>
			<xs:extension base="DataType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DateAndTimeTemporalDataType">
		<xs:complexContent>
			<xs:extension base="DataType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="TrueOrFalseLogicalDataType">
		<xs:complexContent>
			<xs:extension base="DataType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="YesOrNoLogicalDataType">
		<xs:complexContent>
			<xs:extension base="DataType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="RowIdOtherDataType">
		<xs:complexContent>
			<xs:extension base="DataType"/>
		</xs:complexContent>
	</xs:complexType>
	<!--End DataType -->
	<!--Data is a gereral purpose element wrapper to enclose data.  This helps make the schema more extendable.-->
	<xs:complexType name="Data">
		<xs:sequence minOccurs="1" maxOccurs="1">
			<xs:element name="Data" minOccurs="1" maxOccurs="1" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<!--end data-->
	<!--Roles-->
	<!-- RoleRef, RoleSequence and  RoleSequences define references to roles and collections of roles and collections of collections of roles-->
	<xs:complexType name="RoleSequences">
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:element name="RoleSequence" type="RoleSequence"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PlayedRoles">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Role" type="RoleRef"/>
			<xs:element name="SubtypeMetaRole" type="RoleRef"/>
			<xs:element name="SupertypeMetaRole" type="RoleRef"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="RoleContainer">
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Role" type="RoleRef"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RoleSequence">
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Role" type="RoleRef"/>
		</xs:sequence>
		<xs:attribute name="id" type="xs:ID" use="required"/>
	</xs:complexType>
	<xs:complexType name="RoleRef">
		<xs:attribute name="ref" type="xs:IDREF"/>
	</xs:complexType>
	<xs:complexType name="SubtypeMetaRoleRef">
		<xs:attribute name="ref" type="xs:IDREF"/>
	</xs:complexType>
	<xs:complexType name="SupertypeMetaRoleRef">
		<xs:attribute name="ref" type="xs:IDREF"/>
	</xs:complexType>
	<!--end RoleRef, RoleSequence and  RoleSequences-->
	<xs:complexType name="Roles">
		<xs:sequence>
			<xs:element name="Role" type="Role" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SubtypeRoles">
		<xs:all>
			<xs:element name="SupertypeMetaRole" type="Role"/>
			<xs:element name="SubtypeMetaRole" type="Role"/>
		</xs:all>
	</xs:complexType>
	<xs:complexType name="Role">
		<xs:all>
			<xs:element name="RolePlayer" type="ObjectRef" minOccurs="0"/>
			<xs:element name="ValueRestriction" type="RoleValueRestriction" minOccurs="0"/>
			<xs:element name="Extensions" type="Extensions" minOccurs="0"/>
		</xs:all>
		<xs:attribute name="Name" type="xs:string" use="required"/>
		<xs:attribute name="id" type="xs:ID" use="required"/>
		<!--Derived-->
		<xs:attribute name="_IsMandatory" type="xs:boolean" default="false"/>
		<!--Derived-->
		<xs:attribute name="_Multiplicity" type="MultiplicityEnum" default="ZeroToOne"/>
	</xs:complexType>
	<!--Look up enum values.-->
	<xs:simpleType name="MultiplicityEnum">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Unspecified"/>
			<xs:enumeration value="Indeterminate"/>
			<xs:enumeration value="ZeroToOne"/>
			<xs:enumeration value="ZeroToMany"/>
			<xs:enumeration value="ExactlyOne"/>
			<xs:enumeration value="OneToMany"/>
		</xs:restriction>
	</xs:simpleType>
	<!--End Roles-->
	<!-- Facts -->
	<!--Fact Ref defines a reference to a fact-->
	<xs:complexType name="FactRefs">
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Fact" type="FactRef" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FactRef">
		<xs:attribute name="ref" type="xs:IDREF"/>
	</xs:complexType>
	<xs:complexType name="ObjectifiedFactRef">
		<!-- An id for this element so we can refer back to it -->
		<xs:attribute name="id" type="xs:ID"/>
		<!-- A reference to a fact type -->
		<xs:attribute name="ref" type="xs:IDREF"/>
	</xs:complexType>
	<xs:complexType name="ObjectificationRef">
		<xs:attribute name="ref" type="xs:IDREF"/>
	</xs:complexType>
	<!--end Fact Ref-->
	<xs:complexType name="Facts">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Fact" type="Fact"/>
			<xs:element name="SubtypeFact" type="SubtypeFact"/>
			<xs:element name="ImpliedFact" type="ImpliedFact"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="BaseFact" abstract="true">
		<!-- These are duplicated in SubtypeFact without type extension -->
		<xs:sequence minOccurs="0" maxOccurs="1">
			<xs:element name="Notes" type="NotesType" minOccurs="0" />
			<xs:element name="FactRoles" type="Roles" minOccurs="0"/>
			<xs:element name="ReadingOrders" type="ReadingOrders" minOccurs="0"/>
			<xs:element name="InternalConstraints" type="InternalConstraints" minOccurs="0"/>
			<xs:element name="DerivationRule" type="DerivationRuleType" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="Name" use="required" type="xs:string"/>
		<xs:attribute name="id" use="required" type="xs:ID"/>
		<xs:attribute name="IsExternal" type="xs:boolean" default="false"/>
	</xs:complexType>
	<xs:complexType name="Fact">
		<xs:complexContent>
			<xs:extension base="BaseFact">
				<xs:sequence>
					<xs:element name="Extensions" type="Extensions" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ImpliedFact">
		<xs:complexContent>
			<xs:extension base="BaseFact">
				<xs:sequence>
					<xs:element name="ImpliedByObjectification" type="ObjectificationRef"/>
					<xs:element name="Extensions" type="Extensions" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SubtypeFact">
		<!-- This is a straight copy from BaseFact with a change to FactRoles and an Extensions element-->
		<xs:sequence minOccurs="0" maxOccurs="1">
			<xs:element name="Notes" type="NotesType" minOccurs="0" />
			<xs:element name="FactRoles" type="SubtypeRoles" minOccurs="1"/>
			<xs:element name="ReadingOrders" type="ReadingOrders" minOccurs="0"/>
			<xs:element name="InternalConstraints" type="InternalConstraints" minOccurs="0"/>
			<xs:element name="DerivationRule" type="DerivationRuleType" minOccurs="0"/>
			<xs:element name="Extensions" type="Extensions" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="Name" use="required" type="xs:string"/>
		<xs:attribute name="id" use="required" type="xs:ID"/>
		<xs:attribute name="IsExternal" type="xs:boolean" default="false"/>
		<xs:attribute name="IsPrimary" type="xs:boolean" default="false"/>
	</xs:complexType>
	<!--Derived FactType-->
	<xs:complexType name="DerivationRuleType">
		<xs:sequence minOccurs="0">
			<xs:element name="DerivationExpression" type="DerivationExpressionType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DerivationExpressionType">
		<xs:sequence>
			<xs:element name="Body" type="xs:string"/>
		</xs:sequence>
		<xs:attribute name="DerivationStorage" type="DerivationStorageType" use="required"/>
		<xs:attribute name="id" type="xs:ID" use="required" />
	</xs:complexType>
	<xs:simpleType name="DerivationStorageType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Derived"/>
			<xs:enumeration value="DerivedAndStored"/>
			<xs:enumeration value="PartiallyDerived"/>
		</xs:restriction>
	</xs:simpleType>
	<!--End Derived FactType-->
	<!-- End Facts -->
	<!--Constraints-->
	<!--ConstraintRef and  ConstraintRefs define references to constrains and collections of constraints-->
	<xs:complexType name="ConstraintRefs">
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Constraint" type="ConstraintRef" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ConstraintRef">
		<xs:attribute name="ref" type="xs:IDREF"/>
	</xs:complexType>
	<xs:complexType name="EqualityConstraintRef">
		<xs:attribute name="ref" type="xs:IDREF"/>
	</xs:complexType>
	<xs:complexType name="DisjunctiveMandatoryConstraintRef">
		<xs:attribute name="ref" type="xs:IDREF"/>
	</xs:complexType>
	<xs:complexType name="FrequencyConstraintRef">
		<xs:attribute name="ref" type="xs:IDREF"/>
	</xs:complexType>
	<xs:complexType name="RingConstraintRef">
		<xs:attribute name="ref" type="xs:IDREF"/>
	</xs:complexType>
	<!--end ConstraintRef and  ConstraintRefs-->
	<xs:complexType name="ExternalConstraints">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="EqualityConstraint" type="EqualityConstraint"/>
			<xs:element name="ImpliedEqualityConstraint" type="ImpliedEqualityConstraint"/>
			<xs:element name="ExclusionConstraint" type="ExclusionConstraint"/>
			<xs:element name="SubsetConstraint" type="SubsetConstraint"/>
			<xs:element name="FrequencyConstraint" type="FrequencyConstraint"/>
			<xs:element name="DisjunctiveMandatoryConstraint" type="DisjunctiveMandatoryConstraint"/>
			<xs:element name="ExternalUniquenessConstraint" type="ExternalUniquenessConstraint"/>
			<xs:element name="ImpliedExternalUniquenessConstraint" type="ImpliedExternalUniquenessConstraint"/>
			<xs:element name="RingConstraint" type="RingConstraint"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="Constraint">
		<xs:sequence>
			<xs:element name="ConstraintNote" type="Data" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
		<xs:attribute name="id" type="xs:ID"/>
		<xs:attribute name="Name" type="xs:string"/>
		<xs:attribute name="Modality" type="ConstraintModality" default="Alethic"/>
	</xs:complexType>
	<!--Multicolumn constraints-->
	<xs:complexType name="MultiColumnExternalConstraint" abstract="true">
		<xs:complexContent>
			<xs:extension base="Constraint">
				<xs:sequence>
					<xs:element name="RoleSequences" type="RoleSequences" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="BaseEqualityConstraint" abstract="true">
		<xs:complexContent>
			<xs:extension base="MultiColumnExternalConstraint"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="EqualityConstraint">
		<xs:complexContent>
			<xs:extension base="BaseEqualityConstraint">
				<xs:sequence>
					<xs:element name="Extensions" type="Extensions" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ImpliedEqualityConstraint">
		<xs:complexContent>
			<xs:extension base="BaseEqualityConstraint">
				<xs:sequence>
					<xs:element name="ImpliedByObjectification" type="ObjectificationRef"/>
					<xs:element name="Extensions" type="Extensions" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ExclusionConstraint">
		<xs:complexContent>
			<xs:extension base="MultiColumnExternalConstraint">
				<xs:sequence>
					<xs:element name="Extensions" type="Extensions" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SubsetConstraint">
		<xs:complexContent>
			<xs:extension base="MultiColumnExternalConstraint">
				<xs:sequence>
					<xs:element name="Extensions" type="Extensions" minOccurs="0"/>
				</xs:sequence>
				<xs:attribute name="FromRoleSequence" type="xs:IDREF"/>
				<!-- use="required"/>  should be here-->
				<xs:attribute name="ToRoleSequence" type="xs:IDREF"/>
				<!-- use="required"/>  should be here-->
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="MultiColumnConstraintRef">
		<xs:attribute name="ref" type="xs:IDREF" />
	</xs:complexType>
	<xs:complexType name="SingleColumnConstraintRef">
		<xs:attribute name="ref" type="xs:IDREF" />
	</xs:complexType>
	<xs:complexType name="InternalConstraintRef">
		<xs:attribute name="ref" type="xs:IDREF" />
	</xs:complexType>
	<xs:complexType name="ValueConstraintRef">
		<xs:attribute name="ref" type="xs:IDREF" />
	</xs:complexType>
	<!-- end Multicolumn constraints-->
	<!--Singlecolumn constraints-->
	<xs:complexType name="SingleColumnExternalConstraint">
		<xs:complexContent>
			<xs:extension base="Constraint">
				<xs:sequence>
					<xs:element name="RoleSequence" type="RoleContainer" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="FrequencyConstraint">
		<xs:complexContent>
			<xs:extension base="SingleColumnExternalConstraint">
				<xs:sequence>
					<xs:element name="Extensions" type="Extensions" minOccurs="0"/>
				</xs:sequence>
				<xs:attribute name="MinFrequency" type="xs:int"/>
				<xs:attribute name="MaxFrequency" type="xs:int"/>
			</xs:extension >
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DisjunctiveMandatoryConstraint">
		<xs:complexContent>
			<xs:extension base="SingleColumnExternalConstraint">
				<xs:sequence>
					<xs:element name="Extensions" type="Extensions" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="BaseExternalUniquenessConstraint" abstract="true">
		<xs:complexContent>
			<xs:extension base="SingleColumnExternalConstraint">
				<xs:sequence>
					<xs:element name="PreferredIdentifierFor" type="ObjectRef" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ExternalUniquenessConstraint">
		<xs:complexContent>
			<xs:extension base="BaseExternalUniquenessConstraint">
				<xs:sequence>
					<xs:element name="Extensions" type="Extensions" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ImpliedExternalUniquenessConstraint">
		<xs:complexContent>
			<xs:extension base="BaseExternalUniquenessConstraint">
				<xs:sequence>
					<xs:element name="ImpliedByObjectification" type="ObjectificationRef"/>
					<xs:element name="Extensions" type="Extensions" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="RingConstraint">
		<xs:complexContent>
			<xs:extension base="SingleColumnExternalConstraint">
				<xs:sequence>
					<xs:element name="Extensions" type="Extensions" minOccurs="0"/>
				</xs:sequence>
				<xs:attribute name="Type" type="RingConstraintType" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="RingConstraintType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Undefined"/>
			<xs:enumeration value="Irreflexive"/>
			<xs:enumeration value="Acyclic"/>
			<xs:enumeration value="Intransitive"/>
			<xs:enumeration value="Symmetric"/>
			<xs:enumeration value="Asymmetric"/>
			<xs:enumeration value="AntiSymmetric"/>
			<xs:enumeration value="AcyclicIntransitive"/>
			<xs:enumeration value="SymmetricIrreflexive"/>
			<xs:enumeration value="SymmetricIntransitive"/>
			<xs:enumeration value="AsymmetricIntransitive"/>
		</xs:restriction>
	</xs:simpleType>
	<!--End Singlecolumn constraints-->
	<!--InternalConstraint-note these are owned by FactTypes not the model -->
	<xs:complexType name="InternalConstraints">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="InternalUniquenessConstraint" type="InternalUniquenessConstraint"/>
			<xs:element name="SimpleMandatoryConstraint" type="SimpleMandatoryConstraint"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="InternalConstraint">
		<xs:complexContent>
			<xs:extension base="Constraint">
				<xs:sequence>
					<xs:element name="RoleSequence" type="RoleContainer" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="InternalUniquenessConstraint">
		<xs:complexContent>
			<xs:extension base="InternalConstraint">
				<xs:sequence>
					<xs:element name="PreferredIdentifierFor" type="ObjectRef" minOccurs="0"/>
					<xs:element name="Extensions" type="Extensions" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="InternalUniquenessConstraintRef">
		<xs:attribute name="ref" type="xs:IDREF" />
	</xs:complexType>
	<xs:complexType name="SimpleMandatoryConstraint">
		<xs:complexContent>
			<xs:extension base="InternalConstraint">
				<xs:sequence>
					<xs:element name="Extensions" type="Extensions" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--End InternalConstraint-->
	<!--End Constraints-->
	<!--Fact Readings and reading Orders-->
	<xs:complexType name="ReadingRef">
		<xs:attribute name="ref" type="xs:IDREF"/>
	</xs:complexType>
	<xs:complexType name="ReadingOrders">
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:element name="ReadingOrder" type="ReadingOrder"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ReadingOrder">
		<xs:sequence minOccurs="1" maxOccurs="1">
			<xs:element name="Readings" type="Readings"/>
			<xs:element name="RoleSequence" type="RoleContainer"/>
		</xs:sequence>
		<xs:attribute name="id" type="xs:ID"/>
	</xs:complexType>
	<xs:complexType name="Readings">
		<xs:sequence minOccurs="1" maxOccurs="unbounded">
			<xs:element name="Reading" type="Reading"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Reading">
		<xs:complexContent>
			<xs:extension base="Data">
				<xs:attribute name="IsPrimary" type="xs:boolean" default="false"/>
				<xs:attribute name="id" type="xs:ID" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--End Fact Readings and reading Orders-->
	<!-- Should Model errors be part of the core schema or in another namespace?-->
	<!--ModelErrors-->
	<xs:complexType name="ModelErrors">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="ExtensionModelError"/>
			<xs:element name="ConstraintDuplicateNameError" type="ConstraintDuplicateNameError"/>
			<xs:element name="FactTypeDuplicateNameError" type="FactTypeDuplicateNameError"/>
			<xs:element name="ObjectTypeDuplicateNameError" type="ObjectTypeDuplicateNameError"/>
			<xs:element name="ExternalConstraintRoleSequenceArityMismatchError" type="ExternalConstraintRoleSequenceArityMismatchError"/>
			<xs:element name="FactTypeRequiresInternalUniquenessConstraintError" type="FactTypeRequiresInternalUniquenessConstraintError"/>
			<xs:element name="FactTypeRequiresReadingError" type="FactTypeRequiresReadingError"/>
			<xs:element name="TooFewReadingRolesError" type="TooFewReadingRolesError"/>
			<xs:element name="TooFewRoleSequencesError" type="TooFewRoleSequencesError"/>
			<xs:element name="TooManyReadingRolesError" type="TooManyReadingRolesError"/>
			<xs:element name="TooManyRoleSequencesError" type="TooManyRoleSequencesError"/>
			<xs:element name="DataTypeNotSpecifiedError" type="DataTypeNotSpecifiedError"/>
			<xs:element name="NMinusOneError" type="NMinusOneError"/>
			<xs:element name="CompatibleRolePlayerTypeError" type="CompatibleRolePlayerTypeError"/>
			<xs:element name="RolePlayerRequiredError" type="RolePlayerRequiredError"/>
			<xs:element name="EqualityIsImpliedByMandatoryError" type="EqualityIsImpliedByMandatoryError"/>
			<xs:element name="EntityTypeRequiresReferenceSchemeError" type="EntityTypeRequiresReferenceSchemeError"/>
			<xs:element name="FrequencyConstraintMinMaxError" type="FrequencyConstraintMinMaxError"/>
			<xs:element name="FrequencyConstraintContradictsInternalUniquenessConstraintError" type="FrequencyConstraintContradictsInternalUniquenessConstraintError"/>
			<xs:element name="MinValueMismatchError" type="MinValueMismatchError"/>
			<xs:element name="MaxValueMismatchError" type="MaxValueMismatchError"/>
			<xs:element name="ValueRangeOverlapError" type="ValueRangeOverlapError"/>
			<xs:element name="RingConstraintTypeNotSpecifiedError" type="RingConstraintTypeNotSpecifiedError"/>
			<xs:element name="DisjunctiveMandatoryImpliedByMandatoryError" type="DisjunctiveMandatoryImpliedByMandatoryError"/>
			<xs:element name="ImpliedInternalUniquenessConstraintError" type="ImpliedInternalUniquenessConstraintError"/>
			<xs:element name="ObjectTypeRequiresPrimarySupertypeError" type="ObjectTypeRequiresPrimarySupertypeError"/>
			<xs:element name="PreferredIdentifierRequiresMandatoryError" type="PreferredIdentifierRequiresMandatoryError"/>
			<xs:element name="CompatibleSupertypesError" type="CompatibleSupertypesError"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="ModelError" abstract="true">
		<xs:attribute name="id" type="xs:ID" use="required"/>
		<xs:attribute name="Name" type="xs:string" use="required"/>
	</xs:complexType>
	<xs:element name="ExtensionModelError" type="ModelError" abstract="true"/>
	<xs:complexType name="ConstraintDuplicateNameError">
		<xs:complexContent>
			<xs:extension base="ModelError">
				<xs:sequence>
					<xs:element name="Constraints">
						<xs:complexType>
							<xs:choice minOccurs="2" maxOccurs="unbounded">
								<xs:element name="MultiColumnConstraint" type="MultiColumnConstraintRef"/>
								<xs:element name="SingleColumnConstraint" type="SingleColumnConstraintRef"/>
								<xs:element name="InternalConstraint" type="InternalConstraintRef"/>
								<xs:element name="ValueConstraint" type="ValueConstraintRef"/>
							</xs:choice>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="FactTypeDuplicateNameError">
		<xs:complexContent>
			<xs:extension base="ModelError">
				<xs:sequence minOccurs="0" maxOccurs="1">
					<xs:element name="Facts" type="FactRefs" minOccurs="1" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ObjectTypeDuplicateNameError">
		<xs:complexContent>
			<xs:extension base="ModelError">
				<xs:sequence minOccurs="0" maxOccurs="1">
					<xs:element name="Objects" type="ObjectRefs" minOccurs="1" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="EntityTypeRequiresReferenceSchemeError">
		<xs:complexContent>
			<xs:extension base="ModelError">
				<xs:sequence minOccurs="1" maxOccurs="1">
					<xs:element name="EntityType" type="ObjectRef"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ExternalConstraintRoleSequenceArityMismatchError">
		<xs:complexContent>
			<xs:extension base="ModelError">
				<xs:sequence minOccurs="1" maxOccurs="1">
					<xs:element name="Constraint" type="ConstraintRef"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="FactTypeRequiresInternalUniquenessConstraintError">
		<xs:complexContent>
			<xs:extension base="ModelError">
				<xs:sequence minOccurs="1" maxOccurs="1">
					<xs:element name="Fact" type="FactRef"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="FactTypeRequiresReadingError">
		<xs:complexContent>
			<xs:extension base="ModelError">
				<xs:sequence minOccurs="1" maxOccurs="1">
					<xs:element name="Fact" type="FactRef"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="TooFewReadingRolesError">
		<xs:complexContent>
			<xs:extension base="ModelError">
				<xs:sequence minOccurs="1" maxOccurs="1">
					<xs:element name="Reading" type="ReadingRef"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="TooFewRoleSequencesError">
		<xs:complexContent>
			<xs:extension base="ModelError">
				<xs:sequence minOccurs="1" maxOccurs="1">
					<xs:choice>
						<xs:element name="MultiColumnConstraint" type="MultiColumnConstraintRef"/>
						<xs:element name="SingleColumnConstraint" type="SingleColumnConstraintRef"/>
					</xs:choice>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="TooManyReadingRolesError">
		<xs:complexContent>
			<xs:extension base="ModelError">
				<xs:sequence minOccurs="1" maxOccurs="1">
					<xs:element name="Reading" type="ReadingRef"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DataTypeNotSpecifiedError">
		<xs:complexContent>
			<xs:extension base="ModelError">
				<xs:sequence>
					<xs:element name="ConceptualDataType" type="DataTypeRefRef"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="FrequencyConstraintMinMaxError">
		<xs:complexContent>
			<xs:extension base="ModelError">
				<xs:sequence>
					<xs:element name="FrequencyConstraint" type="FrequencyConstraintRef"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="FrequencyConstraintContradictsInternalUniquenessConstraintError">
		<xs:complexContent>
			<xs:extension base="ModelError">
				<xs:all>
					<xs:element name="FrequencyConstraint" type="FrequencyConstraintRef"/>
					<xs:element name="Fact" type="FactRef"/>
				</xs:all>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="MaxValueMismatchError">
		<xs:complexContent>
			<xs:extension base="ModelError">
				<xs:sequence>
					<xs:element name="ValueRange" type="ValueRangeRef"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="MinValueMismatchError">
		<xs:complexContent>
			<xs:extension base="ModelError">
				<xs:sequence>
					<xs:element name="ValueRange" type="ValueRangeRef"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ValueRangeOverlapError">
		<xs:complexContent>
			<xs:extension base="ModelError">
				<xs:sequence>
					<xs:element name="ValueConstraint" type="ValueConstraintRef"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ImpliedInternalUniquenessConstraintError">
		<xs:complexContent>
			<xs:extension base="ModelError">
				<xs:sequence>
					<xs:element name="Fact" type="FactRef"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ObjectTypeRequiresPrimarySupertypeError">
		<xs:complexContent>
			<xs:extension base="ModelError">
				<xs:sequence>
					<xs:element name="ObjectType" type="ObjectRef"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="PreferredIdentifierRequiresMandatoryError">
		<xs:complexContent>
			<xs:extension base="ModelError">
				<xs:sequence>
					<xs:element name="ObjectType" type="ObjectRef"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CompatibleSupertypesError">
		<xs:complexContent>
			<xs:extension base="ModelError">
				<xs:sequence>
					<xs:element name="ObjectType" type="ObjectRef"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="RingConstraintTypeNotSpecifiedError">
		<xs:complexContent>
			<xs:extension base="ModelError">
				<xs:sequence>
					<xs:element name="RingConstraint" type="RingConstraintRef"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DisjunctiveMandatoryImpliedByMandatoryError">
		<xs:complexContent>
			<xs:extension base="ModelError">
				<xs:sequence>
					<xs:element name="DisjunctiveMandatoryConstraint" type="DisjunctiveMandatoryConstraintRef"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="TooManyRoleSequencesError">
		<xs:complexContent>
			<xs:extension base="ModelError">
				<xs:sequence minOccurs="1" maxOccurs="1">
					<xs:choice>
						<xs:element name="MultiColumnConstraint" type="MultiColumnConstraintRef"/>
						<xs:element name="SingleColumnConstraint" type="SingleColumnConstraintRef"/>
					</xs:choice>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CompatibleRolePlayerTypeError">
		<xs:complexContent>
			<xs:extension base="ModelError">
				<xs:choice>
					<xs:element name="MultiColumnConstraint" type="MultiColumnConstraintRef"/>
					<xs:element name="SingleColumnConstraint" type="SingleColumnConstraintRef"/>
				</xs:choice>
				<xs:attribute name="Column" type="xs:int" use="optional"/>
			</xs:extension >
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="RolePlayerRequiredError">
		<xs:complexContent>
			<xs:extension base="ModelError">
				<xs:choice>
					<xs:element name="Role" type="RoleRef"/>
				</xs:choice>
			</xs:extension >
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="EqualityIsImpliedByMandatoryError">
		<xs:complexContent>
			<xs:extension base="ModelError">
				<xs:choice>
					<xs:element name="EqualityConstraint" type="EqualityConstraintRef"/>
				</xs:choice>
			</xs:extension >
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="NMinusOneError">
		<xs:complexContent>
			<xs:extension base="ModelError">
				<xs:sequence>
					<xs:element name="InternalUniquenessConstraint" type="InternalUniquenessConstraintRef"/>
				</xs:sequence>
			</xs:extension >
		</xs:complexContent>
	</xs:complexType>
	<!--End ModelErrors-->
	<!--Custrom Reference Modes-->
	<!--Reference Mdoes and Kinds-->
	<xs:complexType name="ReferenceModeKinds">
		<xs:sequence>
			<xs:element maxOccurs="unbounded" name="ReferenceModeKind" type="ReferenceModeKind"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ReferenceModeKindRef">
		<xs:attribute name="ref" type="xs:IDREF"/>
	</xs:complexType>
	<xs:complexType name="ReferenceModeKind">
		<xs:attribute name="id" type="xs:ID" use="required"/>
		<xs:attribute name="FormatString" type="xs:string" use="required"/>
		<xs:attribute name="ReferenceModeType" type="ReferenceModeTypeType" use="required"/>
	</xs:complexType>
	<xs:simpleType name="ReferenceModeTypeType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="General"/>
			<xs:enumeration value="Popular"/>
			<xs:enumeration value="UnitBased"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="CustomReferenceModeRef">
		<xs:attribute name="ref" type="xs:IDREF"/>
	</xs:complexType>
	<xs:complexType name="ValueRangeRef">
		<xs:attribute name="ref" type="xs:IDREF"/>
	</xs:complexType>
	<!--Reference Mdoes and Kinds-->
	<xs:complexType name="CustomReferenceModes">
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:element name="CustomReferenceMode" type="CustomReferenceMode"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CustomReferenceMode">
		<xs:sequence minOccurs="0" maxOccurs="1">
			<xs:element name="CustomFormatString" type="xs:string"/>
			<xs:element name="Kind" type="ReferenceModeKindRef"/>
		</xs:sequence>
		<xs:attribute name="id" type="xs:ID"/>
		<xs:attribute name="Name" type="xs:string" default=""/>
	</xs:complexType>
	<!--End Custom Reference Modes-->
	<xs:complexType name="ValueRestriction">
		<xs:sequence>
			<xs:element name="ValueConstraint">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ValueRanges" type="ValueRangeCollection"/>
					</xs:sequence>
					<xs:attribute name="Name" type="xs:string" use="required"/>
					<xs:attribute name="id" type="xs:ID" use="required" />
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RoleValueRestriction">
		<xs:sequence>
			<xs:element name="RoleValueConstraint">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ValueRanges" type="ValueRangeCollection"/>
					</xs:sequence>
					<xs:attribute name="id" type="xs:ID" use="required" />
					<xs:attribute name="Name" type="xs:string" use="required"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ValueRangeCollection">
		<xs:sequence maxOccurs="unbounded">
			<xs:element name="ValueRange" type="ValueRange"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="RangeInclusion">
		<xs:restriction base="xs:string">
			<xs:enumeration value="NotSet"/>
			<xs:enumeration value="Open"/>
			<xs:enumeration value="Closed"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="ValueRange">
		<xs:attribute name="id" type="xs:ID" use="required" />
		<xs:attribute name="MinValue" type="xs:string" use="required" />
		<xs:attribute name="MaxValue" type="xs:string" use="required" />
		<xs:attribute name="MinInclusion" type="RangeInclusion" default="NotSet" />
		<xs:attribute name="MaxInclusion" type="RangeInclusion" default="NotSet" />
	</xs:complexType>
	<xs:simpleType name="ConstraintModality">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Alethic"/>
			<xs:enumeration value="Deontic"/>
		</xs:restriction>
	</xs:simpleType>
</xs:schema>
