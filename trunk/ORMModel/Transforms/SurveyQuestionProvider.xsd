<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="XSDtoHTML.xslt"?>
<xs:schema
	id="SurveyQuestionProvider"
	targetNamespace="http://schemas.neumont.edu/ORM/SDK/SurveyQuestionProvider"
	elementFormDefault="qualified"
	attributeFormDefault="unqualified"
	xmlns="http://schemas.neumont.edu/ORM/SDK/SurveyQuestionProvider"
	xmlns:qp="http://schemas.neumont.edu/ORM/SDK/SurveyQuestionProvider"
	xmlns:xs="http://www.w3.org/2001/XMLSchema">
	<xs:annotation>
		<xs:appinfo source="Common Public License Copyright Notice">
			Neumont Object-Role Modeling Architect for Visual Studio

			Copyright © Neumont University. All rights reserved.
			Copyright © Matthew Curland. All rights reserved.
	
			The use and distribution terms for this software are covered by the
			Common Public License 1.0 (http://opensource.org/licenses/cpl) which
			can be found in the file CPL.txt at the root of this distribution.
			By using this software in any fashion, you are agreeing to be bound by
			the terms of this license.
			You must not remove this notice, or any other, from this software.
		</xs:appinfo>
	</xs:annotation>
	<xs:element name="surveyQuestionProvider" type="surveyQuestionProviderType">
		<xs:key name="uniqueQuestionType">
			<xs:selector xpath="qp:surveyQuestions/qp:surveyQuestion"/>
			<xs:field xpath="@questionType"/>
		</xs:key>
		<xs:keyref name="groupingQuestionTypeRef" refer="uniqueQuestionType">
			<xs:selector xpath="qp:groupings/qp:grouping/qp:surveyQuestion"/>
			<xs:field xpath="@ref"/>
		</xs:keyref>
		<xs:keyref name="imageOffsetQuestionTypeRef" refer="uniqueQuestionType">
			<xs:selector xpath="qp:surveyQuestions/qp:surveyQuestion/qp:*/qp:offset"/>
			<xs:field xpath="@afterSurveyQuestion"/>
		</xs:keyref>
	</xs:element>
	<xs:complexType name="surveyQuestionProviderType">
		<xs:all>
			<xs:element ref="surveyQuestions"/>
			<xs:element ref="groupings" minOccurs="0"/>
			<xs:element ref="imageInformation" minOccurs="0"/>
		</xs:all>
		<xs:attribute name="class" type="xs:token" use="required" />
	</xs:complexType>
	<xs:element name="groupings" type="groupingsType"/>
	<xs:complexType name="groupingsType">
		<xs:sequence>
			<xs:element name="grouping" type="groupingType" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="groupingType">
		<xs:sequence>
			<xs:element name="expansionKey" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:any namespace="http://schemas.neumont.edu/CodeGeneration/PLiX">
							<xs:annotation>
								<xs:documentation>A plix expression forming a code snippet to retrieve the expansion key used for this construct.</xs:documentation>
							</xs:annotation>
						</xs:any>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="surveyQuestion" maxOccurs="unbounded">
				<xs:complexType>
					<xs:attribute name="ref" type="xs:token" use="required"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="imageInformation" type="imageInformationType"/>
	<xs:complexType name="imageInformationType">
		<xs:sequence minOccurs="0">
			<xs:any namespace="http://schemas.neumont.edu/CodeGeneration/PLiX" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>One or more PLiX elements forming a code snippet to retrieve the ImageList from this class. The final statement should be a return. Used as the body of the SurveyQuestionImageList property getter.</xs:documentation>
				</xs:annotation>
			</xs:any>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="surveyQuestions" type="surveyQuestionsType"/>
	<xs:complexType name="surveyQuestionsType">
		<xs:sequence>
			<xs:element maxOccurs="unbounded" name="surveyQuestion" type="surveyQuestionType">
				<xs:unique name="UniqueDisplayType">
					<xs:selector xpath="qp:displaySupport"/>
					<xs:field xpath="@displayCategory"/>
				</xs:unique>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="surveyQuestionType">
		<xs:sequence>
			<xs:element ref="displaySupport" maxOccurs="unbounded"/>
			<xs:element ref="imageMap" minOccurs="0"/>
			<xs:element ref="displayDataMap" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="questionType" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation>The name of an enum type with sequential values starting at zero that forms the set of answers to this question.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="dynamicValues" type="xs:boolean" default="false">
			<xs:annotation>
				<xs:documentation>The questionType attribute refers to the name of a type that implements the ISurveyDynamicValues interface instead of an enum. The type should have a constructor callable from this scope that takes a single Store parameter. Not compatible with isErrorDisplay.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="isErrorDisplay" type="xs:boolean" default="false">
			<xs:annotation>
				<xs:documentation>The answers to this question are used to display the element's error state. Not compatible with dynamicValues.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="questionPriority" type="xs:integer" default="0">
			<xs:annotation>
				<xs:documentation>Set the question priority relative to other questions. This affects the header display order in the survey tree. The default value is 0, lower numbers (including negative) are placed higher in the list.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="displayDataMap" type="displayDataMapType">
		<xs:unique name="DisplayDataUnique">
			<xs:selector xpath="qp:displayData | qp:displayDataSameAs"/>
			<xs:field xpath="@enumValue"/>
		</xs:unique>
		<xs:key name="DisplayDataKey">
			<xs:selector xpath="qp:displayData"/>
			<xs:field xpath="@enumValue"/>
		</xs:key>
		<xs:keyref name="DisplayDataSameAsKeyRef" refer="DisplayDataKey">
			<xs:selector xpath="qp:displayDataSameAs"/>
			<xs:field xpath="@targetEnumValue"/>
		</xs:keyref>
	</xs:element>
	<xs:complexType name="displayDataMapType">
		<xs:annotation>
			<xs:documentation>Associate an answer with different display data settings.</xs:documentation>
		</xs:annotation>
		<xs:choice maxOccurs="unbounded">
			<xs:element name="displayData">
				<xs:complexType>
					<xs:attribute name="enumValue" type="xs:token" use="required">
						<xs:annotation>
							<xs:documentation>The value from the questionType enum to associate with these display settings.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="bold" type="xs:boolean" default="false">
						<xs:annotation>
							<xs:documentation>Display answers from this category in bold text</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="gray" type="xs:boolean" default="false">
						<xs:annotation>
							<xs:documentation>Display answers from this category in gray text</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="displayDataSameAs">
				<xs:complexType>
					<xs:attribute name="enumValue" type="xs:token" use="required">
						<xs:annotation>
							<xs:documentation>The value from the questionType enum to associate with these display settings.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="targetEnumValue" type="xs:token" use="required">
						<xs:annotation>
							<xs:documentation>This value should have the same display settings as the targeted value.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="imageMapType">
		<xs:sequence>
			<xs:element name="offset" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:any namespace="http://schemas.neumont.edu/CodeGeneration/PLiX" minOccurs="0">
							<xs:annotation>
								<xs:documentation>A plix expression forming a code snippet to use as a custom offset for the image map. This value is added to values implied by the @afterSurveyQuestion attribute.</xs:documentation>
							</xs:annotation>
						</xs:any>
					</xs:sequence>
					<xs:attribute name="afterSurveyQuestion" type="xs:token" use="optional">
						<xs:annotation>
							<xs:documentation>The images in this imageMap are offset from the values in the image map for the referenced question. If the referenced image map specifies the @lastAnswer attribute, then this map begins one after that value and there is generally no need to specify a custom offset.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="lastAnswer" type="xs:token" use="optional">
			<xs:annotation>
				<xs:documentation>The name of the answer with the highest numeric value for this question. This value is used indirectly through the offset/@afterSurveyQuestion attribute of another imageMap.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="imageMap" abstract="true" type="imageMapType"/>
	<xs:element name="sequentialImageMap" type="sequentialImageMapType" substitutionGroup="imageMap">
	</xs:element>
	<xs:complexType name="sequentialImageMapType">
		<xs:annotation>
			<xs:documentation>Enum values in this question type map directly to image indices in the image list.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="imageMapType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="explicitImageMap" type="explicitImageMapType" substitutionGroup="imageMap">
		<xs:unique name="ExplicitImageMapUnique">
			<xs:selector xpath="qp:map | qp:mapSameAs"/>
			<xs:field xpath="@enumValue"/>
		</xs:unique>
		<xs:key name="ExplicitImageMapKey">
			<xs:selector xpath="qp:map"/>
			<xs:field xpath="@enumValue"/>
		</xs:key>
		<xs:keyref name="ExplicitImageMapSameAsKeyRef" refer="ExplicitImageMapKey">
			<xs:selector xpath="qp:mapSameAs"/>
			<xs:field xpath="@targetEnumValue"/>
		</xs:keyref>
	</xs:element>
	<xs:complexType name="explicitImageMapType">
		<xs:annotation>
			<xs:documentation>Enum values in this question type require custom mapping to image indices.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="imageMapType">
				<xs:choice maxOccurs="unbounded">
					<xs:element name="map">
						<xs:complexType>
							<xs:sequence>
								<xs:any namespace="http://schemas.neumont.edu/CodeGeneration/PLiX" processContents="strict" minOccurs="0">
									<xs:annotation>
										<xs:documentation>A custom expression. If the imageIndex attribute is set .custom then this expression is used directly. Otherwise, it is added to the imageIndex.</xs:documentation>
									</xs:annotation>
								</xs:any>
							</xs:sequence>
							<xs:attribute name="imageIndex" use="required">
								<xs:annotation>
									<xs:documentation>An non-negative value indicating the index in the image list, or the special .custom value indicating a custom code expression.</xs:documentation>
								</xs:annotation>
								<xs:simpleType>
									<xs:union memberTypes="xs:nonNegativeInteger">
										<xs:simpleType>
											<xs:restriction base="xs:token">
												<xs:enumeration value=".custom">
													<xs:annotation>
														<xs:documentation>A custom code expression is contained in this element.</xs:documentation>
													</xs:annotation>
												</xs:enumeration>
											</xs:restriction>
										</xs:simpleType>
									</xs:union>
								</xs:simpleType>
							</xs:attribute>
							<xs:attribute name="enumValue" type="xs:token" use="required">
								<xs:annotation>
									<xs:documentation>The value from the questionType enum to associate with this image.</xs:documentation>
								</xs:annotation>
							</xs:attribute>
						</xs:complexType>
					</xs:element>
					<xs:element name="mapSameAs">
						<xs:complexType>
							<xs:attribute name="enumValue" type="xs:token" use="required">
								<xs:annotation>
									<xs:documentation>The value from the questionType enum to associate with this image.</xs:documentation>
								</xs:annotation>
							</xs:attribute>
							<xs:attribute name="targetEnumValue" type="xs:token" use="required">
								<xs:annotation>
									<xs:documentation>This value should have the same image as the other value.</xs:documentation>
								</xs:annotation>
							</xs:attribute>
						</xs:complexType>
					</xs:element>
				</xs:choice>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="displaySupport" type="displaySupportType"/>
	<xs:complexType name="displaySupportType">
		<xs:attribute name="displayCategory" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:token">
					<xs:enumeration value="Sorting">
						<xs:annotation>
							<xs:documentation>Answers to this question are used to sort the list contents</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="Grouping">
						<xs:annotation>
							<xs:documentation>Answers to this question are used to group the list contents</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="Glyph">
						<xs:annotation>
							<xs:documentation>Answers to this question are used to glyph the list of contents</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="Overlay">
						<xs:annotation>
							<xs:documentation>Answers to this question are used to overlay the list of contents</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="DisplayData">
						<xs:annotation>
							<xs:documentation>Answers to this question can be used to retrieve additional display information</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
</xs:schema>