<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xs="http://www.w3.org/2001/XMLSchema">
	<xsl:template name="WriteName">
		<xsl:if test="string-length(@name)+string-length(@ref)">
			<b>
				<xsl:choose>
					<xsl:when test="string-length(@name)">
						<a name="{@name}">
							<xsl:value-of select="@name" />
						</a>
					</xsl:when>
					<xsl:otherwise>
						<a href="#{@ref}">
							<xsl:value-of select="@ref"/>
						</a>
					</xsl:otherwise>
				</xsl:choose>
			</b>
			<xsl:if test="string-length(@type)">
				<xsl:text> (</xsl:text>
				<xsl:value-of select="@type" />
				<xsl:if test="string-length(@use)">
					<xsl:text>, </xsl:text>
					<xsl:value-of select="@use"/>
				</xsl:if>
				<xsl:text>)</xsl:text>
			</xsl:if>
			<xsl:if test="count(xs:annotation/xs:documentation)">
				<xsl:text>: </xsl:text>
				<xsl:apply-templates select="xs:annotation/xs:documentation"/>
			</xsl:if>
		</xsl:if>
	</xsl:template>
	<xsl:template match="/">
		<html>
			<body style="font-family:verdana; font-size:10pt;">
				<xsl:apply-templates/>
				<p>
					<font style="font-family:courier new; color:#008000;">
						<xsl:text><![CDATA[//------------------------------------------------------------------------------]]></xsl:text>
						<br />
						<xsl:text><![CDATA[// <autogenerated>]]></xsl:text>
						<br />
						<xsl:text><![CDATA[//     This document was generated by XSDtoHTML.xslt]]></xsl:text>
						<br />
						<xsl:text><![CDATA[//     and must be regenerated if the XSD changes.]]></xsl:text>
						<br />
						<xsl:text><![CDATA[// </autogenerated>]]></xsl:text>
						<br />
						<xsl:text><![CDATA[//------------------------------------------------------------------------------]]></xsl:text>
						<br />
					</font>
				</p>
			</body>
		</html>
	</xsl:template>
	<xsl:template match="xs:schema">
		<h3 align="center">
			<xsl:value-of select="@id"/> Schema<br/><font style="font-size:10pt; font-weight:400;">
				<xsl:value-of select="@targetNamespace"/>
			</font></h3>
		<xsl:if test="count(xs:simpleType)">
			<h4>
				<xsl:text>Simple Types</xsl:text>
			</h4>
			<ul>
				<xsl:apply-templates select="xs:simpleType"/>
			</ul>
		</xsl:if>
		<xsl:if test="count(xs:complexType)">
			<h4>
				<xsl:text>Complex Types</xsl:text>
			</h4>
			<ul>
				<xsl:apply-templates select="xs:complexType"/>
			</ul>
		</xsl:if>
		<xsl:if test="count(xs:element)">
			<h4>
				<xsl:text>Elements</xsl:text>
			</h4>
			<ul>
				<xsl:apply-templates select="xs:element"/>
			</ul>
		</xsl:if>
	</xsl:template>
	<xsl:template match="xs:simpleType">
		<p>
			<table border="1" bordercolor="#000000" style="font-size:10pt; border-collapse:collapse; width:94%;">
				<tr style="font-weight:700; text-align:center; background-color:#000000; color:#FFFFFF;">
					<td colspan="2">
						<xsl:call-template name="WriteName"/>
					</td>
				</tr>
				<xsl:apply-templates select="xs:restriction/xs:enumeration" />
			</table>
		</p>
	</xsl:template>
	<xsl:template match="xs:complexType">
		<xsl:call-template name="WriteName"/>
		<ul>
			<xsl:apply-templates select="xs:sequence"/>
			<xsl:apply-templates select="xs:choice"/>
			<xsl:apply-templates select="xs:attribute"/>
			<xsl:apply-templates select="xs:attributeGroup"/>
		</ul>
	</xsl:template>
	<xsl:template match="xs:element">
		<li>
			<xsl:call-template name="WriteName"/>
			<ul>
				<xsl:apply-templates select="xs:complexType"/>
			</ul>
		</li>
	</xsl:template>
	<xsl:template match="xs:annotation/xs:documentation">
		<xsl:value-of select="." />
	</xsl:template>
	<xsl:template match="xs:restriction/xs:enumeration">
		<tr>
			<td>
				<xsl:value-of select="@value"/>
			</td>
			<td style="width:100%;">
				<xsl:apply-templates select="xs:annotation/xs:documentation"/>
			</td>
		</tr>
	</xsl:template>
	<xsl:template match="xs:any">
		<li>
			<b>
				<xsl:value-of select="@namespace"/>
			</b>
		</li>
	</xsl:template>
	<xsl:template match="xs:sequence">
		<xsl:apply-templates select="xs:element"/>
		<xsl:apply-templates select="xs:any"/>
	</xsl:template>
	<xsl:template match="xs:choice">
		<xsl:apply-templates select="xs:element"/>
	</xsl:template>
	<xsl:template match="xs:attribute">
		<li>
			<xsl:call-template name="WriteName"/>
		</li>
	</xsl:template>
	<xsl:template match="xs:attributeGroup">
		<xsl:variable name="ref" select="@ref"/>
		<xsl:for-each select="//xs:attributeGroup[@name=$ref]">
			<xsl:apply-templates select="xs:attribute"/>
		</xsl:for-each>
	</xsl:template>
</xsl:stylesheet>