<?xml version="1.0" encoding="utf-8" ?>
<arg:Rules xmlns:arg="http://schemas.neumont.edu/ORM/SDK/AttachRulesGenerator">
	<arg:Copyright name="Common Public License Copyright Notice">
		<arg:CopyrightLine>/**************************************************************************\</arg:CopyrightLine>
		<arg:CopyrightLine>* Neumont Object-Role Modeling Architect for Visual Studio                 *</arg:CopyrightLine>
		<arg:CopyrightLine>*                                                                          *</arg:CopyrightLine>
		<arg:CopyrightLine>* Copyright © Neumont University. All rights reserved.                     *</arg:CopyrightLine>
		<arg:CopyrightLine>*                                                                          *</arg:CopyrightLine>
		<arg:CopyrightLine>* The use and distribution terms for this software are covered by the      *</arg:CopyrightLine>
		<arg:CopyrightLine>* Common Public License 1.0 (http://opensource.org/licenses/cpl) which     *</arg:CopyrightLine>
		<arg:CopyrightLine>* can be found in the file CPL.txt at the root of this distribution.       *</arg:CopyrightLine>
		<arg:CopyrightLine>* By using this software in any fashion, you are agreeing to be bound by   *</arg:CopyrightLine>
		<arg:CopyrightLine>* the terms of this license.                                               *</arg:CopyrightLine>
		<arg:CopyrightLine>*                                                                          *</arg:CopyrightLine>
		<arg:CopyrightLine>* You must not remove this notice, or any other, from this software.       *</arg:CopyrightLine>
		<arg:CopyrightLine>\**************************************************************************/</arg:CopyrightLine>
	</arg:Copyright>
	<arg:Model class="ORMToORMAbstractionBridgeDomainModel">
		<arg:RuleContainer class="AbstractionModelIsForORMModel">
			<arg:AddRule methodName="ConstraintAddRule">
				<arg:RuleOn targetType="ModelHasSetConstraint" targetTypeQualifier="Neumont.Tools.ORM.ObjectModel"/>
			</arg:AddRule>
			<arg:ChangeRule methodName="ConstraintChangeRule">
				<arg:RuleOn targetType="SetConstraint" targetTypeQualifier="Neumont.Tools.ORM.ObjectModel"/>
			</arg:ChangeRule>
			<arg:DeleteRule methodName="ConstraintDeleteRule">
				<arg:RuleOn targetType="ModelHasSetConstraint" targetTypeQualifier="Neumont.Tools.ORM.ObjectModel"/>
			</arg:DeleteRule>
			<arg:AddRule methodName="ConstraintRoleAddRule">
				<arg:RuleOn targetType="ConstraintRoleSequenceHasRole" targetTypeQualifier="Neumont.Tools.ORM.ObjectModel"/>
			</arg:AddRule>
			<arg:DeletingRule methodName="ConstraintRoleDeletingRule">
				<arg:RuleOn targetType="ConstraintRoleSequenceHasRole" targetTypeQualifier="Neumont.Tools.ORM.ObjectModel"/>
			</arg:DeletingRule>
			<arg:AddRule methodName="ValueTypeDataTypeAddRule">
				<arg:RuleOn targetType="ValueTypeHasDataType" targetTypeQualifier="Neumont.Tools.ORM.ObjectModel"/>
			</arg:AddRule>
			<arg:DeletingRule methodName="ValueTypeDataTypeDeletingRule">
				<arg:RuleOn targetType="ValueTypeHasDataType" targetTypeQualifier="Neumont.Tools.ORM.ObjectModel"/>
			</arg:DeletingRule>
		</arg:RuleContainer>
		<!--
		<arg:Rule class="OialModelIsForORMModel.ModelHasObjectTypeAddRule"/>
		<arg:Rule class="OialModelIsForORMModel.ModelHasObjectTypeDeletingRule"/>
		<arg:Rule class="OialModelIsForORMModel.ObjectTypeChangeRule"/>
		<arg:Rule class="OialModelIsForORMModel.ObjectTypePlaysRoleAddRule"/>
		<arg:Rule class="OialModelIsForORMModel.ObjectTypePlaysRoleDeletingRule"/>
		<arg:Rule class="OialModelIsForORMModel.ModelHasFactTypeAddRule"/>
		<arg:Rule class="OialModelIsForORMModel.ModelHasFactTypeDeletingRule"/>
		<arg:Rule class="OialModelIsForORMModel.FactTypeChangeRule"/>
		<arg:Rule class="OialModelIsForORMModel.ModelHasSetConstraintAddRule"/>
		<arg:Rule class="OialModelIsForORMModel.ModelHasSetConstraintChangeRule"/>
		<arg:Rule class="OialModelIsForORMModel.ModelHasSetConstraintDeletingRule"/>
		<arg:Rule class="OialModelIsForORMModel.ConstraintRoleSequenceHasRoleAddRule"/>
		<arg:Rule class="OialModelIsForORMModel.ConstraintRoleSequenceHasRoleDeletingRule"/>
		<arg:Rule class="OialModelIsForORMModel.UniquenessConstraintChangeRule"/>
		<arg:Rule class="OialModelIsForORMModel.MandatoryConstraintChangeRule"/>
		<arg:Rule class="OialModelIsForORMModel.RoleBaseChangeRule"/>
		<arg:Rule class="OialModelIsForORMModel.MandatoryConstraintRule.MandatoryConstraintAddRule"/>
		<arg:Rule class="OialModelIsForORMModel.MandatoryConstraintRule.MandatoryConstraintChangeRule"/>
		<arg:Rule class="OialModelIsForORMModel.MandatoryConstraintRule.MandatoryConstraintDeletingRule"/>
		<arg:Rule class="OialModelIsForORMModel.UniquenessConstraintRule.UniquenessConstraintAddRule"/>
		<arg:Rule class="OialModelIsForORMModel.UniquenessConstraintRule.UniquenessConstraintChangeRule"/>
		<arg:Rule class="OialModelIsForORMModel.UniquenessConstraintRule.UniquenessConstraintDeletingRule"/>
		<arg:Rule class="OialModelIsForORMModel.CheckConceptTypeParentExclusiveMandatory.OialModelHasConceptTypeAddRule"/>
		<arg:Rule class="OialModelIsForORMModel.CheckConceptTypeParentExclusiveMandatory.OialModelHasConceptTypeDeleteRule"/>
		<arg:Rule class="OialModelIsForORMModel.CheckConceptTypeParentExclusiveMandatory.ConceptTypeAbsorbedConceptTypeAddRule"/>
		<arg:Rule class="OialModelIsForORMModel.CheckConceptTypeParentExclusiveMandatory.ConceptTypeAbsorbedConceptTypeDeleteRule"/>
		<arg:Rule class="OialModelIsForORMModel.CheckPathNodeParentExclusiveMandatory.ConceptTypeChildHasPathRoleAddRule"/>
		<arg:Rule class="OialModelIsForORMModel.CheckPathNodeParentExclusiveMandatory.ConceptTypeChildHasPathRoleDeleteRule"/>
		-->
	</arg:Model>
</arg:Rules>