<?xml version="1.0" encoding="utf-8"?>
<xs:schema
	targetNamespace="http://schemas.neumont.edu/ORM/Bridge/2007-06/ORMAbstractionToConceptualDatabase"
	xmlns="http://schemas.neumont.edu/ORM/Bridge/2007-06/ORMAbstractionToConceptualDatabase" 
	xmlns:oialtocdb="http://schemas.neumont.edu/ORM/Bridge/2007-06/ORMAbstractionToConceptualDatabase"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	elementFormDefault="qualified"
	attributeFormDefault="unqualified"
	version="1.0">

	<xs:annotation>
		<xs:appinfo>
			<rdf:RDF
				xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
				xmlns:dc="http://purl.org/dc/elements/1.1/"
				xmlns:dcterms="http://purl.org/dc/terms/">
				<rdf:Description rdf:about="http://schemas.neumont.edu/ORM/Bridge/2007-06/ORMToORMAbstraction">
					<dcterms:requires rdf:resource="http://schemas.neumont.edu/ORM/2006-04/ORMCore"/>
					<dcterms:requires rdf:resource="http://schemas.neumont.edu/ORM/Abstraction/2007-06/Core"/>
					<dc:title>ORM Intermediate Abstraction Language To Conceptual Database Language</dc:title>
					<dc:creator>Kevin M. Owen</dc:creator>
					<dc:contributor>Corey Kaylor</dc:contributor>
					<dc:contributor>Korvyn Dornseif</dc:contributor>
					<dc:contributor>Jaron Briggs</dc:contributor>
					<dc:contributor>Terry Halpin</dc:contributor>
					<dc:contributor>Matthew Curland</dc:contributor>
					<dc:contributor>David DeWinter</dc:contributor>
					<dc:contributor>Brice Lambson</dc:contributor>
					<dc:contributor>Sterling Bates</dc:contributor>
					<dc:contributor>Noah Langenweiler</dc:contributor>
					<dc:contributor>Jeremy Robertson</dc:contributor>
					<dc:contributor>Jason Barnes</dc:contributor>
					<dc:rights>Copyright Â© Neumont University. All rights reserved.</dc:rights>
					<dcterms:rightsHolder>Neumont University</dcterms:rightsHolder>
					<dcterms:license>
						This software is provided 'as-is', without any express or implied warranty. In no event will the authors be held liable for any damages arising from the use of this software.
						Permission is granted to anyone to use this software for any purpose, including commercial applications, and to alter it and redistribute it freely, subject to the following restrictions:
						1. The origin of this software must not be misrepresented; you must not claim that you wrote the original software. If you use this software in a product, an acknowledgment in the product documentation would be appreciated but is not required.
						2. Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software.
						3. This notice may not be removed or altered from any source distribution.
					</dcterms:license>
				</rdf:Description>
			</rdf:RDF>
		</xs:appinfo>
	</xs:annotation>

	<xs:element name="Bridge">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element name="SchemaIsForAbstractionModel" type="SchemaIsForAbstractionModelType"/>
				<xs:element name="ColumnHasConceptTypeChild" type="ColumnHasConceptTypeChildType"/>
				<xs:element name="DomainIsForInformationTypeFormat" type="DomainIsForInformationTypeFormatType"/>
				<xs:element name="TableIsPrimarilyForConceptType" type="TableIsForConceptTypeType"/>
				<xs:element name="TableIsAlsoForConceptType" type="TableIsForConceptTypeType"/>
				<!-- UNDONE: Not sure what this relationship does, the relationship name doesn't match up with the role name -->
				<xs:element name="UniquenessConstraintIsForConceptTypeChild" type="UniquenessConstraintIsForConceptTypeChildType"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="SchemaIsForAbstractionModelType">
		<xs:attribute name="id" type="xs:ID" use="required"/>
		<xs:attribute name="Schema" type="xs:IDREF" use="required"/>
		<xs:attribute name="AbstractionModel" type="xs:IDREF" use="required"/>
	</xs:complexType>
	<xs:complexType name="ColumnHasConceptTypeChildType">
		<xs:attribute name="id" type="xs:ID" use="required"/>
		<xs:attribute name="Column" type="xs:IDREF" use="required"/>
		<xs:attribute name="ConceptTypeChild" type="xs:IDREF" use="required"/>
	</xs:complexType>
	<xs:complexType name="DomainIsForInformationTypeFormatType">
		<xs:attribute name="id" type="xs:ID" use="required"/>
		<xs:attribute name="Domain" type="xs:IDREF" use="required"/>
		<xs:attribute name="InformationTypeFormat" type="xs:IDREF" use="required"/>
	</xs:complexType>
	<xs:complexType name="TableIsForConceptTypeType">
		<xs:attribute name="id" type="xs:ID" use="required"/>
		<xs:attribute name="Table" type="xs:IDREF" use="required"/>
		<xs:attribute name="ConceptType" type="xs:IDREF" use="required"/>
	</xs:complexType>
	<!-- UNDONE: Not sure what this relationship does, the relationship name doesn't match up with the role name -->
	<xs:complexType name="UniquenessConstraintIsForConceptTypeChildType">
		<xs:attribute name="id" type="xs:ID" use="required"/>
		<xs:attribute name="UniquenessConstraint" type="xs:IDREF" use="required"/>
		<xs:attribute name="ConceptTypeChild" type="xs:IDREF" use="required"/>
	</xs:complexType>
</xs:schema>
